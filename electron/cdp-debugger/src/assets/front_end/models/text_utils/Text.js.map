{
  "version": 3,
  "sources": ["../../../../../../front_end/models/text_utils/Text.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport {TextCursor} from './TextCursor.js';\nimport {SourceRange, TextRange} from './TextRange.js';\n\nexport class Text {\n  private valueInternal: string;\n  private lineEndingsInternal?: number[];\n\n  constructor(value: string) {\n    this.valueInternal = value;\n  }\n\n  lineEndings(): number[] {\n    if (!this.lineEndingsInternal) {\n      this.lineEndingsInternal = Platform.StringUtilities.findLineEndingIndexes(this.valueInternal);\n    }\n    return this.lineEndingsInternal;\n  }\n\n  value(): string {\n    return this.valueInternal;\n  }\n\n  lineCount(): number {\n    const lineEndings = this.lineEndings();\n    return lineEndings.length;\n  }\n\n  offsetFromPosition(lineNumber: number, columnNumber: number): number {\n    return (lineNumber ? this.lineEndings()[lineNumber - 1] + 1 : 0) + columnNumber;\n  }\n\n  positionFromOffset(offset: number): Position {\n    const lineEndings = this.lineEndings();\n    const lineNumber =\n        Platform.ArrayUtilities.lowerBound(lineEndings, offset, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    return {lineNumber: lineNumber, columnNumber: offset - (lineNumber && (lineEndings[lineNumber - 1] + 1))};\n  }\n\n  lineAt(lineNumber: number): string {\n    const lineEndings = this.lineEndings();\n    const lineStart = lineNumber > 0 ? lineEndings[lineNumber - 1] + 1 : 0;\n    const lineEnd = lineEndings[lineNumber];\n    let lineContent = this.valueInternal.substring(lineStart, lineEnd);\n    if (lineContent.length > 0 && lineContent.charAt(lineContent.length - 1) === '\\r') {\n      lineContent = lineContent.substring(0, lineContent.length - 1);\n    }\n    return lineContent;\n  }\n\n  toSourceRange(range: TextRange): SourceRange {\n    const start = this.offsetFromPosition(range.startLine, range.startColumn);\n    const end = this.offsetFromPosition(range.endLine, range.endColumn);\n    return new SourceRange(start, end - start);\n  }\n\n  toTextRange(sourceRange: SourceRange): TextRange {\n    const cursor = new TextCursor(this.lineEndings());\n    const result = TextRange.createFromLocation(0, 0);\n\n    cursor.resetTo(sourceRange.offset);\n    result.startLine = cursor.lineNumber();\n    result.startColumn = cursor.columnNumber();\n\n    cursor.advance(sourceRange.offset + sourceRange.length);\n    result.endLine = cursor.lineNumber();\n    result.endColumn = cursor.columnNumber();\n    return result;\n  }\n\n  replaceRange(range: TextRange, replacement: string): string {\n    const sourceRange = this.toSourceRange(range);\n    return this.valueInternal.substring(0, sourceRange.offset) + replacement +\n        this.valueInternal.substring(sourceRange.offset + sourceRange.length);\n  }\n\n  extract(range: TextRange): string {\n    const sourceRange = this.toSourceRange(range);\n    return this.valueInternal.substr(sourceRange.offset, sourceRange.length);\n  }\n}\nexport interface Position {\n  lineNumber: number;\n  columnNumber: number;\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AAEO,kBAAW;AAAA,EACR;AAAA,EACA;AAAA,EAER,YAAY,OAAe;AACzB,SAAK,gBAAgB;AAAA;AAAA,EAGvB,cAAwB;AACtB,QAAI,CAAC,KAAK,qBAAqB;AAC7B,WAAK,sBAAsB,SAAS,gBAAgB,sBAAsB,KAAK;AAAA;AAEjF,WAAO,KAAK;AAAA;AAAA,EAGd,QAAgB;AACd,WAAO,KAAK;AAAA;AAAA,EAGd,YAAoB;AAClB,UAAM,cAAc,KAAK;AACzB,WAAO,YAAY;AAAA;AAAA,EAGrB,mBAAmB,YAAoB,cAA8B;AACnE,WAAQ,cAAa,KAAK,cAAc,aAAa,KAAK,IAAI,KAAK;AAAA;AAAA,EAGrE,mBAAmB,QAA0B;AAC3C,UAAM,cAAc,KAAK;AACzB,UAAM,aACF,SAAS,eAAe,WAAW,aAAa,QAAQ,SAAS,eAAe;AACpF,WAAO,EAAC,YAAwB,cAAc,SAAU,eAAe,YAAY,aAAa,KAAK;AAAA;AAAA,EAGvG,OAAO,YAA4B;AACjC,UAAM,cAAc,KAAK;AACzB,UAAM,YAAY,aAAa,IAAI,YAAY,aAAa,KAAK,IAAI;AACrE,UAAM,UAAU,YAAY;AAC5B,QAAI,cAAc,KAAK,cAAc,UAAU,WAAW;AAC1D,QAAI,YAAY,SAAS,KAAK,YAAY,OAAO,YAAY,SAAS,OAAO,MAAM;AACjF,oBAAc,YAAY,UAAU,GAAG,YAAY,SAAS;AAAA;AAE9D,WAAO;AAAA;AAAA,EAGT,cAAc,OAA+B;AAC3C,UAAM,QAAQ,KAAK,mBAAmB,MAAM,WAAW,MAAM;AAC7D,UAAM,MAAM,KAAK,mBAAmB,MAAM,SAAS,MAAM;AACzD,WAAO,IAAI,YAAY,OAAO,MAAM;AAAA;AAAA,EAGtC,YAAY,aAAqC;AAC/C,UAAM,SAAS,IAAI,WAAW,KAAK;AACnC,UAAM,SAAS,UAAU,mBAAmB,GAAG;AAE/C,WAAO,QAAQ,YAAY;AAC3B,WAAO,YAAY,OAAO;AAC1B,WAAO,cAAc,OAAO;AAE5B,WAAO,QAAQ,YAAY,SAAS,YAAY;AAChD,WAAO,UAAU,OAAO;AACxB,WAAO,YAAY,OAAO;AAC1B,WAAO;AAAA;AAAA,EAGT,aAAa,OAAkB,aAA6B;AAC1D,UAAM,cAAc,KAAK,cAAc;AACvC,WAAO,KAAK,cAAc,UAAU,GAAG,YAAY,UAAU,cACzD,KAAK,cAAc,UAAU,YAAY,SAAS,YAAY;AAAA;AAAA,EAGpE,QAAQ,OAA0B;AAChC,UAAM,cAAc,KAAK,cAAc;AACvC,WAAO,KAAK,cAAc,OAAO,YAAY,QAAQ,YAAY;AAAA;AAAA;",
  "names": []
}
