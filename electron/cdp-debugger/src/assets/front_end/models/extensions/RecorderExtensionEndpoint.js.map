{
  "version": 3,
  "sources": ["../../../../../../front_end/models/extensions/RecorderExtensionEndpoint.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {PrivateAPI} from './ExtensionAPI.js';\nimport {ExtensionEndpoint} from './ExtensionEndpoint.js';\nimport {RecorderPluginManager} from './RecorderPluginManager.js';\n\nexport class RecorderExtensionEndpoint extends ExtensionEndpoint {\n  private readonly name: string;\n  private readonly mediaType: string;\n\n  constructor(name: string, mediaType: string, port: MessagePort) {\n    super(port);\n    this.name = name;\n    this.mediaType = mediaType;\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  getMediaType(): string {\n    return this.mediaType;\n  }\n\n  protected handleEvent({event}: {event: string}): void {\n    switch (event) {\n      case PrivateAPI.RecorderExtensionPluginEvents.UnregisteredRecorderExtensionPlugin: {\n        this.disconnect();\n        RecorderPluginManager.instance().removePlugin(this);\n        break;\n      }\n      default:\n        throw new Error(`Unrecognized Recorder extension endpoint event: ${event}`);\n    }\n  }\n\n  /**\n   * In practice, `recording` is a UserFlow[1], but we avoid defining this type on the\n   * API in order to prevent dependencies between Chrome and puppeteer. Extensions\n   * are responsible for working out potential compatibility issues.\n   *\n   * [1]: https://github.com/puppeteer/replay/blob/main/src/Schema.ts#L245\n   */\n  stringify(recording: Object): Promise<string> {\n    return this.sendRequest(PrivateAPI.RecorderExtensionPluginCommands.Stringify, {recording});\n  }\n\n  /**\n   * In practice, `step` is a Step[1], but we avoid defining this type on the\n   * API in order to prevent dependencies between Chrome and puppeteer. Extensions\n   * are responsible for working out compatibility issues.\n   *\n   * [1]: https://github.com/puppeteer/replay/blob/main/src/Schema.ts#L243\n   */\n  stringifyStep(step: Object): Promise<string> {\n    return this.sendRequest(PrivateAPI.RecorderExtensionPluginCommands.StringifyStep, {step});\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEO,+CAAwC,kBAAkB;AAAA,EAC9C;AAAA,EACA;AAAA,EAEjB,YAAY,MAAc,WAAmB,MAAmB;AAC9D,UAAM;AACN,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA;AAAA,EAGnB,UAAkB;AAChB,WAAO,KAAK;AAAA;AAAA,EAGd,eAAuB;AACrB,WAAO,KAAK;AAAA;AAAA,EAGJ,YAAY,EAAC,SAA+B;AACpD,YAAQ;AAAA,WACD,WAAW,8BAA8B,qCAAqC;AACjF,aAAK;AACL,8BAAsB,WAAW,aAAa;AAC9C;AAAA;AAAA;AAGA,cAAM,IAAI,MAAM,mDAAmD;AAAA;AAAA;AAAA,EAWzE,UAAU,WAAoC;AAC5C,WAAO,KAAK,YAAY,WAAW,gCAAgC,WAAW,EAAC;AAAA;AAAA,EAUjF,cAAc,MAA+B;AAC3C,WAAO,KAAK,YAAY,WAAW,gCAAgC,eAAe,EAAC;AAAA;AAAA;",
  "names": []
}
