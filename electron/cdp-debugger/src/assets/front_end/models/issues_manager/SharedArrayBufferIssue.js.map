{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/SharedArrayBufferIssue.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {Issue, IssueKind, IssueCategory} from './Issue.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for the link for SharedArrayBuffer Issues. The full text reads \"Enabling `SharedArrayBuffer`\"\n   * and is the title of an article that describes how to enable a JavaScript feature called SharedArrayBuffer.\n   */\n  enablingSharedArrayBuffer: 'Enabling `SharedArrayBuffer`',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/SharedArrayBufferIssue.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SharedArrayBufferIssue extends Issue {\n  #issueDetails: Protocol.Audits.SharedArrayBufferIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.SharedArrayBufferIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    const umaCode = [Protocol.Audits.InspectorIssueCode.SharedArrayBufferIssue, issueDetails.type].join('::');\n    super({code: Protocol.Audits.InspectorIssueCode.SharedArrayBufferIssue, umaCode}, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Other;\n  }\n\n  details(): Protocol.Audits.SharedArrayBufferIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription {\n    return {\n      file: 'sharedArrayBuffer.md',\n      links: [{\n        link: 'https://developer.chrome.com/blog/enabling-shared-array-buffer/',\n        linkTitle: i18nString(UIStrings.enablingSharedArrayBuffer),\n      }],\n    };\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails);\n  }\n\n  getKind(): IssueKind {\n    if (this.#issueDetails.isWarning) {\n      return IssueKind.BreakingChange;\n    }\n    return IssueKind.PageError;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      SharedArrayBufferIssue[] {\n    const sabIssueDetails = inspectorIssue.details.sharedArrayBufferIssueDetails;\n    if (!sabIssueDetails) {\n      console.warn('SAB transfer issue without details received.');\n      return [];\n    }\n    return [new SharedArrayBufferIssue(sabIssueDetails, issuesModel)];\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAGA;AAGA,MAAM,YAAY;AAAA,EAKhB,2BAA2B;AAAA;AAE7B,MAAM,OAAO,KAAK,KAAK,kBAAkB,mDAAmD;AAC5F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,4CAAqC,MAAM;AAAA;AAAA,EAGhD,YAAY,cAA6D,aAA0C;AACjH,UAAM,UAAU,CAAC,SAAS,OAAO,mBAAmB,wBAAwB,aAAa,MAAM,KAAK;AACpG,UAAM,EAAC,MAAM,SAAS,OAAO,mBAAmB,wBAAwB,WAAU;AAClF,yBAAqB;AAAA;AAAA,EAGvB,cAA6B;AAC3B,WAAO,cAAc;AAAA;AAAA,EAGvB,UAAyD;AACvD,WAAO;AAAA;AAAA,EAGT,iBAA2C;AACzC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,WAAW,UAAU;AAAA;AAAA;AAAA;AAAA,EAKtC,aAAqB;AACnB,WAAO,KAAK,UAAU;AAAA;AAAA,EAGxB,UAAqB;AACnB,QAAI,mBAAmB,WAAW;AAChC,aAAO,UAAU;AAAA;AAEnB,WAAO,UAAU;AAAA;AAAA,SAGZ,mBAAmB,aAA0C,gBACvC;AAC3B,UAAM,kBAAkB,eAAe,QAAQ;AAC/C,QAAI,CAAC,iBAAiB;AACpB,cAAQ,KAAK;AACb,aAAO;AAAA;AAET,WAAO,CAAC,IAAI,uBAAuB,iBAAiB;AAAA;AAAA;",
  "names": []
}
