{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/GenericIssue.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {LazyMarkdownIssueDescription, MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for cross-origin portal post message error\n  */\n  crossOriginPortalPostMessage: 'Portals - Same-origin communication channels',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/GenericIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class GenericIssue extends Issue {\n  #issueDetails: Protocol.Audits.GenericIssueDetails;\n\n  constructor(\n      issueDetails: Protocol.Audits.GenericIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel,\n      issueId?: Protocol.Audits.IssueId) {\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.GenericIssue,\n      issueDetails.errorType,\n    ].join('::');\n    super(issueCode, issuesModel, issueId);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Generic;\n  }\n\n  primaryKey(): string {\n    return `${this.code()}-(${this.#issueDetails.frameId})`;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.#issueDetails.errorType);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  details(): Protocol.Audits.GenericIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.Improvement;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      GenericIssue[] {\n    const genericDetails = inspectorIssue.details.genericIssueDetails;\n    if (!genericDetails) {\n      console.warn('Generic issue without details received.');\n      return [];\n    }\n    return [new GenericIssue(genericDetails, issuesModel, inspectorIssue.issueId)];\n  }\n}\n\nexport const genericCrossOriginPortalPostMessageError = {\n  file: 'genericCrossOriginPortalPostMessageError.md',\n  links: [{\n    link: 'https://github.com/WICG/portals#same-origin-communication-channels',\n    linkTitle: i18nLazyString(UIStrings.crossOriginPortalPostMessage),\n  }],\n};\n\nexport const genericCrossOriginPortalPostMessageCode = [\n  Protocol.Audits.InspectorIssueCode.GenericIssue,\n  Protocol.Audits.GenericIssueErrorType.CrossOriginPortalPostMessageError,\n].join('::');\n\nconst issueDescriptions: Map<Protocol.Audits.GenericIssueErrorType, LazyMarkdownIssueDescription> = new Map([\n  [Protocol.Audits.GenericIssueErrorType.CrossOriginPortalPostMessageError, genericCrossOriginPortalPostMessageError],\n]);\n"],
  "mappings": "AAIA;AAEA;AAEA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,8BAA8B;AAAA;AAEhC,MAAM,OAAO,KAAK,KAAK,kBAAkB,yCAAyC;AAClF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAE3E,kCAA2B,MAAM;AAAA;AAAA,EAGtC,YACI,cAAmD,aACnD,SAAmC;AACrC,UAAM,YAAY;AAAA,MAChB,SAAS,OAAO,mBAAmB;AAAA,MACnC,aAAa;AAAA,MACb,KAAK;AACP,UAAM,WAAW,aAAa;AAC9B,yBAAqB;AAAA;AAAA,EAGvB,cAA6B;AAC3B,WAAO,cAAc;AAAA;AAAA,EAGvB,aAAqB;AACnB,WAAO,GAAG,KAAK,WAAW,mBAAmB;AAAA;AAAA,EAG/C,iBAAgD;AAC9C,UAAM,cAAc,kBAAkB,IAAI,mBAAmB;AAC7D,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA;AAET,WAAO,uBAAuB;AAAA;AAAA,EAGhC,UAA+C;AAC7C,WAAO;AAAA;AAAA,EAGT,UAAqB;AACnB,WAAO,UAAU;AAAA;AAAA,SAGZ,mBAAmB,aAA0C,gBACjD;AACjB,UAAM,iBAAiB,eAAe,QAAQ;AAC9C,QAAI,CAAC,gBAAgB;AACnB,cAAQ,KAAK;AACb,aAAO;AAAA;AAET,WAAO,CAAC,IAAI,aAAa,gBAAgB,aAAa,eAAe;AAAA;AAAA;AAIlE,aAAM,2CAA2C;AAAA,EACtD,MAAM;AAAA,EACN,OAAO,CAAC;AAAA,IACN,MAAM;AAAA,IACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAIjC,aAAM,0CAA0C;AAAA,EACrD,SAAS,OAAO,mBAAmB;AAAA,EACnC,SAAS,OAAO,sBAAsB;AAAA,EACtC,KAAK;AAEP,MAAM,oBAA8F,oBAAI,IAAI;AAAA,EAC1G,CAAC,SAAS,OAAO,sBAAsB,mCAAmC;AAAA;",
  "names": []
}
