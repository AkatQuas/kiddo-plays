{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/ContrastCheckTrigger.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nlet contrastCheckTriggerInstance: ContrastCheckTrigger|null = null;\n\nexport class ContrastCheckTrigger {\n  #pageLoadListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n  #frameAddedListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ResourceTreeModel.ResourceTreeModel, this);\n  }\n\n  static instance({forceNew}: {forceNew: boolean} = {forceNew: false}): ContrastCheckTrigger {\n    if (!contrastCheckTriggerInstance || forceNew) {\n      contrastCheckTriggerInstance = new ContrastCheckTrigger();\n    }\n\n    return contrastCheckTriggerInstance;\n  }\n\n  async modelAdded(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): Promise<void> {\n    this.#pageLoadListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.#pageLoaded, this));\n    this.#frameAddedListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameAdded, this.#frameAdded, this));\n  }\n\n  modelRemoved(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    const pageLoadListener = this.#pageLoadListeners.get(resourceTreeModel);\n    if (pageLoadListener) {\n      Common.EventTarget.removeEventListeners([pageLoadListener]);\n    }\n    const frameAddedListeners = this.#frameAddedListeners.get(resourceTreeModel);\n    if (frameAddedListeners) {\n      Common.EventTarget.removeEventListeners([frameAddedListeners]);\n    }\n  }\n\n  #checkContrast(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    if (!Root.Runtime.experiments.isEnabled('contrastIssues')) {\n      return;\n    }\n    void resourceTreeModel.target().auditsAgent().invoke_checkContrast({});\n  }\n\n  #pageLoaded(event: Common.EventTarget\n                  .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>):\n      void {\n    const {resourceTreeModel} = event.data;\n    this.#checkContrast(resourceTreeModel);\n  }\n\n  async #frameAdded(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n      Promise<void> {\n    if (!Root.Runtime.experiments.isEnabled('contrastIssues')) {\n      return;\n    }\n    const frame = event.data;\n    if (!frame.isMainFrame()) {\n      return;\n    }\n    // If the target document finished loading, check the contrast immediately.\n    // Otherwise, it should be triggered when the page load event fires.\n    const response = await frame.resourceTreeModel().target().runtimeAgent().invoke_evaluate(\n        {expression: 'document.readyState', returnByValue: true});\n    if (response.result && response.result.value === 'complete') {\n      this.#checkContrast(frame.resourceTreeModel());\n    }\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA,IAAI,+BAA0D;AAEvD,kCAA2B;AAAA,uBAE5B,oBAAI;AAAA,yBAEJ,oBAAI;AAAA,EAER,cAAc;AACZ,QAAI,cAAc,cAAc,WAAW,cAAc,IAAI,kBAAkB,mBAAmB;AAAA;AAAA,SAG7F,SAAS,EAAC,aAAiC,EAAC,UAAU,SAA8B;AACzF,QAAI,CAAC,gCAAgC,UAAU;AAC7C,qCAA+B,IAAI;AAAA;AAGrC,WAAO;AAAA;AAAA,QAGH,WAAW,mBAA2E;AAC1F,4BAAwB,IACpB,mBACA,kBAAkB,iBAAiB,IAAI,kBAAkB,OAAO,MAAM,kBAAkB;AAC5F,8BAA0B,IACtB,mBACA,kBAAkB,iBAAiB,IAAI,kBAAkB,OAAO,YAAY,kBAAkB;AAAA;AAAA,EAGpG,aAAa,mBAAkE;AAC7E,UAAM,mBAAmB,wBAAwB,IAAI;AACrD,QAAI,kBAAkB;AACpB,aAAO,YAAY,qBAAqB,CAAC;AAAA;AAE3C,UAAM,sBAAsB,0BAA0B,IAAI;AAC1D,QAAI,qBAAqB;AACvB,aAAO,YAAY,qBAAqB,CAAC;AAAA;AAAA;AAAA,iBAI9B,mBAAkE;AAC/E,QAAI,CAAC,KAAK,QAAQ,YAAY,UAAU,mBAAmB;AACzD;AAAA;AAEF,SAAK,kBAAkB,SAAS,cAAc,qBAAqB;AAAA;AAAA,cAGzD,OAEH;AACP,UAAM,EAAC,sBAAqB,MAAM;AAClC,wBAAoB;AAAA;AAAA,oBAGJ,OACA;AAChB,QAAI,CAAC,KAAK,QAAQ,YAAY,UAAU,mBAAmB;AACzD;AAAA;AAEF,UAAM,QAAQ,MAAM;AACpB,QAAI,CAAC,MAAM,eAAe;AACxB;AAAA;AAIF,UAAM,WAAW,MAAM,MAAM,oBAAoB,SAAS,eAAe,gBACrE,EAAC,YAAY,uBAAuB,eAAe;AACvD,QAAI,SAAS,UAAU,SAAS,OAAO,UAAU,YAAY;AAC3D,0BAAoB,MAAM;AAAA;AAAA;AAAA;",
  "names": []
}
