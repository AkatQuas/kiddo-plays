{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/TrustedWebActivityIssue.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {LazyMarkdownIssueDescription, MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for the link for Trusted Web Activity issue\n  */\n  changesToQualityCriteriaForPwas: 'Changes to quality criteria for PWAs using Trusted Web Activity',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/TrustedWebActivityIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class TrustedWebActivityIssue extends Issue {\n  #issueDetails: Protocol.Audits.TrustedWebActivityIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.TrustedWebActivityIssueDetails) {\n    const issueCode =\n        [Protocol.Audits.InspectorIssueCode.TrustedWebActivityIssue, issueDetails.violationType].join('::');\n    super(issueCode);\n    this.#issueDetails = issueDetails;\n  }\n\n  details(): Protocol.Audits.TrustedWebActivityIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.#issueDetails.violationType);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.TrustedWebActivity;\n  }\n\n  primaryKey(): string {\n    return `${Protocol.Audits.InspectorIssueCode.TrustedWebActivityIssue}-${JSON.stringify(this.#issueDetails)}`;\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.PageError;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      TrustedWebActivityIssue[] {\n    const twaQualityEnforcementDetails = inspectorIssue.details.twaQualityEnforcementDetails;\n    if (!twaQualityEnforcementDetails) {\n      console.warn('TWA Quality Enforcement issue without details received.');\n      return [];\n    }\n    return [new TrustedWebActivityIssue(twaQualityEnforcementDetails)];\n  }\n}\n\nconst twaDigitalAssetLinksFailed = {\n  file: 'TwaDigitalAssetLinksFailed.md',\n  links: [{\n    link: 'https://blog.chromium.org/2020/06/changes-to-quality-criteria-for-pwas.html',\n    linkTitle: i18nLazyString(UIStrings.changesToQualityCriteriaForPwas),\n  }],\n};\n\nconst twaHttpError = {\n  file: 'TwaHttpError.md',\n  links: [{\n    link: 'https://blog.chromium.org/2020/06/changes-to-quality-criteria-for-pwas.html',\n    linkTitle: i18nLazyString(UIStrings.changesToQualityCriteriaForPwas),\n  }],\n};\n\nconst twaPageUnavailableOffline = {\n  file: 'TwaPageUnavailableOffline.md',\n  links: [{\n    link: 'https://blog.chromium.org/2020/06/changes-to-quality-criteria-for-pwas.html',\n    linkTitle: i18nLazyString(UIStrings.changesToQualityCriteriaForPwas),\n  }],\n};\n\nexport const httpViolationCode: string = [\n  Protocol.Audits.InspectorIssueCode.TrustedWebActivityIssue,\n  Protocol.Audits.TwaQualityEnforcementViolationType.KHttpError,\n].join('::');\n\nexport const offlineViolationCode: string = [\n  Protocol.Audits.InspectorIssueCode.TrustedWebActivityIssue,\n  Protocol.Audits.TwaQualityEnforcementViolationType.KUnavailableOffline,\n].join('::');\n\nexport const assetlinkViolationCode: string = [\n  Protocol.Audits.InspectorIssueCode.TrustedWebActivityIssue,\n  Protocol.Audits.TwaQualityEnforcementViolationType.KDigitalAssetLinks,\n].join('::');\n\nconst issueDescriptions: Map<Protocol.Audits.TwaQualityEnforcementViolationType, LazyMarkdownIssueDescription> =\n    new Map([\n      [Protocol.Audits.TwaQualityEnforcementViolationType.KHttpError, twaHttpError],\n      [Protocol.Audits.TwaQualityEnforcementViolationType.KUnavailableOffline, twaPageUnavailableOffline],\n      [Protocol.Audits.TwaQualityEnforcementViolationType.KDigitalAssetLinks, twaDigitalAssetLinksFailed],\n    ]);\n"],
  "mappings": "AAIA;AAEA;AAEA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,iCAAiC;AAAA;AAEnC,MAAM,OAAO,KAAK,KAAK,kBAAkB,oDAAoD;AAC7F,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAE3E,6CAAsC,MAAM;AAAA;AAAA,EAGjD,YAAY,cAA8D;AACxE,UAAM,YACF,CAAC,SAAS,OAAO,mBAAmB,yBAAyB,aAAa,eAAe,KAAK;AAClG,UAAM;AACN,yBAAqB;AAAA;AAAA,EAGvB,UAA0D;AACxD,WAAO;AAAA;AAAA,EAGT,iBAAgD;AAC9C,UAAM,cAAc,kBAAkB,IAAI,mBAAmB;AAC7D,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA;AAET,WAAO,uBAAuB;AAAA;AAAA,EAGhC,cAA6B;AAC3B,WAAO,cAAc;AAAA;AAAA,EAGvB,aAAqB;AACnB,WAAO,GAAG,SAAS,OAAO,mBAAmB,2BAA2B,KAAK,UAAU;AAAA;AAAA,EAGzF,UAAqB;AACnB,WAAO,UAAU;AAAA;AAAA,SAGZ,mBAAmB,aAA0C,gBACtC;AAC5B,UAAM,+BAA+B,eAAe,QAAQ;AAC5D,QAAI,CAAC,8BAA8B;AACjC,cAAQ,KAAK;AACb,aAAO;AAAA;AAET,WAAO,CAAC,IAAI,wBAAwB;AAAA;AAAA;AAIxC,MAAM,6BAA6B;AAAA,EACjC,MAAM;AAAA,EACN,OAAO,CAAC;AAAA,IACN,MAAM;AAAA,IACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAIxC,MAAM,eAAe;AAAA,EACnB,MAAM;AAAA,EACN,OAAO,CAAC;AAAA,IACN,MAAM;AAAA,IACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAIxC,MAAM,4BAA4B;AAAA,EAChC,MAAM;AAAA,EACN,OAAO,CAAC;AAAA,IACN,MAAM;AAAA,IACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAIjC,aAAM,oBAA4B;AAAA,EACvC,SAAS,OAAO,mBAAmB;AAAA,EACnC,SAAS,OAAO,mCAAmC;AAAA,EACnD,KAAK;AAEA,aAAM,uBAA+B;AAAA,EAC1C,SAAS,OAAO,mBAAmB;AAAA,EACnC,SAAS,OAAO,mCAAmC;AAAA,EACnD,KAAK;AAEA,aAAM,yBAAiC;AAAA,EAC5C,SAAS,OAAO,mBAAmB;AAAA,EACnC,SAAS,OAAO,mCAAmC;AAAA,EACnD,KAAK;AAEP,MAAM,oBACF,oBAAI,IAAI;AAAA,EACN,CAAC,SAAS,OAAO,mCAAmC,YAAY;AAAA,EAChE,CAAC,SAAS,OAAO,mCAAmC,qBAAqB;AAAA,EACzE,CAAC,SAAS,OAAO,mCAAmC,oBAAoB;AAAA;",
  "names": []
}
