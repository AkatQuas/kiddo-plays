{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/ContentSecurityPolicyIssue.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {LazyMarkdownIssueDescription, MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for CSP url link\n  */\n  contentSecurityPolicySource: 'Content Security Policy - Source Allowlists',\n  /**\n  *@description Title for CSP inline issue link\n  */\n  contentSecurityPolicyInlineCode: 'Content Security Policy - Inline Code',\n  /**\n  *@description Title for the CSP eval link\n  */\n  contentSecurityPolicyEval: 'Content Security Policy - Eval',\n  /**\n  *@description Title for Trusted Types policy violation issue link. https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API\n  */\n  trustedTypesFixViolations: 'Trusted Types - Fix violations',\n  /**\n  *@description Title for Trusted Types policy violation issue link. https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API\n  */\n  trustedTypesPolicyViolation: 'Trusted Types - Policy violation',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/ContentSecurityPolicyIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ContentSecurityPolicyIssue extends Issue {\n  #issueDetails: Protocol.Audits.ContentSecurityPolicyIssueDetails;\n\n  constructor(\n      issueDetails: Protocol.Audits.ContentSecurityPolicyIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel,\n      issueId?: Protocol.Audits.IssueId) {\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n      issueDetails.contentSecurityPolicyViolationType,\n    ].join('::');\n    super(issueCode, issuesModel, issueId);\n    this.#issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.ContentSecurityPolicy;\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.#issueDetails, [\n      'blockedURL',\n      'contentSecurityPolicyViolationType',\n      'violatedDirective',\n      'isReportOnly',\n      'sourceCodeLocation',\n      'url',\n      'lineNumber',\n      'columnNumber',\n      'violatingNodeId',\n    ]);\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.#issueDetails.contentSecurityPolicyViolationType);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  details(): Protocol.Audits.ContentSecurityPolicyIssueDetails {\n    return this.#issueDetails;\n  }\n\n  getKind(): IssueKind {\n    if (this.#issueDetails.isReportOnly) {\n      return IssueKind.Improvement;\n    }\n    return IssueKind.PageError;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      ContentSecurityPolicyIssue[] {\n    const cspDetails = inspectorIssue.details.contentSecurityPolicyIssueDetails;\n    if (!cspDetails) {\n      console.warn('Content security policy issue without details received.');\n      return [];\n    }\n    return [new ContentSecurityPolicyIssue(cspDetails, issuesModel, inspectorIssue.issueId)];\n  }\n}\n\nconst cspURLViolation = {\n  file: 'cspURLViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#source_allowlists',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicySource),\n  }],\n};\n\nconst cspInlineViolation = {\n  file: 'cspInlineViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#inline_code_is_considered_harmful',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicyInlineCode),\n  }],\n};\n\nconst cspEvalViolation = {\n  file: 'cspEvalViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#eval_too',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicyEval),\n  }],\n};\n\nconst cspTrustedTypesSinkViolation = {\n  file: 'cspTrustedTypesSinkViolation.md',\n  links: [{\n    link: 'https://web.dev/trusted-types/#fix-the-violations',\n    linkTitle: i18nLazyString(UIStrings.trustedTypesFixViolations),\n  }],\n};\n\nconst cspTrustedTypesPolicyViolation = {\n  file: 'cspTrustedTypesPolicyViolation.md',\n  links: [{link: 'https://web.dev/trusted-types/', linkTitle: i18nLazyString(UIStrings.trustedTypesPolicyViolation)}],\n};\n\nexport const urlViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation,\n].join('::');\n\nexport const inlineViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation,\n].join('::');\n\nexport const evalViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation,\n].join('::');\n\nexport const trustedTypesSinkViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation,\n].join('::');\n\nexport const trustedTypesPolicyViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation,\n].join('::');\n\nconst issueDescriptions: Map<Protocol.Audits.ContentSecurityPolicyViolationType, LazyMarkdownIssueDescription> =\n    new Map([\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation, cspURLViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation, cspInlineViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation, cspEvalViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation, cspTrustedTypesSinkViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation, cspTrustedTypesPolicyViolation],\n    ]);\n"],
  "mappings": "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",
  "names": []
}
