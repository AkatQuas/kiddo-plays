{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/IssueResolver.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {Issue} from './Issue.js';\nimport {IssuesManager, Events as IssueManagerEvents} from './IssuesManager.js';\nimport type {IssueAddedEvent} from './IssuesManager.js';\n\n/**\n  * A class that facilitates resolving an issueId to an issue. See `ResolverBase` for more info.\n  */\nexport class IssueResolver extends Common.ResolverBase.ResolverBase<Protocol.Audits.IssueId, Issue> {\n  #issuesListener: Common.EventTarget.EventDescriptor|null = null;\n  #issuesManager: IssuesManager;\n\n  constructor(issuesManager: IssuesManager = IssuesManager.instance()) {\n    super();\n    this.#issuesManager = issuesManager;\n  }\n\n  protected override getForId(id: Protocol.Audits.IssueId): Issue|null {\n    return this.#issuesManager.getIssueById(id) || null;\n  }\n\n  #onIssueAdded(event: Common.EventTarget.EventTargetEvent<IssueAddedEvent>): void {\n    const {issue} = event.data;\n    const id = issue.getIssueId();\n    if (id) {\n      this.onResolve(id, issue);\n    }\n  }\n\n  protected override startListening(): void {\n    if (this.#issuesListener) {\n      return;\n    }\n    this.#issuesListener =\n        this.#issuesManager.addEventListener(IssueManagerEvents.IssueAdded, this.#onIssueAdded, this);\n  }\n\n  protected override stopListening(): void {\n    if (!this.#issuesListener) {\n      return;\n    }\n    Common.EventTarget.removeEventListeners([this.#issuesListener]);\n    this.#issuesListener = null;\n  }\n}\n"],
  "mappings": "AAIA;AAIA;AAMO,mCAA4B,OAAO,aAAa,aAA6C;AAAA,oBACvC;AAAA;AAAA,EAG3D,YAAY,gBAA+B,cAAc,YAAY;AACnE;AACA,0BAAsB;AAAA;AAAA,EAGL,SAAS,IAAyC;AACnE,WAAO,oBAAoB,aAAa,OAAO;AAAA;AAAA,gBAGnC,OAAmE;AAC/E,UAAM,EAAC,UAAS,MAAM;AACtB,UAAM,KAAK,MAAM;AACjB,QAAI,IAAI;AACN,WAAK,UAAU,IAAI;AAAA;AAAA;AAAA,EAIJ,iBAAuB;AACxC,QAAI,sBAAsB;AACxB;AAAA;AAEF,2BACI,oBAAoB,iBAAiB,mBAAmB,YAAY,oBAAoB;AAAA;AAAA,EAG3E,gBAAsB;AACvC,QAAI,CAAC,sBAAsB;AACzB;AAAA;AAEF,WAAO,YAAY,qBAAqB,CAAC;AACzC,2BAAuB;AAAA;AAAA;",
  "names": []
}
