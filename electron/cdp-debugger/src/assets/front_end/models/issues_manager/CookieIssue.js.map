{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/CookieIssue.ts"],
  "sourcesContent": ["\n// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {LazyMarkdownIssueDescription, MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for the link for SameSiteCookies Issues\n  */\n  samesiteCookiesExplained: 'SameSite cookies explained',\n  /**\n  *@description Label for the link for Schemeful Same-Site Issues\n  */\n  howSchemefulSamesiteWorks: 'How Schemeful Same-Site Works',\n  /**\n  *@description Phrase used to describe the security of a context. Substitued like 'a secure context' or 'a secure origin'.\n  */\n  aSecure: 'a secure',  // eslint-disable-line rulesdir/l10n_no_unused_message\n  /**\n   * @description Phrase used to describe the security of a context. Substitued like 'an insecure context' or 'an insecure origin'.\n   */\n  anInsecure: 'an insecure',  // eslint-disable-line rulesdir/l10n_no_unused_message\n  /**\n   * @description Label for a link for SameParty Issues. 'Attribute' refers to a cookie attribute.\n   */\n  firstPartySetsExplained: '`First-Party Sets` and the `SameParty` attribute',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/CookieIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class CookieIssue extends Issue {\n  #issueDetails: Protocol.Audits.CookieIssueDetails;\n\n  constructor(\n      code: string, issueDetails: Protocol.Audits.CookieIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(code, issuesModel);\n    this.#issueDetails = issueDetails;\n  }\n\n  #cookieId(): string {\n    if (this.#issueDetails.cookie) {\n      const {domain, path, name} = this.#issueDetails.cookie;\n      const cookieId = `${domain};${path};${name}`;\n      return cookieId;\n    }\n    return this.#issueDetails.rawCookieLine ?? 'no-cookie-info';\n  }\n\n  primaryKey(): string {\n    const requestId = this.#issueDetails.request ? this.#issueDetails.request.requestId : 'no-request';\n    return `${this.code()}-(${this.#cookieId()})-(${requestId})`;\n  }\n\n  /**\n   * Returns an array of issues from a given CookieIssueDetails.\n   */\n  static createIssuesFromCookieIssueDetails(\n      cookieIssueDetails: Protocol.Audits.CookieIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel): CookieIssue[] {\n    const issues: CookieIssue[] = [];\n\n    // Exclusion reasons have priority. It means a cookie was blocked. Create an issue\n    // for every exclusion reason but ignore warning reasons if the cookie was blocked.\n    // Some exclusion reasons are dependent on warning reasons existing in order to produce an issue.\n    if (cookieIssueDetails.cookieExclusionReasons && cookieIssueDetails.cookieExclusionReasons.length > 0) {\n      for (const exclusionReason of cookieIssueDetails.cookieExclusionReasons) {\n        const code = CookieIssue.codeForCookieIssueDetails(\n            exclusionReason, cookieIssueDetails.cookieWarningReasons, cookieIssueDetails.operation,\n            cookieIssueDetails.cookieUrl);\n        if (code) {\n          issues.push(new CookieIssue(code, cookieIssueDetails, issuesModel));\n        }\n      }\n      return issues;\n    }\n\n    if (cookieIssueDetails.cookieWarningReasons) {\n      for (const warningReason of cookieIssueDetails.cookieWarningReasons) {\n        // warningReasons should be an empty array here.\n        const code = CookieIssue.codeForCookieIssueDetails(\n            warningReason, [], cookieIssueDetails.operation, cookieIssueDetails.cookieUrl);\n        if (code) {\n          issues.push(new CookieIssue(code, cookieIssueDetails, issuesModel));\n        }\n      }\n    }\n    return issues;\n  }\n\n  /**\n   * Calculates an issue code from a reason, an operation, and an array of warningReasons. All these together\n   * can uniquely identify a specific cookie issue.\n   * warningReasons is only needed for some CookieExclusionReason in order to determine if an issue should be raised.\n   * It is not required if reason is a CookieWarningReason.\n   */\n  static codeForCookieIssueDetails(\n      reason: Protocol.Audits.CookieExclusionReason|Protocol.Audits.CookieWarningReason,\n      warningReasons: Protocol.Audits.CookieWarningReason[], operation: Protocol.Audits.CookieOperation,\n      cookieUrl?: string): string|null {\n    const isURLSecure = cookieUrl && (cookieUrl.startsWith('https://') || cookieUrl.startsWith('wss://'));\n    const secure = isURLSecure ? 'Secure' : 'Insecure';\n\n    if (reason === Protocol.Audits.CookieExclusionReason.ExcludeSameSiteStrict ||\n        reason === Protocol.Audits.CookieExclusionReason.ExcludeSameSiteLax ||\n        reason === Protocol.Audits.CookieExclusionReason.ExcludeSameSiteUnspecifiedTreatedAsLax) {\n      if (warningReasons && warningReasons.length > 0) {\n        if (warningReasons.includes(Protocol.Audits.CookieWarningReason.WarnSameSiteStrictLaxDowngradeStrict)) {\n          return [\n            Protocol.Audits.InspectorIssueCode.CookieIssue,\n            'ExcludeNavigationContextDowngrade',\n            secure,\n          ].join('::');\n        }\n\n        if (warningReasons.includes(Protocol.Audits.CookieWarningReason.WarnSameSiteStrictCrossDowngradeStrict) ||\n            warningReasons.includes(Protocol.Audits.CookieWarningReason.WarnSameSiteStrictCrossDowngradeLax) ||\n            warningReasons.includes(Protocol.Audits.CookieWarningReason.WarnSameSiteLaxCrossDowngradeStrict) ||\n            warningReasons.includes(Protocol.Audits.CookieWarningReason.WarnSameSiteLaxCrossDowngradeLax)) {\n          return [\n            Protocol.Audits.InspectorIssueCode.CookieIssue,\n            'ExcludeContextDowngrade',\n            operation,\n            secure,\n          ].join('::');\n        }\n      }\n\n      // If we have ExcludeSameSiteUnspecifiedTreatedAsLax but no corresponding warnings, then add just\n      // the Issue code for ExcludeSameSiteUnspecifiedTreatedAsLax.\n      if (reason === Protocol.Audits.CookieExclusionReason.ExcludeSameSiteUnspecifiedTreatedAsLax) {\n        return [Protocol.Audits.InspectorIssueCode.CookieIssue, reason, operation].join('::');\n      }\n\n      // ExcludeSameSiteStrict and ExcludeSameSiteLax require being paired with an appropriate warning. We didn't\n      // find one of those warnings so return null to indicate there shouldn't be an issue created.\n      return null;\n    }\n\n    if (reason === Protocol.Audits.CookieWarningReason.WarnSameSiteStrictLaxDowngradeStrict) {\n      return [Protocol.Audits.InspectorIssueCode.CookieIssue, reason, secure].join('::');\n    }\n    // These have the same message.\n    if (reason === Protocol.Audits.CookieWarningReason.WarnSameSiteStrictCrossDowngradeStrict ||\n        reason === Protocol.Audits.CookieWarningReason.WarnSameSiteStrictCrossDowngradeLax ||\n        reason === Protocol.Audits.CookieWarningReason.WarnSameSiteLaxCrossDowngradeLax ||\n        reason === Protocol.Audits.CookieWarningReason.WarnSameSiteLaxCrossDowngradeStrict) {\n      return [Protocol.Audits.InspectorIssueCode.CookieIssue, 'WarnCrossDowngrade', operation, secure].join('::');\n    }\n    return [Protocol.Audits.InspectorIssueCode.CookieIssue, reason, operation].join('::');\n  }\n\n  cookies(): Iterable<Protocol.Audits.AffectedCookie> {\n    if (this.#issueDetails.cookie) {\n      return [this.#issueDetails.cookie];\n    }\n    return [];\n  }\n\n  rawCookieLines(): Iterable<string> {\n    if (this.#issueDetails.rawCookieLine) {\n      return [this.#issueDetails.rawCookieLine];\n    }\n    return [];\n  }\n\n  requests(): Iterable<Protocol.Audits.AffectedRequest> {\n    if (this.#issueDetails.request) {\n      return [this.#issueDetails.request];\n    }\n    return [];\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Cookie;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.code());\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  isCausedByThirdParty(): boolean {\n    const topFrame = SDK.FrameManager.FrameManager.instance().getTopFrame();\n    return isCausedByThirdParty(topFrame, this.#issueDetails.cookieUrl);\n  }\n\n  getKind(): IssueKind {\n    if (this.#issueDetails.cookieExclusionReasons?.length > 0) {\n      return IssueKind.PageError;\n    }\n    return IssueKind.BreakingChange;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      CookieIssue[] {\n    const cookieIssueDetails = inspectorIssue.details.cookieIssueDetails;\n    if (!cookieIssueDetails) {\n      console.warn('Cookie issue without details received.');\n      return [];\n    }\n\n    return CookieIssue.createIssuesFromCookieIssueDetails(cookieIssueDetails, issuesModel);\n  }\n}\n\n/**\n * Exported for unit test.\n */\nexport function isCausedByThirdParty(\n    topFrame: SDK.ResourceTreeModel.ResourceTreeFrame|null, cookieUrl?: string): boolean {\n  if (!topFrame) {\n    // The top frame is not yet available. Consider this issue as a third-party issue\n    // until the top frame is available. This will prevent the issue from being visible\n    // for only just a split second.\n    return true;\n  }\n\n  // In the case of no domain and registry, we assume its an IP address or localhost\n  // during development, in this case we classify the issue as first-party.\n  if (!cookieUrl || topFrame.domainAndRegistry() === '') {\n    return false;\n  }\n\n  const parsedCookieUrl = Common.ParsedURL.ParsedURL.fromString(cookieUrl);\n  if (!parsedCookieUrl) {\n    return false;\n  }\n\n  // For both operation types we compare the cookieUrl's domain  with the top frames\n  // registered domain to determine first-party vs third-party. If they don't match\n  // then we consider this issue a third-party issue.\n  //\n  // For a Set operation: The Set-Cookie response is part of a request to a third-party.\n  //\n  // For a Read operation: The cookie was included in a request to a third-party\n  //     site. Only cookies that have their domain also set to this third-party\n  //     are included in the request. We assume that the cookie was set by the same\n  //     third-party at some point, so we treat this as a third-party issue.\n  //\n  // TODO(crbug.com/1080589): Use \"First-Party sets\" instead of the sites registered domain.\n  return !isSubdomainOf(parsedCookieUrl.domain(), topFrame.domainAndRegistry());\n}\n\nfunction isSubdomainOf(subdomain: string, superdomain: string): boolean {\n  // Subdomain must be identical or have strictly more labels than the\n  // superdomain.\n  if (subdomain.length <= superdomain.length) {\n    return subdomain === superdomain;\n  }\n\n  // Superdomain must be suffix of subdomain, and the last character not\n  // included in the matching substring must be a dot.\n  if (!subdomain.endsWith(superdomain)) {\n    return false;\n  }\n\n  const subdomainWithoutSuperdomian = subdomain.substr(0, subdomain.length - superdomain.length);\n  return subdomainWithoutSuperdomian.endsWith('.');\n}\n\nconst sameSiteUnspecifiedErrorRead: LazyMarkdownIssueDescription = {\n  file: 'SameSiteUnspecifiedTreatedAsLaxRead.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteUnspecifiedErrorSet: LazyMarkdownIssueDescription = {\n  file: 'SameSiteUnspecifiedTreatedAsLaxSet.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteUnspecifiedWarnRead: LazyMarkdownIssueDescription = {\n  file: 'SameSiteUnspecifiedLaxAllowUnsafeRead.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteUnspecifiedWarnSet: LazyMarkdownIssueDescription = {\n  file: 'SameSiteUnspecifiedLaxAllowUnsafeSet.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteNoneInsecureErrorRead: LazyMarkdownIssueDescription = {\n  file: 'SameSiteNoneInsecureErrorRead.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteNoneInsecureErrorSet: LazyMarkdownIssueDescription = {\n  file: 'SameSiteNoneInsecureErrorSet.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteNoneInsecureWarnRead: LazyMarkdownIssueDescription = {\n  file: 'SameSiteNoneInsecureWarnRead.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst sameSiteNoneInsecureWarnSet: LazyMarkdownIssueDescription = {\n  file: 'SameSiteNoneInsecureWarnSet.md',\n  links: [\n    {\n      link: 'https://web.dev/samesite-cookies-explained/',\n      linkTitle: i18nLazyString(UIStrings.samesiteCookiesExplained),\n    },\n  ],\n};\n\nconst schemefulSameSiteArticles =\n    [{link: 'https://web.dev/schemeful-samesite/', linkTitle: i18nLazyString(UIStrings.howSchemefulSamesiteWorks)}];\n\nfunction schemefulSameSiteSubstitutions(\n    {isDestinationSecure, isOriginSecure}: {isDestinationSecure: boolean, isOriginSecure: boolean}):\n    Map<string, () => string> {\n  return new Map([\n    // TODO(crbug.com/1168438): Use translated phrases once the issue description is localized.\n    ['PLACEHOLDER_destination', (): string => isDestinationSecure ? 'a secure' : 'an insecure'],\n    ['PLACEHOLDER_origin', (): string => isOriginSecure ? 'a secure' : 'an insecure'],\n  ]);\n}\n\nfunction sameSiteWarnStrictLaxDowngradeStrict(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteWarnStrictLaxDowngradeStrict.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: isSecure, isOriginSecure: !isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nfunction sameSiteExcludeNavigationContextDowngrade(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteExcludeNavigationContextDowngrade.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: isSecure, isOriginSecure: !isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nfunction sameSiteWarnCrossDowngradeRead(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteWarnCrossDowngradeRead.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: isSecure, isOriginSecure: !isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nfunction sameSiteExcludeContextDowngradeRead(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteExcludeContextDowngradeRead.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: isSecure, isOriginSecure: !isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nfunction sameSiteWarnCrossDowngradeSet(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteWarnCrossDowngradeSet.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: !isSecure, isOriginSecure: isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nfunction sameSiteExcludeContextDowngradeSet(isSecure: boolean): LazyMarkdownIssueDescription {\n  return {\n    file: 'SameSiteExcludeContextDowngradeSet.md',\n    substitutions: schemefulSameSiteSubstitutions({isDestinationSecure: isSecure, isOriginSecure: !isSecure}),\n    links: schemefulSameSiteArticles,\n  };\n}\n\nconst sameSiteInvalidSameParty: LazyMarkdownIssueDescription = {\n  file: 'SameSiteInvalidSameParty.md',\n  links: [{\n    link: 'https://developer.chrome.com/blog/first-party-sets-sameparty/',\n    linkTitle: i18nLazyString(UIStrings.firstPartySetsExplained),\n  }],\n};\n\nconst samePartyCrossPartyContextSet: LazyMarkdownIssueDescription = {\n  file: 'SameSiteSamePartyCrossPartyContextSet.md',\n  links: [{\n    link: 'https://developer.chrome.com/blog/first-party-sets-sameparty/',\n    linkTitle: i18nLazyString(UIStrings.firstPartySetsExplained),\n  }],\n};\n\nconst attributeValueExceedsMaxSize: LazyMarkdownIssueDescription = {\n  file: 'CookieAttributeValueExceedsMaxSize.md',\n  links: [],\n};\n\nconst issueDescriptions: Map<string, LazyMarkdownIssueDescription> = new Map([\n  ['CookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::ReadCookie', sameSiteUnspecifiedErrorRead],\n  ['CookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::SetCookie', sameSiteUnspecifiedErrorSet],\n  // These two don't have a deprecation date yet, but they need to be fixed eventually.\n  ['CookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::ReadCookie', sameSiteUnspecifiedWarnRead],\n  ['CookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::SetCookie', sameSiteUnspecifiedWarnSet],\n  ['CookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::ReadCookie', sameSiteUnspecifiedWarnRead],\n  ['CookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::SetCookie', sameSiteUnspecifiedWarnSet],\n  ['CookieIssue::ExcludeSameSiteNoneInsecure::ReadCookie', sameSiteNoneInsecureErrorRead],\n  ['CookieIssue::ExcludeSameSiteNoneInsecure::SetCookie', sameSiteNoneInsecureErrorSet],\n  ['CookieIssue::WarnSameSiteNoneInsecure::ReadCookie', sameSiteNoneInsecureWarnRead],\n  ['CookieIssue::WarnSameSiteNoneInsecure::SetCookie', sameSiteNoneInsecureWarnSet],\n  ['CookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Secure', sameSiteWarnStrictLaxDowngradeStrict(true)],\n  ['CookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Insecure', sameSiteWarnStrictLaxDowngradeStrict(false)],\n  ['CookieIssue::WarnCrossDowngrade::ReadCookie::Secure', sameSiteWarnCrossDowngradeRead(true)],\n  ['CookieIssue::WarnCrossDowngrade::ReadCookie::Insecure', sameSiteWarnCrossDowngradeRead(false)],\n  ['CookieIssue::WarnCrossDowngrade::SetCookie::Secure', sameSiteWarnCrossDowngradeSet(true)],\n  ['CookieIssue::WarnCrossDowngrade::SetCookie::Insecure', sameSiteWarnCrossDowngradeSet(false)],\n  ['CookieIssue::ExcludeNavigationContextDowngrade::Secure', sameSiteExcludeNavigationContextDowngrade(true)],\n  [\n    'CookieIssue::ExcludeNavigationContextDowngrade::Insecure',\n    sameSiteExcludeNavigationContextDowngrade(false),\n  ],\n  ['CookieIssue::ExcludeContextDowngrade::ReadCookie::Secure', sameSiteExcludeContextDowngradeRead(true)],\n  ['CookieIssue::ExcludeContextDowngrade::ReadCookie::Insecure', sameSiteExcludeContextDowngradeRead(false)],\n  ['CookieIssue::ExcludeContextDowngrade::SetCookie::Secure', sameSiteExcludeContextDowngradeSet(true)],\n  ['CookieIssue::ExcludeContextDowngrade::SetCookie::Insecure', sameSiteExcludeContextDowngradeSet(false)],\n  ['CookieIssue::ExcludeInvalidSameParty::SetCookie', sameSiteInvalidSameParty],\n  ['CookieIssue::ExcludeSamePartyCrossPartyContext::SetCookie', samePartyCrossPartyContextSet],\n  ['CookieIssue::WarnAttributeValueExceedsMaxSize::ReadCookie', attributeValueExceedsMaxSize],\n  ['CookieIssue::WarnAttributeValueExceedsMaxSize::SetCookie', attributeValueExceedsMaxSize],\n]);\n"],
  "mappings": "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",
  "names": []
}
