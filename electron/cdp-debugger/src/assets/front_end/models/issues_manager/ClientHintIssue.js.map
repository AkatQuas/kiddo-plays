{
  "version": 3,
  "sources": ["../../../../../../front_end/models/issues_manager/ClientHintIssue.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {MarkdownIssueDescription, LazyMarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for Client Hint specification url link\n  */\n  clientHintsInfrastructure: 'Client Hints Infrastructure',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/ClientHintIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ClientHintIssue extends Issue {\n  private issueDetails: Protocol.Audits.ClientHintIssueDetails;\n\n  constructor(issueDetails: Protocol.Audits.ClientHintIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    super(\n        {\n          code: Protocol.Audits.InspectorIssueCode.ClientHintIssue,\n          umaCode: [Protocol.Audits.InspectorIssueCode.ClientHintIssue, issueDetails.clientHintIssueReason].join('::'),\n        },\n        issuesModel);\n    this.issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.Other;\n  }\n\n  details(): Protocol.Audits.ClientHintIssueDetails {\n    return this.issueDetails;\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.issueDetails.clientHintIssueReason);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  sources(): Iterable<Protocol.Audits.SourceCodeLocation> {\n    return [this.issueDetails.sourceCodeLocation];\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.issueDetails);\n  }\n\n  getKind(): IssueKind {\n    return IssueKind.BreakingChange;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      ClientHintIssue[] {\n    const details = inspectorIssue.details.clientHintIssueDetails;\n    if (!details) {\n      console.warn('Client Hint issue without details received.');\n      return [];\n    }\n    return [new ClientHintIssue(details, issuesModel)];\n  }\n}\n\nconst issueDescriptions: Map<Protocol.Audits.ClientHintIssueReason, LazyMarkdownIssueDescription> = new Map([\n  [\n    Protocol.Audits.ClientHintIssueReason.MetaTagAllowListInvalidOrigin,\n    {\n      file: 'clientHintMetaTagAllowListInvalidOrigin.md',\n      links: [{\n        link: 'https://wicg.github.io/client-hints-infrastructure/',\n        linkTitle: i18nLazyString(UIStrings.clientHintsInfrastructure),\n      }],\n    },\n  ],\n  [\n    Protocol.Audits.ClientHintIssueReason.MetaTagModifiedHTML,\n    {\n      file: 'clientHintMetaTagModifiedHTML.md',\n      links: [{\n        link: 'https://wicg.github.io/client-hints-infrastructure/',\n        linkTitle: i18nLazyString(UIStrings.clientHintsInfrastructure),\n      }],\n    },\n  ],\n]);\n"],
  "mappings": "AAIA;AAEA;AAEA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,2BAA2B;AAAA;AAE7B,MAAM,OAAO,KAAK,KAAK,kBAAkB,4CAA4C;AACrF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAE3E,qCAA8B,MAAM;AAAA,EACjC;AAAA,EAER,YAAY,cAAsD,aAA0C;AAC1G,UACI;AAAA,MACE,MAAM,SAAS,OAAO,mBAAmB;AAAA,MACzC,SAAS,CAAC,SAAS,OAAO,mBAAmB,iBAAiB,aAAa,uBAAuB,KAAK;AAAA,OAEzG;AACJ,SAAK,eAAe;AAAA;AAAA,EAGtB,cAA6B;AAC3B,WAAO,cAAc;AAAA;AAAA,EAGvB,UAAkD;AAChD,WAAO,KAAK;AAAA;AAAA,EAGd,iBAAgD;AAC9C,UAAM,cAAc,kBAAkB,IAAI,KAAK,aAAa;AAC5D,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA;AAET,WAAO,uBAAuB;AAAA;AAAA,EAGhC,UAAwD;AACtD,WAAO,CAAC,KAAK,aAAa;AAAA;AAAA,EAG5B,aAAqB;AACnB,WAAO,KAAK,UAAU,KAAK;AAAA;AAAA,EAG7B,UAAqB;AACnB,WAAO,UAAU;AAAA;AAAA,SAGZ,mBAAmB,aAA0C,gBAC9C;AACpB,UAAM,UAAU,eAAe,QAAQ;AACvC,QAAI,CAAC,SAAS;AACZ,cAAQ,KAAK;AACb,aAAO;AAAA;AAET,WAAO,CAAC,IAAI,gBAAgB,SAAS;AAAA;AAAA;AAIzC,MAAM,oBAA8F,oBAAI,IAAI;AAAA,EAC1G;AAAA,IACE,SAAS,OAAO,sBAAsB;AAAA,IACtC;AAAA,MACE,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAAA;AAAA,EAI1C;AAAA,IACE,SAAS,OAAO,sBAAsB;AAAA,IACtC;AAAA,MACE,MAAM;AAAA,MACN,OAAO,CAAC;AAAA,QACN,MAAM;AAAA,QACN,WAAW,eAAe,UAAU;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
