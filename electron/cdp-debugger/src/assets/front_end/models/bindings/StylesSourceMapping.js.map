{
  "version": 3,
  "sources": ["../../../../../../front_end/models/bindings/StylesSourceMapping.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport type {SourceMapping} from './CSSWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {metadataForURL} from './ResourceUtils.js';\n\nconst uiSourceCodeToStyleMap = new WeakMap<Workspace.UISourceCode.UISourceCode, StyleFile>();\n\nexport class StylesSourceMapping implements SourceMapping {\n  #cssModel: SDK.CSSModel.CSSModel;\n  #project: ContentProviderBasedProject;\n  readonly #styleFiles: Map<string, StyleFile>;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(cssModel: SDK.CSSModel.CSSModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#cssModel = cssModel;\n    const target = this.#cssModel.target();\n    this.#project = new ContentProviderBasedProject(\n        workspace, 'css:' + target.id(), Workspace.Workspace.projectTypes.Network, '', false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this.#project, target);\n\n    this.#styleFiles = new Map();\n    this.#eventListeners = [\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.styleSheetAdded, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.styleSheetRemoved, this),\n      this.#cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.styleSheetChanged, this),\n    ];\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const header = rawLocation.header();\n    if (!header || !this.acceptsHeader(header)) {\n      return null;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (!styleFile) {\n      return null;\n    }\n    let lineNumber = rawLocation.lineNumber;\n    let columnNumber: undefined|number = rawLocation.columnNumber;\n    if (header.isInline && header.hasSourceURL) {\n      lineNumber -= header.lineNumberInSource(0);\n      const headerColumnNumber = header.columnNumberInSource(lineNumber, 0);\n      if (typeof headerColumnNumber === 'undefined') {\n        columnNumber = headerColumnNumber;\n      } else {\n        columnNumber -= headerColumnNumber;\n      }\n    }\n    return styleFile.getUiSourceCode().uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const styleFile = uiSourceCodeToStyleMap.get(uiLocation.uiSourceCode);\n    if (!styleFile) {\n      return [];\n    }\n    const rawLocations = [];\n    for (const header of styleFile.getHeaders()) {\n      let lineNumber = uiLocation.lineNumber;\n      let columnNumber = uiLocation.columnNumber;\n      if (header.isInline && header.hasSourceURL) {\n        // TODO(crbug.com/1153123): Revisit the `#columnNumber || 0` and also preserve `undefined` for source maps?\n        columnNumber = header.columnNumberInSource(lineNumber, uiLocation.columnNumber || 0);\n        lineNumber = header.lineNumberInSource(lineNumber);\n      }\n      rawLocations.push(new SDK.CSSModel.CSSLocation(header, lineNumber, columnNumber));\n    }\n    return rawLocations;\n  }\n\n  private acceptsHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): boolean {\n    if (header.isConstructedByNew()) {\n      return false;\n    }\n    if (header.isInline && !header.hasSourceURL && header.origin !== 'inspector') {\n      return false;\n    }\n    if (!header.resourceURL()) {\n      return false;\n    }\n    return true;\n  }\n\n  private styleSheetAdded(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n\n    const url = header.resourceURL();\n    let styleFile = this.#styleFiles.get(url);\n    if (!styleFile) {\n      styleFile = new StyleFile(this.#cssModel, this.#project, header);\n      this.#styleFiles.set(url, styleFile);\n    } else {\n      styleFile.addHeader(header);\n    }\n  }\n\n  private styleSheetRemoved(event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>):\n      void {\n    const header = event.data;\n    if (!this.acceptsHeader(header)) {\n      return;\n    }\n    const url = header.resourceURL();\n    const styleFile = this.#styleFiles.get(url);\n    if (styleFile) {\n      if (styleFile.getHeaders().size === 1) {\n        styleFile.dispose();\n        this.#styleFiles.delete(url);\n      } else {\n        styleFile.removeHeader(header);\n      }\n    }\n  }\n\n  private styleSheetChanged(event: Common.EventTarget.EventTargetEvent<SDK.CSSModel.StyleSheetChangedEvent>): void {\n    const header = this.#cssModel.styleSheetHeaderForId(event.data.styleSheetId);\n    if (!header || !this.acceptsHeader(header)) {\n      return;\n    }\n    const styleFile = this.#styleFiles.get(header.resourceURL());\n    if (styleFile) {\n      styleFile.styleSheetChanged(header);\n    }\n  }\n\n  dispose(): void {\n    for (const styleFile of this.#styleFiles.values()) {\n      styleFile.dispose();\n    }\n    this.#styleFiles.clear();\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#project.removeProject();\n  }\n}\n\nexport class StyleFile implements TextUtils.ContentProvider.ContentProvider {\n  readonly #cssModel: SDK.CSSModel.CSSModel;\n  readonly #project: ContentProviderBasedProject;\n  headers: Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>;\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #throttler: Common.Throttler.Throttler;\n  #terminated: boolean;\n  #isAddingRevision?: boolean;\n  #isUpdatingHeaders?: boolean;\n\n  constructor(\n      cssModel: SDK.CSSModel.CSSModel, project: ContentProviderBasedProject,\n      header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader) {\n    this.#cssModel = cssModel;\n    this.#project = project;\n    this.headers = new Set([header]);\n\n    const target = cssModel.target();\n\n    const url = header.resourceURL();\n    const metadata = metadataForURL(target, header.frameId, url);\n\n    this.uiSourceCode = this.#project.createUISourceCode(url, header.contentType());\n    uiSourceCodeToStyleMap.set(this.uiSourceCode, this);\n    NetworkProject.setInitialFrameAttribution(this.uiSourceCode, header.frameId);\n    this.#project.addUISourceCodeWithProvider(this.uiSourceCode, this, metadata, 'text/css');\n\n    this.#eventListeners = [\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this),\n      this.uiSourceCode.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this),\n    ];\n    this.#throttler = new Common.Throttler.Throttler(StyleFile.updateTimeout);\n    this.#terminated = false;\n  }\n\n  addHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.add(header);\n    NetworkProject.addFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  removeHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    this.headers.delete(header);\n    NetworkProject.removeFrameAttribution(this.uiSourceCode, header.frameId);\n  }\n\n  styleSheetChanged(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): void {\n    console.assert(this.headers.has(header));\n    if (this.#isUpdatingHeaders || !this.headers.has(header)) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, header, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, false /* asSoonAsPossible */);\n  }\n\n  private workingCopyCommitted(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, true /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, true /* asSoonAsPossible */);\n  }\n\n  private workingCopyChanged(): void {\n    if (this.#isAddingRevision) {\n      return;\n    }\n    const mirrorContentBound = this.mirrorContent.bind(this, this.uiSourceCode, false /* majorChange */);\n    void this.#throttler.schedule(mirrorContentBound, false /* asSoonAsPossible */);\n  }\n\n  private async mirrorContent(fromProvider: TextUtils.ContentProvider.ContentProvider, majorChange: boolean):\n      Promise<void> {\n    if (this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    let newContent: string|(string | null)|null = null;\n    if (fromProvider === this.uiSourceCode) {\n      newContent = this.uiSourceCode.workingCopy();\n    } else {\n      const deferredContent = await fromProvider.requestContent();\n      newContent = deferredContent.content;\n    }\n\n    if (newContent === null || this.#terminated) {\n      this.styleFileSyncedForTest();\n      return;\n    }\n\n    if (fromProvider !== this.uiSourceCode) {\n      this.#isAddingRevision = true;\n      this.uiSourceCode.addRevision(newContent);\n      this.#isAddingRevision = false;\n    }\n\n    this.#isUpdatingHeaders = true;\n    const promises = [];\n    for (const header of this.headers) {\n      if (header === fromProvider) {\n        continue;\n      }\n      promises.push(this.#cssModel.setStyleSheetText(header.id, newContent, majorChange));\n    }\n    // ------ ASYNC ------\n    await Promise.all(promises);\n    this.#isUpdatingHeaders = false;\n    this.styleFileSyncedForTest();\n  }\n\n  private styleFileSyncedForTest(): void {\n  }\n\n  dispose(): void {\n    if (this.#terminated) {\n      return;\n    }\n    this.#terminated = true;\n    this.#project.removeFile(this.uiSourceCode.url());\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value.originalContentProvider().contentURL();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value.originalContentProvider().contentType();\n  }\n\n  contentEncoded(): Promise<boolean> {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value.originalContentProvider().contentEncoded();\n  }\n\n  requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value.originalContentProvider().requestContent();\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    console.assert(this.headers.size > 0);\n    return this.headers.values().next().value.originalContentProvider().searchInContent(query, caseSensitive, isRegex);\n  }\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly updateTimeout = 200;\n\n  getHeaders(): Set<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader> {\n    return this.headers;\n  }\n\n  getUiSourceCode(): Workspace.UISourceCode.UISourceCode {\n    return this.uiSourceCode;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
