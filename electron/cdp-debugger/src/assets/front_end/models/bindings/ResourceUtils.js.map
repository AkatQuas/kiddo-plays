{
  "version": 3,
  "sources": ["../../../../../../front_end/models/bindings/ResourceUtils.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nexport function resourceForURL(url: Platform.DevToolsPath.UrlString): SDK.Resource.Resource|null {\n  for (const resourceTreeModel of SDK.TargetManager.TargetManager.instance().models(\n           SDK.ResourceTreeModel.ResourceTreeModel)) {\n    const resource = resourceTreeModel.resourceForURL(url);\n    if (resource) {\n      return resource;\n    }\n  }\n  return null;\n}\n\nexport function displayNameForURL(url: Platform.DevToolsPath.UrlString): string {\n  if (!url) {\n    return '';\n  }\n\n  const resource = resourceForURL(url);\n  if (resource) {\n    return resource.displayName;\n  }\n\n  const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n  if (uiSourceCode) {\n    return uiSourceCode.displayName();\n  }\n\n  const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n  const inspectedURL = mainTarget && mainTarget.inspectedURL();\n  if (!inspectedURL) {\n    return Platform.StringUtilities.trimURL(url, '');\n  }\n\n  const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n  if (!parsedURL) {\n    return url;\n  }\n\n  const lastPathComponent = parsedURL.lastPathComponent;\n  const index = inspectedURL.indexOf(lastPathComponent);\n  if (index !== -1 && index + lastPathComponent.length === inspectedURL.length) {\n    const baseURL = inspectedURL.substring(0, index);\n    if (url.startsWith(baseURL)) {\n      return url.substring(index);\n    }\n  }\n\n  const displayName = Platform.StringUtilities.trimURL(url, parsedURL.host);\n  return displayName === '/' ? parsedURL.host + '/' : displayName;\n}\n\nexport function metadataForURL(\n    target: SDK.Target.Target, frameId: Protocol.Page.FrameId,\n    url: Platform.DevToolsPath.UrlString): Workspace.UISourceCode.UISourceCodeMetadata|null {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  if (!resourceTreeModel) {\n    return null;\n  }\n  const frame = resourceTreeModel.frameForId(frameId);\n  if (!frame) {\n    return null;\n  }\n  return resourceMetadata(frame.resourceForURL(url));\n}\n\nexport function resourceMetadata(resource: SDK.Resource.Resource|null): Workspace.UISourceCode.UISourceCodeMetadata|\n    null {\n  if (!resource || (typeof resource.contentSize() !== 'number' && !resource.lastModified())) {\n    return null;\n  }\n  return new Workspace.UISourceCode.UISourceCodeMetadata(resource.lastModified(), resource.contentSize());\n}\n"],
  "mappings": "AAkCA;AACA;AACA;AAEA;AAEO,+BAAwB,KAAkE;AAC/F,aAAW,qBAAqB,IAAI,cAAc,cAAc,WAAW,OAClE,IAAI,kBAAkB,oBAAoB;AACjD,UAAM,WAAW,kBAAkB,eAAe;AAClD,QAAI,UAAU;AACZ,aAAO;AAAA;AAAA;AAGX,SAAO;AAAA;AAGF,kCAA2B,KAA8C;AAC9E,MAAI,CAAC,KAAK;AACR,WAAO;AAAA;AAGT,QAAM,WAAW,eAAe;AAChC,MAAI,UAAU;AACZ,WAAO,SAAS;AAAA;AAGlB,QAAM,eAAe,UAAU,UAAU,cAAc,WAAW,mBAAmB;AACrF,MAAI,cAAc;AAChB,WAAO,aAAa;AAAA;AAGtB,QAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,QAAM,eAAe,cAAc,WAAW;AAC9C,MAAI,CAAC,cAAc;AACjB,WAAO,SAAS,gBAAgB,QAAQ,KAAK;AAAA;AAG/C,QAAM,YAAY,OAAO,UAAU,UAAU,WAAW;AACxD,MAAI,CAAC,WAAW;AACd,WAAO;AAAA;AAGT,QAAM,oBAAoB,UAAU;AACpC,QAAM,QAAQ,aAAa,QAAQ;AACnC,MAAI,UAAU,MAAM,QAAQ,kBAAkB,WAAW,aAAa,QAAQ;AAC5E,UAAM,UAAU,aAAa,UAAU,GAAG;AAC1C,QAAI,IAAI,WAAW,UAAU;AAC3B,aAAO,IAAI,UAAU;AAAA;AAAA;AAIzB,QAAM,cAAc,SAAS,gBAAgB,QAAQ,KAAK,UAAU;AACpE,SAAO,gBAAgB,MAAM,UAAU,OAAO,MAAM;AAAA;AAG/C,+BACH,QAA2B,SAC3B,KAAwF;AAC1F,QAAM,oBAAoB,OAAO,MAAM,IAAI,kBAAkB;AAC7D,MAAI,CAAC,mBAAmB;AACtB,WAAO;AAAA;AAET,QAAM,QAAQ,kBAAkB,WAAW;AAC3C,MAAI,CAAC,OAAO;AACV,WAAO;AAAA;AAET,SAAO,iBAAiB,MAAM,eAAe;AAAA;AAGxC,iCAA0B,UACxB;AACP,MAAI,CAAC,YAAa,OAAO,SAAS,kBAAkB,YAAY,CAAC,SAAS,gBAAiB;AACzF,WAAO;AAAA;AAET,SAAO,IAAI,UAAU,aAAa,qBAAqB,SAAS,gBAAgB,SAAS;AAAA;",
  "names": []
}
