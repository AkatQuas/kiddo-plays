{
  "version": 3,
  "sources": ["../../../../../../front_end/models/bindings/CSSWorkspaceBinding.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js';\n\nimport type {LiveLocation as LiveLocationInterface, LiveLocationPool} from './LiveLocation.js';\nimport {LiveLocationWithPool} from './LiveLocation.js';\nimport {ResourceMapping} from './ResourceMapping.js';\nimport {SASSSourceMapping} from './SASSSourceMapping.js';\nimport {StylesSourceMapping} from './StylesSourceMapping.js';\n\nlet cssWorkspaceBindingInstance: CSSWorkspaceBinding|undefined;\n\nexport class CSSWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  readonly #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly #modelToInfo: Map<SDK.CSSModel.CSSModel, ModelInfo>;\n  readonly #sourceMappings: SourceMapping[];\n  readonly #liveLocationPromises: Set<Promise<unknown>>;\n\n  private constructor(targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#workspace = workspace;\n\n    this.#modelToInfo = new Map();\n    this.#sourceMappings = [];\n    targetManager.observeModels(SDK.CSSModel.CSSModel, this);\n\n    this.#liveLocationPromises = new Set();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n  } = {forceNew: null, targetManager: null, workspace: null}): CSSWorkspaceBinding {\n    const {forceNew, targetManager, workspace} = opts;\n    if (!cssWorkspaceBindingInstance || forceNew) {\n      if (!targetManager || !workspace) {\n        throw new Error(\n            `Unable to create CSSWorkspaceBinding: targetManager and workspace must be provided: ${new Error().stack}`);\n      }\n\n      cssWorkspaceBindingInstance = new CSSWorkspaceBinding(targetManager, workspace);\n    }\n\n    return cssWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    cssWorkspaceBindingInstance = undefined;\n  }\n\n  get modelToInfo(): Map<SDK.CSSModel.CSSModel, ModelInfo> {\n    return this.#modelToInfo;\n  }\n\n  private getCSSModelInfo(cssModel: SDK.CSSModel.CSSModel): ModelInfo {\n    return this.#modelToInfo.get(cssModel) as ModelInfo;\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    this.#modelToInfo.set(cssModel, new ModelInfo(cssModel, this.#workspace));\n  }\n\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    this.getCSSModelInfo(cssModel).dispose();\n    this.#modelToInfo.delete(cssModel);\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void> {\n    await Promise.all(this.#liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<unknown>): void {\n    void promise.then(() => {\n      this.#liveLocationPromises.delete(promise);\n    });\n    this.#liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void> {\n    const updatePromise = this.getCSSModelInfo(header.cssModel()).updateLocations(header);\n    this.recordLiveLocationChange(updatePromise);\n    await updatePromise;\n  }\n\n  createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const locationPromise =\n        this.getCSSModelInfo(rawLocation.cssModel()).createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return locationPromise;\n  }\n\n  propertyRawLocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): SDK.CSSModel.CSSLocation|null {\n    const style = cssProperty.ownerStyle;\n    if (!style || style.type !== SDK.CSSStyleDeclaration.Type.Regular || !style.styleSheetId) {\n      return null;\n    }\n    const header = style.cssModel().styleSheetHeaderForId(style.styleSheetId);\n    if (!header) {\n      return null;\n    }\n\n    const range = forName ? cssProperty.nameRange() : cssProperty.valueRange();\n    if (!range) {\n      return null;\n    }\n\n    const lineNumber = range.startLine;\n    const columnNumber = range.startColumn;\n    return new SDK.CSSModel.CSSLocation(\n        header, header.lineNumberInSource(lineNumber), header.columnNumberInSource(lineNumber, columnNumber));\n  }\n\n  propertyUILocation(cssProperty: SDK.CSSProperty.CSSProperty, forName: boolean): Workspace.UISourceCode.UILocation\n      |null {\n    const rawLocation = this.propertyRawLocation(cssProperty, forName);\n    if (!rawLocation) {\n      return null;\n    }\n    return this.rawLocationToUILocation(rawLocation);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    for (let i = this.#sourceMappings.length - 1; i >= 0; --i) {\n      const uiLocation = this.#sourceMappings[i].rawLocationToUILocation(rawLocation);\n      if (uiLocation) {\n        return uiLocation;\n      }\n    }\n    return this.getCSSModelInfo(rawLocation.cssModel()).rawLocationToUILocation(rawLocation);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    for (let i = this.#sourceMappings.length - 1; i >= 0; --i) {\n      const rawLocations = this.#sourceMappings[i].uiLocationToRawLocations(uiLocation);\n      if (rawLocations.length) {\n        return rawLocations;\n      }\n    }\n    const rawLocations = [];\n    for (const modelInfo of this.#modelToInfo.values()) {\n      rawLocations.push(...modelInfo.uiLocationToRawLocations(uiLocation));\n    }\n    return rawLocations;\n  }\n\n  addSourceMapping(sourceMapping: SourceMapping): void {\n    this.#sourceMappings.push(sourceMapping);\n  }\n\n  removeSourceMapping(sourceMapping: SourceMapping): void {\n    const index = this.#sourceMappings.indexOf(sourceMapping);\n    if (index !== -1) {\n      this.#sourceMappings.splice(index, 1);\n    }\n  }\n}\n\nexport interface SourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[];\n}\n\nexport class ModelInfo {\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  #stylesSourceMapping: StylesSourceMapping;\n  #sassSourceMapping: SASSSourceMapping;\n  readonly #locations: Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation>;\n  readonly #unboundLocations: Platform.MapUtilities.Multimap<Platform.DevToolsPath.UrlString, LiveLocation>;\n  constructor(cssModel: SDK.CSSModel.CSSModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this.#eventListeners = [\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetAdded,\n          event => {\n            void this.styleSheetAdded(event);\n          },\n          this),\n      cssModel.addEventListener(\n          SDK.CSSModel.Events.StyleSheetRemoved,\n          event => {\n            void this.styleSheetRemoved(event);\n          },\n          this),\n    ];\n\n    this.#stylesSourceMapping = new StylesSourceMapping(cssModel, workspace);\n    const sourceMapManager = cssModel.sourceMapManager();\n    this.#sassSourceMapping = new SASSSourceMapping(cssModel.target(), sourceMapManager, workspace);\n\n    this.#locations = new Platform.MapUtilities.Multimap();\n    this.#unboundLocations = new Platform.MapUtilities.Multimap();\n  }\n\n  get locations(): Platform.MapUtilities.Multimap<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, LiveLocation> {\n    return this.#locations;\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.CSSModel.CSSLocation, updateDelegate: (arg0: LiveLocationInterface) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    const location = new LiveLocation(rawLocation, this, updateDelegate, locationPool);\n    const header = rawLocation.header();\n    if (header) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      await location.update();\n    } else {\n      this.#unboundLocations.set(rawLocation.url, location);\n    }\n    return location;\n  }\n\n  disposeLocation(location: LiveLocation): void {\n    const header = location.header();\n    if (header) {\n      this.#locations.delete(header, location);\n    } else {\n      this.#unboundLocations.delete(location.url, location);\n    }\n  }\n\n  updateLocations(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void[]> {\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      promises.push(location.update());\n    }\n    return Promise.all(promises);\n  }\n\n  private async styleSheetAdded(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    if (!header.sourceURL) {\n      return;\n    }\n\n    const promises = [];\n    for (const location of this.#unboundLocations.get(header.sourceURL)) {\n      location.setHeader(header);\n      this.#locations.set(header, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#unboundLocations.deleteAll(header.sourceURL);\n  }\n\n  private async styleSheetRemoved(\n      event: Common.EventTarget.EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader>): Promise<void> {\n    const header = event.data;\n    const promises = [];\n    for (const location of this.#locations.get(header)) {\n      location.setHeader(header);\n      this.#unboundLocations.set(location.url, location);\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n    this.#locations.deleteAll(header);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    let uiLocation: (Workspace.UISourceCode.UILocation|null)|null = null;\n    uiLocation = uiLocation || this.#sassSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#stylesSourceMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || ResourceMapping.instance().cssLocationToUILocation(rawLocation);\n    return uiLocation;\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    let rawLocations = this.#sassSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    rawLocations = this.#stylesSourceMapping.uiLocationToRawLocations(uiLocation);\n    if (rawLocations.length) {\n      return rawLocations;\n    }\n    return ResourceMapping.instance().uiLocationToCSSLocations(uiLocation);\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#stylesSourceMapping.dispose();\n    this.#sassSourceMapping.dispose();\n  }\n}\n\nexport class LiveLocation extends LiveLocationWithPool {\n  readonly url: Platform.DevToolsPath.UrlString;\n  readonly #lineNumber: number;\n  readonly #columnNumber: number;\n  readonly #info: ModelInfo;\n  headerInternal: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null;\n  constructor(\n      rawLocation: SDK.CSSModel.CSSLocation, info: ModelInfo,\n      updateDelegate: (arg0: LiveLocationInterface) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.url = rawLocation.url;\n    this.#lineNumber = rawLocation.lineNumber;\n    this.#columnNumber = rawLocation.columnNumber;\n    this.#info = info;\n    this.headerInternal = null;\n  }\n\n  header(): SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null {\n    return this.headerInternal;\n  }\n\n  setHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|null): void {\n    this.headerInternal = header;\n  }\n\n  async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    if (!this.headerInternal) {\n      return null;\n    }\n    const rawLocation = new SDK.CSSModel.CSSLocation(this.headerInternal, this.#lineNumber, this.#columnNumber);\n    return CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n  }\n\n  dispose(): void {\n    super.dispose();\n    this.#info.disposeLocation(this);\n  }\n\n  async isIgnoreListed(): Promise<boolean> {\n    return false;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
