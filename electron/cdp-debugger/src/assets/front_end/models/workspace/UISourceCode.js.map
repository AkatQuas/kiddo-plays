{
  "version": 3,
  "sources": ["../../../../../../front_end/models/workspace/UISourceCode.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport type {Project} from './WorkspaceImpl.js';\nimport {Events as WorkspaceImplEvents} from './WorkspaceImpl.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the index of something\n  */\n  index: '(index)',\n  /**\n  *@description Text in UISource Code of the DevTools local workspace\n  */\n  thisFileWasChangedExternally: 'This file was changed externally. Would you like to reload it?',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/workspace/UISourceCode.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class UISourceCode extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    TextUtils.ContentProvider.ContentProvider {\n  private projectInternal: Project;\n  private urlInternal: Platform.DevToolsPath.UrlString;\n  private readonly originInternal: Platform.DevToolsPath.UrlString;\n  private readonly parentURLInternal: Platform.DevToolsPath.UrlString;\n  private nameInternal: string;\n  private contentTypeInternal: Common.ResourceType.ResourceType;\n  private requestContentPromise: Promise<TextUtils.ContentProvider.DeferredContent>|null;\n  private decorations: Map<string, any> = new Map();\n  private hasCommitsInternal: boolean;\n  private messagesInternal: Set<Message>|null;\n  private contentLoadedInternal: boolean;\n  private contentInternal: TextUtils.ContentProvider.DeferredContent|null;\n  private forceLoadOnCheckContentInternal: boolean;\n  private checkingContent: boolean;\n  private lastAcceptedContent: string|null;\n  private workingCopyInternal: string|null;\n  private workingCopyGetter: (() => string)|null;\n  private disableEditInternal: boolean;\n  private contentEncodedInternal?: boolean;\n\n  constructor(project: Project, url: Platform.DevToolsPath.UrlString, contentType: Common.ResourceType.ResourceType) {\n    super();\n    this.projectInternal = project;\n    this.urlInternal = url;\n\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    if (parsedURL) {\n      this.originInternal = parsedURL.securityOrigin();\n      this.parentURLInternal =\n          Common.ParsedURL.ParsedURL.concatenate(this.originInternal, parsedURL.folderPathComponents);\n      if (parsedURL.queryParams) {\n        // in case file name contains query params, it doesn't look like a normal file name anymore\n        // so it can as well remain encoded\n        this.nameInternal = parsedURL.lastPathComponent + '?' + parsedURL.queryParams;\n      } else {\n        // file name looks best decoded\n        this.nameInternal = decodeURIComponent(parsedURL.lastPathComponent);\n      }\n    } else {\n      this.originInternal = Platform.DevToolsPath.EmptyUrlString;\n      this.parentURLInternal = Platform.DevToolsPath.EmptyUrlString;\n      this.nameInternal = url;\n    }\n\n    this.contentTypeInternal = contentType;\n    this.requestContentPromise = null;\n    this.hasCommitsInternal = false;\n    this.messagesInternal = null;\n    this.contentLoadedInternal = false;\n    this.contentInternal = null;\n    this.forceLoadOnCheckContentInternal = false;\n    this.checkingContent = false;\n    this.lastAcceptedContent = null;\n    this.workingCopyInternal = null;\n    this.workingCopyGetter = null;\n    this.disableEditInternal = false;\n  }\n\n  requestMetadata(): Promise<UISourceCodeMetadata|null> {\n    return this.projectInternal.requestMetadata(this);\n  }\n\n  name(): string {\n    return this.nameInternal;\n  }\n\n  mimeType(): string {\n    return this.projectInternal.mimeType(this);\n  }\n\n  url(): Platform.DevToolsPath.UrlString {\n    return this.urlInternal;\n  }\n\n  // Identifier used for deduplicating scripts that are considered by the\n  // DevTools UI to be the same script. For now this is just the url but this\n  // is likely to change in the future.\n  canononicalScriptId(): string {\n    return `${this.contentTypeInternal.name()},${this.urlInternal}`;\n  }\n\n  parentURL(): Platform.DevToolsPath.UrlString {\n    return this.parentURLInternal;\n  }\n\n  origin(): Platform.DevToolsPath.UrlString {\n    return this.originInternal;\n  }\n\n  fullDisplayName(): string {\n    return this.projectInternal.fullDisplayName(this);\n  }\n\n  displayName(skipTrim?: boolean): string {\n    if (!this.nameInternal) {\n      return i18nString(UIStrings.index);\n    }\n    const name = this.nameInternal;\n    return skipTrim ? name : Platform.StringUtilities.trimEndWithMaxLength(name, 100);\n  }\n\n  canRename(): boolean {\n    return this.projectInternal.canRename();\n  }\n\n  rename(newName: Platform.DevToolsPath.RawPathString): Promise<boolean> {\n    let fulfill: (arg0: boolean) => void;\n    const promise = new Promise<boolean>(x => {\n      fulfill = x;\n    });\n    this.projectInternal.rename(this, newName, innerCallback.bind(this));\n    return promise;\n\n    function innerCallback(\n        this: UISourceCode, success: boolean, newName?: string, newURL?: Platform.DevToolsPath.UrlString,\n        newContentType?: Common.ResourceType.ResourceType): void {\n      if (success) {\n        this.updateName(\n            newName as Platform.DevToolsPath.RawPathString, newURL as Platform.DevToolsPath.UrlString,\n            newContentType as Common.ResourceType.ResourceType);\n      }\n      fulfill(success);\n    }\n  }\n\n  remove(): void {\n    this.projectInternal.deleteFile(this);\n  }\n\n  private updateName(\n      name: Platform.DevToolsPath.RawPathString, url: Platform.DevToolsPath.UrlString,\n      contentType?: Common.ResourceType.ResourceType): void {\n    const oldURL = this.urlInternal;\n    this.nameInternal = name;\n    if (url) {\n      this.urlInternal = url;\n    } else {\n      this.urlInternal = Common.ParsedURL.ParsedURL.relativePathToUrlString(name, oldURL);\n    }\n    if (contentType) {\n      this.contentTypeInternal = contentType;\n    }\n    this.dispatchEventToListeners(Events.TitleChanged, this);\n    this.project().workspace().dispatchEventToListeners(\n        WorkspaceImplEvents.UISourceCodeRenamed, {oldURL: oldURL, uiSourceCode: this});\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.url();\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return this.contentTypeInternal;\n  }\n\n  async contentEncoded(): Promise<boolean> {\n    await this.requestContent();\n    return this.contentEncodedInternal || false;\n  }\n\n  project(): Project {\n    return this.projectInternal;\n  }\n\n  requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (this.requestContentPromise) {\n      return this.requestContentPromise;\n    }\n\n    if (this.contentLoadedInternal) {\n      return Promise.resolve(this.contentInternal as TextUtils.ContentProvider.DeferredContent);\n    }\n\n    this.requestContentPromise = this.requestContentImpl();\n    return this.requestContentPromise;\n  }\n\n  private async requestContentImpl(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    try {\n      const content = await this.projectInternal.requestFileContent(this);\n      if (!this.contentLoadedInternal) {\n        this.contentLoadedInternal = true;\n        this.contentInternal = content;\n        this.contentEncodedInternal = content.isEncoded;\n      }\n    } catch (err) {\n      this.contentLoadedInternal = true;\n      this.contentInternal = {content: null, error: err ? String(err) : '', isEncoded: false};\n    }\n\n    return this.contentInternal as TextUtils.ContentProvider.DeferredContent;\n  }\n\n  #decodeContent(content: TextUtils.ContentProvider.DeferredContent|null): string|null {\n    if (!content) {\n      return null;\n    }\n    return content.isEncoded && content.content ? window.atob(content.content) : content.content;\n  }\n\n  async checkContentUpdated(): Promise<void> {\n    if (!this.contentLoadedInternal && !this.forceLoadOnCheckContentInternal) {\n      return;\n    }\n\n    if (!this.projectInternal.canSetFileContent() || this.checkingContent) {\n      return;\n    }\n\n    this.checkingContent = true;\n    const updatedContent = await this.projectInternal.requestFileContent(this);\n    if ('error' in updatedContent) {\n      return;\n    }\n    this.checkingContent = false;\n    if (updatedContent.content === null) {\n      const workingCopy = this.workingCopy();\n      this.contentCommitted('', false);\n      this.setWorkingCopy(workingCopy);\n      return;\n    }\n    if (this.lastAcceptedContent === updatedContent.content) {\n      return;\n    }\n\n    if (this.#decodeContent(this.contentInternal) === this.#decodeContent(updatedContent)) {\n      this.lastAcceptedContent = null;\n      return;\n    }\n\n    if (!this.isDirty() || this.workingCopyInternal === updatedContent.content) {\n      this.contentCommitted(updatedContent.content as string, false);\n      return;\n    }\n\n    await Common.Revealer.reveal(this);\n\n    // Make sure we are in the next frame before stopping the world with confirm\n    await new Promise(resolve => window.setTimeout(resolve, 0));\n\n    const shouldUpdate = window.confirm(i18nString(UIStrings.thisFileWasChangedExternally));\n    if (shouldUpdate) {\n      this.contentCommitted(updatedContent.content as string, false);\n    } else {\n      this.lastAcceptedContent = updatedContent.content;\n    }\n  }\n\n  forceLoadOnCheckContent(): void {\n    this.forceLoadOnCheckContentInternal = true;\n  }\n\n  private commitContent(content: string): void {\n    if (this.projectInternal.canSetFileContent()) {\n      void this.projectInternal.setFileContent(this, content, false);\n    }\n    this.contentCommitted(content, true);\n  }\n\n  private contentCommitted(content: string, committedByUser: boolean): void {\n    this.lastAcceptedContent = null;\n    this.contentInternal = {content, isEncoded: false};\n    this.contentLoadedInternal = true;\n    this.requestContentPromise = null;\n\n    this.hasCommitsInternal = true;\n\n    this.innerResetWorkingCopy();\n    const data = {uiSourceCode: this, content, encoded: this.contentEncodedInternal};\n    this.dispatchEventToListeners(Events.WorkingCopyCommitted, data);\n    this.projectInternal.workspace().dispatchEventToListeners(WorkspaceImplEvents.WorkingCopyCommitted, data);\n    if (committedByUser) {\n      this.projectInternal.workspace().dispatchEventToListeners(WorkspaceImplEvents.WorkingCopyCommittedByUser, data);\n    }\n  }\n\n  addRevision(content: string): void {\n    this.commitContent(content);\n  }\n\n  hasCommits(): boolean {\n    return this.hasCommitsInternal;\n  }\n\n  workingCopy(): string {\n    if (this.workingCopyGetter) {\n      this.workingCopyInternal = this.workingCopyGetter();\n      this.workingCopyGetter = null;\n    }\n    if (this.isDirty()) {\n      return this.workingCopyInternal as string;\n    }\n    return this.contentInternal?.content || '';\n  }\n\n  resetWorkingCopy(): void {\n    this.innerResetWorkingCopy();\n    this.workingCopyChanged();\n  }\n\n  private innerResetWorkingCopy(): void {\n    this.workingCopyInternal = null;\n    this.workingCopyGetter = null;\n  }\n\n  setWorkingCopy(newWorkingCopy: string): void {\n    this.workingCopyInternal = newWorkingCopy;\n    this.workingCopyGetter = null;\n    this.workingCopyChanged();\n  }\n\n  setContent(content: string, isBase64: boolean): void {\n    this.contentEncodedInternal = isBase64;\n    if (this.projectInternal.canSetFileContent()) {\n      void this.projectInternal.setFileContent(this, content, isBase64);\n    }\n    this.contentCommitted(content, true);\n  }\n\n  setWorkingCopyGetter(workingCopyGetter: () => string): void {\n    this.workingCopyGetter = workingCopyGetter;\n    this.workingCopyChanged();\n  }\n\n  private workingCopyChanged(): void {\n    this.removeAllMessages();\n    this.dispatchEventToListeners(Events.WorkingCopyChanged, this);\n    this.projectInternal.workspace().dispatchEventToListeners(\n        WorkspaceImplEvents.WorkingCopyChanged, {uiSourceCode: this});\n  }\n\n  removeWorkingCopyGetter(): void {\n    if (!this.workingCopyGetter) {\n      return;\n    }\n    this.workingCopyInternal = this.workingCopyGetter();\n    this.workingCopyGetter = null;\n  }\n\n  commitWorkingCopy(): void {\n    if (this.isDirty()) {\n      this.commitContent(this.workingCopy());\n    }\n  }\n\n  isDirty(): boolean {\n    return this.workingCopyInternal !== null || this.workingCopyGetter !== null;\n  }\n\n  extension(): string {\n    return Common.ParsedURL.ParsedURL.extractExtension(this.nameInternal);\n  }\n\n  content(): string {\n    return this.contentInternal?.content || '';\n  }\n\n  loadError(): string|null {\n    return (this.contentInternal && 'error' in this.contentInternal && this.contentInternal.error) || null;\n  }\n\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const content = this.content();\n    if (!content) {\n      return this.projectInternal.searchInFileContent(this, query, caseSensitive, isRegex);\n    }\n    return Promise.resolve(TextUtils.TextUtils.performSearchInContent(content, query, caseSensitive, isRegex));\n  }\n\n  contentLoaded(): boolean {\n    return this.contentLoadedInternal;\n  }\n\n  uiLocation(lineNumber: number, columnNumber?: number): UILocation {\n    return new UILocation(this, lineNumber, columnNumber);\n  }\n\n  messages(): Set<Message> {\n    return this.messagesInternal ? new Set(this.messagesInternal) : new Set();\n  }\n\n  addLineMessage(\n      level: Message.Level, text: string, lineNumber: number, columnNumber?: number,\n      clickHandler?: (() => void)): Message {\n    const range = TextUtils.TextRange.TextRange.createFromLocation(lineNumber, columnNumber || 0);\n    const message = new Message(level, text, clickHandler, range);\n    this.addMessage(message);\n    return message;\n  }\n\n  addMessage(message: Message): void {\n    if (!this.messagesInternal) {\n      this.messagesInternal = new Set();\n    }\n    this.messagesInternal.add(message);\n    this.dispatchEventToListeners(Events.MessageAdded, message);\n  }\n\n  removeMessage(message: Message): void {\n    if (this.messagesInternal?.delete(message)) {\n      this.dispatchEventToListeners(Events.MessageRemoved, message);\n    }\n  }\n\n  private removeAllMessages(): void {\n    if (!this.messagesInternal) {\n      return;\n    }\n    for (const message of this.messagesInternal) {\n      this.dispatchEventToListeners(Events.MessageRemoved, message);\n    }\n    this.messagesInternal = null;\n  }\n\n  setDecorationData(type: string, data: any): void {\n    if (data !== this.decorations.get(type)) {\n      this.decorations.set(type, data);\n      this.dispatchEventToListeners(Events.DecorationChanged, type);\n    }\n  }\n\n  getDecorationData(type: string): any {\n    return this.decorations.get(type);\n  }\n\n  disableEdit(): void {\n    this.disableEditInternal = true;\n  }\n\n  editDisabled(): boolean {\n    return this.disableEditInternal;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  WorkingCopyChanged = 'WorkingCopyChanged',\n  WorkingCopyCommitted = 'WorkingCopyCommitted',\n  TitleChanged = 'TitleChanged',\n  MessageAdded = 'MessageAdded',\n  MessageRemoved = 'MessageRemoved',\n  DecorationChanged = 'DecorationChanged',\n}\n\nexport interface WorkingCopyCommitedEvent {\n  uiSourceCode: UISourceCode;\n  content: string;\n  encoded: boolean|undefined;\n}\n\nexport type EventTypes = {\n  [Events.WorkingCopyChanged]: UISourceCode,\n  [Events.WorkingCopyCommitted]: WorkingCopyCommitedEvent,\n  [Events.TitleChanged]: UISourceCode,\n  [Events.MessageAdded]: Message,\n  [Events.MessageRemoved]: Message,\n  [Events.DecorationChanged]: string,\n};\n\nexport class UILocation {\n  uiSourceCode: UISourceCode;\n  lineNumber: number;\n  columnNumber: number|undefined;\n  constructor(uiSourceCode: UISourceCode, lineNumber: number, columnNumber?: number) {\n    this.uiSourceCode = uiSourceCode;\n    this.lineNumber = lineNumber;\n    this.columnNumber = columnNumber;\n  }\n\n  linkText(skipTrim?: boolean, showColumnNumber?: boolean): string {\n    let linkText = this.uiSourceCode.displayName(skipTrim);\n    if (this.uiSourceCode.mimeType() === 'application/wasm') {\n      // For WebAssembly locations, we follow the conventions described in\n      // github.com/WebAssembly/design/blob/master/Web.md#developer-facing-display-conventions\n      if (typeof this.columnNumber === 'number') {\n        linkText += `:0x${this.columnNumber.toString(16)}`;\n      }\n    } else {\n      linkText += ':' + (this.lineNumber + 1);\n      if (showColumnNumber && typeof this.columnNumber === 'number') {\n        linkText += ':' + (this.columnNumber + 1);\n      }\n    }\n    return linkText;\n  }\n\n  id(): string {\n    if (typeof this.columnNumber === 'number') {\n      return this.uiSourceCode.project().id() + ':' + this.uiSourceCode.url() + ':' + this.lineNumber + ':' +\n          this.columnNumber;\n    }\n    return this.lineId();\n  }\n\n  lineId(): string {\n    return this.uiSourceCode.project().id() + ':' + this.uiSourceCode.url() + ':' + this.lineNumber;\n  }\n\n  toUIString(): string {\n    return this.uiSourceCode.url() + ':' + (this.lineNumber + 1);\n  }\n\n  static comparator(location1: UILocation, location2: UILocation): number {\n    return location1.compareTo(location2);\n  }\n\n  compareTo(other: UILocation): number {\n    if (this.uiSourceCode.url() !== other.uiSourceCode.url()) {\n      return this.uiSourceCode.url() > other.uiSourceCode.url() ? 1 : -1;\n    }\n    if (this.lineNumber !== other.lineNumber) {\n      return this.lineNumber - other.lineNumber;\n    }\n    // We consider `undefined` less than an actual column number, since\n    // UI location without a column number corresponds to the whole line.\n    if (this.columnNumber === other.columnNumber) {\n      return 0;\n    }\n    if (typeof this.columnNumber !== 'number') {\n      return -1;\n    }\n    if (typeof other.columnNumber !== 'number') {\n      return 1;\n    }\n    return this.columnNumber - other.columnNumber;\n  }\n}\n\n/**\n * A message associated with a range in a `UISourceCode`. The range will be\n * underlined starting at the range's start and ending at the line end (the\n * end of the range is currently disregarded).\n * An icon is going to appear at the end of the line according to the\n * `level` of the Message. This is only the model; displaying is handled\n * where UISourceCode displaying is handled.\n */\nexport class Message {\n  private readonly levelInternal: Message.Level;\n  private readonly textInternal: string;\n  range: TextUtils.TextRange.TextRange;\n  private readonly clickHandlerInternal?: (() => void);\n\n  constructor(level: Message.Level, text: string, clickHandler?: (() => void), range?: TextUtils.TextRange.TextRange) {\n    this.levelInternal = level;\n    this.textInternal = text;\n    this.range = range ?? new TextUtils.TextRange.TextRange(0, 0, 0, 0);\n    this.clickHandlerInternal = clickHandler;\n  }\n\n  level(): Message.Level {\n    return this.levelInternal;\n  }\n\n  text(): string {\n    return this.textInternal;\n  }\n\n  clickHandler(): (() => void)|undefined {\n    return this.clickHandlerInternal;\n  }\n\n  lineNumber(): number {\n    return this.range.startLine;\n  }\n\n  columnNumber(): number|undefined {\n    return this.range.startColumn;\n  }\n\n  isEqual(another: Message): boolean {\n    return this.text() === another.text() && this.level() === another.level() && this.range.equal(another.range);\n  }\n}\n\nexport namespace Message {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum Level {\n    Error = 'Error',\n    Issue = 'Issue',\n    Warning = 'Warning',\n  }\n}\n\nexport class LineMarker {\n  private readonly rangeInternal: TextUtils.TextRange.TextRange;\n  private readonly typeInternal: string;\n  private readonly dataInternal: any;\n\n  constructor(range: TextUtils.TextRange.TextRange, type: string, data: any) {\n    this.rangeInternal = range;\n    this.typeInternal = type;\n    this.dataInternal = data;\n  }\n\n  range(): TextUtils.TextRange.TextRange {\n    return this.rangeInternal;\n  }\n\n  type(): string {\n    return this.typeInternal;\n  }\n\n  data(): any {\n    return this.dataInternal;\n  }\n}\n\nexport class UISourceCodeMetadata {\n  modificationTime: Date|null;\n  contentSize: number|null;\n\n  constructor(modificationTime: Date|null, contentSize: number|null) {\n    this.modificationTime = modificationTime;\n    this.contentSize = contentSize;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
