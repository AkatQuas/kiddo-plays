{
  "version": 3,
  "sources": ["../../../../../../front_end/models/timeline_model/TimelineProfileTree.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {TimelineJSProfileProcessor} from './TimelineJSProfile.js';\nimport {RecordType, TimelineData, TimelineModelImpl} from './TimelineModel.js';\nimport type {TimelineModelFilter} from './TimelineModelFilter.js';\n\nexport class Node {\n  totalTime: number;\n  selfTime: number;\n  id: string|symbol;\n  event: SDK.TracingModel.Event|null;\n  parent!: Node|null;\n  groupId: string;\n  isGroupNodeInternal: boolean;\n  depth: number;\n\n  constructor(id: string|symbol, event: SDK.TracingModel.Event|null) {\n    this.totalTime = 0;\n    this.selfTime = 0;\n    this.id = id;\n    this.event = event;\n\n    this.groupId = '';\n    this.isGroupNodeInternal = false;\n    this.depth = 0;\n  }\n\n  isGroupNode(): boolean {\n    return this.isGroupNodeInternal;\n  }\n\n  hasChildren(): boolean {\n    throw 'Not implemented';\n  }\n\n  setHasChildren(_value: boolean): void {\n    throw 'Not implemented';\n  }\n\n  children(): ChildrenCache {\n    throw 'Not implemented';\n  }\n\n  searchTree(matchFunction: (arg0: SDK.TracingModel.Event) => boolean, results?: Node[]): Node[] {\n    results = results || [];\n    if (this.event && matchFunction(this.event)) {\n      results.push(this);\n    }\n    for (const child of this.children().values()) {\n      child.searchTree(matchFunction, results);\n    }\n    return results;\n  }\n}\n\nexport class TopDownNode extends Node {\n  root: TopDownRootNode|null;\n  private hasChildrenInternal: boolean;\n  childrenInternal: ChildrenCache|null;\n  parent: TopDownNode|null;\n\n  constructor(id: string|symbol, event: SDK.TracingModel.Event|null, parent: TopDownNode|null) {\n    super(id, event);\n    this.root = parent && parent.root;\n    this.hasChildrenInternal = false;\n    this.childrenInternal = null;\n    this.parent = parent;\n  }\n\n  hasChildren(): boolean {\n    return this.hasChildrenInternal;\n  }\n\n  setHasChildren(value: boolean): void {\n    this.hasChildrenInternal = value;\n  }\n\n  children(): ChildrenCache {\n    return this.childrenInternal || this.buildChildren();\n  }\n\n  private buildChildren(): ChildrenCache {\n    const path: TopDownNode[] = [];\n    for (let node: TopDownNode = (this as TopDownNode); node.parent && !node.isGroupNode(); node = node.parent) {\n      path.push((node as TopDownNode));\n    }\n    path.reverse();\n    const children: ChildrenCache = new Map();\n    const self = this;\n    const root = this.root;\n    if (!root) {\n      this.childrenInternal = children;\n      return this.childrenInternal;\n    }\n    const startTime = root.startTime;\n    const endTime = root.endTime;\n    const instantEventCallback = root.doNotAggregate ? onInstantEvent : undefined;\n    const eventIdCallback = root.doNotAggregate ? undefined : _eventId;\n    const eventGroupIdCallback = root.getEventGroupIdCallback();\n    let depth = 0;\n    let matchedDepth = 0;\n    let currentDirectChild: Node|null = null;\n    TimelineModelImpl.forEachEvent(\n        root.events, onStartEvent, onEndEvent, instantEventCallback, startTime, endTime, root.filter);\n\n    function onStartEvent(e: SDK.TracingModel.Event): void {\n      ++depth;\n      if (depth > path.length + 2) {\n        return;\n      }\n      if (!matchPath(e)) {\n        return;\n      }\n      const actualEndTime = e.endTime !== undefined ? Math.min(e.endTime, endTime) : endTime;\n      const duration = actualEndTime - Math.max(startTime, e.startTime);\n      if (duration < 0) {\n        console.error('Negative event duration');\n      }\n      processEvent(e, duration);\n    }\n\n    function onInstantEvent(e: SDK.TracingModel.Event): void {\n      ++depth;\n      if (matchedDepth === path.length && depth <= path.length + 2) {\n        processEvent(e, 0);\n      }\n      --depth;\n    }\n\n    function processEvent(e: SDK.TracingModel.Event, duration: number): void {\n      if (depth === path.length + 2) {\n        if (!currentDirectChild) {\n          return;\n        }\n        currentDirectChild.setHasChildren(true);\n        currentDirectChild.selfTime -= duration;\n        return;\n      }\n      let id;\n      let groupId = '';\n      if (!eventIdCallback) {\n        id = Symbol('uniqueId');\n      } else {\n        id = eventIdCallback(e);\n        groupId = eventGroupIdCallback ? eventGroupIdCallback(e) : '';\n        if (groupId) {\n          id += '/' + groupId;\n        }\n      }\n      let node = children.get(id);\n      if (!node) {\n        node = new TopDownNode(id, e, self);\n        node.groupId = groupId;\n        children.set(id, node);\n      }\n      node.selfTime += duration;\n      node.totalTime += duration;\n      currentDirectChild = node;\n    }\n\n    function matchPath(e: SDK.TracingModel.Event): boolean {\n      if (matchedDepth === path.length) {\n        return true;\n      }\n      if (matchedDepth !== depth - 1) {\n        return false;\n      }\n      if (!e.endTime) {\n        return false;\n      }\n      if (!eventIdCallback) {\n        if (e === path[matchedDepth].event) {\n          ++matchedDepth;\n        }\n        return false;\n      }\n      let id = eventIdCallback(e);\n      const groupId = eventGroupIdCallback ? eventGroupIdCallback(e) : '';\n      if (groupId) {\n        id += '/' + groupId;\n      }\n      if (id === path[matchedDepth].id) {\n        ++matchedDepth;\n      }\n      return false;\n    }\n\n    function onEndEvent(_e: SDK.TracingModel.Event): void {\n      --depth;\n      if (matchedDepth > depth) {\n        matchedDepth = depth;\n      }\n    }\n\n    this.childrenInternal = children;\n    return children;\n  }\n\n  getRoot(): TopDownRootNode|null {\n    return this.root;\n  }\n}\n\nexport class TopDownRootNode extends TopDownNode {\n  readonly events: SDK.TracingModel.Event[];\n  readonly filter: (e: SDK.TracingModel.Event) => boolean;\n  readonly startTime: number;\n  readonly endTime: number;\n  eventGroupIdCallback: ((arg0: SDK.TracingModel.Event) => string)|null|undefined;\n  readonly doNotAggregate: boolean|undefined;\n  totalTime: number;\n  selfTime: number;\n\n  constructor(\n      events: SDK.TracingModel.Event[], filters: TimelineModelFilter[], startTime: number, endTime: number,\n      doNotAggregate?: boolean, eventGroupIdCallback?: ((arg0: SDK.TracingModel.Event) => string)|null) {\n    super('', null, null);\n    this.root = this;\n    this.events = events;\n    this.filter = (e: SDK.TracingModel.Event): boolean => filters.every(f => f.accept(e));\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.eventGroupIdCallback = eventGroupIdCallback;\n    this.doNotAggregate = doNotAggregate;\n    this.totalTime = endTime - startTime;\n    this.selfTime = this.totalTime;\n  }\n\n  children(): ChildrenCache {\n    return this.childrenInternal || this.grouppedTopNodes();\n  }\n\n  private grouppedTopNodes(): ChildrenCache {\n    const flatNodes = super.children();\n    for (const node of flatNodes.values()) {\n      this.selfTime -= node.totalTime;\n    }\n    if (!this.eventGroupIdCallback) {\n      return flatNodes;\n    }\n    const groupNodes = new Map<string, GroupNode>();\n    for (const node of flatNodes.values()) {\n      const groupId = this.eventGroupIdCallback((node.event as SDK.TracingModel.Event));\n      let groupNode = groupNodes.get(groupId);\n      if (!groupNode) {\n        groupNode = new GroupNode(groupId, this, (node.event as SDK.TracingModel.Event));\n        groupNodes.set(groupId, groupNode);\n      }\n      groupNode.addChild(node as BottomUpNode, node.selfTime, node.totalTime);\n    }\n    this.childrenInternal = groupNodes;\n    return groupNodes;\n  }\n\n  getEventGroupIdCallback(): ((arg0: SDK.TracingModel.Event) => string)|null|undefined {\n    return this.eventGroupIdCallback;\n  }\n}\n\nexport class BottomUpRootNode extends Node {\n  private childrenInternal: ChildrenCache|null;\n  readonly events: SDK.TracingModel.Event[];\n  private textFilter: TimelineModelFilter;\n  readonly filter: (e: SDK.TracingModel.Event) => boolean;\n  readonly startTime: number;\n  readonly endTime: number;\n  private eventGroupIdCallback: ((arg0: SDK.TracingModel.Event) => string)|null;\n  totalTime: number;\n\n  constructor(\n      events: SDK.TracingModel.Event[], textFilter: TimelineModelFilter, filters: TimelineModelFilter[],\n      startTime: number, endTime: number, eventGroupIdCallback: ((arg0: SDK.TracingModel.Event) => string)|null) {\n    super('', null);\n    this.childrenInternal = null;\n    this.events = events;\n    this.textFilter = textFilter;\n    this.filter = (e: SDK.TracingModel.Event): boolean => filters.every(f => f.accept(e));\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.eventGroupIdCallback = eventGroupIdCallback;\n    this.totalTime = endTime - startTime;\n  }\n\n  hasChildren(): boolean {\n    return true;\n  }\n\n  filterChildren(children: ChildrenCache): ChildrenCache {\n    for (const [id, child] of children) {\n      if (child.event && !this.textFilter.accept(child.event)) {\n        children.delete((id as string | symbol));\n      }\n    }\n    return children;\n  }\n\n  children(): ChildrenCache {\n    if (!this.childrenInternal) {\n      this.childrenInternal = this.filterChildren(this.grouppedTopNodes());\n    }\n    return this.childrenInternal;\n  }\n\n  private ungrouppedTopNodes(): ChildrenCache {\n    const root = this;\n    const startTime = this.startTime;\n    const endTime = this.endTime;\n    const nodeById = new Map<string, Node>();\n    const selfTimeStack: number[] = [endTime - startTime];\n    const firstNodeStack: boolean[] = [];\n    const totalTimeById = new Map<string, number>();\n    TimelineModelImpl.forEachEvent(this.events, onStartEvent, onEndEvent, undefined, startTime, endTime, this.filter);\n\n    function onStartEvent(e: SDK.TracingModel.Event): void {\n      const actualEndTime = e.endTime !== undefined ? Math.min(e.endTime, endTime) : endTime;\n      const duration = actualEndTime - Math.max(e.startTime, startTime);\n      selfTimeStack[selfTimeStack.length - 1] -= duration;\n      selfTimeStack.push(duration);\n      const id = _eventId(e);\n      const noNodeOnStack = !totalTimeById.has(id);\n      if (noNodeOnStack) {\n        totalTimeById.set(id, duration);\n      }\n      firstNodeStack.push(noNodeOnStack);\n    }\n\n    function onEndEvent(e: SDK.TracingModel.Event): void {\n      const id = _eventId(e);\n      let node = nodeById.get(id);\n      if (!node) {\n        node = new BottomUpNode(root, id, e, false, root);\n        nodeById.set(id, node);\n      }\n      node.selfTime += selfTimeStack.pop() || 0;\n      if (firstNodeStack.pop()) {\n        node.totalTime += totalTimeById.get(id) || 0;\n        totalTimeById.delete(id);\n      }\n      if (firstNodeStack.length) {\n        node.setHasChildren(true);\n      }\n    }\n\n    this.selfTime = selfTimeStack.pop() || 0;\n    for (const pair of nodeById) {\n      if (pair[1].selfTime <= 0) {\n        nodeById.delete((pair[0] as string));\n      }\n    }\n    return nodeById;\n  }\n\n  private grouppedTopNodes(): ChildrenCache {\n    const flatNodes = this.ungrouppedTopNodes();\n    if (!this.eventGroupIdCallback) {\n      return flatNodes;\n    }\n    const groupNodes = new Map<string, GroupNode>();\n    for (const node of flatNodes.values()) {\n      const groupId = this.eventGroupIdCallback((node.event as SDK.TracingModel.Event));\n      let groupNode = groupNodes.get(groupId);\n      if (!groupNode) {\n        groupNode = new GroupNode(groupId, this, (node.event as SDK.TracingModel.Event));\n        groupNodes.set(groupId, groupNode);\n      }\n      groupNode.addChild(node as BottomUpNode, node.selfTime, node.selfTime);\n    }\n    return groupNodes;\n  }\n}\n\nexport class GroupNode extends Node {\n  private readonly childrenInternal: ChildrenCache;\n  isGroupNodeInternal: boolean;\n\n  constructor(id: string, parent: BottomUpRootNode|TopDownRootNode, event: SDK.TracingModel.Event) {\n    super(id, event);\n    this.childrenInternal = new Map();\n    this.parent = parent;\n    this.isGroupNodeInternal = true;\n  }\n\n  addChild(child: BottomUpNode, selfTime: number, totalTime: number): void {\n    this.childrenInternal.set(child.id, child);\n    this.selfTime += selfTime;\n    this.totalTime += totalTime;\n    child.parent = this;\n  }\n\n  hasChildren(): boolean {\n    return true;\n  }\n\n  children(): ChildrenCache {\n    return this.childrenInternal;\n  }\n}\n\nexport class BottomUpNode extends Node {\n  parent: Node;\n  private root: BottomUpRootNode;\n  depth: number;\n  private cachedChildren: ChildrenCache|null;\n  private hasChildrenInternal: boolean;\n\n  constructor(root: BottomUpRootNode, id: string, event: SDK.TracingModel.Event, hasChildren: boolean, parent: Node) {\n    super(id, event);\n    this.parent = parent;\n    this.root = root;\n    this.depth = (parent.depth || 0) + 1;\n    this.cachedChildren = null;\n    this.hasChildrenInternal = hasChildren;\n  }\n\n  hasChildren(): boolean {\n    return this.hasChildrenInternal;\n  }\n\n  setHasChildren(value: boolean): void {\n    this.hasChildrenInternal = value;\n  }\n\n  children(): ChildrenCache {\n    if (this.cachedChildren) {\n      return this.cachedChildren;\n    }\n    const selfTimeStack: number[] = [0];\n    const eventIdStack: string[] = [];\n    const eventStack: SDK.TracingModel.Event[] = [];\n    const nodeById = new Map<string, BottomUpNode>();\n    const startTime = this.root.startTime;\n    const endTime = this.root.endTime;\n    let lastTimeMarker: number = startTime;\n    const self = this;\n    TimelineModelImpl.forEachEvent(\n        this.root.events, onStartEvent, onEndEvent, undefined, startTime, endTime, this.root.filter);\n\n    function onStartEvent(e: SDK.TracingModel.Event): void {\n      const actualEndTime = e.endTime !== undefined ? Math.min(e.endTime, endTime) : endTime;\n      const duration = actualEndTime - Math.max(e.startTime, startTime);\n      if (duration < 0) {\n        console.assert(false, 'Negative duration of an event');\n      }\n      selfTimeStack[selfTimeStack.length - 1] -= duration;\n      selfTimeStack.push(duration);\n      const id = _eventId(e);\n      eventIdStack.push(id);\n      eventStack.push(e);\n    }\n\n    function onEndEvent(e: SDK.TracingModel.Event): void {\n      const selfTime = selfTimeStack.pop();\n      const id = eventIdStack.pop();\n      eventStack.pop();\n      let node;\n      for (node = self; node.depth > 1; node = node.parent) {\n        if (node.id !== eventIdStack[eventIdStack.length + 1 - node.depth]) {\n          return;\n        }\n      }\n      if (node.id !== id || eventIdStack.length < self.depth) {\n        return;\n      }\n      const childId = eventIdStack[eventIdStack.length - self.depth];\n      node = nodeById.get(childId);\n      if (!node) {\n        const event = eventStack[eventStack.length - self.depth];\n        const hasChildren = eventStack.length > self.depth;\n        node = new BottomUpNode(self.root, childId, event, hasChildren, self);\n        nodeById.set(childId, node);\n      }\n      const actualEndTime = e.endTime !== undefined ? Math.min(e.endTime, endTime) : endTime;\n      const totalTime = actualEndTime - Math.max(e.startTime, lastTimeMarker);\n      node.selfTime += selfTime || 0;\n      node.totalTime += totalTime;\n      lastTimeMarker = actualEndTime;\n    }\n\n    this.cachedChildren = this.root.filterChildren(nodeById);\n    return this.cachedChildren;\n  }\n\n  searchTree(matchFunction: (arg0: SDK.TracingModel.Event) => boolean, results?: Node[]): Node[] {\n    results = results || [];\n    if (this.event && matchFunction(this.event)) {\n      results.push(this);\n    }\n    return results;\n  }\n}\n\nexport function eventURL(event: SDK.TracingModel.Event): Platform.DevToolsPath.UrlString|null {\n  const data = event.args['data'] || event.args['beginData'];\n  if (data && data['url']) {\n    return data['url'];\n  }\n  let frame = eventStackFrame(event);\n  while (frame) {\n    const url = frame['url'] as Platform.DevToolsPath.UrlString;\n    if (url) {\n      return url;\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    frame = ((frame as any).parent);\n  }\n  return null;\n}\n\nexport function eventStackFrame(event: SDK.TracingModel.Event): Protocol.Runtime.CallFrame|null {\n  if (event.name === RecordType.JSFrame) {\n    return event.args['data'] || null as Protocol.Runtime.CallFrame | null;\n  }\n  return TimelineData.forEvent(event).topFrame();\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function _eventId(event: SDK.TracingModel.Event): string {\n  if (event.name === RecordType.TimeStamp) {\n    return `${event.name}:${event.args.data.message}`;\n  }\n  if (event.name !== RecordType.JSFrame) {\n    return event.name;\n  }\n  const frame = event.args['data'];\n  const location = frame['scriptId'] || frame['url'] || '';\n  const functionName = frame['functionName'];\n  const name = TimelineJSProfileProcessor.isNativeRuntimeFrame(frame) ?\n      TimelineJSProfileProcessor.nativeGroup(functionName) || functionName :\n      `${functionName}:${frame['lineNumber']}:${frame['columnNumber']}`;\n  return `f:${name}@${location}`;\n}\n\nexport type ChildrenCache = Map<string|symbol, Node>;\n"],
  "mappings": "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",
  "names": []
}
