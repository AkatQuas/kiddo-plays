{
  "version": 3,
  "sources": ["../../../../../../front_end/models/timeline_model/TimelineModelFilter.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nimport {RecordType, TimelineModelImpl} from './TimelineModel.js';\n\nexport class TimelineModelFilter {\n  accept(_event: SDK.TracingModel.Event): boolean {\n    return true;\n  }\n}\n\nexport class TimelineVisibleEventsFilter extends TimelineModelFilter {\n  private readonly visibleTypes: Set<string>;\n  constructor(visibleTypes: string[]) {\n    super();\n    this.visibleTypes = new Set(visibleTypes);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return this.visibleTypes.has(TimelineVisibleEventsFilter.eventType(event));\n  }\n\n  static eventType(event: SDK.TracingModel.Event): RecordType {\n    if (event.hasCategory(TimelineModelImpl.Category.Console)) {\n      return RecordType.ConsoleTime;\n    }\n    if (event.hasCategory(TimelineModelImpl.Category.UserTiming)) {\n      return RecordType.UserTiming;\n    }\n    if (event.hasCategory(TimelineModelImpl.Category.LatencyInfo)) {\n      return RecordType.LatencyInfo;\n    }\n    return event.name as RecordType;\n  }\n}\n\nexport class TimelineInvisibleEventsFilter extends TimelineModelFilter {\n  private invisibleTypes: Set<string>;\n  constructor(invisibleTypes: string[]) {\n    super();\n    this.invisibleTypes = new Set(invisibleTypes);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return !this.invisibleTypes.has(TimelineVisibleEventsFilter.eventType(event));\n  }\n}\n\nexport class ExclusiveNameFilter extends TimelineModelFilter {\n  private excludeNames: Set<string>;\n  constructor(excludeNames: string[]) {\n    super();\n    this.excludeNames = new Set(excludeNames);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return !this.excludeNames.has(event.name);\n  }\n}\n"],
  "mappings": "AAMA;AAEO,iCAA0B;AAAA,EAC/B,OAAO,QAAyC;AAC9C,WAAO;AAAA;AAAA;AAIJ,iDAA0C,oBAAoB;AAAA,EAClD;AAAA,EACjB,YAAY,cAAwB;AAClC;AACA,SAAK,eAAe,IAAI,IAAI;AAAA;AAAA,EAG9B,OAAO,OAAwC;AAC7C,WAAO,KAAK,aAAa,IAAI,4BAA4B,UAAU;AAAA;AAAA,SAG9D,UAAU,OAA2C;AAC1D,QAAI,MAAM,YAAY,kBAAkB,SAAS,UAAU;AACzD,aAAO,WAAW;AAAA;AAEpB,QAAI,MAAM,YAAY,kBAAkB,SAAS,aAAa;AAC5D,aAAO,WAAW;AAAA;AAEpB,QAAI,MAAM,YAAY,kBAAkB,SAAS,cAAc;AAC7D,aAAO,WAAW;AAAA;AAEpB,WAAO,MAAM;AAAA;AAAA;AAIV,mDAA4C,oBAAoB;AAAA,EAC7D;AAAA,EACR,YAAY,gBAA0B;AACpC;AACA,SAAK,iBAAiB,IAAI,IAAI;AAAA;AAAA,EAGhC,OAAO,OAAwC;AAC7C,WAAO,CAAC,KAAK,eAAe,IAAI,4BAA4B,UAAU;AAAA;AAAA;AAInE,yCAAkC,oBAAoB;AAAA,EACnD;AAAA,EACR,YAAY,cAAwB;AAClC;AACA,SAAK,eAAe,IAAI,IAAI;AAAA;AAAA,EAG9B,OAAO,OAAwC;AAC7C,WAAO,CAAC,KAAK,aAAa,IAAI,MAAM;AAAA;AAAA;",
  "names": []
}
