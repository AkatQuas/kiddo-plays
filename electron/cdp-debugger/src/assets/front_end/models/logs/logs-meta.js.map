{
  "version": 3,
  "sources": ["../../../../../../front_end/models/logs/logs-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nconst UIStrings = {\n  /**\n *@description Text to preserve the log after refreshing\n */\n  preserveLog: 'Preserve log',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  preserve: 'preserve',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  clear: 'clear',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  reset: 'reset',\n  /**\n *@description Title of a setting under the Network category that can be invoked through the Command Menu\n */\n  preserveLogOnPageReload: 'Preserve log on page reload / navigation',\n  /**\n *@description Title of a setting under the Network category that can be invoked through the Command Menu\n */\n  doNotPreserveLogOnPageReload: 'Do not preserve log on page reload / navigation',\n  /**\n *@description Title of an action in the network tool to toggle recording\n */\n  recordNetworkLog: 'Record network log',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/logs/logs-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  title: i18nLazyString(UIStrings.preserveLog),\n  settingName: 'network_log.preserve-log',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.preserve),\n    i18nLazyString(UIStrings.clear),\n    i18nLazyString(UIStrings.reset),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.preserveLogOnPageReload),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.doNotPreserveLogOnPageReload),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  title: i18nLazyString(UIStrings.recordNetworkLog),\n  settingName: 'network_log.record-log',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: true,\n  storageType: Common.Settings.SettingStorageType.Session,\n});\n"],
  "mappings": "AAIA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,aAAa;AAAA,EAMb,UAAU;AAAA,EAMV,OAAO;AAAA,EAMP,OAAO;AAAA,EAIP,yBAAyB;AAAA,EAIzB,8BAA8B;AAAA,EAI9B,kBAAkB;AAAA;AAEpB,MAAM,OAAO,KAAK,KAAK,kBAAkB,4BAA4B;AACrE,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,OAAO,SAAS,yBAAyB;AAAA,EACvC,UAAU,OAAO,SAAS,gBAAgB;AAAA,EAC1C,OAAO,eAAe,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,aAAa,OAAO,SAAS,YAAY;AAAA,EACzC,cAAc;AAAA,EACd,MAAM;AAAA,IACJ,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA;AAAA,EAE3B,SAAS;AAAA,IACP;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA,IAElC;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA;AAAA;AAKtC,OAAO,SAAS,yBAAyB;AAAA,EACvC,UAAU,OAAO,SAAS,gBAAgB;AAAA,EAC1C,OAAO,eAAe,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,aAAa,OAAO,SAAS,YAAY;AAAA,EACzC,cAAc;AAAA,EACd,aAAa,OAAO,SAAS,mBAAmB;AAAA;",
  "names": []
}
