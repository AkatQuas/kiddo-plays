{
  "version": 3,
  "sources": ["../../../../../../front_end/models/persistence/persistence-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type * as Persistence from './persistence.js';\n\nconst UIStrings = {\n  /**\n  *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  workspace: 'Workspace',\n  /**\n  *@description Command for showing the Workspace tool in Settings\n  */\n  showWorkspace: 'Show Workspace',\n  /**\n  *@description Title of a setting under the Persistence category in Settings\n  */\n  enableLocalOverrides: 'Enable Local Overrides',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  interception: 'interception',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  override: 'override',\n  /**\n   *@description A tag of Group Network by frame setting that can be searched in the command menu\n  */\n  network: 'network',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  rewrite: 'rewrite',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu.\n   *Noun for network request.\n  */\n  request: 'request',\n  /**\n   *@description Title of a setting under the Persistence category that can be invoked through the Command Menu\n  */\n  enableOverrideNetworkRequests: 'Enable override network requests',\n  /**\n   *@description Title of a setting under the Persistence category that can be invoked through the Command Menu\n  */\n  disableOverrideNetworkRequests: 'Disable override network requests',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/persistence-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPersistenceModule: (typeof Persistence|undefined);\n\nasync function loadPersistenceModule(): Promise<typeof Persistence> {\n  if (!loadedPersistenceModule) {\n    loadedPersistenceModule = await import('./persistence.js');\n  }\n  return loadedPersistenceModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'workspace',\n  title: i18nLazyString(UIStrings.workspace),\n  commandPrompt: i18nLazyString(UIStrings.showWorkspace),\n  order: 1,\n  async loadView() {\n    const Persistence = await loadPersistenceModule();\n    return Persistence.WorkspaceSettingsTab.WorkspaceSettingsTab.instance();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERSISTENCE,\n  title: i18nLazyString(UIStrings.enableLocalOverrides),\n  settingName: 'persistenceNetworkOverridesEnabled',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.interception),\n    i18nLazyString(UIStrings.override),\n    i18nLazyString(UIStrings.network),\n    i18nLazyString(UIStrings.rewrite),\n    i18nLazyString(UIStrings.request),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.enableOverrideNetworkRequests),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.disableOverrideNetworkRequests),\n    },\n  ],\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      Workspace.UISourceCode.UISourceCode,\n      SDK.Resource.Resource,\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Persistence = await loadPersistenceModule();\n    return Persistence.PersistenceActions.ContextMenuProvider.instance();\n  },\n  experiment: undefined,\n});\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,WAAW;AAAA,EAIX,eAAe;AAAA,EAIf,sBAAsB;AAAA,EAItB,cAAc;AAAA,EAId,UAAU;AAAA,EAIV,SAAS;AAAA,EAIT,SAAS;AAAA,EAKT,SAAS;AAAA,EAIT,+BAA+B;AAAA,EAI/B,gCAAgC;AAAA;AAElC,MAAM,OAAO,KAAK,KAAK,kBAAkB,0CAA0C;AACnF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,uCAAoE;AAClE,MAAI,CAAC,yBAAyB;AAC5B,8BAA0B,MAAM,OAAO;AAAA;AAEzC,SAAO;AAAA;AAGT,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,QACD,WAAW;AACf,UAAM,cAAc,MAAM;AAC1B,WAAO,YAAY,qBAAqB,qBAAqB;AAAA;AAAA;AAIjE,OAAO,SAAS,yBAAyB;AAAA,EACvC,UAAU,OAAO,SAAS,gBAAgB;AAAA,EAC1C,OAAO,eAAe,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,aAAa,OAAO,SAAS,YAAY;AAAA,EACzC,cAAc;AAAA,EACd,MAAM;AAAA,IACJ,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA,IACzB,eAAe,UAAU;AAAA;AAAA,EAE3B,SAAS;AAAA,IACP;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA,IAElC;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA;AAAA;AAKtC,GAAG,YAAY,iBAAiB;AAAA,EAC9B,eAAe;AACb,WAAO;AAAA,MACL,UAAU,aAAa;AAAA,MACvB,IAAI,SAAS;AAAA,MACb,IAAI,eAAe;AAAA;AAAA;AAAA,QAGjB,eAAe;AACnB,UAAM,cAAc,MAAM;AAC1B,WAAO,YAAY,mBAAmB,oBAAoB;AAAA;AAAA,EAE5D,YAAY;AAAA;",
  "names": []
}
