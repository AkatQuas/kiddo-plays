{
  "version": 3,
  "sources": ["../../../../../../front_end/models/persistence/WorkspaceSettingsTab.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {EditFileSystemView} from './EditFileSystemView.js';\nimport workspaceSettingsTabStyles from './workspaceSettingsTab.css.js';\n\nimport type {FileSystem} from './FileSystemWorkspaceBinding.js';\nimport {IsolatedFileSystem} from './IsolatedFileSystem.js';\nimport {Events, IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {NetworkPersistenceManager} from './NetworkPersistenceManager.js';\nimport type {PlatformFileSystem} from './PlatformFileSystem.js';\n\nconst UIStrings = {\n  /**\n  *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  workspace: 'Workspace',\n  /**\n  *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  mappingsAreInferredAutomatically: 'Mappings are inferred automatically.',\n  /**\n  *@description Text of the add button in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  addFolder: 'Add folder\u2026',\n  /**\n  *@description Label element text content in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  folderExcludePattern: 'Folder exclude pattern',\n  /**\n  *@description Label for an item to remove something\n  */\n  remove: 'Remove',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/WorkspaceSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet workspaceSettingsTabInstance: WorkspaceSettingsTab;\n\nexport class WorkspaceSettingsTab extends UI.Widget.VBox {\n  containerElement: HTMLElement;\n  private readonly fileSystemsListContainer: HTMLElement;\n  private readonly elementByPath: Map<Platform.DevToolsPath.UrlString, Element>;\n  private readonly mappingViewByPath: Map<Platform.DevToolsPath.UrlString, EditFileSystemView>;\n  private constructor() {\n    super();\n\n    this.element.classList.add('workspace-settings-tab');\n    const header = this.element.createChild('header');\n    UI.UIUtils.createTextChild(header.createChild('h1'), i18nString(UIStrings.workspace));\n\n    this.containerElement = this.element.createChild('div', 'settings-container-wrapper')\n                                .createChild('div', 'settings-tab settings-content settings-container');\n\n    IsolatedFileSystemManager.instance().addEventListener(\n        Events.FileSystemAdded, event => this.fileSystemAdded(event.data), this);\n    IsolatedFileSystemManager.instance().addEventListener(\n        Events.FileSystemRemoved, event => this.fileSystemRemoved(event.data), this);\n\n    const folderExcludePatternInput = this.createFolderExcludePatternInput();\n    folderExcludePatternInput.classList.add('folder-exclude-pattern');\n    this.containerElement.appendChild(folderExcludePatternInput);\n\n    const div = this.containerElement.createChild('div', 'settings-info-message');\n    UI.UIUtils.createTextChild(div, i18nString(UIStrings.mappingsAreInferredAutomatically));\n\n    this.fileSystemsListContainer = this.containerElement.createChild('div', '');\n\n    const addButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.addFolder), this.addFileSystemClicked.bind(this));\n    this.containerElement.appendChild(addButton);\n    this.setDefaultFocusedElement(addButton);\n\n    this.elementByPath = new Map();\n\n    this.mappingViewByPath = new Map();\n\n    const fileSystems = IsolatedFileSystemManager.instance().fileSystems();\n    for (let i = 0; i < fileSystems.length; ++i) {\n      this.addItem(fileSystems[i]);\n    }\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WorkspaceSettingsTab {\n    const {forceNew} = opts;\n    if (!workspaceSettingsTabInstance || forceNew) {\n      workspaceSettingsTabInstance = new WorkspaceSettingsTab();\n    }\n\n    return workspaceSettingsTabInstance;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([workspaceSettingsTabStyles]);\n  }\n\n  private createFolderExcludePatternInput(): Element {\n    const p = document.createElement('p');\n    const labelElement = p.createChild('label');\n    labelElement.textContent = i18nString(UIStrings.folderExcludePattern);\n    const inputElement = UI.UIUtils.createInput('', 'text');\n    UI.ARIAUtils.bindLabelToControl(labelElement, inputElement);\n    p.appendChild(inputElement);\n    const folderExcludeSetting = IsolatedFileSystemManager.instance().workspaceFolderExcludePatternSetting();\n    const setValue =\n        UI.UIUtils.bindInput(inputElement, folderExcludeSetting.set.bind(folderExcludeSetting), regexValidator, false);\n    folderExcludeSetting.addChangeListener(() => setValue.call(null, folderExcludeSetting.get()));\n    setValue(folderExcludeSetting.get());\n    return p;\n\n    function regexValidator(value: string): {valid: boolean, errorMessage: (string|undefined)} {\n      let regex;\n      try {\n        regex = new RegExp(value);\n      } catch (e) {\n      }\n      const valid = Boolean(regex);\n      return {valid, errorMessage: undefined};\n    }\n  }\n\n  private addItem(fileSystem: PlatformFileSystem): void {\n    // Support managing only instances of IsolatedFileSystem.\n    if (!(fileSystem instanceof IsolatedFileSystem)) {\n      return;\n    }\n    const networkPersistenceProject = NetworkPersistenceManager.instance().project();\n    if (networkPersistenceProject &&\n        IsolatedFileSystemManager.instance().fileSystem((networkPersistenceProject as FileSystem).fileSystemPath()) ===\n            fileSystem) {\n      return;\n    }\n    const element = this.renderFileSystem(fileSystem);\n    this.elementByPath.set(fileSystem.path(), element);\n\n    this.fileSystemsListContainer.appendChild(element);\n\n    const mappingView = new EditFileSystemView(fileSystem.path());\n    this.mappingViewByPath.set(fileSystem.path(), mappingView);\n    mappingView.element.classList.add('file-system-mapping-view');\n    mappingView.show(element);\n  }\n\n  private renderFileSystem(fileSystem: PlatformFileSystem): Element {\n    const fileSystemPath = fileSystem.path();\n    const lastIndexOfSlash = fileSystemPath.lastIndexOf('/');\n    const folderName = fileSystemPath.substr(lastIndexOfSlash + 1);\n\n    const element = document.createElement('div');\n    element.classList.add('file-system-container');\n    const header = element.createChild('div', 'file-system-header');\n\n    const nameElement = header.createChild('div', 'file-system-name');\n    nameElement.textContent = folderName;\n    UI.ARIAUtils.markAsHeading(nameElement, 2);\n    const path = header.createChild('div', 'file-system-path');\n    path.textContent = fileSystemPath;\n    UI.Tooltip.Tooltip.install(path, fileSystemPath);\n\n    const toolbar = new UI.Toolbar.Toolbar('');\n    const button = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.remove), 'largeicon-delete');\n    button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.removeFileSystemClicked.bind(this, fileSystem));\n    toolbar.appendToolbarItem(button);\n    header.appendChild(toolbar.element);\n\n    return element;\n  }\n\n  private removeFileSystemClicked(fileSystem: PlatformFileSystem): void {\n    IsolatedFileSystemManager.instance().removeFileSystem(fileSystem);\n  }\n\n  private addFileSystemClicked(): void {\n    void IsolatedFileSystemManager.instance().addFileSystem();\n  }\n\n  private fileSystemAdded(fileSystem: PlatformFileSystem): void {\n    this.addItem(fileSystem);\n  }\n\n  private fileSystemRemoved(fileSystem: PlatformFileSystem): void {\n    const mappingView = this.mappingViewByPath.get(fileSystem.path());\n    if (mappingView) {\n      mappingView.dispose();\n      this.mappingViewByPath.delete(fileSystem.path());\n    }\n\n    const element = this.elementByPath.get(fileSystem.path());\n    if (element) {\n      this.elementByPath.delete(fileSystem.path());\n      element.remove();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
