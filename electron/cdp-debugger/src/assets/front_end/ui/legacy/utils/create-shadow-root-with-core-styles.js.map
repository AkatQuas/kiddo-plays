{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/legacy/utils/create-shadow-root-with-core-styles.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ThemeSupport from '../theme_support/theme_support.js';\n\nimport {focusChanged} from './focus-changed.js';\nimport {injectCoreStyles} from './inject-core-styles.js';\n\ninterface Options {\n  cssFile?: CSSStyleSheet[]|{cssContent: string};\n  delegatesFocus?: boolean;\n}\n\nexport function createShadowRootWithCoreStyles(element: Element, options: Options = {\n  delegatesFocus: undefined,\n  cssFile: undefined,\n}): ShadowRoot {\n  const {\n    cssFile,\n    delegatesFocus,\n  } = options;\n\n  const shadowRoot = element.attachShadow({mode: 'open', delegatesFocus});\n  injectCoreStyles(shadowRoot);\n  if (cssFile) {\n    if ('cssContent' in cssFile) {\n      ThemeSupport.ThemeSupport.instance().appendStyle(shadowRoot, cssFile);\n    } else {\n      shadowRoot.adoptedStyleSheets = cssFile;\n    }\n  }\n  shadowRoot.addEventListener('focus', focusChanged, true);\n  return shadowRoot;\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AAOO,+CAAwC,SAAkB,UAAmB;AAAA,EAClF,gBAAgB;AAAA,EAChB,SAAS;AAAA,GACI;AACb,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,MACE;AAEJ,QAAM,aAAa,QAAQ,aAAa,EAAC,MAAM,QAAQ;AACvD,mBAAiB;AACjB,MAAI,SAAS;AACX,QAAI,gBAAgB,SAAS;AAC3B,mBAAa,aAAa,WAAW,YAAY,YAAY;AAAA,WACxD;AACL,iBAAW,qBAAqB;AAAA;AAAA;AAGpC,aAAW,iBAAiB,SAAS,cAAc;AACnD,SAAO;AAAA;",
  "names": []
}
