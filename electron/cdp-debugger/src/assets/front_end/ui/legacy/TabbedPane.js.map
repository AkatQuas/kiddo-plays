{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/TabbedPane.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../components/icon_button/icon_button.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {ContextMenu} from './ContextMenu.js';\nimport {Constraints, Size} from './Geometry.js';\nimport {Icon} from './Icon.js';\nimport {Toolbar} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport {installDragHandle, invokeOnceAfterBatchUpdate} from './UIUtils.js';\nimport type {Widget} from './Widget.js';\nimport {VBox} from './Widget.js';\nimport {Events as ZoomManagerEvents, ZoomManager} from './ZoomManager.js';\nimport tabbedPaneStyles from './tabbedPane.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description The aria label for the button to open more tabs at the right tabbed pane in Elements tools\n  */\n  moreTabs: 'More tabs',\n  /**\n  *@description Text in Tabbed Pane\n  *@example {tab} PH1\n  */\n  closeS: 'Close {PH1}',\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n  /**\n  *@description Text on a menu option to close other drawers when right click on a drawer title\n  */\n  closeOthers: 'Close others',\n  /**\n  *@description Text on a menu option to close the drawer to the right when right click on a drawer title\n  */\n  closeTabsToTheRight: 'Close tabs to the right',\n  /**\n  *@description Text on a menu option to close all the drawers except Console when right click on a drawer title\n  */\n  closeAll: 'Close all',\n  /**\n  *@description Indicates that a tab contains a preview feature (i.e., a beta / experimental feature).\n  */\n  previewFeature: 'Preview feature',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/TabbedPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TabbedPane extends Common.ObjectWrapper.eventMixin<EventTypes, typeof VBox>(VBox) {\n  private readonly headerElementInternal: HTMLElement;\n  private readonly headerContentsElement: HTMLElement;\n  tabSlider: HTMLDivElement;\n  readonly tabsElement: HTMLElement;\n  private readonly contentElementInternal: HTMLElement;\n  private tabs: TabbedPaneTab[];\n  private readonly tabsHistory: TabbedPaneTab[];\n  tabsById: Map<string, TabbedPaneTab>;\n  private currentTabLocked: boolean;\n  private autoSelectFirstItemOnShow: boolean;\n  private triggerDropDownTimeout: number|null;\n  private dropDownButton: HTMLDivElement;\n  private currentDevicePixelRatio: number;\n  private shrinkableTabs?: boolean;\n  private verticalTabLayout?: boolean;\n  private closeableTabs?: boolean;\n  private delegate?: TabbedPaneTabDelegate;\n  private currentTab?: TabbedPaneTab;\n  private sliderEnabled?: boolean;\n  private placeholderElement?: Element;\n  private focusedPlaceholderElement?: Element;\n  private placeholderContainerElement?: HTMLElement;\n  private lastSelectedOverflowTab?: TabbedPaneTab;\n  private overflowDisabled?: boolean;\n  private measuredDropDownButtonWidth?: number;\n  private leftToolbarInternal?: Toolbar;\n  private rightToolbarInternal?: Toolbar;\n  allowTabReorder?: boolean;\n  private automaticReorder?: boolean;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS(tabbedPaneStyles);\n    this.element.classList.add('tabbed-pane');\n    this.contentElement.classList.add('tabbed-pane-shadow');\n    this.contentElement.tabIndex = -1;\n    this.setDefaultFocusedElement(this.contentElement);\n    this.headerElementInternal = this.contentElement.createChild('div', 'tabbed-pane-header');\n    this.headerContentsElement = this.headerElementInternal.createChild('div', 'tabbed-pane-header-contents');\n    this.tabSlider = document.createElement('div');\n    this.tabSlider.classList.add('tabbed-pane-tab-slider');\n    this.tabsElement = this.headerContentsElement.createChild('div', 'tabbed-pane-header-tabs');\n    this.tabsElement.setAttribute('role', 'tablist');\n    this.tabsElement.addEventListener('keydown', this.keyDown.bind(this), false);\n    this.contentElementInternal = this.contentElement.createChild('div', 'tabbed-pane-content') as HTMLDivElement;\n    this.contentElementInternal.createChild('slot');\n    this.tabs = [];\n    this.tabsHistory = [];\n    this.tabsById = new Map();\n    this.currentTabLocked = false;\n    this.autoSelectFirstItemOnShow = true;\n\n    this.triggerDropDownTimeout = null;\n    this.dropDownButton = this.createDropDownButton();\n    this.currentDevicePixelRatio = window.devicePixelRatio;\n    ZoomManager.instance().addEventListener(ZoomManagerEvents.ZoomChanged, this.zoomChanged, this);\n    this.makeTabSlider();\n  }\n\n  setAccessibleName(name: string): void {\n    ARIAUtils.setAccessibleName(this.tabsElement, name);\n  }\n\n  setCurrentTabLocked(locked: boolean): void {\n    this.currentTabLocked = locked;\n    this.headerElementInternal.classList.toggle('locked', this.currentTabLocked);\n  }\n\n  setAutoSelectFirstItemOnShow(autoSelect: boolean): void {\n    this.autoSelectFirstItemOnShow = autoSelect;\n  }\n\n  get visibleView(): Widget|null {\n    return this.currentTab ? this.currentTab.view : null;\n  }\n\n  tabIds(): string[] {\n    return this.tabs.map(tab => tab.id);\n  }\n\n  tabIndex(tabId: string): number {\n    return this.tabs.findIndex(tab => tab.id === tabId);\n  }\n\n  tabViews(): Widget[] {\n    return this.tabs.map(tab => tab.view);\n  }\n\n  tabView(tabId: string): Widget|null {\n    const tab = this.tabsById.get(tabId);\n    return tab ? tab.view : null;\n  }\n\n  get selectedTabId(): string|null {\n    return this.currentTab ? this.currentTab.id : null;\n  }\n\n  setShrinkableTabs(shrinkableTabs: boolean): void {\n    this.shrinkableTabs = shrinkableTabs;\n  }\n\n  makeVerticalTabLayout(): void {\n    this.verticalTabLayout = true;\n    this.setTabSlider(false);\n    this.contentElement.classList.add('vertical-tab-layout');\n    this.invalidateConstraints();\n  }\n\n  setCloseableTabs(closeableTabs: boolean): void {\n    this.closeableTabs = closeableTabs;\n  }\n\n  focus(): void {\n    if (this.visibleView) {\n      this.visibleView.focus();\n    } else {\n      this.contentElement.focus();\n    }\n  }\n\n  focusSelectedTabHeader(): void {\n    const selectedTab = this.currentTab;\n    if (selectedTab) {\n      selectedTab.tabElement.focus();\n    }\n  }\n\n  headerElement(): Element {\n    return this.headerElementInternal;\n  }\n\n  tabbedPaneContentElement(): Element {\n    return this.contentElementInternal;\n  }\n\n  isTabCloseable(id: string): boolean {\n    const tab = this.tabsById.get(id);\n    return tab ? tab.isCloseable() : false;\n  }\n\n  setTabDelegate(delegate: TabbedPaneTabDelegate): void {\n    const tabs = this.tabs.slice();\n    for (let i = 0; i < tabs.length; ++i) {\n      tabs[i].setDelegate(delegate);\n    }\n    this.delegate = delegate;\n  }\n\n  appendTab(\n      id: string, tabTitle: string, view: Widget, tabTooltip?: string, userGesture?: boolean, isCloseable?: boolean,\n      isPreviewFeature?: boolean, index?: number): void {\n    const closeable = typeof isCloseable === 'boolean' ? isCloseable : Boolean(this.closeableTabs);\n    const tab = new TabbedPaneTab(this, id, tabTitle, closeable, Boolean(isPreviewFeature), view, tabTooltip);\n    tab.setDelegate((this.delegate as TabbedPaneTabDelegate));\n    console.assert(!this.tabsById.has(id), `Tabbed pane already contains a tab with id '${id}'`);\n    this.tabsById.set(id, tab);\n    if (index !== undefined) {\n      this.tabs.splice(index, 0, tab);\n    } else {\n      this.tabs.push(tab);\n    }\n    this.tabsHistory.push(tab);\n    if (this.tabsHistory[0] === tab && this.isShowing()) {\n      this.selectTab(tab.id, userGesture);\n    }\n    this.updateTabElements();\n  }\n\n  closeTab(id: string, userGesture?: boolean): void {\n    this.closeTabs([id], userGesture);\n  }\n\n  closeTabs(ids: string[], userGesture?: boolean): void {\n    if (ids.length === 0) {\n      return;\n    }\n\n    const focused = this.hasFocus();\n    for (let i = 0; i < ids.length; ++i) {\n      this.innerCloseTab(ids[i], userGesture);\n    }\n    this.updateTabElements();\n    if (this.tabsHistory.length) {\n      this.selectTab(this.tabsHistory[0].id, false);\n    }\n    if (focused) {\n      this.focus();\n    }\n  }\n\n  private innerCloseTab(id: string, userGesture?: boolean): true|undefined {\n    const tab = this.tabsById.get(id);\n    if (!tab) {\n      return;\n    }\n    if (userGesture && !tab.closeable) {\n      return;\n    }\n    if (this.currentTab && this.currentTab.id === id) {\n      this.hideCurrentTab();\n    }\n\n    this.tabsById.delete(id);\n\n    this.tabsHistory.splice(this.tabsHistory.indexOf(tab), 1);\n    this.tabs.splice(this.tabs.indexOf(tab), 1);\n    if (tab.shown) {\n      this.hideTabElement(tab);\n    }\n\n    const eventData: EventData = {prevTabId: undefined, tabId: id, view: tab.view, isUserGesture: userGesture};\n    this.dispatchEventToListeners(Events.TabClosed, eventData);\n    return true;\n  }\n\n  hasTab(tabId: string): boolean {\n    return this.tabsById.has(tabId);\n  }\n\n  otherTabs(id: string): string[] {\n    const result = [];\n    for (let i = 0; i < this.tabs.length; ++i) {\n      if (this.tabs[i].id !== id) {\n        result.push(this.tabs[i].id);\n      }\n    }\n    return result;\n  }\n\n  tabsToTheRight(id: string): string[] {\n    let index = -1;\n    for (let i = 0; i < this.tabs.length; ++i) {\n      if (this.tabs[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      return [];\n    }\n    return this.tabs.slice(index + 1).map(function(tab) {\n      return tab.id;\n    });\n  }\n\n  private viewHasFocus(): boolean {\n    if (this.visibleView && this.visibleView.hasFocus()) {\n      return true;\n    }\n    const root = this.contentElement.getComponentRoot();\n    return root instanceof Document && this.contentElement === root.activeElement;\n  }\n\n  selectTab(id: string, userGesture?: boolean, forceFocus?: boolean): boolean {\n    if (this.currentTabLocked) {\n      return false;\n    }\n    const focused = this.viewHasFocus();\n    const tab = this.tabsById.get(id);\n    if (!tab) {\n      return false;\n    }\n\n    const eventData: EventData = {\n      prevTabId: this.currentTab ? this.currentTab.id : undefined,\n      tabId: id,\n      view: tab.view,\n      isUserGesture: userGesture,\n    };\n    this.dispatchEventToListeners(Events.TabInvoked, eventData);\n    if (this.currentTab && this.currentTab.id === id) {\n      return true;\n    }\n\n    this.suspendInvalidations();\n    this.hideCurrentTab();\n    this.showTab(tab);\n    this.resumeInvalidations();\n    this.currentTab = tab;\n\n    this.tabsHistory.splice(this.tabsHistory.indexOf(tab), 1);\n    this.tabsHistory.splice(0, 0, tab);\n\n    this.updateTabElements();\n    if (focused || forceFocus) {\n      this.focus();\n    }\n\n    this.dispatchEventToListeners(Events.TabSelected, eventData);\n    return true;\n  }\n\n  selectNextTab(): void {\n    const index = this.tabs.indexOf((this.currentTab as TabbedPaneTab));\n    const nextIndex = Platform.NumberUtilities.mod(index + 1, this.tabs.length);\n    this.selectTab(this.tabs[nextIndex].id, true);\n  }\n\n  selectPrevTab(): void {\n    const index = this.tabs.indexOf((this.currentTab as TabbedPaneTab));\n    const nextIndex = Platform.NumberUtilities.mod(index - 1, this.tabs.length);\n    this.selectTab(this.tabs[nextIndex].id, true);\n  }\n\n  lastOpenedTabIds(tabsCount: number): string[] {\n    function tabToTabId(tab: TabbedPaneTab): string {\n      return tab.id;\n    }\n\n    return this.tabsHistory.slice(0, tabsCount).map(tabToTabId);\n  }\n\n  setTabIcon(id: string, icon: Icon|null): void {\n    const tab = this.tabsById.get(id);\n    if (!tab) {\n      return;\n    }\n    tab.setIcon(icon);\n    this.updateTabElements();\n  }\n\n  setTabEnabled(id: string, enabled: boolean): void {\n    const tab = this.tabsById.get(id);\n    if (tab) {\n      tab.tabElement.classList.toggle('disabled', !enabled);\n    }\n  }\n\n  toggleTabClass(id: string, className: string, force?: boolean): void {\n    const tab = this.tabsById.get(id);\n    if (tab && tab.toggleClass(className, force)) {\n      this.updateTabElements();\n    }\n  }\n\n  private zoomChanged(): void {\n    this.clearMeasuredWidths();\n    if (this.isShowing()) {\n      this.updateTabElements();\n    }\n  }\n\n  private clearMeasuredWidths(): void {\n    for (let i = 0; i < this.tabs.length; ++i) {\n      delete this.tabs[i].measuredWidth;\n    }\n  }\n\n  changeTabTitle(id: string, tabTitle: string, tabTooltip?: string): void {\n    const tab = this.tabsById.get(id);\n    if (tab && tabTooltip !== undefined) {\n      tab.tooltip = tabTooltip;\n    }\n    if (tab && tab.title !== tabTitle) {\n      tab.title = tabTitle;\n      ARIAUtils.setAccessibleName(tab.tabElement, tabTitle);\n      this.updateTabElements();\n    }\n  }\n\n  changeTabView(id: string, view: Widget): void {\n    const tab = this.tabsById.get(id);\n    if (!tab || tab.view === view) {\n      return;\n    }\n\n    this.suspendInvalidations();\n    const isSelected = this.currentTab && this.currentTab.id === id;\n    const shouldFocus = tab.view.hasFocus();\n    if (isSelected) {\n      this.hideTab(tab);\n    }\n    tab.view = view;\n    if (isSelected) {\n      this.showTab(tab);\n    }\n    if (shouldFocus) {\n      tab.view.focus();\n    }\n    this.resumeInvalidations();\n  }\n\n  onResize(): void {\n    if (this.currentDevicePixelRatio !== window.devicePixelRatio) {\n      // Force recalculation of all tab widths on a DPI change\n      this.clearMeasuredWidths();\n      this.currentDevicePixelRatio = window.devicePixelRatio;\n    }\n    this.updateTabElements();\n  }\n\n  headerResized(): void {\n    this.updateTabElements();\n  }\n\n  wasShown(): void {\n    const effectiveTab = this.currentTab || this.tabsHistory[0];\n    if (effectiveTab && this.autoSelectFirstItemOnShow) {\n      this.selectTab(effectiveTab.id);\n    }\n  }\n\n  makeTabSlider(): void {\n    if (this.verticalTabLayout) {\n      return;\n    }\n    this.setTabSlider(true);\n  }\n\n  private setTabSlider(enable: boolean): void {\n    this.sliderEnabled = enable;\n    this.tabSlider.classList.toggle('enabled', enable);\n  }\n\n  calculateConstraints(): Constraints {\n    let constraints = super.calculateConstraints();\n    const minContentConstraints = new Constraints(new Size(0, 0), new Size(50, 50));\n    constraints = constraints.widthToMax(minContentConstraints).heightToMax(minContentConstraints);\n    if (this.verticalTabLayout) {\n      constraints = constraints.addWidth(new Constraints(new Size(120, 0)));\n    } else {\n      constraints = constraints.addHeight(new Constraints(new Size(0, 30)));\n    }\n    return constraints;\n  }\n\n  private updateTabElements(): void {\n    invokeOnceAfterBatchUpdate(this, this.innerUpdateTabElements);\n  }\n\n  setPlaceholderElement(element: Element, focusedElement?: Element): void {\n    this.placeholderElement = element;\n    if (focusedElement) {\n      this.focusedPlaceholderElement = focusedElement;\n    }\n    if (this.placeholderContainerElement) {\n      this.placeholderContainerElement.removeChildren();\n      this.placeholderContainerElement.appendChild(element);\n    }\n  }\n\n  async waitForTabElementUpdate(): Promise<void> {\n    this.innerUpdateTabElements();\n  }\n\n  private innerUpdateTabElements(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    if (!this.tabs.length) {\n      this.contentElementInternal.classList.add('has-no-tabs');\n      if (this.placeholderElement && !this.placeholderContainerElement) {\n        this.placeholderContainerElement =\n            this.contentElementInternal.createChild('div', 'tabbed-pane-placeholder fill');\n        this.placeholderContainerElement.appendChild(this.placeholderElement);\n        if (this.focusedPlaceholderElement) {\n          this.setDefaultFocusedElement(this.focusedPlaceholderElement);\n        }\n      }\n    } else {\n      this.contentElementInternal.classList.remove('has-no-tabs');\n      if (this.placeholderContainerElement) {\n        this.placeholderContainerElement.remove();\n        this.setDefaultFocusedElement(this.contentElement);\n        delete this.placeholderContainerElement;\n      }\n    }\n\n    this.measureDropDownButton();\n    this.adjustToolbarWidth();\n    this.updateWidths();\n    this.updateTabsDropDown();\n    this.updateTabSlider();\n  }\n\n  private adjustToolbarWidth(): void {\n    if (!this.rightToolbarInternal || !this.measuredDropDownButtonWidth) {\n      return;\n    }\n    const leftToolbarWidth = this.leftToolbarInternal?.element.getBoundingClientRect().width ?? 0;\n    const rightToolbarWidth = this.rightToolbarInternal.element.getBoundingClientRect().width;\n    const totalWidth = this.headerElementInternal.getBoundingClientRect().width;\n    if (!this.rightToolbarInternal.hasCompactLayout() &&\n        totalWidth - rightToolbarWidth - leftToolbarWidth < this.measuredDropDownButtonWidth + 10) {\n      this.rightToolbarInternal.setCompactLayout(true);\n    } else if (\n        this.rightToolbarInternal.hasCompactLayout() &&\n        // Estimate the right toolbar size in non-compact mode as 2 times its compact size.\n        totalWidth - 2 * rightToolbarWidth - leftToolbarWidth > this.measuredDropDownButtonWidth + 10) {\n      this.rightToolbarInternal.setCompactLayout(false);\n    }\n  }\n\n  private showTabElement(index: number, tab: TabbedPaneTab): void {\n    if (index >= this.tabsElement.children.length) {\n      this.tabsElement.appendChild(tab.tabElement);\n    } else {\n      this.tabsElement.insertBefore(tab.tabElement, this.tabsElement.children[index]);\n    }\n    tab.shown = true;\n  }\n\n  private hideTabElement(tab: TabbedPaneTab): void {\n    this.tabsElement.removeChild(tab.tabElement);\n    tab.shown = false;\n  }\n\n  private createDropDownButton(): HTMLDivElement {\n    const dropDownContainer = document.createElement('div');\n    dropDownContainer.classList.add('tabbed-pane-header-tabs-drop-down-container');\n    const chevronIcon = Icon.create('largeicon-chevron', 'chevron-icon');\n    ARIAUtils.markAsMenuButton(dropDownContainer);\n    ARIAUtils.setAccessibleName(dropDownContainer, i18nString(UIStrings.moreTabs));\n    dropDownContainer.tabIndex = 0;\n    dropDownContainer.appendChild(chevronIcon);\n    dropDownContainer.addEventListener('click', this.dropDownClicked.bind(this));\n    dropDownContainer.addEventListener('keydown', this.dropDownKeydown.bind(this));\n    dropDownContainer.addEventListener('mousedown', event => {\n      if (event.which !== 1 || this.triggerDropDownTimeout) {\n        return;\n      }\n      this.triggerDropDownTimeout = window.setTimeout(this.dropDownClicked.bind(this, event), 200);\n    });\n    return dropDownContainer;\n  }\n\n  private dropDownClicked(ev: Event): void {\n    const event = (ev as MouseEvent);\n    if (event.which !== 1) {\n      return;\n    }\n    if (this.triggerDropDownTimeout) {\n      clearTimeout(this.triggerDropDownTimeout);\n      this.triggerDropDownTimeout = null;\n    }\n    const rect = this.dropDownButton.getBoundingClientRect();\n    const menu = new ContextMenu(event, {\n      useSoftMenu: false,\n      x: rect.left,\n      y: rect.bottom,\n    });\n    for (const tab of this.tabs) {\n      if (tab.shown) {\n        continue;\n      }\n      if (this.numberOfTabsShown() === 0 && this.tabsHistory[0] === tab) {\n        menu.defaultSection().appendCheckboxItem(\n            tab.title, this.dropDownMenuItemSelected.bind(this, tab), /* checked */ true);\n      } else {\n        menu.defaultSection().appendItem(tab.title, this.dropDownMenuItemSelected.bind(this, tab));\n      }\n    }\n    void menu.show();\n  }\n\n  private dropDownKeydown(event: Event): void {\n    if (isEnterOrSpaceKey(event)) {\n      this.dropDownButton.click();\n      event.consume(true);\n    }\n  }\n\n  private dropDownMenuItemSelected(tab: TabbedPaneTab): void {\n    this.lastSelectedOverflowTab = tab;\n    this.selectTab(tab.id, true, true);\n  }\n\n  private totalWidth(): number {\n    return this.headerContentsElement.getBoundingClientRect().width;\n  }\n\n  private numberOfTabsShown(): number {\n    let numTabsShown = 0;\n    for (const tab of this.tabs) {\n      if (tab.shown) {\n        numTabsShown++;\n      }\n    }\n    return numTabsShown;\n  }\n\n  disableOverflowMenu(): void {\n    this.overflowDisabled = true;\n  }\n\n  private updateTabsDropDown(): void {\n    const tabsToShowIndexes =\n        this.tabsToShowIndexes(this.tabs, this.tabsHistory, this.totalWidth(), this.measuredDropDownButtonWidth || 0);\n    if (this.lastSelectedOverflowTab && this.numberOfTabsShown() !== tabsToShowIndexes.length) {\n      delete this.lastSelectedOverflowTab;\n      this.updateTabsDropDown();\n      return;\n    }\n\n    for (let i = 0; i < this.tabs.length; ++i) {\n      if (this.tabs[i].shown && tabsToShowIndexes.indexOf(i) === -1) {\n        this.hideTabElement(this.tabs[i]);\n      }\n    }\n    for (let i = 0; i < tabsToShowIndexes.length; ++i) {\n      const tab = this.tabs[tabsToShowIndexes[i]];\n      if (!tab.shown) {\n        this.showTabElement(i, tab);\n      }\n    }\n\n    if (!this.overflowDisabled) {\n      this.maybeShowDropDown(tabsToShowIndexes.length !== this.tabs.length);\n    }\n  }\n\n  private maybeShowDropDown(hasMoreTabs: boolean): void {\n    if (hasMoreTabs && !this.dropDownButton.parentElement) {\n      this.headerContentsElement.appendChild(this.dropDownButton);\n    } else if (!hasMoreTabs && this.dropDownButton.parentElement) {\n      this.headerContentsElement.removeChild(this.dropDownButton);\n    }\n  }\n\n  private measureDropDownButton(): void {\n    if (this.overflowDisabled || this.measuredDropDownButtonWidth) {\n      return;\n    }\n    this.dropDownButton.classList.add('measuring');\n    this.headerContentsElement.appendChild(this.dropDownButton);\n    this.measuredDropDownButtonWidth = this.dropDownButton.getBoundingClientRect().width;\n    this.headerContentsElement.removeChild(this.dropDownButton);\n    this.dropDownButton.classList.remove('measuring');\n  }\n\n  private updateWidths(): void {\n    const measuredWidths = this.measureWidths();\n    const maxWidth =\n        this.shrinkableTabs ? this.calculateMaxWidth(measuredWidths.slice(), this.totalWidth()) : Number.MAX_VALUE;\n\n    let i = 0;\n    for (const tab of this.tabs) {\n      tab.setWidth(this.verticalTabLayout ? -1 : Math.min(maxWidth, measuredWidths[i++]));\n    }\n  }\n\n  private measureWidths(): number[] {\n    // Add all elements to measure into this.tabsElement\n    this.tabsElement.style.setProperty('width', '2000px');\n    const measuringTabElements = new Map<HTMLElement, TabbedPaneTab>();\n    for (const tab of this.tabs) {\n      if (typeof tab.measuredWidth === 'number') {\n        continue;\n      }\n      const measuringTabElement = tab.createTabElement(true);\n      measuringTabElements.set(measuringTabElement, tab);\n      this.tabsElement.appendChild(measuringTabElement);\n    }\n\n    // Perform measurement\n    for (const [measuringTabElement, tab] of measuringTabElements) {\n      const width = measuringTabElement.getBoundingClientRect().width;\n      tab.measuredWidth = Math.ceil(width);\n    }\n\n    // Nuke elements from the UI\n    for (const measuringTabElement of measuringTabElements.keys()) {\n      measuringTabElement.remove();\n    }\n\n    // Combine the results.\n    const measuredWidths = [];\n    for (const tab of this.tabs) {\n      measuredWidths.push(tab.measuredWidth || 0);\n    }\n    this.tabsElement.style.removeProperty('width');\n\n    return measuredWidths;\n  }\n\n  private calculateMaxWidth(measuredWidths: number[], totalWidth: number): number {\n    if (!measuredWidths.length) {\n      return 0;\n    }\n\n    measuredWidths.sort(function(x, y) {\n      return x - y;\n    });\n\n    let totalMeasuredWidth = 0;\n    for (let i = 0; i < measuredWidths.length; ++i) {\n      totalMeasuredWidth += measuredWidths[i];\n    }\n\n    if (totalWidth >= totalMeasuredWidth) {\n      return measuredWidths[measuredWidths.length - 1];\n    }\n\n    let totalExtraWidth = 0;\n    for (let i = measuredWidths.length - 1; i > 0; --i) {\n      const extraWidth = measuredWidths[i] - measuredWidths[i - 1];\n      totalExtraWidth += (measuredWidths.length - i) * extraWidth;\n\n      if (totalWidth + totalExtraWidth >= totalMeasuredWidth) {\n        return measuredWidths[i - 1] +\n            (totalWidth + totalExtraWidth - totalMeasuredWidth) / (measuredWidths.length - i);\n      }\n    }\n\n    return totalWidth / measuredWidths.length;\n  }\n\n  private tabsToShowIndexes(\n      tabsOrdered: TabbedPaneTab[], tabsHistory: TabbedPaneTab[], totalWidth: number,\n      measuredDropDownButtonWidth: number): number[] {\n    const tabsToShowIndexes = [];\n\n    let totalTabsWidth = 0;\n    const tabCount = tabsOrdered.length;\n    const tabsToLookAt = tabsOrdered.slice(0);\n    if (this.currentTab !== undefined) {\n      tabsToLookAt.unshift(tabsToLookAt.splice(tabsToLookAt.indexOf(this.currentTab), 1)[0]);\n    }\n    if (this.lastSelectedOverflowTab !== undefined) {\n      tabsToLookAt.unshift(tabsToLookAt.splice(tabsToLookAt.indexOf(this.lastSelectedOverflowTab), 1)[0]);\n    }\n    for (let i = 0; i < tabCount; ++i) {\n      const tab = this.automaticReorder ? tabsHistory[i] : tabsToLookAt[i];\n      totalTabsWidth += tab.width();\n      let minimalRequiredWidth = totalTabsWidth;\n      if (i !== tabCount - 1) {\n        minimalRequiredWidth += measuredDropDownButtonWidth;\n      }\n      if (!this.verticalTabLayout && minimalRequiredWidth > totalWidth) {\n        break;\n      }\n      tabsToShowIndexes.push(tabsOrdered.indexOf(tab));\n    }\n\n    tabsToShowIndexes.sort(function(x, y) {\n      return x - y;\n    });\n\n    return tabsToShowIndexes;\n  }\n\n  private hideCurrentTab(): void {\n    if (!this.currentTab) {\n      return;\n    }\n\n    this.hideTab(this.currentTab);\n    delete this.currentTab;\n  }\n\n  private showTab(tab: TabbedPaneTab): void {\n    tab.tabElement.tabIndex = 0;\n    tab.tabElement.classList.add('selected');\n    ARIAUtils.setSelected(tab.tabElement, true);\n    tab.view.show(this.element);\n    this.updateTabSlider();\n  }\n\n  updateTabSlider(): void {\n    if (!this.sliderEnabled) {\n      return;\n    }\n    if (!this.currentTab) {\n      this.tabSlider.style.width = '0';\n      return;\n    }\n    let left = 0;\n    for (let i = 0; i < this.tabs.length && this.currentTab !== this.tabs[i]; i++) {\n      if (this.tabs[i].shown) {\n        left += this.tabs[i].measuredWidth || 0;\n      }\n    }\n    const sliderWidth = this.currentTab.shown ? this.currentTab.measuredWidth : this.dropDownButton.offsetWidth;\n    const scaleFactor = window.devicePixelRatio >= 1.5 ? ' scaleY(0.75)' : '';\n    this.tabSlider.style.transform = 'translateX(' + left + 'px)' + scaleFactor;\n    this.tabSlider.style.width = sliderWidth + 'px';\n\n    if (this.tabSlider.parentElement !== this.headerContentsElement) {\n      this.headerContentsElement.appendChild(this.tabSlider);\n    }\n  }\n\n  private hideTab(tab: TabbedPaneTab): void {\n    tab.tabElement.removeAttribute('tabIndex');\n    tab.tabElement.classList.remove('selected');\n    tab.tabElement.setAttribute('aria-selected', 'false');\n    tab.view.detach();\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.contentElementInternal];\n  }\n\n  insertBefore(tab: TabbedPaneTab, index: number): void {\n    this.tabsElement.insertBefore(tab.tabElement, this.tabsElement.childNodes[index]);\n    const oldIndex = this.tabs.indexOf(tab);\n    this.tabs.splice(oldIndex, 1);\n    if (oldIndex < index) {\n      --index;\n    }\n    this.tabs.splice(index, 0, tab);\n\n    const eventData: EventData = {prevTabId: undefined, tabId: tab.id, view: tab.view, isUserGesture: undefined};\n    this.dispatchEventToListeners(Events.TabOrderChanged, eventData);\n  }\n\n  leftToolbar(): Toolbar {\n    if (!this.leftToolbarInternal) {\n      this.leftToolbarInternal = new Toolbar('tabbed-pane-left-toolbar');\n      this.headerElementInternal.insertBefore(this.leftToolbarInternal.element, this.headerElementInternal.firstChild);\n    }\n    return this.leftToolbarInternal;\n  }\n\n  rightToolbar(): Toolbar {\n    if (!this.rightToolbarInternal) {\n      this.rightToolbarInternal = new Toolbar('tabbed-pane-right-toolbar');\n      this.headerElementInternal.appendChild(this.rightToolbarInternal.element);\n    }\n    return this.rightToolbarInternal;\n  }\n\n  setAllowTabReorder(allow: boolean, automatic?: boolean): void {\n    this.allowTabReorder = allow;\n    this.automaticReorder = automatic;\n  }\n\n  private keyDown(ev: Event): void {\n    if (!this.currentTab) {\n      return;\n    }\n    const event = (ev as KeyboardEvent);\n    let nextTabElement: (Element|null)|null = null;\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        nextTabElement = this.currentTab.tabElement.previousElementSibling;\n        if (!nextTabElement && !this.dropDownButton.parentElement) {\n          nextTabElement = this.currentTab.tabElement.parentElement ?\n              this.currentTab.tabElement.parentElement.lastElementChild :\n              null;\n        }\n        break;\n      case 'ArrowDown':\n      case 'ArrowRight':\n        nextTabElement = this.currentTab.tabElement.nextElementSibling;\n        if (!nextTabElement && !this.dropDownButton.parentElement) {\n          nextTabElement = this.currentTab.tabElement.parentElement ?\n              this.currentTab.tabElement.parentElement.firstElementChild :\n              null;\n        }\n        break;\n      case 'Enter':\n      case ' ':\n        this.currentTab.view.focus();\n        return;\n      default:\n        return;\n    }\n    if (!nextTabElement) {\n      this.dropDownButton.click();\n      return;\n    }\n    const tab = this.tabs.find(tab => tab.tabElement === nextTabElement);\n    if (tab) {\n      this.selectTab(tab.id, true);\n    }\n    (nextTabElement as HTMLElement).focus();\n  }\n}\nexport interface EventData {\n  prevTabId?: string;\n  tabId: string;\n  view?: Widget;\n  isUserGesture?: boolean;\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  TabInvoked = 'TabInvoked',\n  TabSelected = 'TabSelected',\n  TabClosed = 'TabClosed',\n  TabOrderChanged = 'TabOrderChanged',\n}\n\nexport type EventTypes = {\n  [Events.TabInvoked]: EventData,\n  [Events.TabSelected]: EventData,\n  [Events.TabClosed]: EventData,\n  [Events.TabOrderChanged]: EventData,\n};\n\nexport class TabbedPaneTab {\n  closeable: boolean;\n  previewFeature = false;\n  private readonly tabbedPane: TabbedPane;\n  idInternal: string;\n  private titleInternal: string;\n  private tooltipInternal: string|undefined;\n  private viewInternal: Widget;\n  shown: boolean;\n  measuredWidth!: number|undefined;\n  private tabElementInternal!: HTMLElement|undefined;\n  private readonly iconContainer: Element|null;\n  private icon?: Icon|null;\n  private widthInternal?: number;\n  private delegate?: TabbedPaneTabDelegate;\n  private titleElement?: HTMLElement;\n  private dragStartX?: number;\n  constructor(\n      tabbedPane: TabbedPane, id: string, title: string, closeable: boolean, previewFeature: boolean, view: Widget,\n      tooltip?: string) {\n    this.closeable = closeable;\n    this.previewFeature = previewFeature;\n    this.tabbedPane = tabbedPane;\n    this.idInternal = id;\n    this.titleInternal = title;\n    this.tooltipInternal = tooltip;\n    this.viewInternal = view;\n    this.shown = false;\n    this.iconContainer = null;\n  }\n\n  get id(): string {\n    return this.idInternal;\n  }\n\n  get title(): string {\n    return this.titleInternal;\n  }\n\n  set title(title: string) {\n    if (title === this.titleInternal) {\n      return;\n    }\n    this.titleInternal = title;\n    if (this.titleElement) {\n      this.titleElement.textContent = title;\n      const closeIconContainer = this.tabElementInternal?.querySelector('.close-button');\n      closeIconContainer?.setAttribute('title', i18nString(UIStrings.closeS, {PH1: title}));\n      closeIconContainer?.setAttribute('aria-label', i18nString(UIStrings.closeS, {PH1: title}));\n    }\n    delete this.measuredWidth;\n  }\n\n  isCloseable(): boolean {\n    return this.closeable;\n  }\n\n  setIcon(icon: Icon|null): void {\n    this.icon = icon;\n    if (this.tabElementInternal && this.titleElement) {\n      this.createIconElement(this.tabElementInternal, this.titleElement, false);\n    }\n    delete this.measuredWidth;\n  }\n\n  toggleClass(className: string, force?: boolean): boolean {\n    const element = this.tabElement;\n    const hasClass = element.classList.contains(className);\n    if (hasClass === force) {\n      return false;\n    }\n    element.classList.toggle(className, force);\n    delete this.measuredWidth;\n    return true;\n  }\n\n  get view(): Widget {\n    return this.viewInternal;\n  }\n\n  set view(view: Widget) {\n    this.viewInternal = view;\n  }\n\n  get tooltip(): string|undefined {\n    return this.tooltipInternal;\n  }\n\n  set tooltip(tooltip: string|undefined) {\n    this.tooltipInternal = tooltip;\n    if (this.titleElement) {\n      Tooltip.install(this.titleElement, tooltip || '');\n    }\n  }\n\n  get tabElement(): HTMLElement {\n    if (!this.tabElementInternal) {\n      this.tabElementInternal = this.createTabElement(false);\n    }\n\n    return this.tabElementInternal;\n  }\n\n  width(): number {\n    return this.widthInternal || 0;\n  }\n\n  setWidth(width: number): void {\n    this.tabElement.style.width = width === -1 ? '' : (width + 'px');\n    this.widthInternal = width;\n  }\n\n  setDelegate(delegate: TabbedPaneTabDelegate): void {\n    this.delegate = delegate;\n  }\n\n  private createIconElement(tabElement: Element, titleElement: Element, measuring: boolean): void {\n    const iconElement = tabIcons.get(tabElement);\n    if (iconElement) {\n      iconElement.remove();\n      tabIcons.delete(tabElement);\n    }\n    if (!this.icon) {\n      return;\n    }\n\n    const iconContainer = document.createElement('span');\n    iconContainer.classList.add('tabbed-pane-header-tab-icon');\n    const iconNode = measuring ? this.icon.cloneNode(true) : this.icon;\n    iconContainer.appendChild(iconNode);\n    tabElement.insertBefore(iconContainer, titleElement);\n    tabIcons.set(tabElement, iconContainer);\n  }\n\n  createTabElement(measuring: boolean): HTMLElement {\n    const tabElement = document.createElement('div');\n    tabElement.classList.add('tabbed-pane-header-tab');\n    tabElement.id = 'tab-' + this.idInternal;\n    ARIAUtils.markAsTab(tabElement);\n    ARIAUtils.setSelected(tabElement, false);\n    ARIAUtils.setAccessibleName(tabElement, this.title);\n\n    const titleElement = tabElement.createChild('span', 'tabbed-pane-header-tab-title');\n    titleElement.textContent = this.title;\n    Tooltip.install(titleElement, this.tooltip || '');\n    this.createIconElement(tabElement, titleElement, measuring);\n    if (!measuring) {\n      this.titleElement = titleElement;\n    }\n\n    if (this.previewFeature) {\n      const previewIcon = this.createPreviewIcon();\n      tabElement.appendChild(previewIcon);\n      tabElement.classList.add('preview');\n    }\n\n    if (this.closeable) {\n      const closeIcon = this.createCloseIconButton();\n      tabElement.appendChild(closeIcon);\n      tabElement.classList.add('closeable');\n    }\n\n    if (measuring) {\n      tabElement.classList.add('measuring');\n    } else {\n      tabElement.addEventListener('click', this.tabClicked.bind(this), false);\n      tabElement.addEventListener('auxclick', this.tabClicked.bind(this), false);\n      tabElement.addEventListener('mousedown', this.tabMouseDown.bind(this), false);\n      tabElement.addEventListener('mouseup', this.tabMouseUp.bind(this), false);\n\n      tabElement.addEventListener('contextmenu', this.tabContextMenu.bind(this), false);\n      if (this.tabbedPane.allowTabReorder) {\n        installDragHandle(\n            tabElement, this.startTabDragging.bind(this), this.tabDragging.bind(this), this.endTabDragging.bind(this),\n            null, null, 200);\n      }\n    }\n\n    return tabElement as HTMLElement;\n  }\n\n  private createCloseIconButton(): HTMLDivElement {\n    const closeIconContainer = document.createElement('div');\n    closeIconContainer.classList.add('close-button', 'tabbed-pane-close-button');\n    const closeIcon = new IconButton.Icon.Icon();\n    closeIcon.data = {\n      iconName: 'close-icon',\n      color: 'var(--tabbed-pane-close-icon-color)',\n      width: '7px',\n    };\n    closeIconContainer.appendChild(closeIcon);\n    closeIconContainer.setAttribute('role', 'button');\n    closeIconContainer.setAttribute('title', i18nString(UIStrings.closeS, {PH1: this.title}));\n    closeIconContainer.setAttribute('aria-label', i18nString(UIStrings.closeS, {PH1: this.title}));\n    return closeIconContainer;\n  }\n\n  private createPreviewIcon(): HTMLDivElement {\n    const previewIcon = document.createElement('div');\n    previewIcon.classList.add('preview-icon');\n    const closeIcon = new IconButton.Icon.Icon();\n    closeIcon.data = {\n      iconName: 'ic_preview_feature',\n      color: 'var(--override-tabbed-pane-preview-icon-color)',\n      width: '14px',\n    };\n    previewIcon.appendChild(closeIcon);\n    previewIcon.setAttribute('title', i18nString(UIStrings.previewFeature));\n    previewIcon.setAttribute('aria-label', i18nString(UIStrings.previewFeature));\n    return previewIcon;\n  }\n\n  private isCloseIconClicked(element: HTMLElement): boolean {\n    return element?.classList.contains('tabbed-pane-close-button') ||\n        element?.parentElement?.classList.contains('tabbed-pane-close-button') || false;\n  }\n\n  private tabClicked(ev: Event): void {\n    const event = (ev as MouseEvent);\n    const middleButton = event.button === 1;\n    const shouldClose = this.closeable && (middleButton || this.isCloseIconClicked(event.target as HTMLElement));\n    if (!shouldClose) {\n      this.tabbedPane.focus();\n      return;\n    }\n    this.closeTabs([this.id]);\n    event.consume(true);\n  }\n\n  private tabMouseDown(ev: Event): void {\n    const event = ev as MouseEvent;\n    if (this.isCloseIconClicked(event.target as HTMLElement) || event.button !== 0) {\n      return;\n    }\n    this.tabbedPane.selectTab(this.id, true);\n  }\n\n  private tabMouseUp(ev: Event): void {\n    const event = (ev as MouseEvent);\n    // This is needed to prevent middle-click pasting on linux when tabs are clicked.\n    if (event.button === 1) {\n      event.consume(true);\n    }\n  }\n\n  private closeTabs(ids: string[]): void {\n    if (this.delegate) {\n      this.delegate.closeTabs(this.tabbedPane, ids);\n      return;\n    }\n    this.tabbedPane.closeTabs(ids, true);\n  }\n\n  private tabContextMenu(event: Event): void {\n    function close(this: TabbedPaneTab): void {\n      this.closeTabs([this.id]);\n    }\n\n    function closeOthers(this: TabbedPaneTab): void {\n      this.closeTabs(this.tabbedPane.otherTabs(this.id));\n    }\n\n    function closeAll(this: TabbedPaneTab): void {\n      this.closeTabs(this.tabbedPane.tabIds());\n    }\n\n    function closeToTheRight(this: TabbedPaneTab): void {\n      this.closeTabs(this.tabbedPane.tabsToTheRight(this.id));\n    }\n\n    const contextMenu = new ContextMenu(event);\n    if (this.closeable) {\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.close), close.bind(this));\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.closeOthers), closeOthers.bind(this));\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.closeTabsToTheRight), closeToTheRight.bind(this));\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.closeAll), closeAll.bind(this));\n    }\n    if (this.delegate) {\n      this.delegate.onContextMenu(this.id, contextMenu);\n    }\n    void contextMenu.show();\n  }\n\n  private startTabDragging(ev: Event): boolean {\n    const event = (ev as MouseEvent);\n    if (this.isCloseIconClicked(event.target as HTMLElement)) {\n      return false;\n    }\n    this.dragStartX = event.pageX;\n    if (this.tabElementInternal) {\n      this.tabElementInternal.classList.add('dragging');\n    }\n    this.tabbedPane.tabSlider.remove();\n    return true;\n  }\n\n  private tabDragging(ev: Event): void {\n    const event = (ev as MouseEvent);\n    const tabElements = this.tabbedPane.tabsElement.childNodes;\n    for (let i = 0; i < tabElements.length; ++i) {\n      let tabElement: HTMLElement = (tabElements[i] as HTMLElement);\n      if (!this.tabElementInternal || tabElement === this.tabElementInternal) {\n        continue;\n      }\n\n      const intersects = tabElement.offsetLeft + tabElement.clientWidth > this.tabElementInternal.offsetLeft &&\n          this.tabElementInternal.offsetLeft + this.tabElementInternal.clientWidth > tabElement.offsetLeft;\n      if (!intersects) {\n        continue;\n      }\n\n      const dragStartX = (this.dragStartX as number);\n      if (Math.abs(event.pageX - dragStartX) < tabElement.clientWidth / 2 + 5) {\n        break;\n      }\n\n      if (event.pageX - dragStartX > 0) {\n        tabElement = (tabElement.nextSibling as HTMLElement);\n        ++i;\n      }\n\n      const oldOffsetLeft = this.tabElementInternal.offsetLeft;\n      this.tabbedPane.insertBefore(this, i);\n      this.dragStartX = dragStartX + this.tabElementInternal.offsetLeft - oldOffsetLeft;\n      break;\n    }\n\n    const dragStartX = (this.dragStartX as number);\n    const tabElement = (this.tabElementInternal as HTMLElement);\n    if (!tabElement.previousSibling && event.pageX - dragStartX < 0) {\n      tabElement.style.setProperty('left', '0px');\n      return;\n    }\n    if (!tabElement.nextSibling && event.pageX - dragStartX > 0) {\n      tabElement.style.setProperty('left', '0px');\n      return;\n    }\n\n    tabElement.style.setProperty('left', (event.pageX - dragStartX) + 'px');\n  }\n\n  private endTabDragging(_event: Event): void {\n    const tabElement = (this.tabElementInternal as HTMLElement);\n    tabElement.classList.remove('dragging');\n    tabElement.style.removeProperty('left');\n    delete this.dragStartX;\n    this.tabbedPane.updateTabSlider();\n  }\n}\n\nconst tabIcons = new WeakMap<Element, Element>();\n\nexport interface TabbedPaneTabDelegate {\n  closeTabs(tabbedPane: TabbedPane, ids: string[]): void;\n  onContextMenu(tabId: string, contextMenu: ContextMenu): void;\n}\n"],
  "mappings": "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",
  "names": []
}
