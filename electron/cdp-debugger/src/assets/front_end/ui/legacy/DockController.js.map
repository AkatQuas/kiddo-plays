{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/DockController.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {ActionDelegate} from './ActionRegistration.js';\nimport type {Context} from './Context.js';\nimport type {Provider, ToolbarItem} from './Toolbar.js';\nimport {ToolbarButton} from './Toolbar.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n  /**\n  *@description Text to dock the DevTools to the right of the browser tab\n  */\n  dockToRight: 'Dock to right',\n  /**\n  *@description Text to dock the DevTools to the bottom of the browser tab\n  */\n  dockToBottom: 'Dock to bottom',\n  /**\n  *@description Text to dock the DevTools to the left of the browser tab\n  */\n  dockToLeft: 'Dock to left',\n  /**\n  *@description Text to undock the DevTools\n  */\n  undockIntoSeparateWindow: 'Undock into separate window',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/DockController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet dockControllerInstance: DockController;\n\nexport class DockController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private canDockInternal: boolean;\n  readonly closeButton: ToolbarButton;\n  private readonly currentDockStateSetting: Common.Settings.Setting<DockState>;\n  private readonly lastDockStateSetting: Common.Settings.Setting<DockState>;\n  private dockSideInternal: DockState|undefined = undefined;\n  private titles?: Common.UIString.LocalizedString[];\n  private savedFocus?: Element|null;\n\n  constructor(canDock: boolean) {\n    super();\n    this.canDockInternal = canDock;\n\n    this.closeButton = new ToolbarButton(i18nString(UIStrings.close), 'largeicon-delete');\n    this.closeButton.element.classList.add('close-devtools');\n    this.closeButton.addEventListener(\n        ToolbarButton.Events.Click,\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance));\n\n    this.currentDockStateSetting = Common.Settings.Settings.instance().moduleSetting('currentDockState');\n    this.lastDockStateSetting = Common.Settings.Settings.instance().createSetting('lastDockState', DockState.BOTTOM);\n\n    if (!canDock) {\n      this.dockSideInternal = DockState.UNDOCKED;\n      this.closeButton.setVisible(false);\n      return;\n    }\n\n    this.currentDockStateSetting.addChangeListener(this.dockSideChanged, this);\n    if (states.indexOf(this.currentDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.RIGHT);\n    }\n    if (states.indexOf(this.lastDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.BOTTOM);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    canDock: boolean,\n  } = {forceNew: null, canDock: false}): DockController {\n    const {forceNew, canDock} = opts;\n    if (!dockControllerInstance || forceNew) {\n      dockControllerInstance = new DockController(canDock);\n    }\n\n    return dockControllerInstance;\n  }\n\n  initialize(): void {\n    if (!this.canDockInternal) {\n      return;\n    }\n\n    this.titles = [\n      i18nString(UIStrings.dockToRight),\n      i18nString(UIStrings.dockToBottom),\n      i18nString(UIStrings.dockToLeft),\n      i18nString(UIStrings.undockIntoSeparateWindow),\n    ];\n    this.dockSideChanged();\n  }\n\n  private dockSideChanged(): void {\n    this.setDockSide(this.currentDockStateSetting.get());\n  }\n\n  dockSide(): DockState|undefined {\n    return this.dockSideInternal;\n  }\n\n  canDock(): boolean {\n    return this.canDockInternal;\n  }\n\n  isVertical(): boolean {\n    return this.dockSideInternal === DockState.RIGHT || this.dockSideInternal === DockState.LEFT;\n  }\n\n  setDockSide(dockSide: DockState): void {\n    if (states.indexOf(dockSide) === -1) {\n      // If the side is invalid, default to a valid one\n      dockSide = states[0];\n    }\n\n    if (this.dockSideInternal === dockSide) {\n      return;\n    }\n\n    if (this.dockSideInternal !== undefined) {\n      document.body.classList.remove(this.dockSideInternal);\n    }\n    document.body.classList.add(dockSide);\n\n    if (this.dockSideInternal) {\n      this.lastDockStateSetting.set(this.dockSideInternal);\n    }\n\n    this.savedFocus = Platform.DOMUtilities.deepActiveElement(document);\n    const eventData = {from: this.dockSideInternal, to: dockSide};\n    this.dispatchEventToListeners(Events.BeforeDockSideChanged, eventData);\n    console.timeStamp('DockController.setIsDocked');\n    this.dockSideInternal = dockSide;\n    this.currentDockStateSetting.set(dockSide);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setIsDocked(\n        dockSide !== DockState.UNDOCKED, this.setIsDockedResponse.bind(this, eventData));\n    this.closeButton.setVisible(this.dockSideInternal !== DockState.UNDOCKED);\n    this.dispatchEventToListeners(Events.DockSideChanged, eventData);\n  }\n\n  private setIsDockedResponse(eventData: ChangeEvent): void {\n    this.dispatchEventToListeners(Events.AfterDockSideChanged, eventData);\n    if (this.savedFocus) {\n      (this.savedFocus as HTMLElement).focus();\n      this.savedFocus = null;\n    }\n  }\n\n  toggleDockSide(): void {\n    if (this.lastDockStateSetting.get() === this.currentDockStateSetting.get()) {\n      const index = states.indexOf(this.currentDockStateSetting.get()) || 0;\n      this.lastDockStateSetting.set(states[(index + 1) % states.length]);\n    }\n    this.setDockSide(this.lastDockStateSetting.get());\n  }\n}\n\nexport const enum DockState {\n  BOTTOM = 'bottom',\n  RIGHT = 'right',\n  LEFT = 'left',\n  UNDOCKED = 'undocked',\n}\n\nconst states = [DockState.RIGHT, DockState.BOTTOM, DockState.LEFT, DockState.UNDOCKED];\n\n// Use BeforeDockSideChanged to do something before all the UI bits are updated,\n// DockSideChanged to update UI, and AfterDockSideChanged to perform actions\n// after frontend is docked/undocked in the browser.\n\nexport const enum Events {\n  BeforeDockSideChanged = 'BeforeDockSideChanged',\n  DockSideChanged = 'DockSideChanged',\n  AfterDockSideChanged = 'AfterDockSideChanged',\n}\n\nexport interface ChangeEvent {\n  from: DockState|undefined;\n  to: DockState;\n}\n\nexport type EventTypes = {\n  [Events.BeforeDockSideChanged]: ChangeEvent,\n  [Events.DockSideChanged]: ChangeEvent,\n  [Events.AfterDockSideChanged]: ChangeEvent,\n};\n\nlet toggleDockActionDelegateInstance: ToggleDockActionDelegate;\n\nexport class ToggleDockActionDelegate implements ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ToggleDockActionDelegate {\n    const {forceNew} = opts;\n    if (!toggleDockActionDelegateInstance || forceNew) {\n      toggleDockActionDelegateInstance = new ToggleDockActionDelegate();\n    }\n\n    return toggleDockActionDelegateInstance;\n  }\n\n  handleAction(_context: Context, _actionId: string): boolean {\n    DockController.instance().toggleDockSide();\n    return true;\n  }\n}\n\nlet closeButtonProviderInstance: CloseButtonProvider;\n\nexport class CloseButtonProvider implements Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CloseButtonProvider {\n    const {forceNew} = opts;\n    if (!closeButtonProviderInstance || forceNew) {\n      closeButtonProviderInstance = new CloseButtonProvider();\n    }\n\n    return closeButtonProviderInstance;\n  }\n\n  item(): ToolbarItem|null {\n    return DockController.instance().closeButton;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
