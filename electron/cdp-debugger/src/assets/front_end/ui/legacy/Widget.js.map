{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/Widget.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n * Copyright (C) 2011 Google Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as DOMExtension from '../../core/dom_extension/dom_extension.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Helpers from '../components/helpers/helpers.js';\n\nimport {Constraints, Size} from './Geometry.js';\nimport * as ThemeSupport from './theme_support/theme_support.js';\nimport * as Utils from './utils/utils.js';\nimport {XWidget} from './XWidget.js';\n\nexport class WidgetElement extends HTMLDivElement {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention, rulesdir/no_underscored_properties\n  __widget!: Widget|null;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention, rulesdir/no_underscored_properties\n  __widgetCounter!: number|null;\n  constructor() {\n    super();\n  }\n}\n\nexport class Widget {\n  element!: WidgetElement;\n  contentElement: HTMLDivElement;\n  private shadowRoot: ShadowRoot|undefined;\n  private readonly isWebComponent: boolean|undefined;\n  protected visibleInternal: boolean;\n  private isRoot: boolean;\n  private isShowingInternal: boolean;\n  private readonly childrenInternal: Widget[];\n  private hideOnDetach: boolean;\n  private notificationDepth: number;\n  private invalidationsSuspended: number;\n  defaultFocusedChild: Widget|null;\n  private parentWidgetInternal: Widget|null;\n  private registeredCSSFiles: boolean;\n  private defaultFocusedElement?: Element|null;\n  private cachedConstraints?: Constraints;\n  private constraintsInternal?: Constraints;\n  private invalidationsRequested?: boolean;\n  private externallyManaged?: boolean;\n  constructor(isWebComponent?: boolean, delegatesFocus?: boolean) {\n    this.contentElement = document.createElement('div');\n    this.contentElement.classList.add('widget');\n    if (isWebComponent) {\n      this.element = (document.createElement('div') as WidgetElement);\n      this.element.classList.add('vbox');\n      this.element.classList.add('flex-auto');\n      this.shadowRoot = Utils.createShadowRootWithCoreStyles(this.element, {\n        cssFile: undefined,\n        delegatesFocus,\n      });\n      this.shadowRoot.appendChild(this.contentElement);\n    } else {\n      this.element = (this.contentElement as WidgetElement);\n    }\n    this.isWebComponent = isWebComponent;\n    this.element.__widget = this;\n    this.visibleInternal = false;\n    this.isRoot = false;\n    this.isShowingInternal = false;\n    this.childrenInternal = [];\n    this.hideOnDetach = false;\n    this.notificationDepth = 0;\n    this.invalidationsSuspended = 0;\n    this.defaultFocusedChild = null;\n    this.parentWidgetInternal = null;\n    this.registeredCSSFiles = false;\n  }\n\n  private static incrementWidgetCounter(parentElement: WidgetElement, childElement: WidgetElement): void {\n    const count = (childElement.__widgetCounter || 0) + (childElement.__widget ? 1 : 0);\n    if (!count) {\n      return;\n    }\n\n    let currentElement: (WidgetElement|null)|WidgetElement = parentElement;\n    while (currentElement) {\n      currentElement.__widgetCounter = (currentElement.__widgetCounter || 0) + count;\n      currentElement = parentWidgetElementOrShadowHost(currentElement);\n    }\n  }\n\n  private static decrementWidgetCounter(parentElement: WidgetElement, childElement: WidgetElement): void {\n    const count = (childElement.__widgetCounter || 0) + (childElement.__widget ? 1 : 0);\n    if (!count) {\n      return;\n    }\n\n    let currentElement: (WidgetElement|null)|WidgetElement = parentElement;\n    while (currentElement) {\n      if (currentElement.__widgetCounter) {\n        currentElement.__widgetCounter -= count;\n      }\n      currentElement = parentWidgetElementOrShadowHost(currentElement);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/naming-convention\n  private static assert(condition: any, message: string): void {\n    if (!condition) {\n      throw new Error(message);\n    }\n  }\n\n  markAsRoot(): void {\n    Widget.assert(!this.element.parentElement, 'Attempt to mark as root attached node');\n    this.isRoot = true;\n  }\n\n  parentWidget(): Widget|null {\n    return this.parentWidgetInternal;\n  }\n\n  children(): Widget[] {\n    return this.childrenInternal;\n  }\n\n  childWasDetached(_widget: Widget): void {\n  }\n\n  isShowing(): boolean {\n    return this.isShowingInternal;\n  }\n\n  shouldHideOnDetach(): boolean {\n    if (!this.element.parentElement) {\n      return false;\n    }\n    if (this.hideOnDetach) {\n      return true;\n    }\n    for (const child of this.childrenInternal) {\n      if (child.shouldHideOnDetach()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  setHideOnDetach(): void {\n    this.hideOnDetach = true;\n  }\n\n  private inNotification(): boolean {\n    return Boolean(this.notificationDepth) ||\n        Boolean(this.parentWidgetInternal && this.parentWidgetInternal.inNotification());\n  }\n\n  private parentIsShowing(): boolean {\n    if (this.isRoot) {\n      return true;\n    }\n    return this.parentWidgetInternal !== null && this.parentWidgetInternal.isShowing();\n  }\n\n  protected callOnVisibleChildren(method: (this: Widget) => void): void {\n    const copy = this.childrenInternal.slice();\n    for (let i = 0; i < copy.length; ++i) {\n      if (copy[i].parentWidgetInternal === this && copy[i].visibleInternal) {\n        method.call(copy[i]);\n      }\n    }\n  }\n\n  private processWillShow(): void {\n    this.callOnVisibleChildren(this.processWillShow);\n    this.isShowingInternal = true;\n  }\n\n  private processWasShown(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    this.restoreScrollPositions();\n    this.notify(this.wasShown);\n    this.callOnVisibleChildren(this.processWasShown);\n  }\n\n  private processWillHide(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    this.storeScrollPositions();\n\n    this.callOnVisibleChildren(this.processWillHide);\n    this.notify(this.willHide);\n    this.isShowingInternal = false;\n  }\n\n  private processWasHidden(): void {\n    this.callOnVisibleChildren(this.processWasHidden);\n  }\n\n  private processOnResize(): void {\n    if (this.inNotification()) {\n      return;\n    }\n    if (!this.isShowing()) {\n      return;\n    }\n    this.notify(this.onResize);\n    this.callOnVisibleChildren(this.processOnResize);\n  }\n\n  private notify(notification: (this: Widget) => void): void {\n    ++this.notificationDepth;\n    try {\n      notification.call(this);\n    } finally {\n      --this.notificationDepth;\n    }\n  }\n\n  wasShown(): void {\n  }\n\n  willHide(): void {\n  }\n\n  onResize(): void {\n  }\n\n  onLayout(): void {\n  }\n\n  async ownerViewDisposed(): Promise<void> {\n  }\n\n  show(parentElement: Element, insertBefore?: Node|null): void {\n    Widget.assert(parentElement, 'Attempt to attach widget with no parent element');\n\n    if (!this.isRoot) {\n      // Update widget hierarchy.\n      let currentParent: (WidgetElement|null) = (parentElement as WidgetElement | null);\n      while (currentParent && !currentParent.__widget) {\n        currentParent = parentWidgetElementOrShadowHost(currentParent);\n      }\n      if (!currentParent || !currentParent.__widget) {\n        throw new Error('Attempt to attach widget to orphan node');\n      }\n      this.attach(currentParent.__widget);\n    }\n    this.showWidgetInternal((parentElement as WidgetElement), insertBefore);\n  }\n\n  private attach(parentWidget: Widget): void {\n    if (parentWidget === this.parentWidgetInternal) {\n      return;\n    }\n    if (this.parentWidgetInternal) {\n      this.detach();\n    }\n    this.parentWidgetInternal = parentWidget;\n    this.parentWidgetInternal.childrenInternal.push(this);\n    this.isRoot = false;\n  }\n\n  showWidget(): void {\n    if (this.visibleInternal) {\n      return;\n    }\n    if (!this.element.parentElement) {\n      throw new Error('Attempt to show widget that is not hidden using hideWidget().');\n    }\n    this.showWidgetInternal((this.element.parentElement as WidgetElement), this.element.nextSibling);\n  }\n\n  private showWidgetInternal(parentElement: WidgetElement, insertBefore?: Node|null): void {\n    let currentParent: (WidgetElement|null)|WidgetElement = parentElement;\n    while (currentParent && !currentParent.__widget) {\n      currentParent = parentWidgetElementOrShadowHost(currentParent);\n    }\n\n    if (this.isRoot) {\n      Widget.assert(!currentParent, 'Attempt to show root widget under another widget');\n    } else {\n      Widget.assert(\n          currentParent && currentParent.__widget === this.parentWidgetInternal,\n          'Attempt to show under node belonging to alien widget');\n    }\n\n    const wasVisible = this.visibleInternal;\n    if (wasVisible && this.element.parentElement === parentElement) {\n      return;\n    }\n\n    this.visibleInternal = true;\n\n    if (!wasVisible && this.parentIsShowing()) {\n      this.processWillShow();\n    }\n\n    this.element.classList.remove('hidden');\n\n    // Reparent\n    if (this.element.parentElement !== parentElement) {\n      if (!this.externallyManaged) {\n        Widget.incrementWidgetCounter(parentElement, this.element);\n      }\n      if (insertBefore) {\n        DOMExtension.DOMExtension.originalInsertBefore.call(parentElement, this.element, insertBefore);\n      } else {\n        DOMExtension.DOMExtension.originalAppendChild.call(parentElement, this.element);\n      }\n    }\n\n    if (!wasVisible && this.parentIsShowing()) {\n      this.processWasShown();\n    }\n\n    if (this.parentWidgetInternal && this.hasNonZeroConstraints()) {\n      this.parentWidgetInternal.invalidateConstraints();\n    } else {\n      this.processOnResize();\n    }\n  }\n\n  hideWidget(): void {\n    if (!this.visibleInternal) {\n      return;\n    }\n    this.hideWidgetInternal(false);\n  }\n\n  private hideWidgetInternal(removeFromDOM: boolean): void {\n    this.visibleInternal = false;\n    const parentElement = (this.element.parentElement as WidgetElement);\n\n    if (this.parentIsShowing()) {\n      this.processWillHide();\n    }\n\n    if (removeFromDOM) {\n      // Force legal removal\n      Widget.decrementWidgetCounter(parentElement, this.element);\n      DOMExtension.DOMExtension.originalRemoveChild.call(parentElement, this.element);\n    } else {\n      this.element.classList.add('hidden');\n    }\n\n    if (this.parentIsShowing()) {\n      this.processWasHidden();\n    }\n    if (this.parentWidgetInternal && this.hasNonZeroConstraints()) {\n      this.parentWidgetInternal.invalidateConstraints();\n    }\n  }\n\n  detach(overrideHideOnDetach?: boolean): void {\n    if (!this.parentWidgetInternal && !this.isRoot) {\n      return;\n    }\n\n    // hideOnDetach means that we should never remove element from dom - content\n    // has iframes and detaching it will hurt.\n    //\n    // overrideHideOnDetach will override hideOnDetach and the client takes\n    // responsibility for the consequences.\n    const removeFromDOM = overrideHideOnDetach || !this.shouldHideOnDetach();\n    if (this.visibleInternal) {\n      this.hideWidgetInternal(removeFromDOM);\n    } else if (removeFromDOM && this.element.parentElement) {\n      const parentElement = (this.element.parentElement as WidgetElement);\n      // Force kick out from DOM.\n      Widget.decrementWidgetCounter(parentElement, this.element);\n      DOMExtension.DOMExtension.originalRemoveChild.call(parentElement, this.element);\n    }\n\n    // Update widget hierarchy.\n    if (this.parentWidgetInternal) {\n      const childIndex = this.parentWidgetInternal.childrenInternal.indexOf(this);\n      Widget.assert(childIndex >= 0, 'Attempt to remove non-child widget');\n      this.parentWidgetInternal.childrenInternal.splice(childIndex, 1);\n      if (this.parentWidgetInternal.defaultFocusedChild === this) {\n        this.parentWidgetInternal.defaultFocusedChild = null;\n      }\n      this.parentWidgetInternal.childWasDetached(this);\n      this.parentWidgetInternal = null;\n    } else {\n      Widget.assert(this.isRoot, 'Removing non-root widget from DOM');\n    }\n  }\n\n  detachChildWidgets(): void {\n    const children = this.childrenInternal.slice();\n    for (let i = 0; i < children.length; ++i) {\n      children[i].detach();\n    }\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.element];\n  }\n\n  storeScrollPositions(): void {\n    const elements = this.elementsToRestoreScrollPositionsFor();\n    for (const container of elements) {\n      storedScrollPositions.set(container, {scrollLeft: container.scrollLeft, scrollTop: container.scrollTop});\n    }\n  }\n\n  restoreScrollPositions(): void {\n    const elements = this.elementsToRestoreScrollPositionsFor();\n    for (const container of elements) {\n      const storedPositions = storedScrollPositions.get(container);\n      if (storedPositions) {\n        container.scrollLeft = storedPositions.scrollLeft;\n        container.scrollTop = storedPositions.scrollTop;\n      }\n    }\n  }\n\n  doResize(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    // No matter what notification we are in, dispatching onResize is not needed.\n    if (!this.inNotification()) {\n      this.callOnVisibleChildren(this.processOnResize);\n    }\n  }\n\n  doLayout(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    this.notify(this.onLayout);\n    this.doResize();\n  }\n\n  registerRequiredCSS(cssFile: {cssContent: string}): void {\n    if (this.isWebComponent) {\n      ThemeSupport.ThemeSupport.instance().appendStyle((this.shadowRoot as DocumentFragment), cssFile);\n    } else {\n      ThemeSupport.ThemeSupport.instance().appendStyle(this.element, cssFile);\n    }\n  }\n\n  registerCSSFiles(cssFiles: CSSStyleSheet[]): void {\n    let root: ShadowRoot|Document;\n    if (this.isWebComponent && this.shadowRoot !== undefined) {\n      root = this.shadowRoot;\n    } else {\n      root = Helpers.GetRootNode.getRootNode(this.contentElement);\n    }\n    root.adoptedStyleSheets = root.adoptedStyleSheets.concat(cssFiles);\n    this.registeredCSSFiles = true;\n  }\n\n  printWidgetHierarchy(): void {\n    const lines: string[] = [];\n    this.collectWidgetHierarchy('', lines);\n    console.log(lines.join('\\n'));  // eslint-disable-line no-console\n  }\n\n  private collectWidgetHierarchy(prefix: string, lines: string[]): void {\n    lines.push(prefix + '[' + this.element.className + ']' + (this.childrenInternal.length ? ' {' : ''));\n\n    for (let i = 0; i < this.childrenInternal.length; ++i) {\n      this.childrenInternal[i].collectWidgetHierarchy(prefix + '    ', lines);\n    }\n\n    if (this.childrenInternal.length) {\n      lines.push(prefix + '}');\n    }\n  }\n\n  setDefaultFocusedElement(element: Element|null): void {\n    this.defaultFocusedElement = element;\n  }\n\n  setDefaultFocusedChild(child: Widget): void {\n    Widget.assert(child.parentWidgetInternal === this, 'Attempt to set non-child widget as default focused.');\n    this.defaultFocusedChild = child;\n  }\n\n  focus(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const element = (this.defaultFocusedElement as HTMLElement | null);\n    if (element) {\n      if (!element.hasFocus()) {\n        element.focus();\n      }\n      return;\n    }\n\n    if (this.defaultFocusedChild && this.defaultFocusedChild.visibleInternal) {\n      this.defaultFocusedChild.focus();\n    } else {\n      for (const child of this.childrenInternal) {\n        if (child.visibleInternal) {\n          child.focus();\n          return;\n        }\n      }\n      let child = this.contentElement.traverseNextNode(this.contentElement);\n      while (child) {\n        if (child instanceof XWidget) {\n          child.focus();\n          return;\n        }\n        child = child.traverseNextNode(this.contentElement);\n      }\n    }\n  }\n\n  hasFocus(): boolean {\n    return this.element.hasFocus();\n  }\n\n  calculateConstraints(): Constraints {\n    return new Constraints();\n  }\n\n  constraints(): Constraints {\n    if (typeof this.constraintsInternal !== 'undefined') {\n      return this.constraintsInternal;\n    }\n    if (typeof this.cachedConstraints === 'undefined') {\n      this.cachedConstraints = this.calculateConstraints();\n    }\n    return this.cachedConstraints;\n  }\n\n  setMinimumAndPreferredSizes(width: number, height: number, preferredWidth: number, preferredHeight: number): void {\n    this.constraintsInternal = new Constraints(new Size(width, height), new Size(preferredWidth, preferredHeight));\n    this.invalidateConstraints();\n  }\n\n  setMinimumSize(width: number, height: number): void {\n    this.constraintsInternal = new Constraints(new Size(width, height));\n    this.invalidateConstraints();\n  }\n\n  private hasNonZeroConstraints(): boolean {\n    const constraints = this.constraints();\n    return Boolean(\n        constraints.minimum.width || constraints.minimum.height || constraints.preferred.width ||\n        constraints.preferred.height);\n  }\n\n  suspendInvalidations(): void {\n    ++this.invalidationsSuspended;\n  }\n\n  resumeInvalidations(): void {\n    --this.invalidationsSuspended;\n    if (!this.invalidationsSuspended && this.invalidationsRequested) {\n      this.invalidateConstraints();\n    }\n  }\n\n  invalidateConstraints(): void {\n    if (this.invalidationsSuspended) {\n      this.invalidationsRequested = true;\n      return;\n    }\n    this.invalidationsRequested = false;\n    const cached = this.cachedConstraints;\n    delete this.cachedConstraints;\n    const actual = this.constraints();\n    if (!actual.isEqual(cached || null) && this.parentWidgetInternal) {\n      this.parentWidgetInternal.invalidateConstraints();\n    } else {\n      this.doLayout();\n    }\n  }\n\n  // Excludes the widget from being tracked by its parents/ancestors via\n  // widgetCounter because the widget is being handled by external code.\n  // Widgets marked as being externally managed are responsible for\n  // finishing out their own lifecycle (i.e. calling detach() before being\n  // removed from the DOM). This is e.g. used for CodeMirror.\n  //\n  // Also note that this must be called before the widget is shown so that\n  // so that its ancestor's widgetCounter is not incremented.\n  markAsExternallyManaged(): void {\n    Widget.assert(\n        !this.parentWidgetInternal, 'Attempt to mark widget as externally managed after insertion to the DOM');\n    this.externallyManaged = true;\n  }\n}\n\nconst storedScrollPositions = new WeakMap<Element, {\n  scrollLeft: number,\n  scrollTop: number,\n}>();\n\nexport class VBox extends Widget {\n  constructor(isWebComponent?: boolean, delegatesFocus?: boolean) {\n    super(isWebComponent, delegatesFocus);\n    this.contentElement.classList.add('vbox');\n  }\n\n  calculateConstraints(): Constraints {\n    let constraints: Constraints = new Constraints();\n\n    function updateForChild(this: Widget): void {\n      const child = this.constraints();\n      constraints = constraints.widthToMax(child);\n      constraints = constraints.addHeight(child);\n    }\n\n    this.callOnVisibleChildren(updateForChild);\n    return constraints;\n  }\n}\n\nexport class HBox extends Widget {\n  constructor(isWebComponent?: boolean) {\n    super(isWebComponent);\n    this.contentElement.classList.add('hbox');\n  }\n\n  calculateConstraints(): Constraints {\n    let constraints: Constraints = new Constraints();\n\n    function updateForChild(this: Widget): void {\n      const child = this.constraints();\n      constraints = constraints.addWidth(child);\n      constraints = constraints.heightToMax(child);\n    }\n\n    this.callOnVisibleChildren(updateForChild);\n    return constraints;\n  }\n}\n\nexport class VBoxWithResizeCallback extends VBox {\n  private readonly resizeCallback: () => void;\n  constructor(resizeCallback: () => void) {\n    super();\n    this.resizeCallback = resizeCallback;\n  }\n\n  onResize(): void {\n    this.resizeCallback();\n  }\n}\n\nexport class WidgetFocusRestorer {\n  private widget: Widget|null;\n  private previous: HTMLElement|null;\n  constructor(widget: Widget) {\n    this.widget = widget;\n    this.previous = (Platform.DOMUtilities.deepActiveElement(widget.element.ownerDocument) as HTMLElement | null);\n    widget.focus();\n  }\n\n  restore(): void {\n    if (!this.widget) {\n      return;\n    }\n    if (this.widget.hasFocus() && this.previous) {\n      this.previous.focus();\n    }\n    this.previous = null;\n    this.widget = null;\n  }\n}\n\nfunction parentWidgetElementOrShadowHost(element: WidgetElement): WidgetElement|null {\n  return element.parentElementOrShadowHost() as WidgetElement | null;\n}\n"],
  "mappings": "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",
  "names": []
}
