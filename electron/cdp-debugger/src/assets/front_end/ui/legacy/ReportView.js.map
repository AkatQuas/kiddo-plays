{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/ReportView.ts"],
  "sourcesContent": ["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport reportViewStyles from './reportView.css.legacy.js';\nimport {Toolbar} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport {VBox} from './Widget.js';\n\n/**\n * @deprecated Please consider using the web component version of this widget\n *             (`ui/components/report_view/ReportView.ts`) for new code.\n */\nexport class ReportView extends VBox {\n  private readonly contentBox: HTMLElement;\n  private headerElement: HTMLElement;\n  private titleElement: HTMLElement;\n  private readonly sectionList: HTMLElement;\n  private subtitleElement?: HTMLElement;\n  private urlElement?: HTMLElement;\n  constructor(title?: string) {\n    super(true);\n    this.registerRequiredCSS(reportViewStyles);\n\n    this.contentBox = this.contentElement.createChild('div', 'report-content-box');\n    this.headerElement = this.contentBox.createChild('div', 'report-header vbox');\n    this.titleElement = this.headerElement.createChild('div', 'report-title');\n    if (title) {\n      this.titleElement.textContent = title;\n    } else {\n      this.headerElement.classList.add('hidden');\n    }\n    ARIAUtils.markAsHeading(this.titleElement, 1);\n\n    this.sectionList = this.contentBox.createChild('div', 'vbox');\n  }\n\n  setTitle(title: string): void {\n    if (this.titleElement.textContent === title) {\n      return;\n    }\n    this.titleElement.textContent = title;\n    this.headerElement.classList.toggle('hidden', Boolean(title));\n  }\n\n  setSubtitle(subtitle: string): void {\n    if (this.subtitleElement && this.subtitleElement.textContent === subtitle) {\n      return;\n    }\n    if (!this.subtitleElement) {\n      this.subtitleElement = this.headerElement.createChild('div', 'report-subtitle');\n    }\n    this.subtitleElement.textContent = subtitle;\n  }\n\n  setURL(link: Element|null): void {\n    if (!this.urlElement) {\n      this.urlElement = this.headerElement.createChild('div', 'report-url link');\n    }\n    this.urlElement.removeChildren();\n    if (link) {\n      this.urlElement.appendChild(link);\n    }\n  }\n\n  createToolbar(): Toolbar {\n    const toolbar = new Toolbar('');\n    this.headerElement.appendChild(toolbar.element);\n    return toolbar;\n  }\n\n  appendSection(title: string, className?: string): Section {\n    const section = new Section(title, className);\n    section.show(this.sectionList);\n    return section;\n  }\n\n  sortSections(comparator: (arg0: Section, arg1: Section) => number): void {\n    const sections = (this.children().slice() as Section[]);\n    const sorted = sections.every((e, i, a) => !i || comparator(a[i - 1], a[i]) <= 0);\n    if (sorted) {\n      return;\n    }\n\n    this.detachChildWidgets();\n    sections.sort(comparator);\n    for (const section of sections) {\n      section.show(this.sectionList);\n    }\n  }\n\n  setHeaderVisible(visible: boolean): void {\n    this.headerElement.classList.toggle('hidden', !visible);\n  }\n\n  setBodyScrollable(scrollable: boolean): void {\n    this.contentBox.classList.toggle('no-scroll', !scrollable);\n  }\n}\n\nexport class Section extends VBox {\n  private readonly headerElement: HTMLElement;\n  private titleElement: HTMLElement;\n  private fieldList: HTMLElement;\n  private readonly fieldMap: Map<string, Element>;\n  constructor(title: string, className?: string) {\n    super();\n    this.element.classList.add('report-section');\n    if (className) {\n      this.element.classList.add(className);\n    }\n    this.headerElement = this.element.createChild('div', 'report-section-header');\n    this.titleElement = this.headerElement.createChild('div', 'report-section-title');\n    this.setTitle(title);\n    ARIAUtils.markAsHeading(this.titleElement, 2);\n    this.fieldList = this.element.createChild('div', 'vbox');\n    this.fieldMap = new Map();\n  }\n\n  title(): string {\n    return this.titleElement.textContent || '';\n  }\n\n  setTitle(title: string, tooltip?: string): void {\n    if (this.titleElement.textContent !== title) {\n      this.titleElement.textContent = title;\n    }\n    Tooltip.install(this.titleElement, tooltip || '');\n    this.titleElement.classList.toggle('hidden', !this.titleElement.textContent);\n  }\n\n  /**\n   * Declares the overall container to be a group and assigns a title.\n   */\n  setUiGroupTitle(groupTitle: string): void {\n    ARIAUtils.markAsGroup(this.element);\n    ARIAUtils.setAccessibleName(this.element, groupTitle);\n  }\n\n  createToolbar(): Toolbar {\n    const toolbar = new Toolbar('');\n    this.headerElement.appendChild(toolbar.element);\n    return toolbar;\n  }\n\n  appendField(title: string, textValue?: string): HTMLElement {\n    let row = this.fieldMap.get(title);\n    if (!row) {\n      row = this.fieldList.createChild('div', 'report-field');\n      row.createChild('div', 'report-field-name').textContent = title;\n      this.fieldMap.set(title, row);\n      row.createChild('div', 'report-field-value');\n    }\n    if (textValue && row.lastElementChild) {\n      row.lastElementChild.textContent = textValue;\n    }\n    return row.lastElementChild as HTMLElement;\n  }\n\n  appendFlexedField(title: string, textValue?: string): Element {\n    const field = this.appendField(title, textValue);\n    field.classList.add('report-field-value-is-flexed');\n    return field;\n  }\n\n  removeField(title: string): void {\n    const row = this.fieldMap.get(title);\n    if (row) {\n      row.remove();\n    }\n    this.fieldMap.delete(title);\n  }\n\n  setFieldVisible(title: string, visible: boolean): void {\n    const row = this.fieldMap.get(title);\n    if (row) {\n      row.classList.toggle('hidden', !visible);\n    }\n  }\n\n  fieldValue(title: string): Element|null {\n    const row = this.fieldMap.get(title);\n    return row ? row.lastElementChild : null;\n  }\n\n  appendRow(): HTMLElement {\n    return this.fieldList.createChild('div', 'report-row') as HTMLElement;\n  }\n\n  appendSelectableRow(): HTMLElement {\n    return this.fieldList.createChild('div', 'report-row report-row-selectable') as HTMLElement;\n  }\n\n  clearContent(): void {\n    this.fieldList.removeChildren();\n    this.fieldMap.clear();\n  }\n\n  markFieldListAsGroup(): void {\n    ARIAUtils.markAsGroup(this.fieldList);\n    ARIAUtils.setAccessibleName(this.fieldList, this.title());\n  }\n\n  setIconMasked(masked: boolean): void {\n    this.element.classList.toggle('show-mask', masked);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
