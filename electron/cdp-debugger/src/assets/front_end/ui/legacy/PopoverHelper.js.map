{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/PopoverHelper.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {GlassPane, MarginBehavior, SizeBehavior} from './GlassPane.js';\nimport popoverStyles from './popover.css.legacy.js';\n\nexport class PopoverHelper {\n  private disableOnClick: boolean;\n  private hasPadding: boolean;\n  private getRequest: (arg0: MouseEvent) => PopoverRequest | null;\n  private scheduledRequest: PopoverRequest|null;\n  private hidePopoverCallback: (() => void)|null;\n  private readonly container: Element;\n  private showTimeout: number;\n  private hideTimeout: number;\n  private hidePopoverTimer: number|null;\n  private showPopoverTimer: number|null;\n  private readonly boundMouseDown: (event: Event) => void;\n  private readonly boundMouseMove: (ev: Event) => void;\n  private readonly boundMouseOut: (event: Event) => void;\n  constructor(container: Element, getRequest: (arg0: MouseEvent) => PopoverRequest | null) {\n    this.disableOnClick = false;\n    this.hasPadding = false;\n    this.getRequest = getRequest;\n    this.scheduledRequest = null;\n    this.hidePopoverCallback = null;\n    this.container = container;\n    this.showTimeout = 0;\n    this.hideTimeout = 0;\n    this.hidePopoverTimer = null;\n    this.showPopoverTimer = null;\n    this.boundMouseDown = this.mouseDown.bind(this);\n    this.boundMouseMove = this.mouseMove.bind(this);\n    this.boundMouseOut = this.mouseOut.bind(this);\n    this.container.addEventListener('mousedown', this.boundMouseDown, false);\n    this.container.addEventListener('mousemove', this.boundMouseMove, false);\n    this.container.addEventListener('mouseout', this.boundMouseOut, false);\n    this.setTimeout(1000);\n  }\n\n  setTimeout(showTimeout: number, hideTimeout?: number): void {\n    this.showTimeout = showTimeout;\n    this.hideTimeout = typeof hideTimeout === 'number' ? hideTimeout : showTimeout / 2;\n  }\n\n  setHasPadding(hasPadding: boolean): void {\n    this.hasPadding = hasPadding;\n  }\n\n  setDisableOnClick(disableOnClick: boolean): void {\n    this.disableOnClick = disableOnClick;\n  }\n\n  private eventInScheduledContent(ev: Event): boolean {\n    const event = (ev as MouseEvent);\n    return this.scheduledRequest ? this.scheduledRequest.box.contains(event.clientX, event.clientY) : false;\n  }\n\n  private mouseDown(event: Event): void {\n    if (this.disableOnClick) {\n      this.hidePopover();\n      return;\n    }\n    if (this.eventInScheduledContent(event)) {\n      return;\n    }\n\n    this.startHidePopoverTimer(0);\n    this.stopShowPopoverTimer();\n    this.startShowPopoverTimer((event as MouseEvent), 0);\n  }\n\n  private mouseMove(ev: Event): void {\n    const event = (ev as MouseEvent);\n    // Pretend that nothing has happened.\n    if (this.eventInScheduledContent(event)) {\n      return;\n    }\n\n    this.startHidePopoverTimer(this.hideTimeout);\n    this.stopShowPopoverTimer();\n    if (event.which && this.disableOnClick) {\n      return;\n    }\n    this.startShowPopoverTimer(event, this.isPopoverVisible() ? this.showTimeout * 0.6 : this.showTimeout);\n  }\n\n  private popoverMouseMove(_event: Event): void {\n    this.stopHidePopoverTimer();\n  }\n\n  private popoverMouseOut(popover: GlassPane, ev: Event): void {\n    const event = (ev as MouseEvent);\n    if (!popover.isShowing()) {\n      return;\n    }\n    const node = (event.relatedTarget as Node | null);\n    if (node && !node.isSelfOrDescendant(popover.contentElement)) {\n      this.startHidePopoverTimer(this.hideTimeout);\n    }\n  }\n\n  private mouseOut(event: Event): void {\n    if (!this.isPopoverVisible()) {\n      return;\n    }\n    if (!this.eventInScheduledContent(event)) {\n      this.startHidePopoverTimer(this.hideTimeout);\n    }\n  }\n\n  private startHidePopoverTimer(timeout: number): void {\n    // User has |timeout| ms to reach the popup.\n    if (!this.hidePopoverCallback || this.hidePopoverTimer) {\n      return;\n    }\n\n    this.hidePopoverTimer = window.setTimeout(() => {\n      this.hidePopover();\n      this.hidePopoverTimer = null;\n    }, timeout);\n  }\n\n  private startShowPopoverTimer(event: MouseEvent, timeout: number): void {\n    this.scheduledRequest = this.getRequest.call(null, event);\n    if (!this.scheduledRequest) {\n      return;\n    }\n\n    this.showPopoverTimer = window.setTimeout(() => {\n      this.showPopoverTimer = null;\n      this.stopHidePopoverTimer();\n      this.hidePopoverInternal();\n      const document = ((event.target as Node).ownerDocument) as Document;\n      this.showPopover(document);\n    }, timeout);\n  }\n\n  private stopShowPopoverTimer(): void {\n    if (!this.showPopoverTimer) {\n      return;\n    }\n    clearTimeout(this.showPopoverTimer);\n    this.showPopoverTimer = null;\n  }\n\n  isPopoverVisible(): boolean {\n    return Boolean(this.hidePopoverCallback);\n  }\n\n  hidePopover(): void {\n    this.stopShowPopoverTimer();\n    this.hidePopoverInternal();\n  }\n\n  private hidePopoverInternal(): void {\n    if (!this.hidePopoverCallback) {\n      return;\n    }\n    this.hidePopoverCallback.call(null);\n    this.hidePopoverCallback = null;\n  }\n\n  private showPopover(document: Document): void {\n    const popover = new GlassPane();\n    popover.registerRequiredCSS(popoverStyles);\n    popover.setSizeBehavior(SizeBehavior.MeasureContent);\n    popover.setMarginBehavior(MarginBehavior.Arrow);\n    const request = this.scheduledRequest;\n    if (!request) {\n      return;\n    }\n    void request.show.call(null, popover).then(success => {\n      if (!success) {\n        return;\n      }\n\n      if (this.scheduledRequest !== request) {\n        if (request.hide) {\n          request.hide.call(null);\n        }\n        return;\n      }\n\n      // This should not happen, but we hide previous popover to be on the safe side.\n      if (popoverHelperInstance) {\n        console.error('One popover is already visible');\n        popoverHelperInstance.hidePopover();\n      }\n      popoverHelperInstance = this;\n\n      popover.contentElement.classList.toggle('has-padding', this.hasPadding);\n      popover.contentElement.addEventListener('mousemove', this.popoverMouseMove.bind(this), true);\n      popover.contentElement.addEventListener('mouseout', this.popoverMouseOut.bind(this, popover), true);\n      popover.setContentAnchorBox(request.box);\n      popover.show(document);\n\n      this.hidePopoverCallback = (): void => {\n        if (request.hide) {\n          request.hide.call(null);\n        }\n        popover.hide();\n        popoverHelperInstance = null;\n      };\n    });\n  }\n\n  private stopHidePopoverTimer(): void {\n    if (!this.hidePopoverTimer) {\n      return;\n    }\n    clearTimeout(this.hidePopoverTimer);\n    this.hidePopoverTimer = null;\n\n    // We know that we reached the popup, but we might have moved over other elements.\n    // Discard pending command.\n    this.stopShowPopoverTimer();\n  }\n\n  dispose(): void {\n    this.container.removeEventListener('mousedown', this.boundMouseDown, false);\n    this.container.removeEventListener('mousemove', this.boundMouseMove, false);\n    this.container.removeEventListener('mouseout', this.boundMouseOut, false);\n  }\n}\n\nlet popoverHelperInstance: PopoverHelper|null = null;\nexport interface PopoverRequest {\n  box: AnchorBox;\n  show: (arg0: GlassPane) => Promise<boolean>;\n  hide?: (() => void);\n}\n"],
  "mappings": "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",
  "names": []
}
