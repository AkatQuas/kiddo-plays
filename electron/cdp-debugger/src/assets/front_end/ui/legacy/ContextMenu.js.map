{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/ContextMenu.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Root from '../../core/root/root.js';\n\nimport {ActionRegistry} from './ActionRegistry.js';\nimport {ShortcutRegistry} from './ShortcutRegistry.js';\nimport type {SoftContextMenuDescriptor} from './SoftContextMenu.js';\nimport {SoftContextMenu} from './SoftContextMenu.js';\nimport {deepElementFromEvent} from './UIUtils.js';\n\nexport class Item {\n  private readonly typeInternal: string;\n  protected readonly label: string|undefined;\n  protected disabled: boolean|undefined;\n  private readonly checked: boolean|undefined;\n  protected contextMenu: ContextMenu|null;\n  protected idInternal: number|undefined;\n  customElement?: Element;\n  private shortcut?: string;\n\n  constructor(contextMenu: ContextMenu|null, type: string, label?: string, disabled?: boolean, checked?: boolean) {\n    this.typeInternal = type;\n    this.label = label;\n    this.disabled = disabled;\n    this.checked = checked;\n    this.contextMenu = contextMenu;\n    this.idInternal = undefined;\n    if (type === 'item' || type === 'checkbox') {\n      this.idInternal = contextMenu ? contextMenu.nextId() : 0;\n    }\n  }\n\n  id(): number {\n    if (this.idInternal === undefined) {\n      throw new Error('Tried to access a ContextMenu Item ID but none was set.');\n    }\n    return this.idInternal;\n  }\n\n  type(): string {\n    return this.typeInternal;\n  }\n\n  isEnabled(): boolean {\n    return !this.disabled;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.disabled = !enabled;\n  }\n\n  buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    switch (this.typeInternal) {\n      case 'item': {\n        const result = {\n          type: 'item',\n          id: this.idInternal,\n          label: this.label,\n          enabled: !this.disabled,\n          checked: undefined,\n          subItems: undefined,\n        };\n        if (this.customElement) {\n          const resultAsSoftContextMenuItem = (result as SoftContextMenuDescriptor);\n          resultAsSoftContextMenuItem.element = (this.customElement as Element);\n        }\n        if (this.shortcut) {\n          const resultAsSoftContextMenuItem = (result as SoftContextMenuDescriptor);\n          resultAsSoftContextMenuItem.shortcut = this.shortcut;\n        }\n        return result;\n      }\n      case 'separator': {\n        return {\n          type: 'separator',\n          id: undefined,\n          label: undefined,\n          enabled: undefined,\n          checked: undefined,\n          subItems: undefined,\n        };\n      }\n      case 'checkbox': {\n        const result = {\n          type: 'checkbox',\n          id: this.idInternal,\n          label: this.label,\n          checked: Boolean(this.checked),\n          enabled: !this.disabled,\n          subItems: undefined,\n        };\n        if (this.customElement) {\n          const resultAsSoftContextMenuItem = (result as SoftContextMenuDescriptor);\n          resultAsSoftContextMenuItem.element = (this.customElement as Element);\n        }\n        return result;\n      }\n    }\n    throw new Error('Invalid item type:' + this.typeInternal);\n  }\n\n  setShortcut(shortcut: string): void {\n    this.shortcut = shortcut;\n  }\n}\n\nexport class Section {\n  private readonly contextMenu: ContextMenu|null;\n  readonly items: Item[];\n  constructor(contextMenu: ContextMenu|null) {\n    this.contextMenu = contextMenu;\n    this.items = [];\n  }\n\n  appendItem(label: string, handler: () => void, disabled?: boolean, additionalElement?: Element): Item {\n    const item = new Item(this.contextMenu, 'item', label, disabled);\n    if (additionalElement) {\n      item.customElement = additionalElement;\n    }\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    return item;\n  }\n\n  appendCustomItem(element: Element): Item {\n    const item = new Item(this.contextMenu, 'item');\n    item.customElement = element;\n    this.items.push(item);\n    return item;\n  }\n\n  appendSeparator(): Item {\n    const item = new Item(this.contextMenu, 'separator');\n    this.items.push(item);\n    return item;\n  }\n\n  appendAction(actionId: string, label?: string, optional?: boolean): void {\n    const action = ActionRegistry.instance().action(actionId);\n    if (!action) {\n      if (!optional) {\n        console.error(`Action ${actionId} was not defined`);\n      }\n      return;\n    }\n    if (!label) {\n      label = action.title();\n    }\n    const result = this.appendItem(label, action.execute.bind(action));\n    const shortcut = ShortcutRegistry.instance().shortcutTitleForAction(actionId);\n    if (shortcut) {\n      result.setShortcut(shortcut);\n    }\n  }\n\n  appendSubMenuItem(label: string, disabled?: boolean): SubMenu {\n    const item = new SubMenu(this.contextMenu, label, disabled);\n    item.init();\n    this.items.push(item);\n    return item;\n  }\n\n  appendCheckboxItem(\n      label: string, handler: () => void, checked?: boolean, disabled?: boolean, additionalElement?: Element): Item {\n    const item = new Item(this.contextMenu, 'checkbox', label, disabled, checked);\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    if (additionalElement) {\n      item.customElement = additionalElement;\n    }\n    return item;\n  }\n}\n\nexport class SubMenu extends Item {\n  private readonly sections: Map<string, Section>;\n  private readonly sectionList: Section[];\n\n  constructor(contextMenu: ContextMenu|null, label?: string, disabled?: boolean) {\n    super(contextMenu, 'subMenu', label, disabled);\n    this.sections = new Map();\n    this.sectionList = [];\n  }\n\n  init(): void {\n    ContextMenu.groupWeights.forEach(name => this.section(name));\n  }\n\n  section(name?: string): Section {\n    let section: Section|(Section | null | undefined) = name ? this.sections.get(name) : null;\n    if (!section) {\n      section = new Section(this.contextMenu);\n      if (name) {\n        this.sections.set(name, section);\n        this.sectionList.push(section);\n      } else {\n        this.sectionList.splice(ContextMenu.groupWeights.indexOf('default'), 0, section);\n      }\n    }\n    return section;\n  }\n\n  headerSection(): Section {\n    return this.section('header');\n  }\n\n  newSection(): Section {\n    return this.section('new');\n  }\n\n  revealSection(): Section {\n    return this.section('reveal');\n  }\n\n  clipboardSection(): Section {\n    return this.section('clipboard');\n  }\n\n  editSection(): Section {\n    return this.section('edit');\n  }\n\n  debugSection(): Section {\n    return this.section('debug');\n  }\n\n  viewSection(): Section {\n    return this.section('view');\n  }\n\n  defaultSection(): Section {\n    return this.section('default');\n  }\n\n  saveSection(): Section {\n    return this.section('save');\n  }\n\n  footerSection(): Section {\n    return this.section('footer');\n  }\n\n  buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    const result: Host.InspectorFrontendHostAPI.ContextMenuDescriptor|SoftContextMenuDescriptor = {\n      type: 'subMenu',\n      label: this.label,\n      enabled: !this.disabled,\n      subItems: [],\n      id: undefined,\n      checked: undefined,\n    };\n\n    const nonEmptySections = this.sectionList.filter(section => Boolean(section.items.length));\n    for (const section of nonEmptySections) {\n      for (const item of section.items) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push(item.buildDescriptor());\n      }\n      if (section !== nonEmptySections[nonEmptySections.length - 1]) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push({\n          type: 'separator',\n          id: undefined,\n          subItems: undefined,\n          checked: undefined,\n          enabled: undefined,\n          label: undefined,\n        });\n      }\n    }\n    return result;\n  }\n\n  appendItemsAtLocation(location: string): void {\n    const items: ContextMenuItemRegistration[] = getRegisteredItems();\n    items.sort((firstItem, secondItem) => {\n      const order1 = firstItem.order || 0;\n      const order2 = secondItem.order || 0;\n      return order1 - order2;\n    });\n    for (const item of items) {\n      if (item.experiment && !Root.Runtime.experiments.isEnabled(item.experiment)) {\n        continue;\n      }\n\n      const itemLocation = item.location;\n      const actionId = item.actionId;\n      if (!itemLocation || !itemLocation.startsWith(location + '/')) {\n        continue;\n      }\n\n      const section = itemLocation.substr(location.length + 1);\n      if (!section || section.includes('/')) {\n        continue;\n      }\n\n      if (actionId) {\n        this.section(section).appendAction(actionId);\n      }\n    }\n  }\n\n  private static uniqueSectionName: number = 0;\n}\n\nexport interface ContextMenuOptions {\n  useSoftMenu?: boolean;\n  onSoftMenuClosed?: () => void;\n  x?: number;\n  y?: number;\n}\n\nexport class ContextMenu extends SubMenu {\n  protected contextMenu: this;\n  private readonly defaultSectionInternal: Section;\n  private pendingPromises: Promise<Provider[]>[];\n  private pendingTargets: Object[];\n  private readonly event: MouseEvent;\n  private readonly useSoftMenu: boolean;\n  private x: number;\n  private y: number;\n  private onSoftMenuClosed?: () => void;\n  private readonly handlers: Map<number, () => void>;\n  idInternal: number;\n  private softMenu?: SoftContextMenu;\n  private contextMenuLabel?: string;\n\n  constructor(event: Event, options: ContextMenuOptions = {}) {\n    super(null);\n    const mouseEvent = (event as MouseEvent);\n    this.contextMenu = this;\n    super.init();\n    this.defaultSectionInternal = this.defaultSection();\n    this.pendingPromises = [];\n    this.pendingTargets = [];\n    this.event = mouseEvent;\n    this.useSoftMenu = Boolean(options.useSoftMenu);\n    this.x = options.x === undefined ? mouseEvent.x : options.x;\n    this.y = options.y === undefined ? mouseEvent.y : options.y;\n    this.onSoftMenuClosed = options.onSoftMenuClosed;\n    this.handlers = new Map();\n    this.idInternal = 0;\n\n    const target = deepElementFromEvent(event);\n    if (target) {\n      this.appendApplicableItems((target as Object));\n    }\n  }\n\n  static initialize(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetUseSoftMenu, setUseSoftMenu);\n    function setUseSoftMenu(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n      ContextMenu.useSoftMenu = event.data;\n    }\n  }\n\n  static installHandler(doc: Document): void {\n    doc.body.addEventListener('contextmenu', handler, false);\n\n    function handler(event: Event): void {\n      const contextMenu = new ContextMenu(event);\n      void contextMenu.show();\n    }\n  }\n\n  nextId(): number {\n    return this.idInternal++;\n  }\n\n  async show(): Promise<void> {\n    ContextMenu.pendingMenu = this;\n    this.event.consume(true);\n    const loadedProviders: Provider[][] = await Promise.all(this.pendingPromises);\n\n    // After loading all providers, the contextmenu might be hidden again, so bail out.\n    if (ContextMenu.pendingMenu !== this) {\n      return;\n    }\n    ContextMenu.pendingMenu = null;\n\n    for (let i = 0; i < loadedProviders.length; ++i) {\n      const providers = loadedProviders[i];\n      const target = this.pendingTargets[i];\n\n      for (const provider of providers) {\n        provider.appendApplicableItems(this.event, this, target);\n      }\n    }\n\n    this.pendingPromises = [];\n    this.pendingTargets = [];\n\n    this.innerShow();\n  }\n\n  discard(): void {\n    if (this.softMenu) {\n      this.softMenu.discard();\n    }\n  }\n\n  private innerShow(): void {\n    const menuObject = this.buildMenuDescriptors();\n    const eventTarget = this.event.target;\n    if (!eventTarget) {\n      return;\n    }\n    const ownerDocument = (eventTarget as HTMLElement).ownerDocument;\n    if (this.useSoftMenu || ContextMenu.useSoftMenu ||\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      this.softMenu = new SoftContextMenu(\n          (menuObject as SoftContextMenuDescriptor[]), this.itemSelected.bind(this), undefined, this.onSoftMenuClosed);\n      this.softMenu.show((ownerDocument as Document), new AnchorBox(this.x, this.y, 0, 0));\n      if (this.contextMenuLabel) {\n        this.softMenu.setContextMenuElementLabel(this.contextMenuLabel);\n      }\n    } else {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.showContextMenuAtPoint(\n          this.x, this.y, menuObject, (ownerDocument as Document));\n\n      function listenToEvents(this: ContextMenu): void {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n      }\n\n      // showContextMenuAtPoint call above synchronously issues a clear event for previous context menu (if any),\n      // so we skip it before subscribing to the clear event.\n      queueMicrotask(listenToEvents.bind(this));\n    }\n  }\n\n  setContextMenuLabel(label: string): void {\n    this.contextMenuLabel = label;\n  }\n\n  setX(x: number): void {\n    this.x = x;\n  }\n\n  setY(y: number): void {\n    this.y = y;\n  }\n\n  setHandler(id: number, handler: () => void): void {\n    if (handler) {\n      this.handlers.set(id, handler);\n    }\n  }\n\n  private buildMenuDescriptors(): (SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor)[] {\n    return super.buildDescriptor().subItems as (\n               SoftContextMenuDescriptor | Host.InspectorFrontendHostAPI.ContextMenuDescriptor)[];\n  }\n\n  private onItemSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.itemSelected(event.data);\n  }\n\n  private itemSelected(id: number): void {\n    const handler = this.handlers.get(id);\n    if (handler) {\n      handler.call(this);\n    }\n    this.menuCleared();\n  }\n\n  private menuCleared(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n  }\n\n  containsTarget(target: Object): boolean {\n    return this.pendingTargets.indexOf(target) >= 0;\n  }\n\n  appendApplicableItems(target: Object): void {\n    this.pendingPromises.push(loadApplicableRegisteredProviders(target));\n    this.pendingTargets.push(target);\n  }\n\n  markAsMenuItemCheckBox(): void {\n    if (this.softMenu) {\n      this.softMenu.markAsMenuItemCheckBox();\n    }\n  }\n\n  private static pendingMenu: ContextMenu|null = null;\n  private static useSoftMenu = false;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly groupWeights =\n      ['header', 'new', 'reveal', 'edit', 'clipboard', 'debug', 'view', 'default', 'save', 'footer'];\n}\n\nexport interface Provider {\n  appendApplicableItems(event: Event, contextMenu: ContextMenu, target: Object): void;\n}\n\nconst registeredProviders: ProviderRegistration[] = [];\n\nexport function registerProvider(registration: ProviderRegistration): void {\n  registeredProviders.push(registration);\n}\n\nasync function loadApplicableRegisteredProviders(target: Object): Promise<Provider[]> {\n  return Promise.all(\n      registeredProviders.filter(isProviderApplicableToContextTypes).map(registration => registration.loadProvider()));\n\n  function isProviderApplicableToContextTypes(providerRegistration: ProviderRegistration): boolean {\n    if (!Root.Runtime.Runtime.isDescriptorEnabled(\n            {experiment: providerRegistration.experiment, condition: undefined})) {\n      return false;\n    }\n    if (!providerRegistration.contextTypes) {\n      return true;\n    }\n    for (const contextType of providerRegistration.contextTypes()) {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      if (target instanceof contextType) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nconst registeredItemsProviders: ContextMenuItemRegistration[] = [];\n\nexport function registerItem(registration: ContextMenuItemRegistration): void {\n  registeredItemsProviders.push(registration);\n}\n\nexport function maybeRemoveItem(registration: ContextMenuItemRegistration): boolean {\n  const itemIndex = registeredItemsProviders.findIndex(\n      item => item.actionId === registration.actionId && item.location === registration.location);\n  if (itemIndex < 0) {\n    return false;\n  }\n  registeredItemsProviders.splice(itemIndex, 1);\n  return true;\n}\n\nfunction getRegisteredItems(): ContextMenuItemRegistration[] {\n  return registeredItemsProviders;\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum ItemLocation {\n  DEVICE_MODE_MENU_SAVE = 'deviceModeMenu/save',\n  MAIN_MENU = 'mainMenu',\n  MAIN_MENU_DEFAULT = 'mainMenu/default',\n  MAIN_MENU_FOOTER = 'mainMenu/footer',\n  MAIN_MENU_HELP_DEFAULT = 'mainMenuHelp/default',\n  NAVIGATOR_MENU_DEFAULT = 'navigatorMenu/default',\n  TIMELINE_MENU_OPEN = 'timelineMenu/open',\n}\n\nexport interface ProviderRegistration {\n  contextTypes: () => unknown[];\n  loadProvider: () => Promise<Provider>;\n  experiment?: Root.Runtime.ExperimentName;\n}\n\nexport interface ContextMenuItemRegistration {\n  location: ItemLocation;\n  actionId: string;\n  order?: number;\n  experiment?: Root.Runtime.ExperimentName;\n}\n"],
  "mappings": "AA+BA;AACA;AAEA;AACA;AAEA;AACA;AAEO,kBAAW;AAAA,EACC;AAAA,EACE;AAAA,EACT;AAAA,EACO;AAAA,EACP;AAAA,EACA;AAAA,EACV;AAAA,EACQ;AAAA,EAER,YAAY,aAA+B,MAAc,OAAgB,UAAoB,SAAmB;AAC9G,SAAK,eAAe;AACpB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,QAAI,SAAS,UAAU,SAAS,YAAY;AAC1C,WAAK,aAAa,cAAc,YAAY,WAAW;AAAA;AAAA;AAAA,EAI3D,KAAa;AACX,QAAI,KAAK,eAAe,QAAW;AACjC,YAAM,IAAI,MAAM;AAAA;AAElB,WAAO,KAAK;AAAA;AAAA,EAGd,OAAe;AACb,WAAO,KAAK;AAAA;AAAA,EAGd,YAAqB;AACnB,WAAO,CAAC,KAAK;AAAA;AAAA,EAGf,WAAW,SAAwB;AACjC,SAAK,WAAW,CAAC;AAAA;AAAA,EAGnB,kBAAiG;AAC/F,YAAQ,KAAK;AAAA,WACN,QAAQ;AACX,cAAM,SAAS;AAAA,UACb,MAAM;AAAA,UACN,IAAI,KAAK;AAAA,UACT,OAAO,KAAK;AAAA,UACZ,SAAS,CAAC,KAAK;AAAA,UACf,SAAS;AAAA,UACT,UAAU;AAAA;AAEZ,YAAI,KAAK,eAAe;AACtB,gBAAM,8BAA+B;AACrC,sCAA4B,UAAW,KAAK;AAAA;AAE9C,YAAI,KAAK,UAAU;AACjB,gBAAM,8BAA+B;AACrC,sCAA4B,WAAW,KAAK;AAAA;AAE9C,eAAO;AAAA;AAAA,WAEJ,aAAa;AAChB,eAAO;AAAA,UACL,MAAM;AAAA,UACN,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS;AAAA,UACT,UAAU;AAAA;AAAA;AAAA,WAGT,YAAY;AACf,cAAM,SAAS;AAAA,UACb,MAAM;AAAA,UACN,IAAI,KAAK;AAAA,UACT,OAAO,KAAK;AAAA,UACZ,SAAS,QAAQ,KAAK;AAAA,UACtB,SAAS,CAAC,KAAK;AAAA,UACf,UAAU;AAAA;AAEZ,YAAI,KAAK,eAAe;AACtB,gBAAM,8BAA+B;AACrC,sCAA4B,UAAW,KAAK;AAAA;AAE9C,eAAO;AAAA;AAAA;AAGX,UAAM,IAAI,MAAM,uBAAuB,KAAK;AAAA;AAAA,EAG9C,YAAY,UAAwB;AAClC,SAAK,WAAW;AAAA;AAAA;AAIb,qBAAc;AAAA,EACF;AAAA,EACR;AAAA,EACT,YAAY,aAA+B;AACzC,SAAK,cAAc;AACnB,SAAK,QAAQ;AAAA;AAAA,EAGf,WAAW,OAAe,SAAqB,UAAoB,mBAAmC;AACpG,UAAM,OAAO,IAAI,KAAK,KAAK,aAAa,QAAQ,OAAO;AACvD,QAAI,mBAAmB;AACrB,WAAK,gBAAgB;AAAA;AAEvB,SAAK,MAAM,KAAK;AAChB,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,WAAW,KAAK,MAAM;AAAA;AAEzC,WAAO;AAAA;AAAA,EAGT,iBAAiB,SAAwB;AACvC,UAAM,OAAO,IAAI,KAAK,KAAK,aAAa;AACxC,SAAK,gBAAgB;AACrB,SAAK,MAAM,KAAK;AAChB,WAAO;AAAA;AAAA,EAGT,kBAAwB;AACtB,UAAM,OAAO,IAAI,KAAK,KAAK,aAAa;AACxC,SAAK,MAAM,KAAK;AAChB,WAAO;AAAA;AAAA,EAGT,aAAa,UAAkB,OAAgB,UAA0B;AACvE,UAAM,SAAS,eAAe,WAAW,OAAO;AAChD,QAAI,CAAC,QAAQ;AACX,UAAI,CAAC,UAAU;AACb,gBAAQ,MAAM,UAAU;AAAA;AAE1B;AAAA;AAEF,QAAI,CAAC,OAAO;AACV,cAAQ,OAAO;AAAA;AAEjB,UAAM,SAAS,KAAK,WAAW,OAAO,OAAO,QAAQ,KAAK;AAC1D,UAAM,WAAW,iBAAiB,WAAW,uBAAuB;AACpE,QAAI,UAAU;AACZ,aAAO,YAAY;AAAA;AAAA;AAAA,EAIvB,kBAAkB,OAAe,UAA6B;AAC5D,UAAM,OAAO,IAAI,QAAQ,KAAK,aAAa,OAAO;AAClD,SAAK;AACL,SAAK,MAAM,KAAK;AAChB,WAAO;AAAA;AAAA,EAGT,mBACI,OAAe,SAAqB,SAAmB,UAAoB,mBAAmC;AAChH,UAAM,OAAO,IAAI,KAAK,KAAK,aAAa,YAAY,OAAO,UAAU;AACrE,SAAK,MAAM,KAAK;AAChB,QAAI,KAAK,aAAa;AACpB,WAAK,YAAY,WAAW,KAAK,MAAM;AAAA;AAEzC,QAAI,mBAAmB;AACrB,WAAK,gBAAgB;AAAA;AAEvB,WAAO;AAAA;AAAA;AAIJ,6BAAsB,KAAK;AAAA,EACf;AAAA,EACA;AAAA,EAEjB,YAAY,aAA+B,OAAgB,UAAoB;AAC7E,UAAM,aAAa,WAAW,OAAO;AACrC,SAAK,WAAW,oBAAI;AACpB,SAAK,cAAc;AAAA;AAAA,EAGrB,OAAa;AACX,gBAAY,aAAa,QAAQ,UAAQ,KAAK,QAAQ;AAAA;AAAA,EAGxD,QAAQ,MAAwB;AAC9B,QAAI,UAAgD,OAAO,KAAK,SAAS,IAAI,QAAQ;AACrF,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAI,QAAQ,KAAK;AAC3B,UAAI,MAAM;AACR,aAAK,SAAS,IAAI,MAAM;AACxB,aAAK,YAAY,KAAK;AAAA,aACjB;AACL,aAAK,YAAY,OAAO,YAAY,aAAa,QAAQ,YAAY,GAAG;AAAA;AAAA;AAG5E,WAAO;AAAA;AAAA,EAGT,gBAAyB;AACvB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,aAAsB;AACpB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,gBAAyB;AACvB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,mBAA4B;AAC1B,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,cAAuB;AACrB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,eAAwB;AACtB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,cAAuB;AACrB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,iBAA0B;AACxB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,cAAuB;AACrB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,gBAAyB;AACvB,WAAO,KAAK,QAAQ;AAAA;AAAA,EAGtB,kBAAiG;AAC/F,UAAM,SAAwF;AAAA,MAC5F,MAAM;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,SAAS,CAAC,KAAK;AAAA,MACf,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,SAAS;AAAA;AAGX,UAAM,mBAAmB,KAAK,YAAY,OAAO,aAAW,QAAQ,QAAQ,MAAM;AAClF,eAAW,WAAW,kBAAkB;AACtC,iBAAW,QAAQ,QAAQ,OAAO;AAChC,YAAI,CAAC,OAAO,UAAU;AACpB,iBAAO,WAAW;AAAA;AAEpB,eAAO,SAAS,KAAK,KAAK;AAAA;AAE5B,UAAI,YAAY,iBAAiB,iBAAiB,SAAS,IAAI;AAC7D,YAAI,CAAC,OAAO,UAAU;AACpB,iBAAO,WAAW;AAAA;AAEpB,eAAO,SAAS,KAAK;AAAA,UACnB,MAAM;AAAA,UACN,IAAI;AAAA,UACJ,UAAU;AAAA,UACV,SAAS;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA;AAAA;AAAA;AAIb,WAAO;AAAA;AAAA,EAGT,sBAAsB,UAAwB;AAC5C,UAAM,QAAuC;AAC7C,UAAM,KAAK,CAAC,WAAW,eAAe;AACpC,YAAM,SAAS,UAAU,SAAS;AAClC,YAAM,SAAS,WAAW,SAAS;AACnC,aAAO,SAAS;AAAA;AAElB,eAAW,QAAQ,OAAO;AACxB,UAAI,KAAK,cAAc,CAAC,KAAK,QAAQ,YAAY,UAAU,KAAK,aAAa;AAC3E;AAAA;AAGF,YAAM,eAAe,KAAK;AAC1B,YAAM,WAAW,KAAK;AACtB,UAAI,CAAC,gBAAgB,CAAC,aAAa,WAAW,WAAW,MAAM;AAC7D;AAAA;AAGF,YAAM,UAAU,aAAa,OAAO,SAAS,SAAS;AACtD,UAAI,CAAC,WAAW,QAAQ,SAAS,MAAM;AACrC;AAAA;AAGF,UAAI,UAAU;AACZ,aAAK,QAAQ,SAAS,aAAa;AAAA;AAAA;AAAA;AAAA,SAK1B,oBAA4B;AAAA;AAUtC,iCAA0B,QAAQ;AAAA,EAC7B;AAAA,EACO;AAAA,EACT;AAAA,EACA;AAAA,EACS;AAAA,EACA;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACS;AAAA,EACjB;AAAA,EACQ;AAAA,EACA;AAAA,EAER,YAAY,OAAc,UAA8B,IAAI;AAC1D,UAAM;AACN,UAAM,aAAc;AACpB,SAAK,cAAc;AACnB,UAAM;AACN,SAAK,yBAAyB,KAAK;AACnC,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AACtB,SAAK,QAAQ;AACb,SAAK,cAAc,QAAQ,QAAQ;AACnC,SAAK,IAAI,QAAQ,MAAM,SAAY,WAAW,IAAI,QAAQ;AAC1D,SAAK,IAAI,QAAQ,MAAM,SAAY,WAAW,IAAI,QAAQ;AAC1D,SAAK,mBAAmB,QAAQ;AAChC,SAAK,WAAW,oBAAI;AACpB,SAAK,aAAa;AAElB,UAAM,SAAS,qBAAqB;AACpC,QAAI,QAAQ;AACV,WAAK,sBAAuB;AAAA;AAAA;AAAA,SAIzB,aAAmB;AACxB,SAAK,sBAAsB,8BAA8B,OAAO,iBAC5D,KAAK,yBAAyB,OAAO,gBAAgB;AACzD,4BAAwB,OAA2D;AACjF,kBAAY,cAAc,MAAM;AAAA;AAAA;AAAA,SAI7B,eAAe,KAAqB;AACzC,QAAI,KAAK,iBAAiB,eAAe,SAAS;AAElD,qBAAiB,OAAoB;AACnC,YAAM,cAAc,IAAI,YAAY;AACpC,WAAK,YAAY;AAAA;AAAA;AAAA,EAIrB,SAAiB;AACf,WAAO,KAAK;AAAA;AAAA,QAGR,OAAsB;AAC1B,gBAAY,cAAc;AAC1B,SAAK,MAAM,QAAQ;AACnB,UAAM,kBAAgC,MAAM,QAAQ,IAAI,KAAK;AAG7D,QAAI,YAAY,gBAAgB,MAAM;AACpC;AAAA;AAEF,gBAAY,cAAc;AAE1B,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,EAAE,GAAG;AAC/C,YAAM,YAAY,gBAAgB;AAClC,YAAM,SAAS,KAAK,eAAe;AAEnC,iBAAW,YAAY,WAAW;AAChC,iBAAS,sBAAsB,KAAK,OAAO,MAAM;AAAA;AAAA;AAIrD,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AAEtB,SAAK;AAAA;AAAA,EAGP,UAAgB;AACd,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS;AAAA;AAAA;AAAA,EAIV,YAAkB;AACxB,UAAM,aAAa,KAAK;AACxB,UAAM,cAAc,KAAK,MAAM;AAC/B,QAAI,CAAC,aAAa;AAChB;AAAA;AAEF,UAAM,gBAAiB,YAA4B;AACnD,QAAI,KAAK,eAAe,YAAY,eAChC,KAAK,sBAAsB,8BAA8B,gBAAgB;AAC3E,WAAK,WAAW,IAAI,gBACf,YAA4C,KAAK,aAAa,KAAK,OAAO,QAAW,KAAK;AAC/F,WAAK,SAAS,KAAM,eAA4B,IAAI,UAAU,KAAK,GAAG,KAAK,GAAG,GAAG;AACjF,UAAI,KAAK,kBAAkB;AACzB,aAAK,SAAS,2BAA2B,KAAK;AAAA;AAAA,WAE3C;AAIL,UAAS,iBAAT,WAAiD;AAC/C,aAAK,sBAAsB,8BAA8B,OAAO,iBAC5D,KAAK,yBAAyB,OAAO,oBAAoB,KAAK,aAAa;AAC/E,aAAK,sBAAsB,8BAA8B,OAAO,iBAC5D,KAAK,yBAAyB,OAAO,yBAAyB,KAAK,gBAAgB;AAAA;AAPzF,WAAK,sBAAsB,8BAA8B,uBACrD,KAAK,GAAG,KAAK,GAAG,YAAa;AAWjC,qBAAe,eAAe,KAAK;AAAA;AAAA;AAAA,EAIvC,oBAAoB,OAAqB;AACvC,SAAK,mBAAmB;AAAA;AAAA,EAG1B,KAAK,GAAiB;AACpB,SAAK,IAAI;AAAA;AAAA,EAGX,KAAK,GAAiB;AACpB,SAAK,IAAI;AAAA;AAAA,EAGX,WAAW,IAAY,SAA2B;AAChD,QAAI,SAAS;AACX,WAAK,SAAS,IAAI,IAAI;AAAA;AAAA;AAAA,EAIlB,uBAA0G;AAChH,WAAO,MAAM,kBAAkB;AAAA;AAAA,EAIzB,eAAe,OAA0D;AAC/E,SAAK,aAAa,MAAM;AAAA;AAAA,EAGlB,aAAa,IAAkB;AACrC,UAAM,UAAU,KAAK,SAAS,IAAI;AAClC,QAAI,SAAS;AACX,cAAQ,KAAK;AAAA;AAEf,SAAK;AAAA;AAAA,EAGC,cAAoB;AAC1B,SAAK,sBAAsB,8BAA8B,OAAO,oBAC5D,KAAK,yBAAyB,OAAO,oBAAoB,KAAK,aAAa;AAC/E,SAAK,sBAAsB,8BAA8B,OAAO,oBAC5D,KAAK,yBAAyB,OAAO,yBAAyB,KAAK,gBAAgB;AAAA;AAAA,EAGzF,eAAe,QAAyB;AACtC,WAAO,KAAK,eAAe,QAAQ,WAAW;AAAA;AAAA,EAGhD,sBAAsB,QAAsB;AAC1C,SAAK,gBAAgB,KAAK,kCAAkC;AAC5D,SAAK,eAAe,KAAK;AAAA;AAAA,EAG3B,yBAA+B;AAC7B,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS;AAAA;AAAA;AAAA,SAIH,cAAgC;AAAA,SAChC,cAAc;AAAA,SAGb,eACZ,CAAC,UAAU,OAAO,UAAU,QAAQ,aAAa,SAAS,QAAQ,WAAW,QAAQ;AAAA;AAO3F,MAAM,sBAA8C;AAE7C,iCAA0B,cAA0C;AACzE,sBAAoB,KAAK;AAAA;AAG3B,iDAAiD,QAAqC;AACpF,SAAO,QAAQ,IACX,oBAAoB,OAAO,oCAAoC,IAAI,kBAAgB,aAAa;AAEpG,8CAA4C,sBAAqD;AAC/F,QAAI,CAAC,KAAK,QAAQ,QAAQ,oBAClB,EAAC,YAAY,qBAAqB,YAAY,WAAW,WAAa;AAC5E,aAAO;AAAA;AAET,QAAI,CAAC,qBAAqB,cAAc;AACtC,aAAO;AAAA;AAET,eAAW,eAAe,qBAAqB,gBAAgB;AAG7D,UAAI,kBAAkB,aAAa;AACjC,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAAA;AAIX,MAAM,2BAA0D;AAEzD,6BAAsB,cAAiD;AAC5E,2BAAyB,KAAK;AAAA;AAGzB,gCAAyB,cAAoD;AAClF,QAAM,YAAY,yBAAyB,UACvC,UAAQ,KAAK,aAAa,aAAa,YAAY,KAAK,aAAa,aAAa;AACtF,MAAI,YAAY,GAAG;AACjB,WAAO;AAAA;AAET,2BAAyB,OAAO,WAAW;AAC3C,SAAO;AAAA;AAGT,8BAA6D;AAC3D,SAAO;AAAA;AAKF,WAAK,eAAL,kBAAK,kBAAL;AACL,2CAAwB;AACxB,+BAAY;AACZ,uCAAoB;AACpB,sCAAmB;AACnB,4CAAyB;AACzB,4CAAyB;AACzB,wCAAqB;AAPX;AAAA;",
  "names": []
}
