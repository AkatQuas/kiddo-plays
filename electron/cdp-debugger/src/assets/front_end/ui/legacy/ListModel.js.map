{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/ListModel.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nexport class ListModel<T> extends Common.ObjectWrapper.ObjectWrapper<EventTypes<T>> implements Iterable<T> {\n  private items: T[];\n  constructor(items?: T[]) {\n    super();\n    this.items = items || [];\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [Symbol.iterator](): Iterator<T, any, undefined> {\n    return this.items[Symbol.iterator]();\n  }\n\n  get length(): number {\n    return this.items.length;\n  }\n\n  at(index: number): T {\n    return this.items[index];\n  }\n\n  every(callback: (arg0: T) => boolean): boolean {\n    return this.items.every(callback);\n  }\n\n  filter(callback: (arg0: T) => boolean): T[] {\n    return this.items.filter(callback);\n  }\n\n  find(callback: (arg0: T) => boolean): T|undefined {\n    return this.items.find(callback);\n  }\n\n  findIndex(callback: (arg0: T) => boolean): number {\n    return this.items.findIndex(callback);\n  }\n\n  indexOf(value: T, fromIndex?: number): number {\n    return this.items.indexOf(value, fromIndex);\n  }\n\n  insert(index: number, value: T): void {\n    this.items.splice(index, 0, value);\n    this.replaced(index, [], 1);\n  }\n\n  insertWithComparator(value: T, comparator: (arg0: T, arg1: T) => number): void {\n    this.insert(Platform.ArrayUtilities.lowerBound(this.items, value, comparator), value);\n  }\n\n  join(separator?: string): string {\n    return this.items.join(separator);\n  }\n\n  remove(index: number): T {\n    const result = this.items[index];\n    this.items.splice(index, 1);\n    this.replaced(index, [result], 0);\n    return result;\n  }\n\n  replace(index: number, value: T, keepSelectedIndex?: boolean): T {\n    const oldValue = this.items[index];\n    this.items[index] = value;\n    this.replaced(index, [oldValue], 1, keepSelectedIndex);\n    return oldValue;\n  }\n\n  replaceRange(from: number, to: number, items: T[]): T[] {\n    let removed;\n    if (items.length < 10000) {\n      removed = this.items.splice(from, to - from, ...items);\n    } else {\n      removed = this.items.slice(from, to);\n      // Splice may fail with too many arguments.\n      const before = this.items.slice(0, from);\n      const after = this.items.slice(to);\n      this.items = [...before, ...items, ...after];\n    }\n    this.replaced(from, removed, items.length);\n    return removed;\n  }\n\n  replaceAll(items: T[]): T[] {\n    const oldItems = this.items.slice();\n    this.items = items;\n    this.replaced(0, oldItems, items.length);\n    return oldItems;\n  }\n\n  slice(from?: number, to?: number): T[] {\n    return this.items.slice(from, to);\n  }\n\n  some(callback: (arg0: T) => boolean): boolean {\n    return this.items.some(callback);\n  }\n\n  private replaced(index: number, removed: T[], inserted: number, keepSelectedIndex?: boolean): void {\n    this.dispatchEventToListeners(Events.ItemsReplaced, {index, removed, inserted, keepSelectedIndex});\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ItemsReplaced = 'ItemsReplaced',\n}\n\nexport interface ItemsReplacedEvent<T> {\n  index: number;\n  removed: T[];\n  inserted: number;\n  keepSelectedIndex?: boolean;\n}\n\nexport type EventTypes<T> = {\n  [Events.ItemsReplaced]: ItemsReplacedEvent<T>,\n};\n"],
  "mappings": "AAIA;AACA;AAEO,+BAA2B,OAAO,cAAc,cAAoD;AAAA,EACjG;AAAA,EACR,YAAY,OAAa;AACvB;AACA,SAAK,QAAQ,SAAS;AAAA;AAAA,GAKvB,OAAO,YAAyC;AAC/C,WAAO,KAAK,MAAM,OAAO;AAAA;AAAA,MAGvB,SAAiB;AACnB,WAAO,KAAK,MAAM;AAAA;AAAA,EAGpB,GAAG,OAAkB;AACnB,WAAO,KAAK,MAAM;AAAA;AAAA,EAGpB,MAAM,UAAyC;AAC7C,WAAO,KAAK,MAAM,MAAM;AAAA;AAAA,EAG1B,OAAO,UAAqC;AAC1C,WAAO,KAAK,MAAM,OAAO;AAAA;AAAA,EAG3B,KAAK,UAA6C;AAChD,WAAO,KAAK,MAAM,KAAK;AAAA;AAAA,EAGzB,UAAU,UAAwC;AAChD,WAAO,KAAK,MAAM,UAAU;AAAA;AAAA,EAG9B,QAAQ,OAAU,WAA4B;AAC5C,WAAO,KAAK,MAAM,QAAQ,OAAO;AAAA;AAAA,EAGnC,OAAO,OAAe,OAAgB;AACpC,SAAK,MAAM,OAAO,OAAO,GAAG;AAC5B,SAAK,SAAS,OAAO,IAAI;AAAA;AAAA,EAG3B,qBAAqB,OAAU,YAAgD;AAC7E,SAAK,OAAO,SAAS,eAAe,WAAW,KAAK,OAAO,OAAO,aAAa;AAAA;AAAA,EAGjF,KAAK,WAA4B;AAC/B,WAAO,KAAK,MAAM,KAAK;AAAA;AAAA,EAGzB,OAAO,OAAkB;AACvB,UAAM,SAAS,KAAK,MAAM;AAC1B,SAAK,MAAM,OAAO,OAAO;AACzB,SAAK,SAAS,OAAO,CAAC,SAAS;AAC/B,WAAO;AAAA;AAAA,EAGT,QAAQ,OAAe,OAAU,mBAAgC;AAC/D,UAAM,WAAW,KAAK,MAAM;AAC5B,SAAK,MAAM,SAAS;AACpB,SAAK,SAAS,OAAO,CAAC,WAAW,GAAG;AACpC,WAAO;AAAA;AAAA,EAGT,aAAa,MAAc,IAAY,OAAiB;AACtD,QAAI;AACJ,QAAI,MAAM,SAAS,KAAO;AACxB,gBAAU,KAAK,MAAM,OAAO,MAAM,KAAK,MAAM,GAAG;AAAA,WAC3C;AACL,gBAAU,KAAK,MAAM,MAAM,MAAM;AAEjC,YAAM,SAAS,KAAK,MAAM,MAAM,GAAG;AACnC,YAAM,QAAQ,KAAK,MAAM,MAAM;AAC/B,WAAK,QAAQ,CAAC,GAAG,QAAQ,GAAG,OAAO,GAAG;AAAA;AAExC,SAAK,SAAS,MAAM,SAAS,MAAM;AACnC,WAAO;AAAA;AAAA,EAGT,WAAW,OAAiB;AAC1B,UAAM,WAAW,KAAK,MAAM;AAC5B,SAAK,QAAQ;AACb,SAAK,SAAS,GAAG,UAAU,MAAM;AACjC,WAAO;AAAA;AAAA,EAGT,MAAM,MAAe,IAAkB;AACrC,WAAO,KAAK,MAAM,MAAM,MAAM;AAAA;AAAA,EAGhC,KAAK,UAAyC;AAC5C,WAAO,KAAK,MAAM,KAAK;AAAA;AAAA,EAGjB,SAAS,OAAe,SAAc,UAAkB,mBAAmC;AACjG,SAAK,yBAAyB,OAAO,eAAe,EAAC,OAAO,SAAS,UAAU;AAAA;AAAA;AAM5E,WAAK,SAAL,kBAAK,YAAL;AACL,6BAAgB;AADN;AAAA;",
  "names": []
}
