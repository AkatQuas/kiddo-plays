{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/Infobar.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Utils from './utils/utils.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {Keys} from './KeyboardShortcut.js';\nimport {createTextButton} from './UIUtils.js';\nimport type {Widget} from './Widget.js';\nimport infobarStyles from './infobar.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text on a button to close the infobar and never show the infobar in the future\n  */\n  dontShowAgain: 'Don\\'t show again',\n  /**\n  *@description Text that is usually a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/Infobar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class Infobar {\n  element: HTMLElement;\n  private readonly shadowRoot: ShadowRoot;\n  private readonly contentElement: HTMLDivElement;\n  private readonly mainRow: HTMLElement;\n  private readonly detailsRows: HTMLElement;\n  private hasDetails: boolean;\n  private detailsMessage: string;\n  private readonly infoContainer: HTMLElement;\n  private readonly infoMessage: HTMLElement;\n  private infoText: HTMLElement;\n  private readonly actionContainer: HTMLElement;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly disableSetting: Common.Settings.Setting<any>|null;\n  private readonly closeContainer: HTMLElement;\n  private readonly toggleElement: HTMLButtonElement;\n  private readonly closeButton: HTMLElement;\n  private closeCallback: (() => void)|null;\n  #firstFocusableElement: HTMLElement|null = null;\n  private parentView?: Widget;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(type: Type, text: string, actions?: InfobarAction[], disableSetting?: Common.Settings.Setting<any>) {\n    this.element = document.createElement('div');\n    this.element.classList.add('flex-none');\n    this.shadowRoot =\n        Utils.createShadowRootWithCoreStyles(this.element, {cssFile: infobarStyles, delegatesFocus: undefined});\n\n    this.contentElement = this.shadowRoot.createChild('div', 'infobar infobar-' + type) as HTMLDivElement;\n\n    this.mainRow = this.contentElement.createChild('div', 'infobar-main-row');\n    this.detailsRows = this.contentElement.createChild('div', 'infobar-details-rows hidden');\n    this.hasDetails = false;\n    this.detailsMessage = '';\n\n    this.infoContainer = this.mainRow.createChild('div', 'infobar-info-container');\n\n    this.infoMessage = this.infoContainer.createChild('div', 'infobar-info-message');\n\n    // Icon is in separate file and included via CSS.\n    this.infoMessage.createChild('div', type + '-icon icon');\n\n    this.infoText = this.infoMessage.createChild('div', 'infobar-info-text');\n    this.infoText.textContent = text;\n    ARIAUtils.markAsAlert(this.infoText);\n\n    this.actionContainer = this.infoContainer.createChild('div', 'infobar-info-actions');\n    if (actions) {\n      this.contentElement.setAttribute('role', 'group');\n\n      for (const action of actions) {\n        const actionCallback = this.actionCallbackFactory(action);\n        let buttonClass = 'infobar-button';\n        if (action.highlight) {\n          buttonClass += ' primary-button';\n        }\n\n        const button = createTextButton(action.text, actionCallback, buttonClass);\n        if (action.highlight && !this.#firstFocusableElement) {\n          this.#firstFocusableElement = button;\n        }\n        this.actionContainer.appendChild(button);\n      }\n    }\n\n    this.disableSetting = disableSetting || null;\n    if (disableSetting) {\n      const disableButton =\n          createTextButton(i18nString(UIStrings.dontShowAgain), this.onDisable.bind(this), 'infobar-button');\n      this.actionContainer.appendChild(disableButton);\n    }\n\n    this.closeContainer = this.mainRow.createChild('div', 'infobar-close-container');\n    this.toggleElement = createTextButton(\n        i18nString(UIStrings.learnMore), this.onToggleDetails.bind(this), 'link-style devtools-link hidden');\n    this.toggleElement.setAttribute('role', 'link');\n    this.closeContainer.appendChild(this.toggleElement);\n    this.closeButton = this.closeContainer.createChild('div', 'close-button', 'dt-close-button');\n    // @ts-ignore This is a custom element defined in UIUitls.js that has a `setTabbable` that TS doesn't\n    //            know about.\n    this.closeButton.setTabbable(true);\n    ARIAUtils.setDescription(this.closeButton, i18nString(UIStrings.close));\n    self.onInvokeElement(this.closeButton, this.dispose.bind(this));\n\n    if (type !== Type.Issue) {\n      this.contentElement.tabIndex = 0;\n    }\n    ARIAUtils.setAccessibleName(this.contentElement, text);\n    this.contentElement.addEventListener('keydown', event => {\n      if (event.keyCode === Keys.Esc.code) {\n        this.dispose();\n        event.consume();\n        return;\n      }\n\n      if (event.target !== this.contentElement) {\n        return;\n      }\n\n      if (event.key === 'Enter' && this.hasDetails) {\n        this.onToggleDetails();\n        event.consume();\n        return;\n      }\n    });\n\n    this.closeCallback = null;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static create(type: Type, text: string, actions?: InfobarAction[], disableSetting?: Common.Settings.Setting<any>):\n      Infobar|null {\n    if (disableSetting && disableSetting.get()) {\n      return null;\n    }\n    return new Infobar(type, text, actions, disableSetting);\n  }\n\n  dispose(): void {\n    this.element.remove();\n    this.onResize();\n    if (this.closeCallback) {\n      this.closeCallback.call(null);\n    }\n  }\n\n  setText(text: string): void {\n    this.infoText.textContent = text;\n    this.onResize();\n  }\n\n  setCloseCallback(callback: (() => void)|null): void {\n    this.closeCallback = callback;\n  }\n\n  setParentView(parentView: Widget): void {\n    this.parentView = parentView;\n  }\n\n  private actionCallbackFactory(action: InfobarAction): () => void {\n    if (!action.delegate) {\n      return action.dismiss ? this.dispose.bind(this) : (): void => {};\n    }\n\n    if (!action.dismiss) {\n      return action.delegate;\n    }\n\n    return ((): void => {\n             if (action.delegate) {\n               action.delegate();\n             }\n             this.dispose();\n           }).bind(this);\n  }\n\n  private onResize(): void {\n    if (this.parentView) {\n      this.parentView.doResize();\n    }\n  }\n\n  private onDisable(): void {\n    if (this.disableSetting) {\n      this.disableSetting.set(true);\n    }\n    this.dispose();\n  }\n\n  private onToggleDetails(): void {\n    this.detailsRows.classList.remove('hidden');\n    this.toggleElement.remove();\n    this.onResize();\n    ARIAUtils.alert(this.detailsMessage);\n    if (this.#firstFocusableElement) {\n      this.#firstFocusableElement.focus();\n    } else {\n      this.closeButton.focus();\n    }\n  }\n\n  createDetailsRowMessage(message?: string): Element {\n    this.hasDetails = true;\n    this.detailsMessage = message || '';\n    this.toggleElement.classList.remove('hidden');\n    const infobarDetailsRow = this.detailsRows.createChild('div', 'infobar-details-row');\n    const detailsRowMessage = infobarDetailsRow.createChild('span', 'infobar-row-message');\n    detailsRowMessage.textContent = this.detailsMessage;\n    return detailsRowMessage;\n  }\n}\nexport interface InfobarAction {\n  text: string;\n  highlight: boolean;\n  delegate: (() => void)|null;\n  dismiss: boolean;\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  Warning = 'warning',\n  Info = 'info',\n  Issue = 'issue',\n  Error = 'error',\n}\n"],
  "mappings": "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",
  "names": []
}
