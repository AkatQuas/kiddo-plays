{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/Dialog.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {GlassPane, PointerEventsBehavior} from './GlassPane.js';\nimport {InspectorView} from './InspectorView.js';\nimport {KeyboardShortcut, Keys} from './KeyboardShortcut.js';\nimport type {SplitWidget} from './SplitWidget.js';\nimport type {DevToolsCloseButton} from './UIUtils.js';\nimport type {WidgetElement} from './Widget.js';\nimport {WidgetFocusRestorer} from './Widget.js';\n\nimport dialogStyles from './dialog.css.legacy.js';\n\nexport class Dialog extends Common.ObjectWrapper.eventMixin<EventTypes, typeof GlassPane>(GlassPane) {\n  private tabIndexBehavior: OutsideTabIndexBehavior;\n  private tabIndexMap: Map<HTMLElement, number>;\n  private focusRestorer: WidgetFocusRestorer|null;\n  private closeOnEscape: boolean;\n  private targetDocument!: Document|null;\n  private readonly targetDocumentKeyDownHandler: (event: Event) => void;\n  private escapeKeyCallback: ((arg0: Event) => void)|null;\n\n  constructor() {\n    super();\n    this.registerRequiredCSS(dialogStyles);\n    this.contentElement.tabIndex = 0;\n    this.contentElement.addEventListener('focus', () => this.widget().focus(), false);\n    this.widget().setDefaultFocusedElement(this.contentElement);\n    this.setPointerEventsBehavior(PointerEventsBehavior.BlockedByGlassPane);\n    this.setOutsideClickCallback(event => {\n      this.hide();\n      event.consume(true);\n    });\n    ARIAUtils.markAsModalDialog(this.contentElement);\n    this.tabIndexBehavior = OutsideTabIndexBehavior.DisableAllOutsideTabIndex;\n    this.tabIndexMap = new Map();\n    this.focusRestorer = null;\n    this.closeOnEscape = true;\n    this.targetDocumentKeyDownHandler = this.onKeyDown.bind(this);\n    this.escapeKeyCallback = null;\n  }\n\n  static hasInstance(): boolean {\n    return Boolean(Dialog.instance);\n  }\n\n  show(where?: Document | Element): void {\n    const document = (where instanceof Document ? where : (where || InspectorView.instance().element).ownerDocument as Document);\n    this.targetDocument = document;\n    this.targetDocument.addEventListener('keydown', this.targetDocumentKeyDownHandler, true);\n\n    if (Dialog.instance) {\n      Dialog.instance.hide();\n    }\n    Dialog.instance = this;\n    this.disableTabIndexOnElements(document);\n    super.show(document);\n    this.focusRestorer = new WidgetFocusRestorer(this.widget());\n  }\n\n  hide(): void {\n    if (this.focusRestorer) {\n      this.focusRestorer.restore();\n    }\n    super.hide();\n\n    if (this.targetDocument) {\n      this.targetDocument.removeEventListener('keydown', this.targetDocumentKeyDownHandler, true);\n    }\n    this.restoreTabIndexOnElements();\n    this.dispatchEventToListeners(Events.Hidden);\n    Dialog.instance = null;\n  }\n\n  setCloseOnEscape(close: boolean): void {\n    this.closeOnEscape = close;\n  }\n\n  setEscapeKeyCallback(callback: (arg0: Event) => void): void {\n    this.escapeKeyCallback = callback;\n  }\n\n  addCloseButton(): void {\n    const closeButton =\n        (this.contentElement.createChild('div', 'dialog-close-button', 'dt-close-button') as DevToolsCloseButton);\n    closeButton.gray = true;\n    closeButton.addEventListener('click', () => this.hide(), false);\n  }\n\n  setOutsideTabIndexBehavior(tabIndexBehavior: OutsideTabIndexBehavior): void {\n    this.tabIndexBehavior = tabIndexBehavior;\n  }\n\n  private disableTabIndexOnElements(document: Document): void {\n    if (this.tabIndexBehavior === OutsideTabIndexBehavior.PreserveTabIndex) {\n      return;\n    }\n\n    let exclusionSet: Set<HTMLElement>|(Set<HTMLElement>| null) = (null as Set<HTMLElement>| null);\n    if (this.tabIndexBehavior === OutsideTabIndexBehavior.PreserveMainViewTabIndex) {\n      exclusionSet = this.getMainWidgetTabIndexElements(InspectorView.instance().ownerSplit());\n    }\n\n    this.tabIndexMap.clear();\n    let node: (Node|null)|Document = document;\n    for (; node; node = node.traverseNextNode(document)) {\n      if (node instanceof HTMLElement) {\n        const element = (node as HTMLElement);\n        const tabIndex = element.tabIndex;\n        if (!exclusionSet?.has(element)) {\n          if (tabIndex >= 0) {\n            this.tabIndexMap.set(element, tabIndex);\n            element.tabIndex = -1;\n          } else if (element.hasAttribute('contenteditable')) {\n            this.tabIndexMap.set(element, element.hasAttribute('tabindex') ? tabIndex : 0);\n            element.tabIndex = -1;\n          }\n        }\n      }\n    }\n  }\n\n  private getMainWidgetTabIndexElements(splitWidget: SplitWidget|null): Set<HTMLElement> {\n    const elementSet = (new Set() as Set<HTMLElement>);\n    if (!splitWidget) {\n      return elementSet;\n    }\n\n    const mainWidget = splitWidget.mainWidget();\n    if (!mainWidget || !mainWidget.element) {\n      return elementSet;\n    }\n\n    let node: Node|null|WidgetElement = mainWidget.element;\n    for (; node; node = node.traverseNextNode(mainWidget.element)) {\n      if (!(node instanceof HTMLElement)) {\n        continue;\n      }\n\n      const element = (node as HTMLElement);\n      const tabIndex = element.tabIndex;\n      if (tabIndex < 0) {\n        continue;\n      }\n\n      elementSet.add(element);\n    }\n\n    return elementSet;\n  }\n\n  private restoreTabIndexOnElements(): void {\n    for (const element of this.tabIndexMap.keys()) {\n      element.tabIndex = (this.tabIndexMap.get(element) as number);\n    }\n    this.tabIndexMap.clear();\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (keyboardEvent.keyCode === Keys.Esc.code && KeyboardShortcut.hasNoModifiers(event)) {\n      if (this.escapeKeyCallback) {\n        this.escapeKeyCallback(event);\n      }\n\n      if (event.handled) {\n        return;\n      }\n\n      if (this.closeOnEscape) {\n        event.consume(true);\n        this.hide();\n      }\n    }\n  }\n\n  private static instance: Dialog|null = null;\n}\n\nexport const enum Events {\n  Hidden = 'hidden',\n}\n\nexport type EventTypes = {\n  [Events.Hidden]: void,\n};\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum OutsideTabIndexBehavior {\n  DisableAllOutsideTabIndex = 'DisableAllTabIndex',\n  PreserveMainViewTabIndex = 'PreserveMainViewTabIndex',\n  PreserveTabIndex = 'PreserveTabIndex',\n}\n"],
  "mappings": "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",
  "names": []
}
