{
  "version": 3,
  "sources": ["../../../../../../front_end/ui/legacy/ARIAUtils.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _id = 0;\n\nexport function nextId(prefix: string): string {\n  return (prefix || '') + ++_id;\n}\n\nexport function bindLabelToControl(label: Element, control: Element): void {\n  const controlId = nextId('labelledControl');\n  control.id = controlId;\n  label.setAttribute('for', controlId);\n}\n\nexport function markAsAlert(element: Element): void {\n  element.setAttribute('role', 'alert');\n  element.setAttribute('aria-live', 'polite');\n}\n\nexport function markAsApplication(element: Element): void {\n  element.setAttribute('role', 'application');\n}\n\nexport function markAsButton(element: Element): void {\n  element.setAttribute('role', 'button');\n}\n\nexport function markAsCheckbox(element: Element): void {\n  element.setAttribute('role', 'checkbox');\n}\n\nexport function markAsCombobox(element: Element): void {\n  element.setAttribute('role', 'combobox');\n}\n\nexport function markAsModalDialog(element: Element): void {\n  element.setAttribute('role', 'dialog');\n  element.setAttribute('aria-modal', 'true');\n}\n\nexport function markAsGroup(element: Element): void {\n  element.setAttribute('role', 'group');\n}\n\nexport function markAsLink(element: Element): void {\n  element.setAttribute('role', 'link');\n}\n\nexport function markAsMenuButton(element: Element): void {\n  markAsButton(element);\n  element.setAttribute('aria-haspopup', 'true');\n}\n\nexport function markAsProgressBar(element: Element, min: number|undefined = 0, max: number|undefined = 100): void {\n  element.setAttribute('role', 'progressbar');\n  element.setAttribute('aria-valuemin', min.toString());\n  element.setAttribute('aria-valuemax', max.toString());\n}\n\nexport function markAsTab(element: Element): void {\n  element.setAttribute('role', 'tab');\n}\n\nexport function markAsTablist(element: Element): void {\n  element.setAttribute('role', 'tablist');\n}\n\nexport function markAsTabpanel(element: Element): void {\n  element.setAttribute('role', 'tabpanel');\n}\n\nexport function markAsTree(element: Element): void {\n  element.setAttribute('role', 'tree');\n}\n\nexport function markAsTreeitem(element: Element): void {\n  element.setAttribute('role', 'treeitem');\n}\n\nexport function markAsTextBox(element: Element): void {\n  element.setAttribute('role', 'textbox');\n}\n\nexport function markAsMenu(element: Element): void {\n  element.setAttribute('role', 'menu');\n}\n\nexport function markAsMenuItem(element: Element): void {\n  element.setAttribute('role', 'menuitem');\n}\n\nexport function markAsMenuItemCheckBox(element: Element): void {\n  element.setAttribute('role', 'menuitemcheckbox');\n}\n\nexport function markAsMenuItemSubMenu(element: Element): void {\n  markAsMenuItem(element);\n  element.setAttribute('aria-haspopup', 'true');\n}\n\nexport function markAsList(element: Element): void {\n  element.setAttribute('role', 'list');\n}\n\nexport function markAsListitem(element: Element): void {\n  element.setAttribute('role', 'listitem');\n}\n\nexport function markAsMain(element: Element): void {\n  element.setAttribute('role', 'main');\n}\n\nexport function markAsComplementary(element: Element): void {\n  element.setAttribute('role', 'complementary');\n}\n\nexport function markAsNavigation(element: Element): void {\n  element.setAttribute('role', 'navigation');\n}\n\n/**\n * Must contain children whose role is option.\n */\nexport function markAsListBox(element: Element): void {\n  element.setAttribute('role', 'listbox');\n}\n\nexport function markAsMultiSelectable(element: Element): void {\n  element.setAttribute('aria-multiselectable', 'true');\n}\n\n/**\n * Must be contained in, or owned by, an element with the role listbox.\n */\nexport function markAsOption(element: Element): void {\n  element.setAttribute('role', 'option');\n}\n\nexport function markAsRadioGroup(element: Element): void {\n  element.setAttribute('role', 'radiogroup');\n}\n\nexport function markAsHidden(element: Element): void {\n  element.setAttribute('aria-hidden', 'true');\n}\n\nexport function markAsSlider(element: Element, min: number|undefined = 0, max: number|undefined = 100): void {\n  element.setAttribute('role', 'slider');\n  element.setAttribute('aria-valuemin', String(min));\n  element.setAttribute('aria-valuemax', String(max));\n}\n\nexport function markAsHeading(element: Element, level: number): void {\n  element.setAttribute('role', 'heading');\n  element.setAttribute('aria-level', level.toString());\n}\n\nexport function markAsPoliteLiveRegion(element: Element, isAtomic: boolean): void {\n  element.setAttribute('aria-live', 'polite');\n  if (isAtomic) {\n    element.setAttribute('aria-atomic', 'true');\n  }\n}\n\nexport function markAsLog(element: Element): void {\n  element.setAttribute('role', 'log');\n}\n\nexport function hasRole(element: Element): boolean {\n  return element.hasAttribute('role');\n}\n\nexport function removeRole(element: Element): void {\n  element.removeAttribute('role');\n}\n\nexport function setPlaceholder(element: Element, placeholder: string|null): void {\n  if (placeholder) {\n    element.setAttribute('aria-placeholder', placeholder);\n  } else {\n    element.removeAttribute('aria-placeholder');\n  }\n}\n\nexport function markAsPresentation(element: Element): void {\n  element.setAttribute('role', 'presentation');\n}\n\nexport function markAsStatus(element: Element): void {\n  element.setAttribute('role', 'status');\n}\n\nexport function ensureId(element: Element): void {\n  if (!element.id) {\n    element.id = nextId('ariaElement');\n  }\n}\n\nexport function setAriaValueText(element: Element, valueText: string): void {\n  element.setAttribute('aria-valuetext', valueText);\n}\n\nexport function setAriaValueNow(element: Element, value: string): void {\n  element.setAttribute('aria-valuenow', value);\n}\n\nexport function setAriaValueMinMax(element: Element, min: string, max: string): void {\n  element.setAttribute('aria-valuemin', min);\n  element.setAttribute('aria-valuemax', max);\n}\n\nexport function setControls(element: Element, controlledElement: Element|null): void {\n  if (!controlledElement) {\n    element.removeAttribute('aria-controls');\n    return;\n  }\n\n  ensureId(controlledElement);\n  element.setAttribute('aria-controls', controlledElement.id);\n}\n\nexport function setChecked(element: Element, value: boolean): void {\n  element.setAttribute('aria-checked', (Boolean(value)).toString());\n}\n\nexport function setCheckboxAsIndeterminate(element: Element): void {\n  element.setAttribute('aria-checked', 'mixed');\n}\n\nexport function setDisabled(element: Element, value: boolean): void {\n  element.setAttribute('aria-disabled', (Boolean(value)).toString());\n}\n\nexport function setExpanded(element: Element, value: boolean): void {\n  element.setAttribute('aria-expanded', (Boolean(value)).toString());\n}\n\nexport function unsetExpandable(element: Element): void {\n  element.removeAttribute('aria-expanded');\n}\n\nexport function setHidden(element: Element, value: boolean): void {\n  element.setAttribute('aria-hidden', (Boolean(value)).toString());\n}\n\nexport function setLevel(element: Element, level: number): void {\n  element.setAttribute('aria-level', level.toString());\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum AutocompleteInteractionModel {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  inline = 'inline',\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  list = 'list',\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  both = 'both',\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  none = 'none',\n}\n\nexport function setAutocomplete(\n    element: Element,\n    interactionModel: AutocompleteInteractionModel|undefined = AutocompleteInteractionModel.none): void {\n  element.setAttribute('aria-autocomplete', interactionModel);\n}\n\nexport function clearAutocomplete(element: Element): void {\n  element.removeAttribute('aria-autocomplete');\n}\n\nexport const enum PopupRole {\n  False = 'false',      // (default) Indicates the element does not have a popup.\n  True = 'true',        // Indicates the popup is a menu.\n  Menu = 'menu',        // Indicates the popup is a menu.\n  ListBox = 'listbox',  // Indicates the popup is a listbox.\n  Tree = 'tree',        // Indicates the popup is a tree.\n  Grid = 'grid',        // Indicates the popup is a grid.\n  Dialog = 'dialog',    // Indicates the popup is a dialog.\n}\n\nexport function setHasPopup(element: Element, value: PopupRole = PopupRole.False): void {\n  if (value !== PopupRole.False) {\n    element.setAttribute('aria-haspopup', value);\n  } else {\n    element.removeAttribute('aria-haspopup');\n  }\n}\n\nexport function setSelected(element: Element, value: boolean): void {\n  // aria-selected behaves differently for false and undefined.\n  // Often times undefined values are unintentionally typed as booleans.\n  // Use !! to make sure this is true or false.\n  element.setAttribute('aria-selected', (Boolean(value)).toString());\n}\n\nexport function clearSelected(element: Element): void {\n  element.removeAttribute('aria-selected');\n}\n\nexport function setInvalid(element: Element, value: boolean): void {\n  if (value) {\n    element.setAttribute('aria-invalid', value.toString());\n  } else {\n    element.removeAttribute('aria-invalid');\n  }\n}\n\nexport function setPressed(element: Element, value: boolean): void {\n  // aria-pressed behaves differently for false and undefined.\n  // Often times undefined values are unintentionally typed as booleans.\n  // Use !! to make sure this is true or false.\n  element.setAttribute('aria-pressed', (Boolean(value)).toString());\n}\n\nexport function setValueNow(element: Element, value: number): void {\n  element.setAttribute('aria-valuenow', value.toString());\n}\n\nexport function setValueText(element: Element, value: number): void {\n  element.setAttribute('aria-valuetext', value.toString());\n}\n\nexport function setProgressBarValue(element: Element, valueNow: number, valueText?: string): void {\n  element.setAttribute('aria-valuenow', valueNow.toString());\n\n  if (valueText) {\n    element.setAttribute('aria-valuetext', valueText);\n  }\n}\n\nexport function setAccessibleName(element: Element, name: string): void {\n  element.setAttribute('aria-label', name);\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _descriptionMap = new WeakMap<Element, Element>();\n\nexport function setDescription(element: Element, description: string): void {\n  // Nodes in the accessibility tree are made up of a core\n  // triplet of \"name\", \"value\", \"description\"\n  // The \"description\" field is taken from either\n  // 1. The title html attribute\n  // 2. The value of the aria-description attribute.\n  // 3. The textContent of an element specified by aria-describedby\n  //\n  // The title attribute has the side effect of causing tooltips\n  // to appear with the description when the element is hovered.\n  // This is usually fine, except that DevTools has its own styled\n  // tooltips which would interfere with the browser tooltips.\n  //\n  // In future, the aria-description attribute may be used once it\n  // is unflagged.\n  //\n  // aria-describedby requires that an extra element exist in DOM\n  // that this element can point to. Both elements also have to\n  // be in the same shadow root. This is not trivial to manage.\n  // The rest of DevTools shouldn't have to worry about this,\n  // so there is some unfortunate code below.\n\n  const oldDescription = _descriptionMap.get(element);\n  if (oldDescription) {\n    oldDescription.remove();\n  }\n  element.removeAttribute('data-aria-utils-animation-hack');\n\n  if (!description) {\n    _descriptionMap.delete(element);\n    element.removeAttribute('aria-describedby');\n    return;\n  }\n\n  // We make a hidden element that contains the decsription\n  // and will be pointed to by aria-describedby.\n  const descriptionElement = document.createElement('span');\n  descriptionElement.textContent = description;\n  descriptionElement.style.display = 'none';\n  ensureId(descriptionElement);\n  element.setAttribute('aria-describedby', descriptionElement.id);\n  _descriptionMap.set(element, descriptionElement);\n\n  // Now we have to actually put this description element\n  // somewhere in the DOM so that we can point to it.\n  // It would be nice to just put it in the body, but that\n  // wouldn't work if the main element is in a shadow root.\n  // So the cleanest approach is to add the description element\n  // as a child of the main element. But wait! Some HTML elements\n  // aren't supposed to have children. Blink won't search inside\n  // these elements, and won't find our description element.\n  const contentfulVoidTags = new Set<string>(['INPUT', 'IMG']);\n  if (!contentfulVoidTags.has(element.tagName)) {\n    element.appendChild(descriptionElement);\n    // If we made it here, someone setting .textContent\n    // or removeChildren on the element will blow away\n    // our description. At least we tried our best!\n    return;\n  }\n\n  // We have some special element, like an <input>, where putting the\n  // description element inside it doesn't work.\n  // Lets try the next best thing, and just put the description element\n  // next to it in the DOM.\n  const inserted = element.insertAdjacentElement('afterend', descriptionElement);\n  if (inserted) {\n    return;\n  }\n\n  // Uh oh, the insertion didn't work! That means we aren't currently in the DOM.\n  // How can we find out when the element enters the DOM?\n  // See inspectorCommon.css\n  element.setAttribute('data-aria-utils-animation-hack', 'sorry');\n  element.addEventListener('animationend', () => {\n    // Someone might have made a new description in the meantime.\n    if (_descriptionMap.get(element) !== descriptionElement) {\n      return;\n    }\n    element.removeAttribute('data-aria-utils-animation-hack');\n\n    // Try it again. This time we are in the DOM, so it *should* work.\n    element.insertAdjacentElement('afterend', descriptionElement);\n  }, {once: true});\n}\n\nexport function setActiveDescendant(element: Element, activedescendant: Element|null): void {\n  if (!activedescendant) {\n    element.removeAttribute('aria-activedescendant');\n    return;\n  }\n\n  if (activedescendant.isConnected && element.isConnected) {\n    console.assert(element.hasSameShadowRoot(activedescendant), 'elements are not in the same shadow dom');\n  }\n\n  ensureId(activedescendant);\n  element.setAttribute('aria-activedescendant', activedescendant.id);\n}\n\nexport function setSetSize(element: Element, size: number): void {\n  element.setAttribute('aria-setsize', size.toString());\n}\n\nexport function setPositionInSet(element: Element, position: number): void {\n  element.setAttribute('aria-posinset', position.toString());\n}\n\nfunction hideFromLayout(element: HTMLElement): void {\n  element.style.position = 'absolute';\n  element.style.left = '-999em';\n  element.style.width = '100em';\n  element.style.overflow = 'hidden';\n}\n\nlet alertElementOne: HTMLElement|undefined;\nlet alertElementTwo: HTMLElement|undefined;\nlet alertToggle: boolean = false;\n\n/**\n * This function instantiates and switches off returning one of two offscreen alert elements.\n * We utilize two alert elements to ensure that alerts with the same string are still registered\n * as changes and trigger screen reader announcement.\n */\nexport function alertElementInstance(): HTMLElement {\n  if (!alertElementOne) {\n    const element = document.body.createChild('div') as HTMLElement;\n    hideFromLayout(element);\n    element.setAttribute('role', 'alert');\n    element.setAttribute('aria-atomic', 'true');\n    alertElementOne = element;\n  }\n  if (!alertElementTwo) {\n    const element = document.body.createChild('div') as HTMLElement;\n    hideFromLayout(element);\n    element.setAttribute('role', 'alert');\n    element.setAttribute('aria-atomic', 'true');\n    alertElementTwo = element;\n  }\n  alertToggle = !alertToggle;\n  if (alertToggle) {\n    alertElementTwo.textContent = '';\n    return alertElementOne;\n  }\n  alertElementOne.textContent = '';\n  return alertElementTwo;\n}\n\n/**\n * This function is used to announce a message with the screen reader.\n * Setting the textContent would allow the SR to access the offscreen element via browse mode\n */\nexport function alert(message: string): void {\n  const element = alertElementInstance();\n  element.textContent = Platform.StringUtilities.trimEndWithMaxLength(message, 10000);\n}\n"],
  "mappings": "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",
  "names": []
}
