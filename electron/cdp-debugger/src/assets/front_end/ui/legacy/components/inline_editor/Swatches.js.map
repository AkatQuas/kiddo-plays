{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/inline_editor/Swatches.ts"],
  "sourcesContent": ["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport {ColorSwatch, FormatChangedEvent} from './ColorSwatch.js';\nimport type {CSSShadowModel} from './CSSShadowModel.js';\nimport bezierSwatchStyles from './bezierSwatch.css.js';\nimport cssShadowSwatchStyles from './cssShadowSwatch.css.js';\n\nexport class BezierSwatch extends HTMLSpanElement {\n  private readonly iconElementInternal: UI.Icon.Icon;\n  private textElement: HTMLElement;\n\n  constructor() {\n    super();\n    const root = UI.Utils.createShadowRootWithCoreStyles(this, {\n      cssFile: [bezierSwatchStyles],\n      delegatesFocus: undefined,\n    });\n    this.iconElementInternal = UI.Icon.Icon.create('smallicon-bezier', 'bezier-swatch-icon');\n    root.appendChild(this.iconElementInternal);\n    this.textElement = this.createChild('span');\n    root.createChild('slot');\n  }\n\n  static create(): BezierSwatch {\n    let constructor: (() => Element)|((() => Element) | null) = BezierSwatch.constructorInternal;\n    if (!constructor) {\n      constructor = UI.Utils.registerCustomElement('span', 'bezier-swatch', BezierSwatch);\n      BezierSwatch.constructorInternal = constructor;\n    }\n\n    return constructor() as BezierSwatch;\n  }\n\n  bezierText(): string {\n    return this.textElement.textContent || '';\n  }\n\n  setBezierText(text: string): void {\n    this.textElement.textContent = text;\n  }\n\n  hideText(hide: boolean): void {\n    this.textElement.hidden = hide;\n  }\n\n  iconElement(): HTMLSpanElement {\n    return this.iconElementInternal;\n  }\n\n  private static constructorInternal: (() => Element)|null = null;\n}\n\nexport class CSSShadowSwatch extends HTMLSpanElement {\n  private readonly iconElementInternal: UI.Icon.Icon;\n  private contentElement: HTMLElement;\n  private colorSwatchInternal!: ColorSwatch|null;\n  private modelInternal?: CSSShadowModel;\n\n  constructor() {\n    super();\n    const root = UI.Utils.createShadowRootWithCoreStyles(this, {\n      cssFile: [cssShadowSwatchStyles],\n      delegatesFocus: undefined,\n    });\n    this.iconElementInternal = UI.Icon.Icon.create('smallicon-shadow', 'shadow-swatch-icon');\n    root.appendChild(this.iconElementInternal);\n    root.createChild('slot');\n    this.contentElement = this.createChild('span');\n  }\n\n  static create(): CSSShadowSwatch {\n    let constructor: (() => Element)|((() => Element) | null) = CSSShadowSwatch.constructorInternal;\n    if (!constructor) {\n      constructor = UI.Utils.registerCustomElement('span', 'css-shadow-swatch', CSSShadowSwatch);\n      CSSShadowSwatch.constructorInternal = constructor;\n    }\n\n    return constructor() as CSSShadowSwatch;\n  }\n\n  model(): CSSShadowModel {\n    return this.modelInternal as CSSShadowModel;\n  }\n\n  setCSSShadow(model: CSSShadowModel): void {\n    this.modelInternal = model;\n    this.contentElement.removeChildren();\n    const results = TextUtils.TextUtils.Utils.splitStringByRegexes(\n        model.asCSSText(), [/!important/g, /inset/g, Common.Color.Regex]);\n    for (let i = 0; i < results.length; i++) {\n      const result = results[i];\n      if (result.regexIndex === 2) {\n        if (!this.colorSwatchInternal) {\n          this.colorSwatchInternal = new ColorSwatch();\n          const value = this.colorSwatchInternal.createChild('span');\n          this.colorSwatchInternal.addEventListener(FormatChangedEvent.eventName, (event: FormatChangedEvent) => {\n            value.textContent = event.data.text;\n          });\n        }\n\n        this.colorSwatchInternal.renderColor(model.color());\n        const value = this.colorSwatchInternal.querySelector('span');\n        if (value) {\n          value.textContent = model.color().asString();\n        }\n        this.contentElement.appendChild(this.colorSwatchInternal);\n      } else {\n        this.contentElement.appendChild(document.createTextNode(result.value));\n      }\n    }\n  }\n\n  hideText(hide: boolean): void {\n    this.contentElement.hidden = hide;\n  }\n\n  iconElement(): HTMLSpanElement {\n    return this.iconElementInternal;\n  }\n\n  colorSwatch(): ColorSwatch|null {\n    return this.colorSwatchInternal;\n  }\n\n  private static constructorInternal: (() => Element)|null = null;\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AAEA;AACA;AAEO,kCAA2B,gBAAgB;AAAA,EAC/B;AAAA,EACT;AAAA,EAER,cAAc;AACZ;AACA,UAAM,OAAO,GAAG,MAAM,+BAA+B,MAAM;AAAA,MACzD,SAAS,CAAC;AAAA,MACV,gBAAgB;AAAA;AAElB,SAAK,sBAAsB,GAAG,KAAK,KAAK,OAAO,oBAAoB;AACnE,SAAK,YAAY,KAAK;AACtB,SAAK,cAAc,KAAK,YAAY;AACpC,SAAK,YAAY;AAAA;AAAA,SAGZ,SAAuB;AAC5B,QAAI,cAAwD,aAAa;AACzE,QAAI,CAAC,aAAa;AAChB,oBAAc,GAAG,MAAM,sBAAsB,QAAQ,iBAAiB;AACtE,mBAAa,sBAAsB;AAAA;AAGrC,WAAO;AAAA;AAAA,EAGT,aAAqB;AACnB,WAAO,KAAK,YAAY,eAAe;AAAA;AAAA,EAGzC,cAAc,MAAoB;AAChC,SAAK,YAAY,cAAc;AAAA;AAAA,EAGjC,SAAS,MAAqB;AAC5B,SAAK,YAAY,SAAS;AAAA;AAAA,EAG5B,cAA+B;AAC7B,WAAO,KAAK;AAAA;AAAA,SAGC,sBAA4C;AAAA;AAGtD,qCAA8B,gBAAgB;AAAA,EAClC;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EAER,cAAc;AACZ;AACA,UAAM,OAAO,GAAG,MAAM,+BAA+B,MAAM;AAAA,MACzD,SAAS,CAAC;AAAA,MACV,gBAAgB;AAAA;AAElB,SAAK,sBAAsB,GAAG,KAAK,KAAK,OAAO,oBAAoB;AACnE,SAAK,YAAY,KAAK;AACtB,SAAK,YAAY;AACjB,SAAK,iBAAiB,KAAK,YAAY;AAAA;AAAA,SAGlC,SAA0B;AAC/B,QAAI,cAAwD,gBAAgB;AAC5E,QAAI,CAAC,aAAa;AAChB,oBAAc,GAAG,MAAM,sBAAsB,QAAQ,qBAAqB;AAC1E,sBAAgB,sBAAsB;AAAA;AAGxC,WAAO;AAAA;AAAA,EAGT,QAAwB;AACtB,WAAO,KAAK;AAAA;AAAA,EAGd,aAAa,OAA6B;AACxC,SAAK,gBAAgB;AACrB,SAAK,eAAe;AACpB,UAAM,UAAU,UAAU,UAAU,MAAM,qBACtC,MAAM,aAAa,CAAC,eAAe,UAAU,OAAO,MAAM;AAC9D,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAM,SAAS,QAAQ;AACvB,UAAI,OAAO,eAAe,GAAG;AAC3B,YAAI,CAAC,KAAK,qBAAqB;AAC7B,eAAK,sBAAsB,IAAI;AAC/B,gBAAM,SAAQ,KAAK,oBAAoB,YAAY;AACnD,eAAK,oBAAoB,iBAAiB,mBAAmB,WAAW,CAAC,UAA8B;AACrG,mBAAM,cAAc,MAAM,KAAK;AAAA;AAAA;AAInC,aAAK,oBAAoB,YAAY,MAAM;AAC3C,cAAM,QAAQ,KAAK,oBAAoB,cAAc;AACrD,YAAI,OAAO;AACT,gBAAM,cAAc,MAAM,QAAQ;AAAA;AAEpC,aAAK,eAAe,YAAY,KAAK;AAAA,aAChC;AACL,aAAK,eAAe,YAAY,SAAS,eAAe,OAAO;AAAA;AAAA;AAAA;AAAA,EAKrE,SAAS,MAAqB;AAC5B,SAAK,eAAe,SAAS;AAAA;AAAA,EAG/B,cAA+B;AAC7B,WAAO,KAAK;AAAA;AAAA,EAGd,cAAgC;AAC9B,WAAO,KAAK;AAAA;AAAA,SAGC,sBAA4C;AAAA;",
  "names": []
}
