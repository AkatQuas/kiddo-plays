{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/utils/ImagePreview.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\n\nimport imagePreviewStyles from './imagePreview.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Alt text description of an image's source\n  */\n  unknownSource: 'unknown source',\n  /**\n  *@description Text to indicate the source of an image\n  *@example {example.com} PH1\n  */\n  imageFromS: 'Image from {PH1}',\n  /**\n   * @description Title of the row that shows the file size of an image.\n   */\n  fileSize: 'File size:',\n  /**\n   * @description Title of the row that shows the intrinsic size of an image in pixels.\n   */\n  intrinsicSize: 'Intrinsic size:',\n  /**\n   * @description Title of the row that shows the rendered size of an image in pixels.\n   */\n  renderedSize: 'Rendered size:',\n  /**\n   * @description Title of the row that shows the current URL of an image.\n   * https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-currentsrc.\n   */\n  currentSource: 'Current source:',\n  /**\n   * @description The rendered aspect ratio of an image.\n   */\n  renderedAspectRatio: 'Rendered aspect ratio:',\n  /**\n   * @description The intrinsic aspect ratio of an image.\n   */\n  intrinsicAspectRatio: 'Intrinsic aspect ratio:',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/ImagePreview.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface PrecomputedFeatures {\n  renderedWidth: number;\n  renderedHeight: number;\n  currentSrc?: Platform.DevToolsPath.UrlString;\n}\n\nfunction isImageResource(resource: SDK.Resource.Resource|null): boolean {\n  return resource !== null && resource.resourceType() === Common.ResourceType.resourceTypes.Image;\n}\n\nexport class ImagePreview {\n  static async build(\n      target: SDK.Target.Target, originalImageURL: Platform.DevToolsPath.UrlString, showDimensions: boolean, options: {\n        precomputedFeatures: (PrecomputedFeatures|undefined),\n        imageAltText: (string|undefined),\n      }|undefined = {precomputedFeatures: undefined, imageAltText: undefined}): Promise<Element|null> {\n    const {precomputedFeatures, imageAltText} = options;\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return null;\n    }\n    let resource = resourceTreeModel.resourceForURL(originalImageURL);\n    let imageURL = originalImageURL;\n    if (!isImageResource(resource) && precomputedFeatures && precomputedFeatures.currentSrc) {\n      imageURL = precomputedFeatures.currentSrc;\n      resource = resourceTreeModel.resourceForURL(imageURL);\n    }\n    if (!resource || !isImageResource(resource)) {\n      return null;\n    }\n    const imageResource = resource;\n\n    const displayName = resource.displayName;\n\n    // When opening DevTools for the first time, base64 resource has no content.\n    const content = resource.content ? resource.content : resource.url.split('base64,')[1];\n    const contentSize = resource.contentSize();\n    const resourceSize = contentSize ? contentSize : Platform.StringUtilities.base64ToSize(content);\n    const resourceSizeText = resourceSize > 0 ? Platform.NumberUtilities.bytesToString(resourceSize) : '';\n\n    return new Promise(resolve => {\n      const imageElement = document.createElement('img');\n      imageElement.addEventListener('load', buildContent, false);\n      imageElement.addEventListener('error', () => resolve(null), false);\n      if (imageAltText) {\n        imageElement.alt = imageAltText;\n      }\n      void imageResource.populateImageSource(imageElement);\n\n      function buildContent(): void {\n        const shadowBoundary = document.createElement('div');\n        const shadowRoot = shadowBoundary.attachShadow({mode: 'open'});\n        shadowRoot.adoptedStyleSheets = [imagePreviewStyles];\n        const container = shadowRoot.createChild('table');\n        container.className = 'image-preview-container';\n\n        const imageRow = (container.createChild('tr').createChild('td', 'image-container') as HTMLTableDataCellElement);\n        imageRow.colSpan = 2;\n\n        const link = (imageRow.createChild('div') as HTMLLinkElement);\n        link.title = displayName;\n        link.appendChild(imageElement);\n\n        // Open image in new tab.\n        link.addEventListener('click', () => {\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(imageURL);\n        });\n\n        const intrinsicWidth = imageElement.naturalWidth;\n        const intrinsicHeight = imageElement.naturalHeight;\n        const renderedWidth = precomputedFeatures ? precomputedFeatures.renderedWidth : intrinsicWidth;\n        const renderedHeight = precomputedFeatures ? precomputedFeatures.renderedHeight : intrinsicHeight;\n        if (showDimensions) {\n          const renderedRow = container.createChild('tr', 'row');\n\n          renderedRow.createChild('td', 'title').textContent = i18nString(UIStrings.renderedSize);\n          renderedRow.createChild('td', 'description').textContent = `${renderedWidth} \u00D7 ${renderedHeight} px`;\n\n          const aspectRatioRow = container.createChild('tr', 'row');\n          aspectRatioRow.createChild('td', 'title').textContent = i18nString(UIStrings.renderedAspectRatio);\n          aspectRatioRow.createChild('td', 'description').textContent =\n              Platform.NumberUtilities.aspectRatio(renderedWidth, renderedHeight);\n\n          if (renderedHeight !== intrinsicHeight || renderedWidth !== intrinsicWidth) {\n            const intrinsicRow = container.createChild('tr', 'row');\n            intrinsicRow.createChild('td', 'title').textContent = i18nString(UIStrings.intrinsicSize);\n            intrinsicRow.createChild('td', 'description').textContent = `${intrinsicWidth} \u00D7 ${intrinsicHeight} px`;\n\n            const intrinsicAspectRatioRow = container.createChild('tr', 'row');\n            intrinsicAspectRatioRow.createChild('td', 'title').textContent = i18nString(UIStrings.intrinsicAspectRatio);\n            intrinsicAspectRatioRow.createChild('td', 'description').textContent =\n                Platform.NumberUtilities.aspectRatio(intrinsicWidth, intrinsicHeight);\n          }\n        }\n\n        // File size\n        const fileRow = container.createChild('tr', 'row');\n        fileRow.createChild('td', 'title').textContent = i18nString(UIStrings.fileSize);\n        fileRow.createChild('td', 'description').textContent = resourceSizeText;\n\n        // Current source\n        const originalRow = container.createChild('tr', 'row');\n        originalRow.createChild('td', 'title').textContent = i18nString(UIStrings.currentSource);\n\n        const sourceText = Platform.StringUtilities.trimMiddle(imageURL, 100);\n        const sourceLink =\n            (originalRow.createChild('td', 'description description-link').createChild('span', 'source-link') as\n             HTMLLinkElement);\n        sourceLink.textContent = sourceText;\n        sourceLink.addEventListener('click', () => {\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(imageURL);\n        });\n        resolve(shadowBoundary);\n      }\n    });\n  }\n\n  static async loadDimensionsForNode(node: SDK.DOMModel.DOMNode): Promise<PrecomputedFeatures|undefined> {\n    if (!node.nodeName() || node.nodeName().toLowerCase() !== 'img') {\n      return;\n    }\n\n    const object = await node.resolveToObject('');\n\n    if (!object) {\n      return;\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    const featuresObject = await object.callFunctionJSON(features, undefined);\n    object.release();\n    return featuresObject;\n\n    function features(this: HTMLImageElement): PrecomputedFeatures {\n      return {\n        renderedWidth: this.width,\n        renderedHeight: this.height,\n        currentSrc: this.currentSrc as Platform.DevToolsPath.UrlString,\n      };\n    }\n  }\n\n  static defaultAltTextForImageURL(url: Platform.DevToolsPath.UrlString): string {\n    const parsedImageURL = new Common.ParsedURL.ParsedURL(url);\n    const imageSourceText = parsedImageURL.isValid ? parsedImageURL.displayName : i18nString(UIStrings.unknownSource);\n    return i18nString(UIStrings.imageFromS, {PH1: imageSourceText});\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
