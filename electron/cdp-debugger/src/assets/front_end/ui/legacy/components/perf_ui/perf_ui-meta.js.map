{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/perf_ui/perf_ui-meta.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as UI from '../../legacy.js';\n\nimport type * as PerfUI from './perf_ui.js';\n\nconst UIStrings = {\n  /**\n     *@description Title of a setting under the Performance category in Settings\n    */\n  flamechartMouseWheelAction: 'Flamechart mouse wheel action:',\n  /**\n     *@description The action to scroll\n    */\n  scroll: 'Scroll',\n  /**\n     *@description Text for zooming in\n    */\n  zoom: 'Zoom',\n  /**\n   * @description Title of a setting under the Memory category in Settings. Live memory is memory\n   * that is still in-use by the program (not dead). Allocation of live memory is when the program\n   * creates new memory. This is a setting that turns on extra annotations in the UI to mark these\n   * allocations.\n   */\n  liveMemoryAllocationAnnotations: 'Live memory allocation annotations',\n  /**\n     *@description Title of a setting under the Memory category that can be invoked through the Command Menu\n    */\n  showLiveMemoryAllocation: 'Show live memory allocation annotations',\n  /**\n     *@description Title of a setting under the Memory category that can be invoked through the Command Menu\n    */\n  hideLiveMemoryAllocation: 'Hide live memory allocation annotations',\n  /**\n     *@description Title of an action in the components tool to collect garbage\n    */\n  collectGarbage: 'Collect garbage',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/perf_ui/perf_ui-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPerfUIModule: (typeof PerfUI|undefined);\n\nasync function loadPerfUIModule(): Promise<typeof PerfUI> {\n  if (!loadedPerfUIModule) {\n    loadedPerfUIModule = await import('./perf_ui.js');\n  }\n  return loadedPerfUIModule;\n}\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'components.collect-garbage',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.collectGarbage),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_TRASH_BIN,\n  async loadActionDelegate() {\n    const PerfUI = await loadPerfUIModule();\n    return PerfUI.GCActionDelegate.GCActionDelegate.instance();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.Synced,\n  title: i18nLazyString(UIStrings.flamechartMouseWheelAction),\n  settingName: 'flamechartMouseWheelAction',\n  settingType: Common.Settings.SettingType.ENUM,\n  defaultValue: 'zoom',\n  options: [\n    {\n      title: i18nLazyString(UIStrings.scroll),\n      text: i18nLazyString(UIStrings.scroll),\n      value: 'scroll',\n    },\n    {\n      title: i18nLazyString(UIStrings.zoom),\n      text: i18nLazyString(UIStrings.zoom),\n      value: 'zoom',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  title: i18nLazyString(UIStrings.liveMemoryAllocationAnnotations),\n  settingName: 'memoryLiveHeapProfile',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showLiveMemoryAllocation),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideLiveMemoryAllocation),\n    },\n  ],\n});\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,4BAA4B;AAAA,EAI5B,QAAQ;AAAA,EAIR,MAAM;AAAA,EAON,iCAAiC;AAAA,EAIjC,0BAA0B;AAAA,EAI1B,0BAA0B;AAAA,EAI1B,gBAAgB;AAAA;AAGlB,MAAM,OAAO,KAAK,KAAK,kBAAkB,gDAAgD;AACzF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,kCAA0D;AACxD,MAAI,CAAC,oBAAoB;AACvB,yBAAqB,MAAM,OAAO;AAAA;AAEpC,SAAO;AAAA;AAGT,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU;AAAA,EACV,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,OAAO,eAAe,UAAU;AAAA,EAChC,WAAW,GAAG,mBAAmB,UAAU;AAAA,QACrC,qBAAqB;AACzB,UAAM,SAAS,MAAM;AACrB,WAAO,OAAO,iBAAiB,iBAAiB;AAAA;AAAA;AAIpD,OAAO,SAAS,yBAAyB;AAAA,EACvC,UAAU,OAAO,SAAS,gBAAgB;AAAA,EAC1C,aAAa,OAAO,SAAS,mBAAmB;AAAA,EAChD,OAAO,eAAe,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,aAAa,OAAO,SAAS,YAAY;AAAA,EACzC,cAAc;AAAA,EACd,SAAS;AAAA,IACP;AAAA,MACE,OAAO,eAAe,UAAU;AAAA,MAChC,MAAM,eAAe,UAAU;AAAA,MAC/B,OAAO;AAAA;AAAA,IAET;AAAA,MACE,OAAO,eAAe,UAAU;AAAA,MAChC,MAAM,eAAe,UAAU;AAAA,MAC/B,OAAO;AAAA;AAAA;AAAA;AAKb,OAAO,SAAS,yBAAyB;AAAA,EACvC,UAAU,OAAO,SAAS,gBAAgB;AAAA,EAC1C,YAAY,KAAK,QAAQ,eAAe;AAAA,EACxC,OAAO,eAAe,UAAU;AAAA,EAChC,aAAa;AAAA,EACb,aAAa,OAAO,SAAS,YAAY;AAAA,EACzC,cAAc;AAAA,EACd,SAAS;AAAA,IACP;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA,IAElC;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA;AAAA;",
  "names": []
}
