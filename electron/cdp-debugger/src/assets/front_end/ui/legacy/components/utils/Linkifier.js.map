{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/utils/Linkifier.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Linkifier\n  */\n  unknown: '(unknown)',\n  /**\n  *@description Text short for automatic\n  */\n  auto: 'auto',\n  /**\n  *@description Text in Linkifier\n  *@example {Sources panel} PH1\n  */\n  revealInS: 'Reveal in {PH1}',\n  /**\n  *@description Text for revealing an item in its destination\n  */\n  reveal: 'Reveal',\n  /**\n  *@description A context menu item in the Linkifier\n  *@example {Extension} PH1\n  */\n  openUsingS: 'Open using {PH1}',\n  /**\n  * @description The name of a setting which controls how links are handled in the UI. 'Handling'\n  * refers to the ability of extensions to DevTools to be able to intercept link clicks so that they\n  * can react to them.\n  */\n  linkHandling: 'Link handling:',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/Linkifier.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst instances = new Set<Linkifier>();\n\nlet decorator: LinkDecorator|null = null;\n\nconst anchorsByUISourceCode = new WeakMap<Workspace.UISourceCode.UISourceCode, Set<Element>>();\n\nconst infoByAnchor = new WeakMap<Node, _LinkInfo>();\n\nconst textByAnchor = new WeakMap<Node, string>();\n\nconst linkHandlers = new Map<string, LinkHandler>();\n\nlet linkHandlerSettingInstance: Common.Settings.Setting<string>;\n\nexport class Linkifier implements SDK.TargetManager.Observer {\n  private readonly maxLength: number;\n  private readonly anchorsByTarget: Map<SDK.Target.Target, Element[]>;\n  private readonly locationPoolByTarget: Map<SDK.Target.Target, Bindings.LiveLocation.LiveLocationPool>;\n  private onLiveLocationUpdate: (() => void)|undefined;\n  private useLinkDecorator: boolean;\n\n  constructor(\n      maxLengthForDisplayedURLs?: number, useLinkDecorator?: boolean,\n      onLiveLocationUpdate: (() => void) = (): void => {}) {\n    this.maxLength = maxLengthForDisplayedURLs || UI.UIUtils.MaxLengthForDisplayedURLs;\n    this.anchorsByTarget = new Map();\n    this.locationPoolByTarget = new Map();\n    this.onLiveLocationUpdate = onLiveLocationUpdate;\n    this.useLinkDecorator = Boolean(useLinkDecorator);\n    instances.add(this);\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  static setLinkDecorator(linkDecorator: LinkDecorator): void {\n    console.assert(!decorator, 'Cannot re-register link decorator.');\n    decorator = linkDecorator;\n    linkDecorator.addEventListener(LinkDecorator.Events.LinkIconChanged, onLinkIconChanged);\n    for (const linkifier of instances) {\n      linkifier.updateAllAnchorDecorations();\n    }\n\n    function onLinkIconChanged(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n      const uiSourceCode = event.data;\n      const links = anchorsByUISourceCode.get(uiSourceCode) || [];\n      for (const link of links) {\n        Linkifier.updateLinkDecorations(link);\n      }\n    }\n  }\n\n  private updateAllAnchorDecorations(): void {\n    for (const anchors of this.anchorsByTarget.values()) {\n      for (const anchor of anchors) {\n        Linkifier.updateLinkDecorations(anchor);\n      }\n    }\n  }\n\n  private static bindUILocation(anchor: Element, uiLocation: Workspace.UISourceCode.UILocation): void {\n    const linkInfo = Linkifier.linkInfo(anchor);\n    if (!linkInfo) {\n      return;\n    }\n    linkInfo.uiLocation = uiLocation;\n    if (!uiLocation) {\n      return;\n    }\n    const uiSourceCode = uiLocation.uiSourceCode;\n    let sourceCodeAnchors = anchorsByUISourceCode.get(uiSourceCode);\n    if (!sourceCodeAnchors) {\n      sourceCodeAnchors = new Set();\n      anchorsByUISourceCode.set(uiSourceCode, sourceCodeAnchors);\n    }\n    sourceCodeAnchors.add(anchor);\n  }\n\n  private static unbindUILocation(anchor: Element): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (!info || !info.uiLocation) {\n      return;\n    }\n\n    const uiSourceCode = info.uiLocation.uiSourceCode;\n    info.uiLocation = null;\n    const sourceCodeAnchors = anchorsByUISourceCode.get(uiSourceCode);\n    if (sourceCodeAnchors) {\n      sourceCodeAnchors.delete(anchor);\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    this.anchorsByTarget.set(target, []);\n    this.locationPoolByTarget.set(target, new Bindings.LiveLocation.LiveLocationPool());\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    const locationPool = this.locationPoolByTarget.get(target);\n    this.locationPoolByTarget.delete(target);\n    if (!locationPool) {\n      return;\n    }\n    locationPool.disposeAll();\n    const anchors = (this.anchorsByTarget.get(target) as HTMLElement[] | null);\n    if (!anchors) {\n      return;\n    }\n    this.anchorsByTarget.delete(target);\n    for (const anchor of anchors) {\n      const info = Linkifier.linkInfo(anchor);\n      if (!info) {\n        continue;\n      }\n      info.liveLocation = null;\n      Linkifier.unbindUILocation(anchor);\n      const fallback = info.fallback;\n      if (fallback) {\n        anchor.replaceWith(fallback);\n      }\n    }\n  }\n\n  maybeLinkifyScriptLocation(\n      target: SDK.Target.Target|null, scriptId: Protocol.Runtime.ScriptId|null,\n      sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number|undefined, options?: LinkifyOptions): HTMLElement\n      |null {\n    let fallbackAnchor: HTMLElement|null = null;\n    const linkifyURLOptions: LinkifyURLOptions = {\n      lineNumber,\n      maxLength: this.maxLength,\n      columnNumber: options?.columnNumber,\n      showColumnNumber: Boolean(options?.showColumnNumber),\n      className: options?.className,\n      tabStop: options?.tabStop,\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n    };\n    const {columnNumber, className = ''} = linkifyURLOptions;\n    if (sourceURL) {\n      fallbackAnchor = Linkifier.linkifyURL(sourceURL, linkifyURLOptions);\n    }\n    if (!target || target.isDisposed()) {\n      return fallbackAnchor;\n    }\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n    if (!debuggerModel) {\n      return fallbackAnchor;\n    }\n\n    // Prefer createRawLocationByScriptId() here, since it will always produce a correct\n    // link, since the script ID is unique. Only fall back to createRawLocationByURL()\n    // when all we have is an URL, which is not guaranteed to be unique.\n    const rawLocation = scriptId ? debuggerModel.createRawLocationByScriptId(\n                                       scriptId, lineNumber || 0, columnNumber, linkifyURLOptions.inlineFrameIndex) :\n                                   debuggerModel.createRawLocationByURL(\n                                       sourceURL, lineNumber || 0, columnNumber, linkifyURLOptions.inlineFrameIndex);\n    if (!rawLocation) {\n      return fallbackAnchor;\n    }\n\n    const createLinkOptions: _CreateLinkOptions = {\n      tabStop: options?.tabStop,\n    };\n    // Not initialising the anchor element with 'zero width space' (\\u200b) causes a crash\n    // in the layout engine.\n    // TODO(szuend): Remove comment and workaround once the crash is fixed.\n    const {link, linkInfo} = Linkifier.createLink(\n        fallbackAnchor && fallbackAnchor.textContent ? fallbackAnchor.textContent : '\\u200b', className,\n        createLinkOptions);\n    linkInfo.enableDecorator = this.useLinkDecorator;\n    linkInfo.fallback = fallbackAnchor;\n\n    const pool = this.locationPoolByTarget.get(rawLocation.debuggerModel.target());\n    if (!pool) {\n      return fallbackAnchor;\n    }\n\n    const linkDisplayOptions = {showColumnNumber: linkifyURLOptions.showColumnNumber};\n\n    const currentOnLiveLocationUpdate = this.onLiveLocationUpdate;\n    void Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n        .createLiveLocation(rawLocation, this.updateAnchor.bind(this, link, linkDisplayOptions), pool)\n        .then(liveLocation => {\n          if (liveLocation) {\n            linkInfo.liveLocation = liveLocation;\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            currentOnLiveLocationUpdate();\n          }\n        });\n\n    const anchors = (this.anchorsByTarget.get(rawLocation.debuggerModel.target()) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  linkifyScriptLocation(\n      target: SDK.Target.Target|null, scriptId: Protocol.Runtime.ScriptId|null,\n      sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number|undefined, options?: LinkifyOptions): HTMLElement {\n    const scriptLink = this.maybeLinkifyScriptLocation(target, scriptId, sourceURL, lineNumber, options);\n    const linkifyURLOptions: LinkifyURLOptions = {\n      lineNumber,\n      maxLength: this.maxLength,\n      className: options?.className,\n      columnNumber: options?.columnNumber,\n      showColumnNumber: Boolean(options?.showColumnNumber),\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n      tabStop: options?.tabStop,\n    };\n\n    return scriptLink || Linkifier.linkifyURL(sourceURL, linkifyURLOptions);\n  }\n\n  linkifyRawLocation(\n      rawLocation: SDK.DebuggerModel.Location, fallbackUrl: Platform.DevToolsPath.UrlString,\n      className?: string): Element {\n    return this.linkifyScriptLocation(\n        rawLocation.debuggerModel.target(), rawLocation.scriptId, fallbackUrl, rawLocation.lineNumber, {\n          columnNumber: rawLocation.columnNumber,\n          className,\n          inlineFrameIndex: rawLocation.inlineFrameIndex,\n        });\n  }\n\n  maybeLinkifyConsoleCallFrame(\n      target: SDK.Target.Target|null, callFrame: Protocol.Runtime.CallFrame, options?: LinkifyOptions): HTMLElement\n      |null {\n    const linkifyOptions: LinkifyOptions = {\n      columnNumber: callFrame.columnNumber,\n      showColumnNumber: Boolean(options?.showColumnNumber),\n      inlineFrameIndex: options?.inlineFrameIndex ?? 0,\n      tabStop: options?.tabStop,\n      className: options?.className,\n    };\n    return this.maybeLinkifyScriptLocation(\n        target, callFrame.scriptId, callFrame.url as Platform.DevToolsPath.UrlString, callFrame.lineNumber,\n        linkifyOptions);\n  }\n\n  linkifyStackTraceTopFrame(target: SDK.Target.Target, stackTrace: Protocol.Runtime.StackTrace, className?: string):\n      HTMLElement {\n    console.assert(stackTrace.callFrames.length > 0);\n\n    const {url, lineNumber, columnNumber} = stackTrace.callFrames[0];\n    const fallbackAnchor = Linkifier.linkifyURL(url as Platform.DevToolsPath.UrlString, {\n      className,\n      lineNumber,\n      columnNumber,\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n      maxLength: this.maxLength,\n      preventClick: true,\n    });\n\n    // The contract is that disposed targets don't have a LiveLocationPool\n    // associated, whereas all active targets have one such pool. This ensures\n    // that the fallbackAnchor is only ever used when the target was disposed.\n    const pool = this.locationPoolByTarget.get(target);\n    if (!pool) {\n      console.assert(target.isDisposed());\n      return fallbackAnchor;\n    }\n    console.assert(!target.isDisposed());\n\n    // All targets that can report stack traces also have a debugger model.\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n\n    // Not initialising the anchor element with 'zero width space' (\\u200b) causes a crash\n    // in the layout engine.\n    // TODO(szuend): Remove comment and workaround once the crash is fixed.\n    const {link, linkInfo} = Linkifier.createLink('\\u200b', className ?? '');\n    linkInfo.enableDecorator = this.useLinkDecorator;\n    linkInfo.fallback = fallbackAnchor;\n\n    const linkDisplayOptions = {showColumnNumber: false};\n\n    const currentOnLiveLocationUpdate = this.onLiveLocationUpdate;\n    void Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n        .createStackTraceTopFrameLiveLocation(\n            debuggerModel.createRawLocationsByStackTrace(stackTrace),\n            this.updateAnchor.bind(this, link, linkDisplayOptions), pool)\n        .then(liveLocation => {\n          linkInfo.liveLocation = liveLocation;\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // @ts-expect-error\n          currentOnLiveLocationUpdate();\n        });\n\n    const anchors = (this.anchorsByTarget.get(target) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  linkifyCSSLocation(rawLocation: SDK.CSSModel.CSSLocation, classes?: string): Element {\n    const createLinkOptions: _CreateLinkOptions = {\n      tabStop: true,\n    };\n    // Not initialising the anchor element with 'zero width space' (\\u200b) causes a crash\n    // in the layout engine.\n    // TODO(szuend): Remove comment and workaround once the crash is fixed.\n    const {link, linkInfo} = Linkifier.createLink('\\u200b', classes || '', createLinkOptions);\n    linkInfo.enableDecorator = this.useLinkDecorator;\n\n    const pool = this.locationPoolByTarget.get(rawLocation.cssModel().target());\n    if (!pool) {\n      return link;\n    }\n\n    const linkDisplayOptions = {showColumnNumber: false};\n\n    const currentOnLiveLocationUpdate = this.onLiveLocationUpdate;\n    void Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance()\n        .createLiveLocation(rawLocation, this.updateAnchor.bind(this, link, linkDisplayOptions), pool)\n        .then(liveLocation => {\n          linkInfo.liveLocation = liveLocation;\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // @ts-expect-error\n          currentOnLiveLocationUpdate();\n        });\n\n    const anchors = (this.anchorsByTarget.get(rawLocation.cssModel().target()) as Element[]);\n    anchors.push(link);\n    return link;\n  }\n\n  reset(): void {\n    // Create a copy of {keys} so {targetRemoved} can safely modify the map.\n    for (const target of [...this.anchorsByTarget.keys()]) {\n      this.targetRemoved(target);\n      this.targetAdded(target);\n    }\n  }\n\n  dispose(): void {\n    // Create a copy of {keys} so {targetRemoved} can safely modify the map.\n    for (const target of [...this.anchorsByTarget.keys()]) {\n      this.targetRemoved(target);\n    }\n    SDK.TargetManager.TargetManager.instance().unobserveTargets(this);\n    instances.delete(this);\n  }\n\n  private async updateAnchor(\n      anchor: HTMLElement, options: LinkDisplayOptions,\n      liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> {\n    Linkifier.unbindUILocation(anchor);\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      if (liveLocation instanceof Bindings.CSSWorkspaceBinding.LiveLocation) {\n        const header = (liveLocation as Bindings.CSSWorkspaceBinding.LiveLocation).header();\n        if (header && header.ownerNode) {\n          anchor.addEventListener('click', event => {\n            event.consume(true);\n            void Common.Revealer.reveal(header.ownerNode || null);\n          }, false);\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // This workaround is needed to make stylelint happy\n          Linkifier.setTrimmedText(\n              anchor,\n              '<' +\n                  'style>');\n        }\n      }\n      return;\n    }\n\n    Linkifier.bindUILocation(anchor, uiLocation);\n    const text = uiLocation.linkText(true /* skipTrim */, options.showColumnNumber);\n    Linkifier.setTrimmedText(anchor, text, this.maxLength);\n\n    let titleText: string = uiLocation.uiSourceCode.url();\n    if (uiLocation.uiSourceCode.mimeType() === 'application/wasm') {\n      // For WebAssembly locations, we follow the conventions described in\n      // github.com/WebAssembly/design/blob/master/Web.md#developer-facing-display-conventions\n      if (typeof uiLocation.columnNumber === 'number') {\n        titleText += `:0x${uiLocation.columnNumber.toString(16)}`;\n      }\n    } else {\n      titleText += ':' + (uiLocation.lineNumber + 1);\n      if (options.showColumnNumber && typeof uiLocation.columnNumber === 'number') {\n        titleText += ':' + (uiLocation.columnNumber + 1);\n      }\n    }\n    UI.Tooltip.Tooltip.install(anchor, titleText);\n    anchor.classList.toggle('ignore-list-link', await liveLocation.isIgnoreListed());\n    Linkifier.updateLinkDecorations(anchor);\n  }\n\n  setLiveLocationUpdateCallback(callback: () => void): void {\n    this.onLiveLocationUpdate = callback;\n  }\n\n  private static updateLinkDecorations(anchor: Element): void {\n    const info = Linkifier.linkInfo(anchor);\n    if (!info || !info.enableDecorator) {\n      return;\n    }\n    if (!decorator || !info.uiLocation) {\n      return;\n    }\n    if (info.icon && info.icon.parentElement) {\n      anchor.removeChild(info.icon);\n    }\n    const icon = decorator.linkIcon(info.uiLocation.uiSourceCode);\n    if (icon) {\n      icon.style.setProperty('margin-right', '2px');\n      anchor.insertBefore(icon, anchor.firstChild);\n    }\n    info.icon = icon;\n  }\n\n  static linkifyURL(url: Platform.DevToolsPath.UrlString, options?: LinkifyURLOptions): HTMLElement {\n    options = options || {\n      showColumnNumber: false,\n      inlineFrameIndex: 0,\n    };\n    const text = options.text;\n    const className = options.className || '';\n    const lineNumber = options.lineNumber;\n    const columnNumber = options.columnNumber;\n    const showColumnNumber = options.showColumnNumber;\n    const preventClick = options.preventClick;\n    const maxLength = options.maxLength || UI.UIUtils.MaxLengthForDisplayedURLs;\n    const bypassURLTrimming = options.bypassURLTrimming;\n    if (!url || url.trim().toLowerCase().startsWith('javascript:')) {\n      const element = document.createElement('span');\n      if (className) {\n        element.className = className;\n      }\n      element.textContent = text || url || i18nString(UIStrings.unknown);\n      return element;\n    }\n\n    let linkText = text || Bindings.ResourceUtils.displayNameForURL(url);\n    if (typeof lineNumber === 'number' && !text) {\n      linkText += ':' + (lineNumber + 1);\n      if (showColumnNumber && typeof columnNumber === 'number') {\n        linkText += ':' + (columnNumber + 1);\n      }\n    }\n    const title = linkText !== url ? url : '';\n    const linkOptions = {maxLength, title, href: (url), preventClick, tabStop: options.tabStop, bypassURLTrimming};\n    const {link, linkInfo} = Linkifier.createLink(linkText, className, linkOptions);\n    if (lineNumber) {\n      linkInfo.lineNumber = lineNumber;\n    }\n    if (columnNumber) {\n      linkInfo.columnNumber = columnNumber;\n    }\n    return link;\n  }\n\n  static linkifyRevealable(\n      revealable: Object, text: string|HTMLElement, fallbackHref?: Platform.DevToolsPath.UrlString, title?: string,\n      className?: string): HTMLElement {\n    const createLinkOptions: _CreateLinkOptions = {\n      maxLength: UI.UIUtils.MaxLengthForDisplayedURLs,\n      href: (fallbackHref),\n      title,\n    };\n    const {link, linkInfo} = Linkifier.createLink(text, className || '', createLinkOptions);\n    linkInfo.revealable = revealable;\n    return link;\n  }\n\n  private static createLink(text: string|HTMLElement, className: string, options: _CreateLinkOptions = {}):\n      {link: HTMLElement, linkInfo: _LinkInfo} {\n    const {maxLength, title, href, preventClick, tabStop, bypassURLTrimming} = options;\n    const link = document.createElement('span');\n    if (className) {\n      link.className = className;\n    }\n    link.classList.add('devtools-link');\n    if (title) {\n      UI.Tooltip.Tooltip.install(link, title);\n    }\n    if (href) {\n      // @ts-ignore\n      link.href = href;\n    }\n\n    if (text instanceof HTMLElement) {\n      link.appendChild(text);\n    } else {\n      if (bypassURLTrimming) {\n        link.classList.add('devtools-link-styled-trim');\n        Linkifier.appendTextWithoutHashes(link, text);\n      } else {\n        Linkifier.setTrimmedText(link, text, maxLength);\n      }\n    }\n\n    const linkInfo = {\n      icon: null,\n      enableDecorator: false,\n      uiLocation: null,\n      liveLocation: null,\n      url: href || null,\n      lineNumber: null,\n      columnNumber: null,\n      inlineFrameIndex: 0,\n      revealable: null,\n      fallback: null,\n    };\n    infoByAnchor.set(link, linkInfo);\n    if (!preventClick) {\n      link.addEventListener('click', event => {\n        if (Linkifier.handleClick(event)) {\n          event.consume(true);\n        }\n      }, false);\n      link.addEventListener('keydown', event => {\n        if (event.key === 'Enter' && Linkifier.handleClick(event)) {\n          event.consume(true);\n        }\n      }, false);\n    } else {\n      link.classList.add('devtools-link-prevent-click');\n    }\n    UI.ARIAUtils.markAsLink(link);\n    link.tabIndex = tabStop ? 0 : -1;\n    return {link, linkInfo};\n  }\n\n  private static setTrimmedText(link: Element, text: string, maxLength?: number): void {\n    link.removeChildren();\n    if (maxLength && text.length > maxLength) {\n      const middleSplit = splitMiddle(text, maxLength);\n      Linkifier.appendTextWithoutHashes(link, middleSplit[0]);\n      Linkifier.appendHiddenText(link, middleSplit[1]);\n      Linkifier.appendTextWithoutHashes(link, middleSplit[2]);\n    } else {\n      Linkifier.appendTextWithoutHashes(link, text);\n    }\n\n    function splitMiddle(string: string, maxLength: number): string[] {\n      let leftIndex = Math.floor(maxLength / 2);\n      let rightIndex = string.length - Math.ceil(maxLength / 2) + 1;\n\n      const codePointAtRightIndex = string.codePointAt(rightIndex - 1);\n      // Do not truncate between characters that use multiple code points (emojis).\n      if (typeof codePointAtRightIndex !== 'undefined' && codePointAtRightIndex >= 0x10000) {\n        rightIndex++;\n        leftIndex++;\n      }\n      const codePointAtLeftIndex = string.codePointAt(leftIndex - 1);\n      if (typeof codePointAtLeftIndex !== 'undefined' && leftIndex > 0 && codePointAtLeftIndex >= 0x10000) {\n        leftIndex--;\n      }\n      return [string.substring(0, leftIndex), string.substring(leftIndex, rightIndex), string.substring(rightIndex)];\n    }\n  }\n\n  private static appendTextWithoutHashes(link: Element, string: string): void {\n    const hashSplit = TextUtils.TextUtils.Utils.splitStringByRegexes(string, [/[a-f0-9]{20,}/g]);\n    for (const match of hashSplit) {\n      if (match.regexIndex === -1) {\n        UI.UIUtils.createTextChild(link, match.value);\n      } else {\n        UI.UIUtils.createTextChild(link, match.value.substring(0, 7));\n        Linkifier.appendHiddenText(link, match.value.substring(7));\n      }\n    }\n  }\n\n  private static appendHiddenText(link: Element, string: string): void {\n    const ellipsisNode = UI.UIUtils.createTextChild(link.createChild('span', 'devtools-link-ellipsis'), '\u2026');\n    textByAnchor.set(ellipsisNode, string);\n  }\n\n  static untruncatedNodeText(node: Node): string {\n    return textByAnchor.get(node) || node.textContent || '';\n  }\n\n  static linkInfo(link: Element|null): _LinkInfo|null {\n    return link ? infoByAnchor.get(link) || null : null as _LinkInfo | null;\n  }\n\n  private static handleClick(event: Event): boolean {\n    const link = (event.currentTarget as Element);\n    if (UI.UIUtils.isBeingEdited((event.target as Node)) || link.hasSelection()) {\n      return false;\n    }\n    const linkInfo = Linkifier.linkInfo(link);\n    if (!linkInfo) {\n      return false;\n    }\n    return Linkifier.invokeFirstAction(linkInfo);\n  }\n\n  static handleClickFromNewComponentLand(linkInfo: _LinkInfo): void {\n    Linkifier.invokeFirstAction(linkInfo);\n  }\n\n  static invokeFirstAction(linkInfo: _LinkInfo): boolean {\n    const actions = Linkifier.linkActions(linkInfo);\n    if (actions.length) {\n      void actions[0].handler.call(null);\n      return true;\n    }\n    return false;\n  }\n\n  static linkHandlerSetting(): Common.Settings.Setting<string> {\n    if (!linkHandlerSettingInstance) {\n      linkHandlerSettingInstance =\n          Common.Settings.Settings.instance().createSetting('openLinkHandler', i18nString(UIStrings.auto));\n    }\n    return linkHandlerSettingInstance;\n  }\n\n  static registerLinkHandler(title: string, handler: LinkHandler): void {\n    linkHandlers.set(title, handler);\n    LinkHandlerSettingUI.instance().update();\n  }\n\n  static unregisterLinkHandler(title: string): void {\n    linkHandlers.delete(title);\n    LinkHandlerSettingUI.instance().update();\n  }\n\n  static uiLocation(link: Element): Workspace.UISourceCode.UILocation|null {\n    const info = Linkifier.linkInfo(link);\n    return info ? info.uiLocation : null;\n  }\n\n  static linkActions(info: _LinkInfo): {\n    section: string,\n    title: string,\n    handler: () => Promise<void>| void,\n  }[] {\n    const result: {\n      section: string,\n      title: string,\n      handler: () => Promise<void>| void,\n    }[] = [];\n\n    if (!info) {\n      return result;\n    }\n\n    let url = Platform.DevToolsPath.EmptyUrlString;\n    let uiLocation: Workspace.UISourceCode.UILocation|(Workspace.UISourceCode.UILocation | null)|null = null;\n    if (info.uiLocation) {\n      uiLocation = info.uiLocation;\n      url = uiLocation.uiSourceCode.contentURL();\n    } else if (info.url) {\n      url = info.url;\n      const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url) ||\n          Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(\n              Common.ParsedURL.ParsedURL.urlWithoutHash(url) as Platform.DevToolsPath.UrlString);\n      uiLocation = uiSourceCode ? uiSourceCode.uiLocation(info.lineNumber || 0, info.columnNumber || 0) : null;\n    }\n    const resource = url ? Bindings.ResourceUtils.resourceForURL(url) : null;\n    const contentProvider = uiLocation ? uiLocation.uiSourceCode : resource;\n\n    const revealable = info.revealable || uiLocation || resource;\n    if (revealable) {\n      const destination = Common.Revealer.revealDestination(revealable);\n      result.push({\n        section: 'reveal',\n        title: destination ? i18nString(UIStrings.revealInS, {PH1: destination}) : i18nString(UIStrings.reveal),\n        handler: (): Promise<void> => Common.Revealer.reveal(revealable),\n      });\n    }\n    if (contentProvider) {\n      const lineNumber = uiLocation ? uiLocation.lineNumber : info.lineNumber || 0;\n      for (const title of linkHandlers.keys()) {\n        const handler = linkHandlers.get(title);\n        if (!handler) {\n          continue;\n        }\n        const action = {\n          section: 'reveal',\n          title: i18nString(UIStrings.openUsingS, {PH1: title}),\n          handler: handler.bind(null, contentProvider, lineNumber),\n        };\n        if (title === Linkifier.linkHandlerSetting().get()) {\n          result.unshift(action);\n        } else {\n          result.push(action);\n        }\n      }\n    }\n    if (resource || info.url) {\n      result.push({\n        section: 'reveal',\n        title: UI.UIUtils.openLinkExternallyLabel(),\n        handler: (): void => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url),\n      });\n      result.push({\n        section: 'clipboard',\n        title: UI.UIUtils.copyLinkAddressLabel(),\n        handler: (): void => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(url),\n      });\n    }\n\n    if (uiLocation && uiLocation.uiSourceCode) {\n      const contentProvider = uiLocation.uiSourceCode;\n      result.push({\n        section: 'clipboard',\n        title: UI.UIUtils.copyFileNameLabel(),\n        handler: (): void =>\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentProvider.displayName()),\n      });\n    }\n\n    return result;\n  }\n}\n\nexport interface LinkDecorator extends Common.EventTarget.EventTarget<LinkDecorator.EventTypes> {\n  linkIcon(uiSourceCode: Workspace.UISourceCode.UISourceCode): UI.Icon.Icon|null;\n}\n\nexport namespace LinkDecorator {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum Events {\n    LinkIconChanged = 'LinkIconChanged',\n  }\n\n  export type EventTypes = {\n    [Events.LinkIconChanged]: Workspace.UISourceCode.UISourceCode,\n  };\n}\n\nlet linkContextMenuProviderInstance: LinkContextMenuProvider;\n\nexport class LinkContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): LinkContextMenuProvider {\n    const {forceNew} = opts;\n    if (!linkContextMenuProviderInstance || forceNew) {\n      linkContextMenuProviderInstance = new LinkContextMenuProvider();\n    }\n\n    return linkContextMenuProviderInstance;\n  }\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    let targetNode: (Node|null) = (target as Node | null);\n    while (targetNode && !infoByAnchor.get(targetNode)) {\n      targetNode = targetNode.parentNodeOrShadowHost();\n    }\n    const link = (targetNode as Element | null);\n    const linkInfo = Linkifier.linkInfo(link);\n    if (!linkInfo) {\n      return;\n    }\n\n    const actions = Linkifier.linkActions(linkInfo);\n    for (const action of actions) {\n      contextMenu.section(action.section).appendItem(action.title, action.handler);\n    }\n  }\n}\n\nlet linkHandlerSettingUIInstance: LinkHandlerSettingUI;\n\nexport class LinkHandlerSettingUI implements UI.SettingsUI.SettingUI {\n  private element: HTMLSelectElement;\n\n  private constructor() {\n    this.element = document.createElement('select');\n    this.element.classList.add('chrome-select');\n    this.element.addEventListener('change', this.onChange.bind(this), false);\n    this.update();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): LinkHandlerSettingUI {\n    const {forceNew} = opts;\n    if (!linkHandlerSettingUIInstance || forceNew) {\n      linkHandlerSettingUIInstance = new LinkHandlerSettingUI();\n    }\n\n    return linkHandlerSettingUIInstance;\n  }\n\n  update(): void {\n    this.element.removeChildren();\n    const names = [...linkHandlers.keys()];\n    names.unshift(i18nString(UIStrings.auto));\n    for (const name of names) {\n      const option = document.createElement('option');\n      option.textContent = name;\n      option.selected = name === Linkifier.linkHandlerSetting().get();\n      this.element.appendChild(option);\n    }\n    this.element.disabled = names.length <= 1;\n  }\n\n  private onChange(event: Event): void {\n    if (!event.target) {\n      return;\n    }\n    const value = (event.target as HTMLSelectElement).value;\n    Linkifier.linkHandlerSetting().set(value);\n  }\n\n  settingElement(): Element|null {\n    return UI.SettingsUI.createCustomSetting(i18nString(UIStrings.linkHandling), this.element);\n  }\n}\n\nlet listeningToNewEvents = false;\nfunction listenForNewComponentLinkifierEvents(): void {\n  if (listeningToNewEvents) {\n    return;\n  }\n\n  listeningToNewEvents = true;\n\n  window.addEventListener('linkifieractivated', function(event: Event) {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const unknownEvent = (event as any);\n    const eventWithData = (unknownEvent as {\n      data: _LinkInfo,\n    });\n    Linkifier.handleClickFromNewComponentLand(eventWithData.data);\n  });\n}\n\nlistenForNewComponentLinkifierEvents();\n\nlet contentProviderContextMenuProviderInstance: ContentProviderContextMenuProvider;\n\nexport class ContentProviderContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ContentProviderContextMenuProvider {\n    const {forceNew} = opts;\n    if (!contentProviderContextMenuProviderInstance || forceNew) {\n      contentProviderContextMenuProviderInstance = new ContentProviderContextMenuProvider();\n    }\n\n    return contentProviderContextMenuProviderInstance;\n  }\n\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    const contentProvider = (target as Workspace.UISourceCode.UISourceCode);\n    const contentUrl = contentProvider.contentURL();\n    if (!contentUrl) {\n      return;\n    }\n\n    contextMenu.revealSection().appendItem(\n        UI.UIUtils.openLinkExternallyLabel(),\n        () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n            contentUrl.endsWith(':formatted') ?\n                Common.ParsedURL.ParsedURL.slice(contentUrl, 0, contentUrl.lastIndexOf(':')) :\n                contentUrl));\n    for (const title of linkHandlers.keys()) {\n      const handler = linkHandlers.get(title);\n      if (!handler) {\n        continue;\n      }\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openUsingS, {PH1: title}), handler.bind(null, contentProvider, 0));\n    }\n    if (contentProvider instanceof SDK.NetworkRequest.NetworkRequest) {\n      return;\n    }\n\n    contextMenu.clipboardSection().appendItem(\n        UI.UIUtils.copyLinkAddressLabel(),\n        () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentUrl));\n\n    contextMenu.clipboardSection().appendItem(\n        UI.UIUtils.copyFileNameLabel(),\n        () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(contentProvider.displayName()));\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _LinkInfo {\n  icon: UI.Icon.Icon|null;\n  enableDecorator: boolean;\n  uiLocation: Workspace.UISourceCode.UILocation|null;\n  liveLocation: Bindings.LiveLocation.LiveLocation|null;\n  url: Platform.DevToolsPath.UrlString|null;\n  lineNumber: number|null;\n  columnNumber: number|null;\n  inlineFrameIndex: number;\n  revealable: Object|null;\n  fallback: Element|null;\n}\n\nexport interface LinkifyURLOptions {\n  text?: string;\n  className?: string;\n  lineNumber?: number;\n  columnNumber?: number;\n  showColumnNumber: boolean;\n  inlineFrameIndex: number;\n  preventClick?: boolean;\n  maxLength?: number;\n  tabStop?: boolean;\n  bypassURLTrimming?: boolean;\n}\n\nexport interface LinkifyOptions {\n  className?: string;\n  columnNumber?: number;\n  showColumnNumber?: boolean;\n  inlineFrameIndex: number;\n  tabStop?: boolean;\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _CreateLinkOptions {\n  maxLength?: number;\n  title?: string;\n  href?: Platform.DevToolsPath.UrlString;\n  preventClick?: boolean;\n  tabStop?: boolean;\n  bypassURLTrimming?: boolean;\n}\n\ninterface LinkDisplayOptions {\n  showColumnNumber: boolean;\n}\n\nexport type LinkHandler = (arg0: TextUtils.ContentProvider.ContentProvider, arg1: number) => void;\n"],
  "mappings": "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",
  "names": []
}
