{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/utils/JSPresentationUtils.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as UI from '../../legacy.js';\n\nimport {Linkifier} from './Linkifier.js';\nimport jsUtilsStyles from './jsUtils.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to stop preventing the debugger from stepping into library code\n  */\n  removeFromIgnore: 'Remove from ignore list',\n  /**\n  *@description Text for scripts that should not be stepped into when debugging\n  */\n  addToIgnore: 'Add script to ignore list',\n  /**\n  * @description A context menu item to show more frames when they are available. Never 0.\n  */\n  showSMoreFrames: '{n, plural, =1 {Show # more frame} other {Show # more frames}}',\n  /**\n   *@description Text indicating that source url of a link is currently unknown\n   */\n  unknownSource: 'unknown',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/utils/JSPresentationUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction populateContextMenu(link: Element, event: Event): void {\n  const contextMenu = new UI.ContextMenu.ContextMenu(event);\n  event.consume(true);\n  const uiLocation = Linkifier.uiLocation(link);\n  if (uiLocation &&\n      Bindings.IgnoreListManager.IgnoreListManager.instance().canIgnoreListUISourceCode(uiLocation.uiSourceCode)) {\n    if (Bindings.IgnoreListManager.IgnoreListManager.instance().isIgnoreListedUISourceCode(uiLocation.uiSourceCode)) {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.removeFromIgnore),\n          () => Bindings.IgnoreListManager.IgnoreListManager.instance().unIgnoreListUISourceCode(\n              uiLocation.uiSourceCode));\n    } else {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.addToIgnore),\n          () =>\n              Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListUISourceCode(uiLocation.uiSourceCode));\n    }\n  }\n  contextMenu.appendApplicableItems(event);\n  void contextMenu.show();\n}\n\nexport function buildStackTraceRows(\n    stackTrace: Protocol.Runtime.StackTrace,\n    target: SDK.Target.Target|null,\n    linkifier: Linkifier,\n    tabStops: boolean|undefined,\n    updateCallback?: (arg0: (StackTraceRegularRow|StackTraceAsyncRow)[]) => void,\n    ): (StackTraceRegularRow|StackTraceAsyncRow)[] {\n  const stackTraceRows: (StackTraceRegularRow|StackTraceAsyncRow)[] = [];\n  let regularRowCount = 0;\n\n  if (updateCallback) {\n    const throttler = new Common.Throttler.Throttler(100);\n    linkifier.setLiveLocationUpdateCallback(\n        () => throttler.schedule(async () => updateHiddenRows(updateCallback, stackTraceRows)));\n  }\n\n  function buildStackTraceRowsHelper(\n      stackTrace: Protocol.Runtime.StackTrace,\n      previousCallFrames: Protocol.Runtime.CallFrame[]|undefined = undefined): void {\n    let asyncRow: StackTraceAsyncRow|null = null;\n    if (previousCallFrames) {\n      asyncRow = {\n        asyncDescription: UI.UIUtils.asyncStackTraceLabel(stackTrace.description, previousCallFrames),\n        ignoreListHide: false,\n        rowCountHide: false,\n      };\n      stackTraceRows.push(asyncRow);\n    }\n    let hiddenCallFrames = 0;\n    for (const stackFrame of stackTrace.callFrames) {\n      regularRowCount++;\n      const rowCountHide = regularRowCount > 30 && stackTrace.callFrames.length > 31;\n      let ignoreListHide = false;\n      const functionName = UI.UIUtils.beautifyFunctionName(stackFrame.functionName);\n      const link =\n          linkifier.maybeLinkifyConsoleCallFrame(target, stackFrame, {tabStop: Boolean(tabStops), inlineFrameIndex: 0});\n      if (link) {\n        link.addEventListener('contextmenu', populateContextMenu.bind(null, link));\n        // TODO(crbug.com/1183325): fix race condition with uiLocation still being null here\n        const uiLocation = Linkifier.uiLocation(link);\n        if (uiLocation &&\n            Bindings.IgnoreListManager.IgnoreListManager.instance().isIgnoreListedUISourceCode(\n                uiLocation.uiSourceCode)) {\n          ignoreListHide = true;\n        }\n        // Linkifier is using a workaround with the 'zero width space' (\\u200b).\n        // TODO(szuend): Remove once the Linkfier is no longer using the workaround.\n        if (!link.textContent || link.textContent === '\\u200b') {\n          link.textContent = i18nString(UIStrings.unknownSource);\n        }\n      }\n      if (rowCountHide || ignoreListHide) {\n        ++hiddenCallFrames;\n      }\n      stackTraceRows.push({functionName, link, ignoreListHide, rowCountHide});\n    }\n    if (asyncRow && hiddenCallFrames > 0 && hiddenCallFrames === stackTrace.callFrames.length) {\n      stackTraceRows[1].rowCountHide ? asyncRow.rowCountHide = true : asyncRow.ignoreListHide = true;\n    }\n  }\n\n  buildStackTraceRowsHelper(stackTrace);\n  let previousCallFrames = stackTrace.callFrames;\n  for (let asyncStackTrace = stackTrace.parent; asyncStackTrace; asyncStackTrace = asyncStackTrace.parent) {\n    if (asyncStackTrace.callFrames.length) {\n      buildStackTraceRowsHelper(asyncStackTrace, previousCallFrames);\n    }\n    previousCallFrames = asyncStackTrace.callFrames;\n  }\n  return stackTraceRows;\n}\n\n/**\n * @param {function(!Array<!StackTraceRegularRow|!StackTraceAsyncRow>): *} renderCallback\n * @param {!Array<!StackTraceRegularRow|!StackTraceAsyncRow>} stackTraceRows\n */\nfunction updateHiddenRows(\n    renderCallback: (arg0: (StackTraceRegularRow|StackTraceAsyncRow)[]) => void,\n    stackTraceRows: (StackTraceRegularRow|StackTraceAsyncRow)[],\n    ): void {\n  let shouldHideSubCount = 0;  // keeps track of number hidden (regular) rows between asyncRows\n  let indexOfAsyncRow = stackTraceRows.length;\n\n  for (let i = stackTraceRows.length - 1; i >= 0; i--) {\n    const row = stackTraceRows[i];\n\n    if ('link' in row && row.link) {\n      const uiLocation = Linkifier.uiLocation(row.link);\n      if (uiLocation &&\n          Bindings.IgnoreListManager.IgnoreListManager.instance().isIgnoreListedUISourceCode(uiLocation.uiSourceCode)) {\n        row.ignoreListHide = true;\n      }\n      if (row.rowCountHide || row.ignoreListHide) {\n        shouldHideSubCount++;\n      }\n    }\n    if ('asyncDescription' in row) {\n      // hide current row if all (regular) rows since the previous asyncRow are hidden\n      if (shouldHideSubCount > 0 && shouldHideSubCount === indexOfAsyncRow - i - 1) {\n        stackTraceRows[i + 1].rowCountHide ? row.rowCountHide = true : row.ignoreListHide = true;\n      }\n      indexOfAsyncRow = i;\n      shouldHideSubCount = 0;\n    }\n  }\n  renderCallback(stackTraceRows);\n}\n\nexport function buildStackTracePreviewContents(\n    target: SDK.Target.Target|null, linkifier: Linkifier, options: Options = {\n      stackTrace: undefined,\n      tabStops: undefined,\n    }): {element: HTMLElement, links: HTMLElement[]} {\n  const {stackTrace, tabStops} = options;\n  const element = document.createElement('span');\n  element.classList.add('monospace');\n  element.style.display = 'inline-block';\n  const shadowRoot =\n      UI.Utils.createShadowRootWithCoreStyles(element, {cssFile: [jsUtilsStyles], delegatesFocus: undefined});\n  const contentElement = shadowRoot.createChild('table', 'stack-preview-container');\n  if (!stackTrace) {\n    return {element, links: []};\n  }\n\n  const updateCallback = renderStackTraceTable.bind(null, contentElement);\n  const stackTraceRows = buildStackTraceRows(stackTrace, target, linkifier, tabStops, updateCallback);\n  const links = renderStackTraceTable(contentElement, stackTraceRows);\n  return {element, links};\n}\n\nfunction renderStackTraceTable(\n    container: Element, stackTraceRows: (StackTraceRegularRow|StackTraceAsyncRow)[]): HTMLElement[] {\n  container.removeChildren();\n  let hiddenCallFramesCount = 0;\n  const links: HTMLElement[] = [];\n\n  for (const item of stackTraceRows) {\n    const row = container.createChild('tr');\n    if ('asyncDescription' in item) {\n      row.createChild('td').textContent = '\\n';\n      row.createChild('td', 'stack-preview-async-description').textContent = item.asyncDescription;\n      row.createChild('td');\n      row.createChild('td');\n    } else {\n      row.createChild('td').textContent = '\\n';\n      row.createChild('td', 'function-name').textContent = item.functionName;\n      row.createChild('td').textContent = ' @ ';\n      if (item.link) {\n        row.createChild('td').appendChild(item.link);\n        links.push(item.link);\n      }\n      if (item.rowCountHide || item.ignoreListHide) {\n        ++hiddenCallFramesCount;\n      }\n    }\n    if (item.rowCountHide || item.ignoreListHide) {\n      row.classList.add('hidden-row');\n    }\n    container.appendChild(row);\n  }\n\n  if (hiddenCallFramesCount) {\n    const showAllRow = container.createChild('tr', 'show-all-link');\n    showAllRow.createChild('td').textContent = '\\n';\n    const cell = showAllRow.createChild('td') as HTMLTableCellElement;\n    cell.colSpan = 4;\n    const showAllLink = cell.createChild('span', 'link');\n    showAllLink.textContent = i18nString(UIStrings.showSMoreFrames, {n: hiddenCallFramesCount});\n    showAllLink.addEventListener('click', () => {\n      container.classList.add('show-hidden-rows');\n    }, false);\n  }\n  return links;\n}\n\nexport interface Options {\n  stackTrace: Protocol.Runtime.StackTrace|undefined;\n  tabStops: boolean|undefined;\n}\n\nexport interface StackTraceRegularRow {\n  functionName: string;\n  ignoreListHide: boolean;\n  link: HTMLElement|null;\n  rowCountHide: boolean;\n}\n\nexport interface StackTraceAsyncRow {\n  asyncDescription: string;\n  ignoreListHide: boolean;\n  rowCountHide: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
