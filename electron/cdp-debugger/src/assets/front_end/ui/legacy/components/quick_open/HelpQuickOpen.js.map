{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/quick_open/HelpQuickOpen.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nimport {getRegisteredProviders, Provider, registerProvider} from './FilteredListWidget.js';\nimport {QuickOpenImpl} from './QuickOpen.js';\n\nlet helpQuickOpenInstance: HelpQuickOpen;\n\nexport class HelpQuickOpen extends Provider {\n  private providers: {\n    prefix: string,\n    iconName: string,\n    title: string,\n  }[];\n\n  private constructor() {\n    super();\n    this.providers = [];\n    getRegisteredProviders().forEach(this.addProvider.bind(this));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): HelpQuickOpen {\n    const {forceNew} = opts;\n    if (!helpQuickOpenInstance || forceNew) {\n      helpQuickOpenInstance = new HelpQuickOpen();\n    }\n    return helpQuickOpenInstance;\n  }\n\n  private addProvider(extension: {\n    prefix: string,\n    iconName: string,\n    titlePrefix: () => string,\n    titleSuggestion?: () => string,\n  }): void {\n    if (extension.titleSuggestion) {\n      this.providers.push({\n        prefix: extension.prefix || '',\n        iconName: extension.iconName,\n        title: extension.titlePrefix() + ' ' + extension.titleSuggestion(),\n      });\n    }\n  }\n\n  itemCount(): number {\n    return this.providers.length;\n  }\n\n  itemKeyAt(itemIndex: number): string {\n    return this.providers[itemIndex].prefix;\n  }\n\n  itemScoreAt(itemIndex: number, _query: string): number {\n    return -this.providers[itemIndex].prefix.length;\n  }\n\n  renderItem(itemIndex: number, _query: string, titleElement: Element, _subtitleElement: Element): void {\n    const provider = this.providers[itemIndex];\n\n    const iconElement = new IconButton.Icon.Icon();\n    iconElement.data = {\n      iconName: provider.iconName,\n      color: 'var(--color-text-primary)',\n      width: '18px',\n      height: '18px',\n    };\n    titleElement.parentElement?.parentElement?.insertBefore(iconElement, titleElement.parentElement);\n\n    UI.UIUtils.createTextChild(titleElement, provider.title);\n  }\n\n  selectItem(itemIndex: number|null, _promptValue: string): void {\n    if (itemIndex !== null) {\n      QuickOpenImpl.show(this.providers[itemIndex].prefix);\n    }\n  }\n\n  renderAsTwoRows(): boolean {\n    return false;\n  }\n}\n\nregisterProvider({\n  prefix: '?',\n  iconName: 'ic_command_help',\n  provider: () => Promise.resolve(HelpQuickOpen.instance()),\n  titlePrefix: () => 'Help',\n  titleSuggestion: undefined,\n});\n"],
  "mappings": "AAIA;AACA;AAEA;AACA;AAEA,IAAI;AAEG,mCAA4B,SAAS;AAAA,EAClC;AAAA,EAMA,cAAc;AACpB;AACA,SAAK,YAAY;AACjB,6BAAyB,QAAQ,KAAK,YAAY,KAAK;AAAA;AAAA,SAGlD,SAAS,OAEZ,EAAC,UAAU,QAAsB;AACnC,UAAM,EAAC,aAAY;AACnB,QAAI,CAAC,yBAAyB,UAAU;AACtC,8BAAwB,IAAI;AAAA;AAE9B,WAAO;AAAA;AAAA,EAGD,YAAY,WAKX;AACP,QAAI,UAAU,iBAAiB;AAC7B,WAAK,UAAU,KAAK;AAAA,QAClB,QAAQ,UAAU,UAAU;AAAA,QAC5B,UAAU,UAAU;AAAA,QACpB,OAAO,UAAU,gBAAgB,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA,EAKvD,YAAoB;AAClB,WAAO,KAAK,UAAU;AAAA;AAAA,EAGxB,UAAU,WAA2B;AACnC,WAAO,KAAK,UAAU,WAAW;AAAA;AAAA,EAGnC,YAAY,WAAmB,QAAwB;AACrD,WAAO,CAAC,KAAK,UAAU,WAAW,OAAO;AAAA;AAAA,EAG3C,WAAW,WAAmB,QAAgB,cAAuB,kBAAiC;AACpG,UAAM,WAAW,KAAK,UAAU;AAEhC,UAAM,cAAc,IAAI,WAAW,KAAK;AACxC,gBAAY,OAAO;AAAA,MACjB,UAAU,SAAS;AAAA,MACnB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA;AAEV,iBAAa,eAAe,eAAe,aAAa,aAAa,aAAa;AAElF,OAAG,QAAQ,gBAAgB,cAAc,SAAS;AAAA;AAAA,EAGpD,WAAW,WAAwB,cAA4B;AAC7D,QAAI,cAAc,MAAM;AACtB,oBAAc,KAAK,KAAK,UAAU,WAAW;AAAA;AAAA;AAAA,EAIjD,kBAA2B;AACzB,WAAO;AAAA;AAAA;AAIX,iBAAiB;AAAA,EACf,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU,MAAM,QAAQ,QAAQ,cAAc;AAAA,EAC9C,aAAa,MAAM;AAAA,EACnB,iBAAiB;AAAA;",
  "names": []
}
