{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/object_ui/CustomPreviewComponent.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../../core/sdk/sdk.js';\nimport * as UI from '../../legacy.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\n\nimport {ObjectPropertiesSection} from './ObjectPropertiesSection.js';\nimport customPreviewComponentStyles from './customPreviewComponent.css.js';\n\nconst UIStrings = {\n  /**\n  *@description A context menu item in the Custom Preview Component\n  */\n  showAsJavascriptObject: 'Show as JavaScript object',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/object_ui/CustomPreviewComponent.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CustomPreviewSection {\n  private readonly sectionElement: HTMLSpanElement;\n  private readonly object: SDK.RemoteObject.RemoteObject;\n  private expanded: boolean;\n  private cachedContent: Node|null;\n  private readonly header: Node|undefined;\n  private readonly expandIcon: UI.Icon.Icon|undefined;\n  constructor(object: SDK.RemoteObject.RemoteObject) {\n    this.sectionElement = document.createElement('span');\n    this.sectionElement.classList.add('custom-expandable-section');\n    this.object = object;\n    this.expanded = false;\n    this.cachedContent = null;\n    const customPreview = object.customPreview();\n\n    if (!customPreview) {\n      return;\n    }\n\n    let headerJSON;\n    try {\n      headerJSON = JSON.parse(customPreview.header);\n    } catch (e) {\n      Common.Console.Console.instance().error('Broken formatter: header is invalid json ' + e);\n      return;\n    }\n    this.header = this.renderJSONMLTag(headerJSON);\n    if (this.header.nodeType === Node.TEXT_NODE) {\n      Common.Console.Console.instance().error('Broken formatter: header should be an element node.');\n      return;\n    }\n\n    if (customPreview.bodyGetterId) {\n      if (this.header instanceof Element) {\n        this.header.classList.add('custom-expandable-section-header');\n      }\n      this.header.addEventListener('click', this.onClick.bind(this), false);\n      this.expandIcon = UI.Icon.Icon.create('smallicon-triangle-right', 'custom-expand-icon');\n      this.header.insertBefore(this.expandIcon, this.header.firstChild);\n    }\n\n    this.sectionElement.appendChild(this.header);\n  }\n\n  element(): Element {\n    return this.sectionElement;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private renderJSONMLTag(jsonML: any): Node {\n    if (!Array.isArray(jsonML)) {\n      return document.createTextNode(String(jsonML));\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const array = (jsonML as any[]);\n    return array[0] === 'object' ? this.layoutObjectTag(array) : this.renderElement(array);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private renderElement(object: any[]): Node {\n    const tagName = object.shift();\n    if (!CustomPreviewSection.allowedTags.has(tagName)) {\n      Common.Console.Console.instance().error('Broken formatter: element ' + tagName + ' is not allowed!');\n      return document.createElement('span');\n    }\n    const element = document.createElement((tagName as string));\n    if ((typeof object[0] === 'object') && !Array.isArray(object[0])) {\n      const attributes = object.shift();\n      for (const key in attributes) {\n        const value = attributes[key];\n        if ((key !== 'style') || (typeof value !== 'string')) {\n          continue;\n        }\n\n        element.setAttribute(key, value);\n      }\n    }\n\n    this.appendJsonMLTags(element, object);\n    return element;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private layoutObjectTag(objectTag: any[]): Node {\n    objectTag.shift();\n    const attributes = objectTag.shift();\n    const remoteObject = this.object.runtimeModel().createRemoteObject((attributes as Protocol.Runtime.RemoteObject));\n    if (remoteObject.customPreview()) {\n      return (new CustomPreviewSection(remoteObject)).element();\n    }\n\n    const sectionElement = ObjectPropertiesSection.defaultObjectPresentation(remoteObject);\n    sectionElement.classList.toggle('custom-expandable-section-standard-section', remoteObject.hasChildren);\n    return sectionElement;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private appendJsonMLTags(parentElement: Node, jsonMLTags: any[]): void {\n    for (let i = 0; i < jsonMLTags.length; ++i) {\n      parentElement.appendChild(this.renderJSONMLTag(jsonMLTags[i]));\n    }\n  }\n\n  private onClick(event: Event): void {\n    event.consume(true);\n    if (this.cachedContent) {\n      this.toggleExpand();\n    } else {\n      void this.loadBody();\n    }\n  }\n\n  private toggleExpand(): void {\n    this.expanded = !this.expanded;\n    if (this.header instanceof Element) {\n      this.header.classList.toggle('expanded', this.expanded);\n    }\n    if (this.cachedContent instanceof Element) {\n      this.cachedContent.classList.toggle('hidden', !this.expanded);\n    }\n    if (this.expandIcon) {\n      if (this.expanded) {\n        this.expandIcon.setIconType('smallicon-triangle-down');\n      } else {\n        this.expandIcon.setIconType('smallicon-triangle-right');\n      }\n    }\n  }\n\n  async loadBody(): Promise<void> {\n    const customPreview = this.object.customPreview();\n\n    if (!customPreview) {\n      return;\n    }\n\n    if (customPreview.bodyGetterId) {\n      const bodyJsonML = await this.object.callFunctionJSON(\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          bodyGetter => (bodyGetter as () => any)(), [{objectId: customPreview.bodyGetterId}]);\n      if (!bodyJsonML) {\n        return;\n      }\n\n      this.cachedContent = this.renderJSONMLTag(bodyJsonML);\n      this.sectionElement.appendChild(this.cachedContent);\n      this.toggleExpand();\n    }\n  }\n\n  private static allowedTags = new Set(['span', 'div', 'ol', 'li', 'table', 'tr', 'td']);\n}\n\nexport class CustomPreviewComponent {\n  private readonly object: SDK.RemoteObject.RemoteObject;\n  private customPreviewSection: CustomPreviewSection|null;\n  element: HTMLSpanElement;\n  constructor(object: SDK.RemoteObject.RemoteObject) {\n    this.object = object;\n    this.customPreviewSection = new CustomPreviewSection(object);\n    this.element = document.createElement('span');\n    this.element.classList.add('source-code');\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(this.element, {\n      cssFile: [customPreviewComponentStyles],\n      delegatesFocus: undefined,\n    });\n    this.element.addEventListener('contextmenu', this.contextMenuEventFired.bind(this), false);\n    shadowRoot.appendChild(this.customPreviewSection.element());\n  }\n\n  expandIfPossible(): void {\n    const customPreview = this.object.customPreview();\n    if (customPreview && customPreview.bodyGetterId && this.customPreviewSection) {\n      void this.customPreviewSection.loadBody();\n    }\n  }\n\n  private contextMenuEventFired(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (this.customPreviewSection) {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.showAsJavascriptObject), this.disassemble.bind(this));\n    }\n    contextMenu.appendApplicableItems(this.object);\n    void contextMenu.show();\n  }\n\n  private disassemble(): void {\n    if (this.element.shadowRoot) {\n      this.element.shadowRoot.textContent = '';\n      this.customPreviewSection = null;\n      this.element.shadowRoot.appendChild(ObjectPropertiesSection.defaultObjectPresentation(this.object));\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
