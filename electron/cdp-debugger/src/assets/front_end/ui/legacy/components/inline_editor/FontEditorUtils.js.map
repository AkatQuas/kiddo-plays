{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/inline_editor/FontEditorUtils.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as CssOverviewModule from '../../../../panels/css_overview/css_overview.js';\n\n// The following regexes are used within in the StylesSidebarPropertyRenderer class\n// and will parse both invalid and valid values.\n// ^[^- ][a-zA-Z-]+ matches property key values (e.g. smaller, x-large, initial)\n// -?\\+?(?:[0-9]+\\.[0-9]+|\\.[0-9]+|[0-9]+) matches numeric property values (e.g. -.23, 3.3, 55)\n// [a-zA-Z%]{0,4} matches the units of numeric property values (e.g. px, vmin, or blank units)\nexport const FontPropertiesRegex: RegExp = /^[^- ][a-zA-Z-]+|-?\\+?(?:[0-9]+\\.[0-9]+|\\.[0-9]+|[0-9]+)[a-zA-Z%]{0,4}/;\n\n// \"[\\w \\,-]+\",? ? matches double quoted values and the trailing comma/space (e.g. \"Tahoma\", )\n// ('[\\w \\,-]+',? ?) matches single quoted values and the trailing comma/space (e.g. 'Segoe UI', )\n// ([\\w \\,-]+,? ?) matches non quoted values and the trailing comma/space (e.g. Helvetica)\n// (?: ...)+ will match 1 or more of the groups above such that it would match a value with fallbacks (e.g. \"Tahoma\", 'Segoe UI', Helvetica)\nexport const FontFamilyRegex: RegExp = /(?:\"[\\w \\,-]+\",? ?|'[\\w \\,-]+',? ?|[\\w \\,-]+,? ?)+/;\n\n// The following regexes are used within the Font Editor and will only parse valid property values.\n// Example Input/Outputs:\n// font-size: \"20px\" -> (20)(px)\n// line-height: \"0.5em\" -> (0.5)(em)\n// font-weight: \"300\" -> (300);\n// letter-spacing: -.625rem -> (-.625)(rem)\nconst fontSizeRegex = /(^[\\+\\d\\.]+)([a-zA-Z%]+)/;\nconst lineHeightRegex = /(^[\\+\\d\\.]+)([a-zA-Z%]*)/;\nconst fontWeightRegex = /(^[\\+\\d\\.]+)/;\nconst letterSpacingRegex = /([\\+-0-9\\.]+)([a-zA-Z%]+)/;\n\nconst fontSizeUnits = new Set(['px', 'em', 'rem', '%', 'vh', 'vw']);\nconst lineHeightUnits = new Set(['', 'px', 'em', '%']);\nconst letterSpacingUnits = new Set(['em', 'rem', 'px']);\n\nconst fontSizeKeyValuesArray = [\n  '',\n  'xx-small',\n  'x-small',\n  'smaller',\n  'small',\n  'medium',\n  'large',\n  'larger',\n  'x-large',\n  'xx-large',\n];\nconst lineHeightKeyValuesArray = ['', 'normal'];\nconst fontWeightKeyValuesArray = ['', 'lighter', 'normal', 'bold', 'bolder'];\nconst letterSpacingKeyValuesArray = ['', 'normal'];\n\nexport const GlobalValues = ['inherit', 'initial', 'unset'];\n\nfontSizeKeyValuesArray.push(...GlobalValues);\nlineHeightKeyValuesArray.push(...GlobalValues);\nfontWeightKeyValuesArray.push(...GlobalValues);\nletterSpacingKeyValuesArray.push(...GlobalValues);\n\nconst fontSizeKeyValues = new Set(fontSizeKeyValuesArray);\nconst lineHeightKeyValues = new Set(lineHeightKeyValuesArray);\nconst fontWeightKeyValues = new Set(fontWeightKeyValuesArray);\nconst letterSpacingKeyValues = new Set(letterSpacingKeyValuesArray);\n\nconst fontSizeRangeMap = new Map([\n  // Common Units\n  ['px', {min: 0, max: 72, step: 1}],\n  ['em', {min: 0, max: 4.5, step: .1}],\n  ['rem', {min: 0, max: 4.5, step: .1}],\n  ['%', {min: 0, max: 450, step: 1}],\n  ['vh', {min: 0, max: 10, step: .1}],\n  ['vw', {min: 0, max: 10, step: .1}],\n\n  // Extra Units\n  ['vmin', {min: 0, max: 10, step: .1}],\n  ['vmax', {min: 0, max: 10, step: .1}],\n  ['cm', {min: 0, max: 2, step: .1}],\n  ['mm', {min: 0, max: 20, step: .1}],\n  ['in', {min: 0, max: 1, step: .01}],\n  ['pt', {min: 0, max: 54, step: 1}],\n  ['pc', {min: 0, max: 4.5, step: .1}],\n]);\n\nconst lineHeightRangeMap = new Map([\n  // Common Units\n  ['', {min: 0, max: 2, step: .1}],\n  ['em', {min: 0, max: 2, step: .1}],\n  ['%', {min: 0, max: 200, step: 1}],\n  ['px', {min: 0, max: 32, step: 1}],\n\n  // Extra Units\n  ['rem', {min: 0, max: 2, step: .1}],\n  ['vh', {min: 0, max: 4.5, step: .1}],\n  ['vw', {min: 0, max: 4.5, step: .1}],\n  ['vmin', {min: 0, max: 4.5, step: .1}],\n  ['vmax', {min: 0, max: 4.5, step: .1}],\n  ['cm', {min: 0, max: 1, step: .1}],\n  ['mm', {min: 0, max: 8.5, step: .1}],\n  ['in', {min: 0, max: .5, step: .1}],\n  ['pt', {min: 0, max: 24, step: 1}],\n  ['pc', {min: 0, max: 2, step: .1}],\n]);\n\nconst fontWeightRangeMap = new Map([\n  ['', {min: 100, max: 700, step: 100}],\n]);\n\nconst letterSpacingRangeMap = new Map([\n  // Common Units\n  ['px', {min: -10, max: 10, step: .01}],\n  ['em', {min: -0.625, max: 0.625, step: .001}],\n  ['rem', {min: -0.625, max: 0.625, step: .001}],\n\n  // Extra Units\n  ['%', {min: -62.5, max: 62.5, step: .1}],\n  ['vh', {min: -1.5, max: 1.5, step: .01}],\n  ['vw', {min: -1.5, max: 1.5, step: .01}],\n  ['vmin', {min: -1.5, max: 1.5, step: .01}],\n  ['vmax', {min: -1.5, max: 1.5, step: .01}],\n  ['cm', {min: -0.25, max: .025, step: .001}],\n  ['mm', {min: -2.5, max: 2.5, step: .01}],\n  ['in', {min: -0.1, max: 0.1, step: .001}],\n  ['pt', {min: -7.5, max: 7.5, step: .01}],\n  ['pc', {min: -0.625, max: 0.625, step: .001}],\n]);\n\nexport const FontSizeStaticParams = {\n  regex: fontSizeRegex,\n  units: fontSizeUnits,\n  keyValues: fontSizeKeyValues,\n  rangeMap: fontSizeRangeMap,\n  defaultUnit: 'px',\n};\n\nexport const LineHeightStaticParams = {\n  regex: lineHeightRegex,\n  units: lineHeightUnits,\n  keyValues: lineHeightKeyValues,\n  rangeMap: lineHeightRangeMap,\n  defaultUnit: '',\n};\n\nexport const FontWeightStaticParams = {\n  regex: fontWeightRegex,\n  units: null,\n  keyValues: fontWeightKeyValues,\n  rangeMap: fontWeightRangeMap,\n  defaultUnit: null,\n};\n\nexport const LetterSpacingStaticParams = {\n  regex: letterSpacingRegex,\n  units: letterSpacingUnits,\n  keyValues: letterSpacingKeyValues,\n  rangeMap: letterSpacingRangeMap,\n  defaultUnit: 'em',\n};\n\nexport const SystemFonts = [\n  'Arial',\n  'Bookman',\n  'Candara',\n  'Comic Sans MS',\n  'Courier New',\n  'Garamond',\n  'Georgia',\n  'Helvetica',\n  'Impact',\n  'Palatino',\n  'Roboto',\n  'Times New Roman',\n  'Verdana',\n];\n\nexport const GenericFonts = [\n  'serif',\n  'sans-serif',\n  'monspace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n];\n\nexport async function generateComputedFontArray(): Promise<string[]> {\n  const modelArray =\n      SDK.TargetManager.TargetManager.instance().models(CssOverviewModule.CSSOverviewModel.CSSOverviewModel);\n  if (modelArray) {\n    const cssOverviewModel = modelArray[0];\n    if (cssOverviewModel) {\n      const {fontInfo} = await cssOverviewModel.getNodeStyleStats();\n      const computedFontArray = Array.from(fontInfo.keys());\n      return computedFontArray;\n    }\n  }\n  return [];\n}\n\nexport function getRoundingPrecision(step: number): 0|1|2|3 {\n  switch (step) {\n    case 1:\n      return 0;\n    case .1:\n      return 1;\n    case .01:\n      return 2;\n    case .001:\n      return 3;\n    default:\n      return 0;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
