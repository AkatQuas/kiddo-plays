{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/source_frame/FontView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport fontViewStyles from './fontView.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that appears on a button for the font resource type filter.\n  */\n  font: 'Font',\n  /**\n  *@description Aria accessible name in Font View of the Sources panel\n  *@example {https://example.com} PH1\n  */\n  previewOfFontFromS: 'Preview of font from {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/FontView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FontView extends UI.View.SimpleView {\n  private readonly url: Platform.DevToolsPath.UrlString;\n  private readonly mimeType: string;\n  private readonly contentProvider: TextUtils.ContentProvider.ContentProvider;\n  private readonly mimeTypeLabel: UI.Toolbar.ToolbarText;\n  fontPreviewElement!: HTMLElement|null;\n  private dummyElement!: HTMLElement|null;\n  fontStyleElement!: HTMLStyleElement|null;\n  private inResize!: boolean|null;\n  constructor(mimeType: string, contentProvider: TextUtils.ContentProvider.ContentProvider) {\n    super(i18nString(UIStrings.font));\n    this.registerRequiredCSS(fontViewStyles);\n    this.element.classList.add('font-view');\n    this.url = contentProvider.contentURL();\n    UI.ARIAUtils.setAccessibleName(this.element, i18nString(UIStrings.previewOfFontFromS, {PH1: this.url}));\n    this.mimeType = mimeType;\n    this.contentProvider = contentProvider;\n    this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n  }\n\n  async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.mimeTypeLabel];\n  }\n\n  private onFontContentLoaded(uniqueFontName: string, deferredContent: TextUtils.ContentProvider.DeferredContent):\n      void {\n    const {content} = deferredContent;\n    const url = content ? TextUtils.ContentProvider.contentAsDataURL(content, this.mimeType, true) : this.url;\n    if (!this.fontStyleElement) {\n      return;\n    }\n    this.fontStyleElement.textContent =\n        Platform.StringUtilities.sprintf('@font-face { font-family: \"%s\"; src: url(%s); }', uniqueFontName, url);\n    this.updateFontPreviewSize();\n  }\n\n  private createContentIfNeeded(): void {\n    if (this.fontPreviewElement) {\n      return;\n    }\n\n    const uniqueFontName = 'WebInspectorFontPreview' + (++_fontId);\n    this.fontStyleElement = document.createElement('style');\n    void this.contentProvider.requestContent().then(deferredContent => {\n      this.onFontContentLoaded(uniqueFontName, deferredContent);\n    });\n    this.element.appendChild(this.fontStyleElement);\n\n    const fontPreview = document.createElement('div');\n    for (let i = 0; i < _fontPreviewLines.length; ++i) {\n      if (i > 0) {\n        fontPreview.createChild('br');\n      }\n      UI.UIUtils.createTextChild(fontPreview, _fontPreviewLines[i]);\n    }\n    this.fontPreviewElement = (fontPreview.cloneNode(true) as HTMLDivElement);\n    if (!this.fontPreviewElement) {\n      return;\n    }\n    UI.ARIAUtils.markAsHidden(this.fontPreviewElement);\n    this.fontPreviewElement.style.overflow = 'hidden';\n    this.fontPreviewElement.style.setProperty('font-family', uniqueFontName);\n    this.fontPreviewElement.style.setProperty('visibility', 'hidden');\n\n    this.dummyElement = fontPreview;\n    this.dummyElement.style.visibility = 'hidden';\n    this.dummyElement.style.zIndex = '-1';\n    this.dummyElement.style.display = 'inline';\n    this.dummyElement.style.position = 'absolute';\n    this.dummyElement.style.setProperty('font-family', uniqueFontName);\n    this.dummyElement.style.setProperty('font-size', _measureFontSize + 'px');\n\n    this.element.appendChild(this.fontPreviewElement);\n  }\n\n  wasShown(): void {\n    this.createContentIfNeeded();\n\n    this.updateFontPreviewSize();\n  }\n\n  onResize(): void {\n    if (this.inResize) {\n      return;\n    }\n\n    this.inResize = true;\n    try {\n      this.updateFontPreviewSize();\n    } finally {\n      this.inResize = null;\n    }\n  }\n\n  private measureElement(): {\n    width: number,\n    height: number,\n  } {\n    if (!this.dummyElement) {\n      throw new Error('No font preview loaded');\n    }\n    this.element.appendChild(this.dummyElement);\n    const result = {width: this.dummyElement.offsetWidth, height: this.dummyElement.offsetHeight};\n    this.element.removeChild(this.dummyElement);\n\n    return result;\n  }\n\n  updateFontPreviewSize(): void {\n    if (!this.fontPreviewElement || !this.isShowing()) {\n      return;\n    }\n\n    this.fontPreviewElement.style.removeProperty('visibility');\n    const dimension = this.measureElement();\n\n    const height = dimension.height;\n    const width = dimension.width;\n\n    // Subtract some padding. This should match the paddings in the CSS plus room for the scrollbar.\n    const containerWidth = this.element.offsetWidth - 50;\n    const containerHeight = this.element.offsetHeight - 30;\n\n    if (!height || !width || !containerWidth || !containerHeight) {\n      this.fontPreviewElement.style.removeProperty('font-size');\n      return;\n    }\n\n    const widthRatio = containerWidth / width;\n    const heightRatio = containerHeight / height;\n    const finalFontSize = Math.floor(_measureFontSize * Math.min(widthRatio, heightRatio)) - 2;\n\n    this.fontPreviewElement.style.setProperty('font-size', finalFontSize + 'px', undefined);\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _fontId = 0;\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _fontPreviewLines = ['ABCDEFGHIJKLM', 'NOPQRSTUVWXYZ', 'abcdefghijklm', 'nopqrstuvwxyz', '1234567890'];\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _measureFontSize = 50;\n"],
  "mappings": "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",
  "names": []
}
