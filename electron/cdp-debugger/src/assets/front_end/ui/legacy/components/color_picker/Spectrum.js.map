{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/color_picker/Spectrum.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Brian Grinstead All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nimport {ContrastDetails, Events as ContrastDetailsEvents} from './ContrastDetails.js';\n\nimport type {ContrastInfo} from './ContrastInfo.js';\nimport {ContrastOverlay} from './ContrastOverlay.js';\nimport spectrumStyles from './spectrum.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over largeicon eyedropper button in Spectrum of the Color Picker\n  */\n  toggleColorPicker: 'Toggle color picker',\n  /**\n  *@description Aria label for hue slider in Color Picker\n  */\n  changeHue: 'Change hue',\n  /**\n  * @description Aria label for alpha slider in Color Picker. Alpha refers to the alpha channel of a\n  * color, and this tool allows the user to change the alpha value.\n  */\n  changeAlpha: 'Change alpha',\n  /**\n  *@description Aria label for HEX color format input\n  */\n  hex: 'HEX',\n  /**\n  *@description Aria label for color format switcher button in Color Picker\n  */\n  changeColorFormat: 'Change color format',\n  /**\n  *@description Screen reader reads this text when palette switcher button receives focus\n  */\n  previewPalettes: 'Preview palettes',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Spectrum of the Color Picker\n  */\n  addToPalette: 'Add to palette',\n  /**\n  *@description Title text content in Spectrum of the Color Picker\n  */\n  colorPalettes: 'Color Palettes',\n  /**\n  *@description Label for close button in Color Picker\n  */\n  returnToColorPicker: 'Return to color picker',\n  /**\n  *@description Aria label which declares hex value of a swatch in the Color Picker\n  *@example {#969696} PH1\n  */\n  colorS: 'Color {PH1}',\n  /**\n  *@description Color element title in Spectrum of the Color Picker\n  *@example {#9c1724} PH1\n  */\n  longclickOrLongpressSpaceToShow: 'Long-click or long-press space to show alternate shades of {PH1}',\n  /**\n  *@description A context menu item in the Color Picker to organize the user-defined color palette (removes the user-defined color to which this action is performed)\"\n  */\n  removeColor: 'Remove color',\n  /**\n  *@description A context menu item in the Color Picker to organize the user-defined color palette (removes all user-defined colors to the right of the color to which this action is performed)\"\n  */\n  removeAllToTheRight: 'Remove all to the right',\n  /**\n  *@description A context menu item in the Color Picker to organize the user-defined color palette (removes all user-defined colors)\"\n  */\n  clearPalette: 'Clear palette',\n  /**\n  *@description Aria label for RGBA and HSLA color format inputs in Color Picker\n  *@example {R} PH1\n  *@example {RGBA} PH2\n  */\n  sInS: '{PH1} in {PH2}',\n  /**\n  *@description Swatch copy icon title in Spectrum of the Color Picker\n  */\n  copyColorToClipboard: 'Copy color to clipboard',\n  /**\n  *@description Aria text for the swatch position. Swatch is the color picker spectrum tool.\n  */\n  pressArrowKeysMessage:\n      'Press arrow keys with or without modifiers to move swatch position. Arrow key with Shift key moves position largely, with Ctrl key it is less and with Alt key it is even less',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/color_picker/Spectrum.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst colorElementToMutable = new WeakMap<HTMLElement, boolean>();\n\nconst colorElementToColor = new WeakMap<HTMLElement, string>();\n\nexport class Spectrum extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox) {\n  private colorElement: HTMLElement;\n  private colorDragElement: HTMLElement;\n  private dragX: number;\n  private dragY: number;\n  private colorPickerButton: UI.Toolbar.ToolbarToggle;\n  private readonly swatch: Swatch;\n  private hueElement: HTMLElement;\n  private hueSlider: HTMLElement;\n  private readonly alphaElement: HTMLElement;\n  private alphaElementBackground: HTMLElement;\n  private alphaSlider: HTMLElement;\n  private displayContainer: HTMLElement;\n  private textValues: HTMLInputElement[];\n  private textLabels: HTMLElement;\n  private hexContainer: HTMLElement;\n  private hexValue: HTMLInputElement;\n  private readonly contrastInfo: ContrastInfo|undefined;\n  private contrastOverlay: ContrastOverlay|undefined;\n  private contrastDetails: ContrastDetails|undefined;\n  private readonly contrastDetailsBackgroundColorPickedToggledBound:\n      ((event: Common.EventTarget.EventTargetEvent<boolean>) => void)|undefined;\n  private readonly palettes: Map<string, Palette>;\n  private readonly palettePanel: HTMLElement;\n  private palettePanelShowing: boolean;\n  private readonly paletteSectionContainer: HTMLElement;\n  private paletteContainer: HTMLElement;\n  private shadesContainer: HTMLElement;\n  private readonly deleteIconToolbar: UI.Toolbar.Toolbar;\n  private readonly deleteButton: UI.Toolbar.ToolbarButton;\n  private readonly addColorToolbar: UI.Toolbar.Toolbar;\n  private readonly colorPickedBound:\n      (event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.EyeDropperPickedColorEvent>) => void;\n  private hsv!: number[];\n  private hueAlphaWidth!: number;\n  dragWidth!: number;\n  dragHeight!: number;\n  private colorDragElementHeight!: number;\n  slideHelperWidth!: number;\n  private numPaletteRowsShown: number;\n  private selectedColorPalette!: Common.Settings.Setting<string>;\n  private customPaletteSetting!: Common.Settings.Setting<Palette>;\n  private colorOffset?: {\n    left: number,\n    top: number,\n  };\n  private closeButton?: UI.Toolbar.ToolbarButton;\n  private paletteContainerMutable?: boolean;\n  private eyeDropperExperimentEnabled?: boolean;\n  private shadesCloseHandler?: (() => void);\n  private dragElement?: HTMLElement;\n  private dragHotSpotX?: number;\n  private dragHotSpotY?: number;\n  private originalFormat?: string;\n  private colorNameInternal?: string;\n  private colorStringInternal?: string;\n  private colorFormat?: string;\n  constructor(contrastInfo?: ContrastInfo|null) {\n    super(true);\n\n    this.contentElement.tabIndex = 0;\n    this.colorElement = this.contentElement.createChild('div', 'spectrum-color');\n    this.colorElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.colorElement);\n    this.colorElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionColor.bind(this)));\n    const swatchAriaText = i18nString(UIStrings.pressArrowKeysMessage);\n    UI.ARIAUtils.setAccessibleName(this.colorElement, swatchAriaText);\n    UI.ARIAUtils.markAsApplication(this.colorElement);\n    this.colorDragElement = this.colorElement.createChild('div', 'spectrum-sat fill')\n                                .createChild('div', 'spectrum-val fill')\n                                .createChild('div', 'spectrum-dragger');\n    this.dragX = 0;\n    this.dragY = 0;\n\n    const toolsContainer: HTMLElement = this.contentElement.createChild('div', 'spectrum-tools') as HTMLElement;\n    const toolbar = new UI.Toolbar.Toolbar('spectrum-eye-dropper', toolsContainer);\n    this.colorPickerButton =\n        new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleColorPicker), 'largeicon-eyedropper');\n    this.colorPickerButton.setToggled(true);\n    this.colorPickerButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, this.toggleColorPicker.bind(this, undefined));\n    toolbar.appendToolbarItem(this.colorPickerButton);\n\n    this.swatch = new Swatch(toolsContainer);\n\n    this.hueElement = toolsContainer.createChild('div', 'spectrum-hue');\n    this.hueElement.tabIndex = 0;\n    this.hueElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionHue.bind(this)));\n    UI.ARIAUtils.setAccessibleName(this.hueElement, i18nString(UIStrings.changeHue));\n    UI.ARIAUtils.markAsSlider(this.hueElement, 0, 360);\n    this.hueSlider = this.hueElement.createChild('div', 'spectrum-slider');\n    this.alphaElement = toolsContainer.createChild('div', 'spectrum-alpha');\n    this.alphaElement.tabIndex = 0;\n    this.alphaElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionAlpha.bind(this)));\n    UI.ARIAUtils.setAccessibleName(this.alphaElement, i18nString(UIStrings.changeAlpha));\n    UI.ARIAUtils.markAsSlider(this.alphaElement, 0, 1);\n    this.alphaElementBackground = this.alphaElement.createChild('div', 'spectrum-alpha-background');\n    this.alphaSlider = this.alphaElement.createChild('div', 'spectrum-slider');\n\n    // RGBA/HSLA/HWBA display.\n    this.displayContainer = toolsContainer.createChild('div', 'spectrum-text source-code');\n    UI.ARIAUtils.markAsPoliteLiveRegion(this.displayContainer, true);\n    this.textValues = [];\n    for (let i = 0; i < 4; ++i) {\n      const inputValue = UI.UIUtils.createInput('spectrum-text-value');\n      this.displayContainer.appendChild(inputValue);\n      inputValue.maxLength = 4;\n      this.textValues.push(inputValue);\n      inputValue.addEventListener('keydown', this.inputChanged.bind(this), false);\n      inputValue.addEventListener('input', this.inputChanged.bind(this), false);\n      inputValue.addEventListener('wheel', this.inputChanged.bind(this), false);\n      inputValue.addEventListener('paste', this.pasted.bind(this), false);\n    }\n\n    this.textLabels = this.displayContainer.createChild('div', 'spectrum-text-label');\n\n    // HEX display.\n    this.hexContainer = toolsContainer.createChild('div', 'spectrum-text spectrum-text-hex source-code');\n    UI.ARIAUtils.markAsPoliteLiveRegion(this.hexContainer, true);\n    this.hexValue = UI.UIUtils.createInput('spectrum-text-value');\n    this.hexContainer.appendChild(this.hexValue);\n    this.hexValue.maxLength = 9;\n    this.hexValue.addEventListener('keydown', this.inputChanged.bind(this), false);\n    this.hexValue.addEventListener('input', this.inputChanged.bind(this), false);\n    this.hexValue.addEventListener('wheel', this.inputChanged.bind(this), false);\n    this.hexValue.addEventListener('paste', this.pasted.bind(this), false);\n\n    const label = this.hexContainer.createChild('div', 'spectrum-text-label');\n    label.textContent = i18nString(UIStrings.hex);\n    UI.ARIAUtils.setAccessibleName(this.hexValue, label.textContent);\n\n    const displaySwitcher = toolsContainer.createChild('div', 'spectrum-display-switcher spectrum-switcher');\n    appendSwitcherIcon(displaySwitcher);\n    UI.UIUtils.setTitle(displaySwitcher, i18nString(UIStrings.changeColorFormat));\n    displaySwitcher.tabIndex = 0;\n    self.onInvokeElement(displaySwitcher, event => {\n      this.formatViewSwitch();\n      event.consume(true);\n    });\n    UI.ARIAUtils.markAsButton(displaySwitcher);\n\n    UI.UIUtils.installDragHandle(\n        this.hueElement, this.dragStart.bind(this, positionHue.bind(this)), positionHue.bind(this), null, 'ew-resize',\n        'crosshair');\n    UI.UIUtils.installDragHandle(\n        this.alphaElement, this.dragStart.bind(this, positionAlpha.bind(this)), positionAlpha.bind(this), null,\n        'ew-resize', 'crosshair');\n    UI.UIUtils.installDragHandle(\n        this.colorElement, this.dragStart.bind(this, positionColor.bind(this)), positionColor.bind(this), null, 'move',\n        'crosshair');\n\n    // Color contrast business.\n    if (contrastInfo) {\n      this.contrastInfo = contrastInfo;\n      this.contrastOverlay = new ContrastOverlay(this.contrastInfo, this.colorElement);\n      this.contrastDetails = new ContrastDetails(\n          this.contrastInfo, this.contentElement, this.toggleColorPicker.bind(this),\n          this.contrastPanelExpanded.bind(this), this.colorSelected.bind(this));\n\n      this.contrastDetailsBackgroundColorPickedToggledBound =\n          this.contrastDetailsBackgroundColorPickedToggled.bind(this);\n    }\n\n    this.element.classList.add('flex-none');\n    this.palettes = new Map();\n    this.palettePanel = this.contentElement.createChild('div', 'palette-panel');\n    this.palettePanelShowing = false;\n    this.paletteSectionContainer = this.contentElement.createChild('div', 'spectrum-palette-container');\n    this.paletteContainer = this.paletteSectionContainer.createChild('div', 'spectrum-palette');\n    this.paletteContainer.addEventListener('contextmenu', this.showPaletteColorContextMenu.bind(this, -1));\n    this.shadesContainer = this.contentElement.createChild('div', 'palette-color-shades hidden');\n    UI.UIUtils.installDragHandle(\n        this.paletteContainer, this.paletteDragStart.bind(this), this.paletteDrag.bind(this),\n        this.paletteDragEnd.bind(this), 'default');\n    const paletteSwitcher =\n        this.paletteSectionContainer.createChild('div', 'spectrum-palette-switcher spectrum-switcher');\n    appendSwitcherIcon(paletteSwitcher);\n    UI.UIUtils.setTitle(paletteSwitcher, i18nString(UIStrings.previewPalettes));\n    UI.ARIAUtils.markAsButton(paletteSwitcher);\n    paletteSwitcher.tabIndex = 0;\n    self.onInvokeElement(paletteSwitcher, event => {\n      this.togglePalettePanel(true);\n      event.consume(true);\n    });\n\n    this.deleteIconToolbar = new UI.Toolbar.Toolbar('delete-color-toolbar');\n    this.deleteButton = new UI.Toolbar.ToolbarButton('', 'largeicon-trash-bin');\n    this.deleteIconToolbar.appendToolbarItem(this.deleteButton);\n\n    const overlay = this.contentElement.createChild('div', 'spectrum-overlay fill');\n    overlay.addEventListener('click', this.togglePalettePanel.bind(this, false));\n\n    this.addColorToolbar = new UI.Toolbar.Toolbar('add-color-toolbar');\n    const addColorButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.addToPalette), 'largeicon-add');\n    addColorButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.onAddColorMousedown.bind(this));\n    addColorButton.element.addEventListener('keydown', this.onAddColorKeydown.bind(this));\n    this.addColorToolbar.appendToolbarItem(addColorButton);\n\n    this.colorPickedBound = this.colorPicked.bind(this);\n\n    this.numPaletteRowsShown = -1;\n\n    this.loadPalettes();\n    new PaletteGenerator(palette => {\n      if (palette.colors.length) {\n        this.addPalette(palette);\n      } else if (this.selectedColorPalette.get() === palette.title) {\n        this.paletteSelected(MaterialPalette);\n      }\n    });\n\n    function getUpdatedSliderPosition(element: Element, event: Event): number {\n      const keyboardEvent = event as KeyboardEvent;\n      const elementPosition = element.getBoundingClientRect();\n      switch (keyboardEvent.key) {\n        case 'ArrowLeft':\n        case 'ArrowDown':\n          return elementPosition.left - 1;\n        case 'ArrowRight':\n        case 'ArrowUp':\n          return elementPosition.right + 1;\n        default:\n          return (event as MouseEvent).x;\n      }\n    }\n\n    function positionHue(this: Spectrum, event: Event): void {\n      const hsva = this.hsv.slice();\n      const sliderPosition = getUpdatedSliderPosition(this.hueSlider, event);\n      const hueAlphaLeft = this.hueElement.getBoundingClientRect().left;\n      const positionFraction = (sliderPosition - hueAlphaLeft) / this.hueAlphaWidth;\n      const newHue = 1 - positionFraction;\n      hsva[0] = Platform.NumberUtilities.clamp(newHue, 0, 1);\n      this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n      const colorValues = this.color().canonicalHSLA();\n      UI.ARIAUtils.setValueNow(this.hueElement, colorValues[0]);\n    }\n\n    function positionAlpha(this: Spectrum, event: Event): void {\n      const hsva = this.hsv.slice();\n      const sliderPosition = getUpdatedSliderPosition(this.alphaSlider, event);\n      const hueAlphaLeft = this.hueElement.getBoundingClientRect().left;\n      const positionFraction = (sliderPosition - hueAlphaLeft) / this.hueAlphaWidth;\n      const newAlpha = Math.round(positionFraction * 100) / 100;\n      hsva[3] = Platform.NumberUtilities.clamp(newAlpha, 0, 1);\n      this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n      const colorValues = this.color().canonicalHSLA();\n      UI.ARIAUtils.setValueText(this.alphaElement, colorValues[3]);\n    }\n\n    function positionColor(this: Spectrum, event: Event): void {\n      const hsva = this.hsv.slice();\n      const colorPosition = getUpdatedColorPosition(this.colorDragElement, event);\n      this.colorOffset = this.colorElement.totalOffset();\n      hsva[1] = Platform.NumberUtilities.clamp((colorPosition.x - this.colorOffset.left) / this.dragWidth, 0, 1);\n      hsva[2] = Platform.NumberUtilities.clamp(1 - (colorPosition.y - this.colorOffset.top) / this.dragHeight, 0, 1);\n\n      this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n    }\n\n    function getUpdatedColorPosition(dragElement: Element, event: Event): {\n      x: number,\n      y: number,\n    } {\n      const elementPosition = dragElement.getBoundingClientRect();\n      const verticalX = elementPosition.x + elementPosition.width / 2;\n      const horizontalY = elementPosition.y + elementPosition.width / 2;\n      const defaultUnit = elementPosition.width / 4;\n      const unit = getUnitToMove(defaultUnit, event);\n      const keyboardEvent = event as KeyboardEvent;\n      switch (keyboardEvent.key) {\n        case 'ArrowLeft':\n          return {x: elementPosition.left - unit, y: horizontalY};\n        case 'ArrowRight':\n          return {x: elementPosition.right + unit, y: horizontalY};\n        case 'ArrowDown':\n          return {x: verticalX, y: elementPosition.bottom + unit};\n        case 'ArrowUp':\n          return {x: verticalX, y: elementPosition.top - unit};\n        default:\n          return {\n            x: (event as MouseEvent).x,\n            y: (event as MouseEvent).y,\n          };\n      }\n    }\n\n    function getUnitToMove(unit: number, event: Event): number {\n      const keyboardEvent = event as KeyboardEvent;\n      if (keyboardEvent.altKey) {\n        unit = 1;\n      } else if (keyboardEvent.ctrlKey) {\n        unit = 10;\n      } else if (keyboardEvent.shiftKey) {\n        unit = 20;\n      }\n      return unit;\n    }\n\n    function appendSwitcherIcon(parentElement: Element): void {\n      const switcherIcon = new IconButton.Icon.Icon();\n      switcherIcon.data = {iconName: 'switcherIcon', color: 'var(--color-text-primary)', width: '16px', height: '16px'};\n      parentElement.appendChild(switcherIcon);\n    }\n  }\n\n  private dragStart(this: Spectrum, callback: (arg0: Event) => void, event: Event): boolean {\n    this.colorOffset = this.colorElement.totalOffset();\n    callback(event);\n    return true;\n  }\n\n  private contrastDetailsBackgroundColorPickedToggled(event: {\n    data: unknown,\n  }): void {\n    if (event.data) {\n      void this.toggleColorPicker(false);\n    }\n  }\n\n  private contrastPanelExpanded(): void {\n    if (!this.contrastOverlay || !this.contrastDetails) {\n      return;\n    }\n    this.contrastOverlay.setVisible(this.contrastDetails.expanded());\n    this.resizeForSelectedPalette(true);\n  }\n\n  private updatePalettePanel(): void {\n    this.palettePanel.removeChildren();\n    const title = this.palettePanel.createChild('div', 'palette-title');\n    title.textContent = i18nString(UIStrings.colorPalettes);\n    const toolbar = new UI.Toolbar.Toolbar('', this.palettePanel);\n    this.closeButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.returnToColorPicker), 'largeicon-delete');\n    this.closeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.togglePalettePanel.bind(this, false));\n    this.closeButton.element.addEventListener('keydown', this.onCloseBtnKeydown.bind(this));\n    toolbar.appendToolbarItem(this.closeButton);\n    for (const palette of this.palettes.values()) {\n      this.palettePanel.appendChild(this.createPreviewPaletteElement(palette));\n    }\n  }\n\n  private togglePalettePanel(show: boolean): void {\n    if (this.palettePanelShowing === show) {\n      return;\n    }\n    if (show) {\n      this.updatePalettePanel();\n    }\n    this.palettePanelShowing = show;\n    this.contentElement.classList.toggle('palette-panel-showing', show);\n    this.focusInternal();\n  }\n\n  private onCloseBtnKeydown(event: Event): void {\n    if (isEscKey(event) || isEnterOrSpaceKey(event)) {\n      this.togglePalettePanel(false);\n      event.consume(true);\n    }\n  }\n\n  private onSliderKeydown(sliderNewPosition: (arg0: Event) => void, event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    switch (keyboardEvent.key) {\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowDown':\n      case 'ArrowUp':\n        sliderNewPosition(event);\n        event.consume(true);\n    }\n  }\n\n  /**\n   * (Suppress warning about preventScroll)\n   */\n  private focusInternal(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    if (this.palettePanelShowing && this.closeButton) {\n      this.closeButton.element.focus({preventScroll: true});\n    } else {\n      this.contentElement.focus();\n    }\n  }\n\n  private createPaletteColor(colorText: string, colorName?: string, animationDelay?: number): HTMLElement {\n    const element = document.createElement('div') as HTMLElement;\n    element.classList.add('spectrum-palette-color');\n    element.style.background =\n        Platform.StringUtilities.sprintf('linear-gradient(%s, %s), var(--image-file-checker)', colorText, colorText);\n    if (animationDelay) {\n      element.animate([{opacity: 0}, {opacity: 1}], {duration: 100, delay: animationDelay, fill: 'backwards'});\n    }\n    UI.Tooltip.Tooltip.install(element, colorName || colorText);\n    return element;\n  }\n\n  private showPalette(palette: Palette, animate: boolean, _event?: Event): void {\n    this.resizeForSelectedPalette();\n    this.paletteContainer.removeChildren();\n    for (let i = 0; i < palette.colors.length; i++) {\n      const animationDelay = animate ? i * 100 / palette.colors.length : 0;\n      const colorElement = this.createPaletteColor(palette.colors[i], palette.colorNames[i], animationDelay);\n      UI.ARIAUtils.markAsButton(colorElement);\n      UI.ARIAUtils.setAccessibleName(colorElement, i18nString(UIStrings.colorS, {PH1: palette.colors[i]}));\n      colorElement.tabIndex = -1;\n      colorElement.addEventListener(\n          'mousedown',\n          this.paletteColorSelected.bind(\n              this, palette.colors[i], palette.colorNames[i], Boolean(palette.matchUserFormat)));\n      colorElement.addEventListener(\n          'focus',\n          this.paletteColorSelected.bind(\n              this, palette.colors[i], palette.colorNames[i], Boolean(palette.matchUserFormat)));\n      colorElement.addEventListener('keydown', this.onPaletteColorKeydown.bind(this, i));\n      if (palette.mutable) {\n        colorElementToMutable.set(colorElement, true);\n        colorElementToColor.set(colorElement, palette.colors[i]);\n        colorElement.addEventListener('contextmenu', this.showPaletteColorContextMenu.bind(this, i));\n      } else if (palette === MaterialPalette) {\n        colorElement.classList.add('has-material-shades');\n        let shadow = colorElement.createChild('div', 'spectrum-palette-color spectrum-palette-color-shadow');\n        shadow.style.background = palette.colors[i];\n        shadow = colorElement.createChild('div', 'spectrum-palette-color spectrum-palette-color-shadow');\n        shadow.style.background = palette.colors[i];\n        const tooltipText = i18nString(UIStrings.longclickOrLongpressSpaceToShow, {PH1: palette.colors[i]});\n        UI.Tooltip.Tooltip.install(colorElement, tooltipText);\n        UI.ARIAUtils.setAccessibleName(colorElement, tooltipText);\n        new UI.UIUtils.LongClickController(\n            colorElement, this.showLightnessShades.bind(this, colorElement, palette.colors[i]));\n      }\n      this.paletteContainer.appendChild(colorElement);\n    }\n    if (this.paletteContainer.childNodes.length > 0) {\n      (this.paletteContainer.childNodes[0] as HTMLElement).tabIndex = 0;\n    }\n    this.paletteContainerMutable = palette.mutable;\n\n    if (palette.mutable) {\n      this.paletteContainer.appendChild(this.addColorToolbar.element);\n      this.paletteContainer.appendChild(this.deleteIconToolbar.element);\n    } else {\n      this.addColorToolbar.element.remove();\n      this.deleteIconToolbar.element.remove();\n    }\n\n    this.togglePalettePanel(false);\n    this.focusInternal();\n  }\n\n  private showLightnessShades(colorElement: HTMLElement, colorText: string, _event: Event): void {\n    function closeLightnessShades(this: Spectrum, element: Element): void {\n      this.shadesContainer.classList.add('hidden');\n      element.classList.remove('spectrum-shades-shown');\n      if (this.shadesCloseHandler) {\n        this.shadesContainer.ownerDocument.removeEventListener('mousedown', this.shadesCloseHandler, true);\n      }\n      delete this.shadesCloseHandler;\n    }\n\n    if (this.shadesCloseHandler) {\n      this.shadesCloseHandler();\n    }\n\n    this.shadesContainer.classList.remove('hidden');\n    this.shadesContainer.removeChildren();\n    this.shadesContainer.animate(\n        [{transform: 'scaleY(0)', opacity: '0'}, {transform: 'scaleY(1)', opacity: '1'}],\n        {duration: 200, easing: 'cubic-bezier(0.4, 0, 0.2, 1)'});\n    let shadesTop = this.paletteContainer.offsetTop + colorElement.offsetTop +\n        (colorElement.parentElement ? colorElement.parentElement.offsetTop : 0);\n    if (this.contrastDetails) {\n      shadesTop += this.contrastDetails.element().offsetHeight;\n    }\n    this.shadesContainer.style.top = shadesTop + 'px';\n    this.shadesContainer.style.left = colorElement.offsetLeft + 'px';\n    colorElement.classList.add('spectrum-shades-shown');\n\n    const shades = MaterialPaletteShades.get(colorText);\n    if (shades !== undefined) {\n      for (let i = shades.length - 1; i >= 0; i--) {\n        const shadeElement =\n            this.createPaletteColor(shades[i], undefined /* colorName */, i * 200 / shades.length + 100);\n        UI.ARIAUtils.markAsButton(shadeElement);\n        UI.ARIAUtils.setAccessibleName(shadeElement, i18nString(UIStrings.colorS, {PH1: shades[i]}));\n        shadeElement.tabIndex = -1;\n        shadeElement.addEventListener('mousedown', this.paletteColorSelected.bind(this, shades[i], shades[i], false));\n        shadeElement.addEventListener('focus', this.paletteColorSelected.bind(this, shades[i], shades[i], false));\n        shadeElement.addEventListener('keydown', this.onShadeColorKeydown.bind(this, colorElement));\n        this.shadesContainer.appendChild(shadeElement);\n      }\n    }\n\n    if (this.shadesContainer.childNodes.length > 0) {\n      (this.shadesContainer.childNodes[this.shadesContainer.childNodes.length - 1] as HTMLElement).focus();\n    }\n    this.shadesCloseHandler = closeLightnessShades.bind(this, colorElement);\n    this.shadesContainer.ownerDocument.addEventListener('mousedown', this.shadesCloseHandler, true);\n  }\n\n  private slotIndexForEvent(event: Event): number {\n    const mouseEvent = event as MouseEvent;\n    const localX = mouseEvent.pageX - this.paletteContainer.totalOffsetLeft();\n    const localY = mouseEvent.pageY - this.paletteContainer.totalOffsetTop();\n    const col = Math.min(localX / COLOR_CHIP_SIZE | 0, ITEMS_PER_PALETTE_ROW - 1);\n    const row = (localY / COLOR_CHIP_SIZE) | 0;\n    return Math.min(row * ITEMS_PER_PALETTE_ROW + col, this.customPaletteSetting.get().colors.length - 1);\n  }\n\n  private isDraggingToBin(event: Event): boolean {\n    const mouseEvent = event as MouseEvent;\n    return mouseEvent.pageX > this.deleteIconToolbar.element.totalOffsetLeft();\n  }\n\n  private paletteDragStart(event: Event): boolean {\n    const element = UI.UIUtils.deepElementFromEvent(event) as HTMLElement;\n    if (!element || !colorElementToMutable.get(element)) {\n      return false;\n    }\n\n    const index = this.slotIndexForEvent(event);\n    this.dragElement = element;\n    const mouseEvent = event as MouseEvent;\n    this.dragHotSpotX = mouseEvent.pageX - (index % ITEMS_PER_PALETTE_ROW) * COLOR_CHIP_SIZE;\n    this.dragHotSpotY = mouseEvent.pageY - (index / ITEMS_PER_PALETTE_ROW | 0) * COLOR_CHIP_SIZE;\n    return true;\n  }\n\n  private paletteDrag(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    if (mouseEvent.pageX < this.paletteContainer.totalOffsetLeft() ||\n        mouseEvent.pageY < this.paletteContainer.totalOffsetTop()) {\n      return;\n    }\n    if (!this.dragElement || this.dragHotSpotX === undefined || this.dragHotSpotY === undefined) {\n      return;\n    }\n    const newIndex = this.slotIndexForEvent(event);\n    const offsetX = mouseEvent.pageX - (newIndex % ITEMS_PER_PALETTE_ROW) * COLOR_CHIP_SIZE;\n    const offsetY = mouseEvent.pageY - (newIndex / ITEMS_PER_PALETTE_ROW | 0) * COLOR_CHIP_SIZE;\n\n    const isDeleting = this.isDraggingToBin(event);\n    this.deleteIconToolbar.element.classList.add('dragging');\n    this.deleteIconToolbar.element.classList.toggle('delete-color-toolbar-active', isDeleting);\n    const dragElementTransform =\n        'translateX(' + (offsetX - this.dragHotSpotX) + 'px) translateY(' + (offsetY - this.dragHotSpotY) + 'px)';\n    this.dragElement.style.transform = isDeleting ? dragElementTransform + ' scale(0.8)' : dragElementTransform;\n    const children = Array.prototype.slice.call(this.paletteContainer.children);\n    const index = children.indexOf(this.dragElement);\n    const swatchOffsets = new Map<Element, {left: number, top: number}>();\n    for (const swatch of children) {\n      swatchOffsets.set(swatch, swatch.totalOffset());\n    }\n\n    if (index !== newIndex) {\n      this.paletteContainer.insertBefore(this.dragElement, children[newIndex > index ? newIndex + 1 : newIndex]);\n    }\n\n    for (const swatch of children) {\n      if (swatch === this.dragElement) {\n        continue;\n      }\n      const before = swatchOffsets.get(swatch);\n      const after = swatch.totalOffset();\n      if (before && (before.left !== after.left || before.top !== after.top)) {\n        swatch.animate(\n            [\n              {\n                transform:\n                    'translateX(' + (before.left - after.left) + 'px) translateY(' + (before.top - after.top) + 'px)',\n              },\n              {transform: 'none'},\n            ],\n            {duration: 100, easing: 'cubic-bezier(0, 0, 0.2, 1)'});\n      }\n    }\n  }\n\n  private paletteDragEnd(e: Event): void {\n    if (!this.dragElement) {\n      return;\n    }\n    if (this.isDraggingToBin(e)) {\n      this.dragElement.remove();\n    }\n    this.dragElement.style.removeProperty('transform');\n    const children = this.paletteContainer.children;\n    const colors = [];\n    for (let i = 0; i < children.length; ++i) {\n      const color = colorElementToColor.get(children[i] as HTMLElement);\n      if (color) {\n        colors.push(color);\n      }\n    }\n    const palette = this.customPaletteSetting.get() as Palette;\n    palette.colors = colors;\n    this.customPaletteSetting.set(palette);\n    this.showPalette(palette, false);\n\n    this.deleteIconToolbar.element.classList.remove('dragging');\n    this.deleteIconToolbar.element.classList.remove('delete-color-toolbar-active');\n  }\n\n  private loadPalettes(): void {\n    this.palettes.set(MaterialPalette.title, MaterialPalette);\n    const defaultCustomPalette:\n        Palette = {title: 'Custom', colors: [], colorNames: [], mutable: true, matchUserFormat: undefined};\n    this.customPaletteSetting =\n        Common.Settings.Settings.instance().createSetting('customColorPalette', defaultCustomPalette);\n    const customPalette = this.customPaletteSetting.get() as Palette;\n    // Fallback case for custom palettes created pre-m67\n    customPalette.colorNames = customPalette.colorNames || [];\n    this.palettes.set(customPalette.title, customPalette);\n\n    this.selectedColorPalette =\n        Common.Settings.Settings.instance().createSetting('selectedColorPalette', GeneratedPaletteTitle);\n    const palette = this.palettes.get(this.selectedColorPalette.get() as string);\n    if (palette) {\n      this.showPalette(palette, true);\n    }\n  }\n\n  addPalette(palette: Palette): void {\n    this.palettes.set(palette.title, palette);\n    if (this.selectedColorPalette.get() === palette.title) {\n      this.showPalette(palette, true);\n    }\n  }\n\n  private createPreviewPaletteElement(palette: Palette): Element {\n    const colorsPerPreviewRow = 5;\n    const previewElement = document.createElement('div');\n    previewElement.classList.add('palette-preview');\n    UI.ARIAUtils.markAsButton(previewElement);\n    previewElement.tabIndex = 0;\n    const titleElement = previewElement.createChild('div', 'palette-preview-title');\n    titleElement.textContent = palette.title;\n    let i;\n    for (i = 0; i < colorsPerPreviewRow && i < palette.colors.length; i++) {\n      previewElement.appendChild(this.createPaletteColor(palette.colors[i], palette.colorNames[i]));\n    }\n    for (; i < colorsPerPreviewRow; i++) {\n      previewElement.createChild('div', 'spectrum-palette-color empty-color');\n    }\n    self.onInvokeElement(previewElement, event => {\n      this.paletteSelected(palette);\n      event.consume(true);\n    });\n    return previewElement;\n  }\n\n  private paletteSelected(palette: Palette): void {\n    this.selectedColorPalette.set(palette.title);\n    this.showPalette(palette, true);\n  }\n\n  private resizeForSelectedPalette(force?: boolean): void {\n    const palette = this.palettes.get(this.selectedColorPalette.get() as string);\n    if (!palette) {\n      return;\n    }\n    let numColors = palette.colors.length;\n    if (palette === this.customPaletteSetting.get()) {\n      numColors++;\n    }\n    const rowsNeeded = Math.max(1, Math.ceil(numColors / ITEMS_PER_PALETTE_ROW));\n    if (this.numPaletteRowsShown === rowsNeeded && !force) {\n      return;\n    }\n    this.numPaletteRowsShown = rowsNeeded;\n    const paletteColorHeight = 12;\n    const paletteMargin = 12;\n    let paletteTop = 236;\n    if (this.contrastDetails) {\n      if (this.contrastDetails.expanded()) {\n        paletteTop += 78;\n      } else {\n        paletteTop += 36;\n      }\n    }\n    this.element.style.height = (paletteTop + paletteMargin + (paletteColorHeight + paletteMargin) * rowsNeeded) + 'px';\n    this.dispatchEventToListeners(Events.SizeChanged);\n  }\n\n  private paletteColorSelected(colorText: string, colorName: string|undefined, matchUserFormat: boolean): void {\n    const color = Common.Color.Color.parse(colorText);\n    if (!color) {\n      return;\n    }\n    this.innerSetColor(\n        color.hsva(), colorText, colorName, matchUserFormat ? this.colorFormat : color.format(), ChangeSource.Other);\n  }\n\n  private onPaletteColorKeydown(colorIndex: number, event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    let nextColorIndex;\n    switch (keyboardEvent.key) {\n      case 'ArrowLeft':\n        nextColorIndex = colorIndex - 1;\n        break;\n      case 'ArrowRight':\n        nextColorIndex = colorIndex + 1;\n        break;\n      case 'ArrowUp':\n        nextColorIndex = colorIndex - ITEMS_PER_PALETTE_ROW;\n        break;\n      case 'ArrowDown':\n        nextColorIndex = colorIndex + ITEMS_PER_PALETTE_ROW;\n        break;\n    }\n    if (nextColorIndex !== undefined && nextColorIndex > -1 &&\n        nextColorIndex < this.paletteContainer.childNodes.length) {\n      (this.paletteContainer.childNodes[nextColorIndex] as HTMLElement).focus();\n    }\n  }\n\n  private onShadeColorKeydown(colorElement: HTMLElement, event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    const target = keyboardEvent.target as HTMLElement;\n    if (isEscKey(event) || keyboardEvent.key === 'Tab') {\n      colorElement.focus();\n      if (this.shadesCloseHandler) {\n        this.shadesCloseHandler();\n      }\n      event.consume(true);\n    } else if (keyboardEvent.key === 'ArrowUp' && target.previousElementSibling) {\n      (target.previousElementSibling as HTMLElement).focus();\n      event.consume(true);\n    } else if (keyboardEvent.key === 'ArrowDown' && target.nextElementSibling) {\n      (target.nextElementSibling as HTMLElement).focus();\n      event.consume(true);\n    }\n  }\n\n  private onAddColorMousedown(): void {\n    this.addColorToCustomPalette();\n  }\n\n  private onAddColorKeydown(event: Event): void {\n    if (isEnterOrSpaceKey(event)) {\n      this.addColorToCustomPalette();\n      event.consume(true);\n    }\n  }\n\n  private addColorToCustomPalette(): void {\n    const palette = this.customPaletteSetting.get() as Palette;\n    palette.colors.push(this.colorString());\n    this.customPaletteSetting.set(palette);\n    this.showPalette(palette, false);\n    const colorElements = this.paletteContainer.querySelectorAll('.spectrum-palette-color');\n    (colorElements[colorElements.length - 1] as HTMLElement).focus();\n  }\n\n  private showPaletteColorContextMenu(colorIndex: number, event: Event): void {\n    if (!this.paletteContainerMutable) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (colorIndex !== -1) {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.removeColor), this.deletePaletteColors.bind(this, colorIndex, false));\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.removeAllToTheRight), this.deletePaletteColors.bind(this, colorIndex, true));\n    }\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.clearPalette), this.deletePaletteColors.bind(this, -1, true));\n    void contextMenu.show();\n  }\n\n  private deletePaletteColors(colorIndex: number, toRight: boolean): void {\n    const palette = this.customPaletteSetting.get() as Palette;\n    if (toRight) {\n      palette.colors.splice(colorIndex + 1, palette.colors.length - colorIndex - 1);\n    } else {\n      palette.colors.splice(colorIndex, 1);\n    }\n    this.customPaletteSetting.set(palette);\n    this.showPalette(palette, false);\n  }\n\n  setColor(color: Common.Color.Color, colorFormat: string): void {\n    this.originalFormat = colorFormat;\n    this.innerSetColor(color.hsva(), '', undefined /* colorName */, colorFormat, ChangeSource.Model);\n    const colorValues = this.color().canonicalHSLA();\n    UI.ARIAUtils.setValueNow(this.hueElement, colorValues[0]);\n    UI.ARIAUtils.setValueText(this.alphaElement, colorValues[3]);\n  }\n\n  colorSelected(color: Common.Color.Color): void {\n    this.innerSetColor(color.hsva(), '', undefined /* colorName */, undefined /* colorFormat */, ChangeSource.Other);\n  }\n\n  private innerSetColor(\n      hsva: number[]|undefined, colorString: string|undefined, colorName: string|undefined,\n      colorFormat: string|undefined, changeSource: string): void {\n    if (hsva !== undefined) {\n      this.hsv = hsva;\n    }\n    this.colorNameInternal = colorName;\n    if (colorString !== undefined) {\n      this.colorStringInternal = colorString;\n    }\n    if (colorFormat !== undefined) {\n      const cf = Common.Color.Format;\n      console.assert(colorFormat !== cf.Original, 'Spectrum\\'s color format cannot be Original');\n      if (colorFormat === cf.RGBA) {\n        colorFormat = cf.RGB;\n      } else if (colorFormat === cf.HSLA) {\n        colorFormat = cf.HSL;\n      } else if (colorFormat === cf.HWBA) {\n        colorFormat = cf.HWB;\n      } else if (colorFormat === cf.HEXA) {\n        colorFormat = cf.HEX;\n      } else if (colorFormat === cf.ShortHEXA) {\n        colorFormat = cf.ShortHEX;\n      }\n      this.colorFormat = colorFormat;\n    }\n\n    if (this.contrastInfo) {\n      this.contrastInfo.setColor(Common.Color.Color.fromHSVA(this.hsv), this.colorFormat);\n    }\n\n    this.updateHelperLocations();\n    this.updateUI();\n\n    if (changeSource !== ChangeSource.Input) {\n      this.updateInput();\n    }\n    if (changeSource !== ChangeSource.Model) {\n      this.dispatchEventToListeners(Events.ColorChanged, this.colorString());\n    }\n  }\n\n  private color(): Common.Color.Color {\n    return Common.Color.Color.fromHSVA(this.hsv);\n  }\n\n  colorName(): string|undefined {\n    return this.colorNameInternal;\n  }\n\n  colorString(): string {\n    if (this.colorStringInternal) {\n      return this.colorStringInternal;\n    }\n    const cf = Common.Color.Format;\n    const color = this.color();\n\n    let colorString = color.asString(this.colorFormat);\n    if (colorString) {\n      return colorString;\n    }\n\n    if (this.colorFormat === cf.Nickname) {\n      colorString = color.asString(color.hasAlpha() ? cf.HEXA : cf.HEX);\n    } else if (this.colorFormat === cf.ShortHEX) {\n      colorString = color.asString(color.detectHEXFormat());\n    } else if (this.colorFormat === cf.HEX) {\n      colorString = color.asString(cf.HEXA);\n    } else if (this.colorFormat === cf.HSL) {\n      colorString = color.asString(cf.HSLA);\n    } else if (this.colorFormat === cf.HWB) {\n      colorString = color.asString(cf.HWBA);\n    } else {\n      colorString = color.asString(cf.RGBA);\n    }\n\n    console.assert(Boolean(colorString));\n    return colorString || '';\n  }\n\n  private updateHelperLocations(): void {\n    const h = this.hsv[0];\n    const s = this.hsv[1];\n    const v = this.hsv[2];\n    const alpha = this.hsv[3];\n\n    // Where to show the little circle that displays your current selected color.\n    this.dragX = s * this.dragWidth;\n    this.dragY = this.dragHeight - (v * this.dragHeight);\n\n    const dragX = Math.max(\n        -this.colorDragElementHeight,\n        Math.min(this.dragWidth - this.colorDragElementHeight, this.dragX - this.colorDragElementHeight));\n    const dragY = Math.max(\n        -this.colorDragElementHeight,\n        Math.min(this.dragHeight - this.colorDragElementHeight, this.dragY - this.colorDragElementHeight));\n\n    this.colorDragElement.positionAt(dragX, dragY);\n\n    // Where to show the bar that displays your current selected hue.\n    const hueSlideX = (1 - h) * this.hueAlphaWidth - this.slideHelperWidth;\n    this.hueSlider.style.left = hueSlideX + 'px';\n    const alphaSlideX = alpha * this.hueAlphaWidth - this.slideHelperWidth;\n    this.alphaSlider.style.left = alphaSlideX + 'px';\n  }\n\n  private updateInput(): void {\n    const cf = Common.Color.Format;\n    if (this.colorFormat === cf.HEX || this.colorFormat === cf.ShortHEX || this.colorFormat === cf.Nickname) {\n      this.hexContainer.hidden = false;\n      this.displayContainer.hidden = true;\n      if (this.colorFormat === cf.ShortHEX) {\n        this.hexValue.value = String(this.color().asString(this.color().detectHEXFormat()));\n      } else {  // Don't use ShortHEX if original was not in that format.\n        this.hexValue.value = String(this.color().asString(this.color().hasAlpha() ? cf.HEXA : cf.HEX));\n      }\n    } else {\n      // RGBA, HSLA, HWBA display.\n      this.hexContainer.hidden = true;\n      this.displayContainer.hidden = false;\n      let colorValues;\n      if (this.colorFormat === cf.RGB) {\n        this.textLabels.textContent = 'RGBA';\n        colorValues = this.color().canonicalRGBA();\n      } else if (this.colorFormat === cf.HSL) {\n        this.textLabels.textContent = 'HSLA';\n        colorValues = this.color().canonicalHSLA();\n      } else {\n        this.textLabels.textContent = 'HWBA';\n        colorValues = this.color().canonicalHWBA();\n      }\n\n      for (let i = 0; i < 3; ++i) {\n        UI.ARIAUtils.setAccessibleName(\n            this.textValues[i],\n            /** R in RGBA */ i18nString(UIStrings.sInS, {\n              PH1: this.textLabels.textContent.charAt(i),\n              PH2: this.textLabels.textContent,\n            }));\n        this.textValues[i].value = String(colorValues[i]);\n        if (this.colorFormat !== cf.RGB && (i === 1 || i === 2)) {\n          this.textValues[i].value += '%';\n        }\n      }\n      UI.ARIAUtils.setAccessibleName(\n          this.textValues[3],\n          /** A in RGBA */ i18nString(UIStrings.sInS, {\n            PH1: this.textLabels.textContent.charAt(3),\n            PH2: this.textLabels.textContent,\n          }));\n      this.textValues[3].value = String(Math.round(colorValues[3] * 100) / 100);\n    }\n  }\n\n  private updateUI(): void {\n    const h = Common.Color.Color.fromHSVA([this.hsv[0], 1, 1, 1]);\n    this.colorElement.style.backgroundColor = h.asString(Common.Color.Format.RGB) as string;\n    if (this.contrastOverlay) {\n      this.contrastOverlay.setDimensions(this.dragWidth, this.dragHeight);\n    }\n\n    this.swatch.setColor(this.color(), this.colorString());\n    this.colorDragElement.style.backgroundColor = this.color().asString(Common.Color.Format.RGBA) as string;\n    const noAlpha = Common.Color.Color.fromHSVA(this.hsv.slice(0, 3).concat(1));\n    this.alphaElementBackground.style.backgroundImage = Platform.StringUtilities.sprintf(\n        'linear-gradient(to right, rgba(0,0,0,0), %s)', noAlpha.asString(Common.Color.Format.RGB));\n  }\n\n  private formatViewSwitch(): void {\n    const cf = Common.Color.Format;\n    let format: string = cf.RGB;\n    if (this.colorFormat === cf.RGB) {\n      format = cf.HSL;\n    } else if (this.colorFormat === cf.HSL) {\n      format = cf.HWB;\n    } else if (this.colorFormat === cf.HWB) {\n      format = (this.originalFormat === cf.ShortHEX || this.originalFormat === cf.ShortHEXA) ? cf.ShortHEX : cf.HEX;\n    }\n    this.innerSetColor(undefined, '', undefined /* colorName */, format, ChangeSource.Other);\n  }\n\n  /**\n   * If the pasted input is parsable as a color, applies it converting to the current user format\n   */\n  private pasted(event: ClipboardEvent): void {\n    if (!event.clipboardData) {\n      return;\n    }\n    const text = event.clipboardData.getData('text');\n    const color = Common.Color.Color.parse(text);\n    if (!color) {\n      return;\n    }\n    this.innerSetColor(color.hsva(), text, undefined /* colorName */, undefined /* colorFormat */, ChangeSource.Other);\n    event.preventDefault();\n  }\n\n  private inputChanged(event: Event): void {\n    function elementValue(element: HTMLInputElement): string {\n      return element.value;\n    }\n\n    const inputElement = event.currentTarget as HTMLInputElement;\n    const newValue = UI.UIUtils.createReplacementString(inputElement.value, event);\n    if (newValue) {\n      inputElement.value = newValue;\n      inputElement.selectionStart = 0;\n      inputElement.selectionEnd = newValue.length;\n      event.consume(true);\n    }\n\n    const cf = Common.Color.Format;\n    let colorString;\n    if (this.colorFormat === cf.Nickname || this.colorFormat === cf.HEX || this.colorFormat === cf.ShortHEX) {\n      colorString = this.hexValue.value;\n    } else {\n      const values = this.textValues.slice(0, -1).map(elementValue).join(' ');\n      const alpha = this.textValues.slice(-1).map(elementValue).join(' ');\n      colorString = Platform.StringUtilities.sprintf('%s(%s)', this.colorFormat, [values, alpha].join(' / '));\n    }\n\n    const color = Common.Color.Color.parse(colorString);\n    if (!color) {\n      return;\n    }\n\n    let colorFormat: string|undefined = undefined;\n    if (this.colorFormat === cf.HEX || this.colorFormat === cf.ShortHEX) {\n      colorFormat = color.detectHEXFormat();\n    }\n    this.innerSetColor(color.hsva(), colorString, undefined /* colorName */, colorFormat, ChangeSource.Input);\n  }\n\n  wasShown(): void {\n    this.registerCSSFiles([spectrumStyles]);\n    this.hueAlphaWidth = this.hueElement.offsetWidth;\n    this.slideHelperWidth = this.hueSlider.offsetWidth / 2;\n    this.dragWidth = this.colorElement.offsetWidth;\n    this.dragHeight = this.colorElement.offsetHeight;\n    this.colorDragElementHeight = this.colorDragElement.offsetHeight / 2;\n    this.innerSetColor(undefined, undefined, undefined /* colorName */, undefined, ChangeSource.Model);\n    this.eyeDropperExperimentEnabled =\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.EYEDROPPER_COLOR_PICKER);\n    // When flag is turned on, eye dropper is not turned on by default.\n    // This is because the global change of the cursor into a dropper will disturb the user.\n    if (!this.eyeDropperExperimentEnabled) {\n      void this.toggleColorPicker(true);\n    } else {\n      this.colorPickerButton.setToggled(false);\n    }\n\n    if (this.contrastDetails && this.contrastDetailsBackgroundColorPickedToggledBound) {\n      this.contrastDetails.addEventListener(\n          ContrastDetailsEvents.BackgroundColorPickerWillBeToggled,\n          this.contrastDetailsBackgroundColorPickedToggledBound);\n    }\n  }\n\n  willHide(): void {\n    void this.toggleColorPicker(false);\n    if (this.contrastDetails && this.contrastDetailsBackgroundColorPickedToggledBound) {\n      this.contrastDetails.removeEventListener(\n          ContrastDetailsEvents.BackgroundColorPickerWillBeToggled,\n          this.contrastDetailsBackgroundColorPickedToggledBound);\n    }\n  }\n\n  private async toggleColorPicker(enabled?: boolean): Promise<void> {\n    const eyeDropperExperimentEnabled = this.eyeDropperExperimentEnabled;\n\n    if (enabled === undefined) {\n      enabled = !this.colorPickerButton.toggled();\n    }\n    this.colorPickerButton.setToggled(enabled);\n\n    // This is to make sure that only one picker is open at a time\n    // Also have a look at this.contrastDetailsBackgroundColorPickedToggled\n    if (this.contrastDetails && enabled && this.contrastDetails.backgroundColorPickerEnabled()) {\n      this.contrastDetails.toggleBackgroundColorPicker(false);\n    }\n\n    // With the old color picker, colors can only be picked up within the page.\n    if (!eyeDropperExperimentEnabled) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.setEyeDropperActive(enabled);\n      if (enabled) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.colorPickedBound);\n      } else {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n            Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.colorPickedBound);\n      }\n    } else if (eyeDropperExperimentEnabled && enabled) {\n      // Use EyeDropper API, can pick up colors outside the browser window,\n      // Note: The current EyeDropper API is not designed to pick up colors continuously.\n      // Wait for TypeScript to support the definition of EyeDropper API:\n      // https://github.com/microsoft/TypeScript/issues/48638\n      /* eslint-disable  @typescript-eslint/no-explicit-any */\n      const eyeDropper = new (<any>window).EyeDropper();\n\n      try {\n        const hexColor = await eyeDropper.open();\n        const color = Common.Color.Color.parse(hexColor.sRGBHex);\n        this.innerSetColor(color?.hsva(), '', undefined /* colorName */, undefined, ChangeSource.Other);\n      } catch (error) {\n        console.error(error);\n      }\n\n      this.colorPickerButton.setToggled(false);\n    }\n  }\n\n  private colorPicked({\n    data: rgbColor,\n  }: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.EyeDropperPickedColorEvent>): void {\n    const rgba = [rgbColor.r, rgbColor.g, rgbColor.b, (rgbColor.a / 2.55 | 0) / 100];\n    const color = Common.Color.Color.fromRGBA(rgba);\n    this.innerSetColor(color.hsva(), '', undefined /* colorName */, undefined, ChangeSource.Other);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n  }\n}\n\nexport const ChangeSource = {\n  Input: 'Input',\n  Model: 'Model',\n  Other: 'Other',\n};\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ColorChanged = 'ColorChanged',\n  SizeChanged = 'SizeChanged',\n}\n\nexport type EventTypes = {\n  [Events.ColorChanged]: string,\n  [Events.SizeChanged]: void,\n};\n\nconst COLOR_CHIP_SIZE = 24;\nconst ITEMS_PER_PALETTE_ROW = 8;\nconst GeneratedPaletteTitle = 'Page colors';\n\nexport class PaletteGenerator {\n  private readonly callback: (arg0: Palette) => void;\n  private readonly frequencyMap: Map<string, number>;\n  constructor(callback: (arg0: Palette) => void) {\n    this.callback = callback;\n    this.frequencyMap = new Map();\n    const stylesheetPromises = [];\n    for (const cssModel of SDK.TargetManager.TargetManager.instance().models(SDK.CSSModel.CSSModel)) {\n      for (const stylesheet of cssModel.allStyleSheets()) {\n        stylesheetPromises.push(this.processStylesheet(stylesheet));\n      }\n    }\n    void Promise.all(stylesheetPromises)\n        .catch(error => {\n          console.error(error);\n        })\n        .then(this.finish.bind(this));\n  }\n\n  private frequencyComparator(a: string, b: string): number {\n    return (this.frequencyMap.get(b) as number) - (this.frequencyMap.get(a) as number);\n  }\n\n  private finish(): void {\n    function hueComparator(a: string, b: string): number {\n      const hsva = (paletteColors.get(a) as Common.Color.Color).hsva();\n      const hsvb = (paletteColors.get(b) as Common.Color.Color).hsva();\n\n      // First trim the shades of gray\n      if (hsvb[1] < 0.12 && hsva[1] < 0.12) {\n        return hsvb[2] * hsvb[3] - hsva[2] * hsva[3];\n      }\n      if (hsvb[1] < 0.12) {\n        return -1;\n      }\n      if (hsva[1] < 0.12) {\n        return 1;\n      }\n\n      // Equal hue -> sort by sat\n      if (hsvb[0] === hsva[0]) {\n        return hsvb[1] * hsvb[3] - hsva[1] * hsva[3];\n      }\n\n      return (hsvb[0] + 0.94) % 1 - (hsva[0] + 0.94) % 1;\n    }\n\n    let colors: string[]|string[] = [...this.frequencyMap.keys()];\n    colors = colors.sort(this.frequencyComparator.bind(this));\n    const paletteColors = new Map<string, Common.Color.Color>();\n    const colorsPerRow = 24;\n    while (paletteColors.size < colorsPerRow && colors.length) {\n      const colorText = colors.shift() as string;\n      const color = Common.Color.Color.parse(colorText);\n      if (!color || color.nickname() === 'white' || color.nickname() === 'black') {\n        continue;\n      }\n      paletteColors.set(colorText, color);\n    }\n\n    this.callback({\n      title: GeneratedPaletteTitle,\n      colors: [...paletteColors.keys()].sort(hueComparator),\n      colorNames: [],\n      mutable: false,\n      matchUserFormat: undefined,\n    });\n  }\n\n  private async processStylesheet(stylesheet: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): Promise<void> {\n    let text: string = (await stylesheet.requestContent()).content || '';\n    text = text.toLowerCase();\n    const regexResult = text.match(/((?:rgb|hsl|hwb)a?\\([^)]+\\)|#[0-9a-f]{6}|#[0-9a-f]{3})/g) || [];\n    for (const c of regexResult) {\n      let frequency = this.frequencyMap.get(c) || 0;\n      this.frequencyMap.set(c, ++frequency);\n    }\n  }\n}\n\nconst MaterialPaletteShades = new Map([\n  [\n    '#F44336',\n    ['#FFEBEE', '#FFCDD2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n  ],\n  [\n    '#E91E63',\n    ['#FCE4EC', '#F8BBD0', '#F48FB1', '#F06292', '#EC407A', '#E91E63', '#D81B60', '#C2185B', '#AD1457', '#880E4F'],\n  ],\n  [\n    '#9C27B0',\n    ['#F3E5F5', '#E1BEE7', '#CE93D8', '#BA68C8', '#AB47BC', '#9C27B0', '#8E24AA', '#7B1FA2', '#6A1B9A', '#4A148C'],\n  ],\n  [\n    '#673AB7',\n    ['#EDE7F6', '#D1C4E9', '#B39DDB', '#9575CD', '#7E57C2', '#673AB7', '#5E35B1', '#512DA8', '#4527A0', '#311B92'],\n  ],\n  [\n    '#3F51B5',\n    ['#E8EAF6', '#C5CAE9', '#9FA8DA', '#7986CB', '#5C6BC0', '#3F51B5', '#3949AB', '#303F9F', '#283593', '#1A237E'],\n  ],\n  [\n    '#2196F3',\n    ['#E3F2FD', '#BBDEFB', '#90CAF9', '#64B5F6', '#42A5F5', '#2196F3', '#1E88E5', '#1976D2', '#1565C0', '#0D47A1'],\n  ],\n  [\n    '#03A9F4',\n    ['#E1F5FE', '#B3E5FC', '#81D4FA', '#4FC3F7', '#29B6F6', '#03A9F4', '#039BE5', '#0288D1', '#0277BD', '#01579B'],\n  ],\n  [\n    '#00BCD4',\n    ['#E0F7FA', '#B2EBF2', '#80DEEA', '#4DD0E1', '#26C6DA', '#00BCD4', '#00ACC1', '#0097A7', '#00838F', '#006064'],\n  ],\n  [\n    '#009688',\n    ['#E0F2F1', '#B2DFDB', '#80CBC4', '#4DB6AC', '#26A69A', '#009688', '#00897B', '#00796B', '#00695C', '#004D40'],\n  ],\n  [\n    '#4CAF50',\n    ['#E8F5E9', '#C8E6C9', '#A5D6A7', '#81C784', '#66BB6A', '#4CAF50', '#43A047', '#388E3C', '#2E7D32', '#1B5E20'],\n  ],\n  [\n    '#8BC34A',\n    ['#F1F8E9', '#DCEDC8', '#C5E1A5', '#AED581', '#9CCC65', '#8BC34A', '#7CB342', '#689F38', '#558B2F', '#33691E'],\n  ],\n  [\n    '#CDDC39',\n    ['#F9FBE7', '#F0F4C3', '#E6EE9C', '#DCE775', '#D4E157', '#CDDC39', '#C0CA33', '#AFB42B', '#9E9D24', '#827717'],\n  ],\n  [\n    '#FFEB3B',\n    ['#FFFDE7', '#FFF9C4', '#FFF59D', '#FFF176', '#FFEE58', '#FFEB3B', '#FDD835', '#FBC02D', '#F9A825', '#F57F17'],\n  ],\n  [\n    '#FFC107',\n    ['#FFF8E1', '#FFECB3', '#FFE082', '#FFD54F', '#FFCA28', '#FFC107', '#FFB300', '#FFA000', '#FF8F00', '#FF6F00'],\n  ],\n  [\n    '#FF9800',\n    ['#FFF3E0', '#FFE0B2', '#FFCC80', '#FFB74D', '#FFA726', '#FF9800', '#FB8C00', '#F57C00', '#EF6C00', '#E65100'],\n  ],\n  [\n    '#FF5722',\n    ['#FBE9E7', '#FFCCBC', '#FFAB91', '#FF8A65', '#FF7043', '#FF5722', '#F4511E', '#E64A19', '#D84315', '#BF360C'],\n  ],\n  [\n    '#795548',\n    ['#EFEBE9', '#D7CCC8', '#BCAAA4', '#A1887F', '#8D6E63', '#795548', '#6D4C41', '#5D4037', '#4E342E', '#3E2723'],\n  ],\n  [\n    '#9E9E9E',\n    ['#FAFAFA', '#F5F5F5', '#EEEEEE', '#E0E0E0', '#BDBDBD', '#9E9E9E', '#757575', '#616161', '#424242', '#212121'],\n  ],\n  [\n    '#607D8B',\n    ['#ECEFF1', '#CFD8DC', '#B0BEC5', '#90A4AE', '#78909C', '#607D8B', '#546E7A', '#455A64', '#37474F', '#263238'],\n  ],\n]);\n\nexport const MaterialPalette = {\n  title: 'Material',\n  mutable: false,\n  matchUserFormat: true,\n  colors: [...MaterialPaletteShades.keys()],\n  colorNames: [],\n};\n\nexport class Swatch {\n  private colorString!: string|null;\n  private swatchInnerElement: HTMLElement;\n  private swatchOverlayElement: HTMLElement;\n  private readonly swatchCopyIcon: UI.Icon.Icon;\n  constructor(parentElement: HTMLElement) {\n    const swatchElement = parentElement.createChild('span', 'swatch');\n    this.swatchInnerElement = swatchElement.createChild('span', 'swatch-inner');\n    this.swatchOverlayElement = swatchElement.createChild('span', 'swatch-overlay') as HTMLElement;\n    UI.ARIAUtils.markAsButton(this.swatchOverlayElement);\n    UI.ARIAUtils.setPressed(this.swatchOverlayElement, false);\n    this.swatchOverlayElement.tabIndex = 0;\n    self.onInvokeElement(this.swatchOverlayElement, this.onCopyText.bind(this));\n    this.swatchOverlayElement.addEventListener('mouseout', this.onCopyIconMouseout.bind(this));\n    this.swatchOverlayElement.addEventListener('blur', this.onCopyIconMouseout.bind(this));\n    this.swatchCopyIcon = UI.Icon.Icon.create('largeicon-copy', 'copy-color-icon');\n    UI.Tooltip.Tooltip.install(this.swatchCopyIcon, i18nString(UIStrings.copyColorToClipboard));\n    this.swatchOverlayElement.appendChild(this.swatchCopyIcon);\n    UI.ARIAUtils.setAccessibleName(this.swatchOverlayElement, this.swatchCopyIcon.title);\n  }\n\n  setColor(color: Common.Color.Color, colorString?: string): void {\n    this.swatchInnerElement.style.backgroundColor = color.asString(Common.Color.Format.RGBA) as string;\n    // Show border if the swatch is white.\n    this.swatchInnerElement.classList.toggle('swatch-inner-white', color.hsla()[2] > 0.9);\n    this.colorString = colorString || null;\n    if (colorString) {\n      this.swatchOverlayElement.hidden = false;\n    } else {\n      this.swatchOverlayElement.hidden = true;\n    }\n  }\n\n  private onCopyText(event: Event): void {\n    this.swatchCopyIcon.setIconType('largeicon-checkmark');\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.colorString);\n    UI.ARIAUtils.setPressed(this.swatchOverlayElement, true);\n    event.consume();\n  }\n\n  private onCopyIconMouseout(): void {\n    this.swatchCopyIcon.setIconType('largeicon-copy');\n    UI.ARIAUtils.setPressed(this.swatchOverlayElement, false);\n  }\n}\nexport interface Palette {\n  title: string;\n  colors: string[];\n  colorNames: string[];\n  mutable: boolean;\n  matchUserFormat?: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
