{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/data_grid/ShowMoreDataGridNode.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\n\nimport {DataGridNode} from './DataGrid.js';\n\nconst UIStrings = {\n  /**\n  * @description Shown in a table when there are too many results to show directly. The user can\n  * click this button to show more results. This will result in the UI showing X more results before\n  * the current position.\n  * @example {5} PH1\n  */\n  showDBefore: 'Show {PH1} before',\n  /**\n  * @description Shown in a table when there are too many results to show directly. The user can\n  * click this button to show more results. This will result in the UI showing X more results after\n  * the current position.\n  * @example {5} PH1\n  */\n  showDAfter: 'Show {PH1} after',\n  /**\n  *@description In a data grid, for a list of items with omitted items, display all omitted items\n  *@example {50} PH1\n  */\n  showAllD: 'Show all {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/data_grid/ShowMoreDataGridNode.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype ShowMoreDataGridNodeCallback = (arg0: number, arg1: number) => Promise<void>;\nexport class ShowMoreDataGridNode extends DataGridNode<ShowMoreDataGridNode> {\n  private readonly callback: ShowMoreDataGridNodeCallback;\n  private startPosition: number;\n  private endPosition: number;\n  private readonly chunkSize: number;\n  showNext: HTMLButtonElement;\n  showAll: HTMLButtonElement;\n  showLast: HTMLButtonElement;\n  selectable: boolean;\n  private hasCells?: boolean;\n\n  constructor(callback: ShowMoreDataGridNodeCallback, startPosition: number, endPosition: number, chunkSize: number) {\n    super({summaryRow: true}, false);\n    this.callback = callback;\n    this.startPosition = startPosition;\n    this.endPosition = endPosition;\n    this.chunkSize = chunkSize;\n\n    this.showNext = document.createElement('button');\n    this.showNext.classList.add('text-button');\n    this.showNext.type = 'button';\n    this.showNext.addEventListener('click', this.showNextChunk.bind(this), false);\n    this.showNext.textContent = i18nString(UIStrings.showDBefore, {PH1: this.chunkSize});\n\n    this.showAll = document.createElement('button');\n    this.showAll.classList.add('text-button');\n    this.showAll.type = 'button';\n    this.showAll.addEventListener('click', this.showAllInternal.bind(this), false);\n\n    this.showLast = document.createElement('button');\n    this.showLast.classList.add('text-button');\n    this.showLast.type = 'button';\n    this.showLast.addEventListener('click', this.showLastChunk.bind(this), false);\n    this.showLast.textContent = i18nString(UIStrings.showDAfter, {PH1: this.chunkSize});\n\n    this.updateLabels();\n    this.selectable = false;\n  }\n\n  private showNextChunk(): void {\n    void this.callback(this.startPosition, this.startPosition + this.chunkSize);\n  }\n\n  private showAllInternal(): void {\n    void this.callback(this.startPosition, this.endPosition);\n  }\n\n  private showLastChunk(): void {\n    void this.callback(this.endPosition - this.chunkSize, this.endPosition);\n  }\n\n  private updateLabels(): void {\n    const totalSize = this.endPosition - this.startPosition;\n    if (totalSize > this.chunkSize) {\n      this.showNext.classList.remove('hidden');\n      this.showLast.classList.remove('hidden');\n    } else {\n      this.showNext.classList.add('hidden');\n      this.showLast.classList.add('hidden');\n    }\n    this.showAll.textContent = i18nString(UIStrings.showAllD, {PH1: totalSize});\n  }\n\n  createCells(element: Element): void {\n    this.hasCells = false;\n    super.createCells(element);\n  }\n\n  createCell(columnIdentifier: string): HTMLElement {\n    const cell = this.createTD(columnIdentifier);\n    cell.classList.add('show-more');\n    if (!this.hasCells) {\n      this.hasCells = true;\n      if (this.depth && this.dataGrid) {\n        cell.style.setProperty('padding-left', (this.depth * this.dataGrid.indentWidth) + 'px');\n      }\n      cell.appendChild(this.showNext);\n      cell.appendChild(this.showAll);\n      cell.appendChild(this.showLast);\n    }\n    return cell;\n  }\n\n  setStartPosition(from: number): void {\n    this.startPosition = from;\n    this.updateLabels();\n  }\n\n  setEndPosition(to: number): void {\n    this.endPosition = to;\n    this.updateLabels();\n  }\n\n  nodeSelfHeight(): number {\n    return 40;\n  }\n\n  dispose(): void {\n  }\n}\n"],
  "mappings": "AA8BA;AAEA;AAEA,MAAM,YAAY;AAAA,EAOhB,aAAa;AAAA,EAOb,YAAY;AAAA,EAKZ,UAAU;AAAA;AAEZ,MAAM,OAAO,KAAK,KAAK,kBAAkB,0DAA0D;AACnG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAGzD,0CAAmC,aAAmC;AAAA,EAC1D;AAAA,EACT;AAAA,EACA;AAAA,EACS;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACQ;AAAA,EAER,YAAY,UAAwC,eAAuB,aAAqB,WAAmB;AACjH,UAAM,EAAC,YAAY,QAAO;AAC1B,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,cAAc;AACnB,SAAK,YAAY;AAEjB,SAAK,WAAW,SAAS,cAAc;AACvC,SAAK,SAAS,UAAU,IAAI;AAC5B,SAAK,SAAS,OAAO;AACrB,SAAK,SAAS,iBAAiB,SAAS,KAAK,cAAc,KAAK,OAAO;AACvE,SAAK,SAAS,cAAc,WAAW,UAAU,aAAa,EAAC,KAAK,KAAK;AAEzE,SAAK,UAAU,SAAS,cAAc;AACtC,SAAK,QAAQ,UAAU,IAAI;AAC3B,SAAK,QAAQ,OAAO;AACpB,SAAK,QAAQ,iBAAiB,SAAS,KAAK,gBAAgB,KAAK,OAAO;AAExE,SAAK,WAAW,SAAS,cAAc;AACvC,SAAK,SAAS,UAAU,IAAI;AAC5B,SAAK,SAAS,OAAO;AACrB,SAAK,SAAS,iBAAiB,SAAS,KAAK,cAAc,KAAK,OAAO;AACvE,SAAK,SAAS,cAAc,WAAW,UAAU,YAAY,EAAC,KAAK,KAAK;AAExE,SAAK;AACL,SAAK,aAAa;AAAA;AAAA,EAGZ,gBAAsB;AAC5B,SAAK,KAAK,SAAS,KAAK,eAAe,KAAK,gBAAgB,KAAK;AAAA;AAAA,EAG3D,kBAAwB;AAC9B,SAAK,KAAK,SAAS,KAAK,eAAe,KAAK;AAAA;AAAA,EAGtC,gBAAsB;AAC5B,SAAK,KAAK,SAAS,KAAK,cAAc,KAAK,WAAW,KAAK;AAAA;AAAA,EAGrD,eAAqB;AAC3B,UAAM,YAAY,KAAK,cAAc,KAAK;AAC1C,QAAI,YAAY,KAAK,WAAW;AAC9B,WAAK,SAAS,UAAU,OAAO;AAC/B,WAAK,SAAS,UAAU,OAAO;AAAA,WAC1B;AACL,WAAK,SAAS,UAAU,IAAI;AAC5B,WAAK,SAAS,UAAU,IAAI;AAAA;AAE9B,SAAK,QAAQ,cAAc,WAAW,UAAU,UAAU,EAAC,KAAK;AAAA;AAAA,EAGlE,YAAY,SAAwB;AAClC,SAAK,WAAW;AAChB,UAAM,YAAY;AAAA;AAAA,EAGpB,WAAW,kBAAuC;AAChD,UAAM,OAAO,KAAK,SAAS;AAC3B,SAAK,UAAU,IAAI;AACnB,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW;AAChB,UAAI,KAAK,SAAS,KAAK,UAAU;AAC/B,aAAK,MAAM,YAAY,gBAAiB,KAAK,QAAQ,KAAK,SAAS,cAAe;AAAA;AAEpF,WAAK,YAAY,KAAK;AACtB,WAAK,YAAY,KAAK;AACtB,WAAK,YAAY,KAAK;AAAA;AAExB,WAAO;AAAA;AAAA,EAGT,iBAAiB,MAAoB;AACnC,SAAK,gBAAgB;AACrB,SAAK;AAAA;AAAA,EAGP,eAAe,IAAkB;AAC/B,SAAK,cAAc;AACnB,SAAK;AAAA;AAAA,EAGP,iBAAyB;AACvB,WAAO;AAAA;AAAA,EAGT,UAAgB;AAAA;AAAA;",
  "names": []
}
