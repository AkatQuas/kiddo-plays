{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/legacy/components/perf_ui/FilmStripView.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport type * as SDK from '../../../../core/sdk/sdk.js';\nimport * as UI from '../../legacy.js';\n\nimport filmStripViewStyles from './filmStripView.css.legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Element title in Film Strip View of the Performance panel\n  */\n  doubleclickToZoomImageClickTo: 'Doubleclick to zoom image. Click to view preceding requests.',\n  /**\n  *@description Aria label for captured screenshots in network panel.\n  *@example {3ms} PH1\n  */\n  screenshotForSSelectToView: 'Screenshot for {PH1} - select to view preceding requests.',\n  /**\n  *@description Text for one or a group of screenshots\n  */\n  screenshot: 'Screenshot',\n  /**\n  *@description Prev button title in Film Strip View of the Performance panel\n  */\n  previousFrame: 'Previous frame',\n  /**\n  *@description Next button title in Film Strip View of the Performance panel\n  */\n  nextFrame: 'Next frame',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/perf_ui/FilmStripView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FilmStripView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.HBox>(UI.Widget.HBox) {\n  private statusLabel: HTMLElement;\n  private zeroTime!: number;\n  private spanTime!: number;\n  private model!: SDK.FilmStripModel.FilmStripModel;\n  private mode?: string;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS(filmStripViewStyles);\n    this.contentElement.classList.add('film-strip-view');\n    this.statusLabel = this.contentElement.createChild('div', 'label');\n    this.reset();\n    this.setMode(Modes.TimeBased);\n  }\n\n  static setImageData(imageElement: HTMLImageElement, data: string|null): void {\n    if (data) {\n      imageElement.src = 'data:image/jpg;base64,' + data;\n    }\n  }\n\n  setMode(mode: string): void {\n    this.mode = mode;\n    this.contentElement.classList.toggle('time-based', mode === Modes.TimeBased);\n    this.update();\n  }\n\n  setModel(filmStripModel: SDK.FilmStripModel.FilmStripModel, zeroTime: number, spanTime: number): void {\n    this.model = filmStripModel;\n    this.zeroTime = zeroTime;\n    this.spanTime = spanTime;\n    const frames = filmStripModel.frames();\n    if (!frames.length) {\n      this.reset();\n      return;\n    }\n    this.update();\n  }\n\n  createFrameElement(frame: SDK.FilmStripModel.Frame): Promise<Element> {\n    const time = frame.timestamp;\n    const frameTime = i18n.TimeUtilities.millisToString(time - this.zeroTime);\n    const element = document.createElement('div');\n    element.classList.add('frame');\n    UI.Tooltip.Tooltip.install(element, i18nString(UIStrings.doubleclickToZoomImageClickTo));\n    element.createChild('div', 'time').textContent = frameTime;\n    element.tabIndex = 0;\n    element.setAttribute('aria-label', i18nString(UIStrings.screenshotForSSelectToView, {PH1: frameTime}));\n    UI.ARIAUtils.markAsButton(element);\n    const imageElement = (element.createChild('div', 'thumbnail').createChild('img') as HTMLImageElement);\n    imageElement.alt = i18nString(UIStrings.screenshot);\n    element.addEventListener('mousedown', this.onMouseEvent.bind(this, Events.FrameSelected, time), false);\n    element.addEventListener('mouseenter', this.onMouseEvent.bind(this, Events.FrameEnter, time), false);\n    element.addEventListener('mouseout', this.onMouseEvent.bind(this, Events.FrameExit, time), false);\n    element.addEventListener('dblclick', this.onDoubleClick.bind(this, frame), false);\n    element.addEventListener('focusin', this.onMouseEvent.bind(this, Events.FrameEnter, time), false);\n    element.addEventListener('focusout', this.onMouseEvent.bind(this, Events.FrameExit, time), false);\n    element.addEventListener('keydown', event => {\n      if (event.code === 'Enter' || event.code === 'Space') {\n        this.onMouseEvent(Events.FrameSelected, time);\n      }\n    });\n\n    return frame.imageDataPromise().then(FilmStripView.setImageData.bind(null, imageElement)).then(returnElement);\n    function returnElement(): Element {\n      return element;\n    }\n  }\n\n  frameByTime(time: number): SDK.FilmStripModel.Frame {\n    function comparator(time: number, frame: SDK.FilmStripModel.Frame): number {\n      return time - frame.timestamp;\n    }\n    // Using the first frame to fill the interval between recording start\n    // and a moment the frame is taken.\n    const frames = this.model.frames();\n    const index = Math.max(Platform.ArrayUtilities.upperBound(frames, time, comparator) - 1, 0);\n    return frames[index];\n  }\n\n  update(): void {\n    if (!this.model) {\n      return;\n    }\n    const frames = this.model.frames();\n    if (!frames.length) {\n      return;\n    }\n\n    if (this.mode === Modes.FrameBased) {\n      void Promise.all(frames.map(this.createFrameElement.bind(this))).then(appendElements.bind(this));\n      return;\n    }\n\n    const width = this.contentElement.clientWidth;\n    const scale = this.spanTime / width;\n    void this.createFrameElement(frames[0]).then(\n        continueWhenFrameImageLoaded.bind(this));  // Calculate frame width basing on the first frame.\n\n    function continueWhenFrameImageLoaded(this: FilmStripView, element0: Element): void {\n      const frameWidth = Math.ceil(UI.UIUtils.measurePreferredSize(element0, this.contentElement).width);\n      if (!frameWidth) {\n        return;\n      }\n\n      const promises = [];\n      for (let pos = frameWidth; pos < width; pos += frameWidth) {\n        const time = pos * scale + this.zeroTime;\n        promises.push(this.createFrameElement(this.frameByTime(time)).then(fixWidth));\n      }\n      void Promise.all(promises).then(appendElements.bind(this));\n      function fixWidth(element: Element): Element {\n        (element as HTMLElement).style.width = frameWidth + 'px';\n        return element;\n      }\n    }\n\n    function appendElements(this: FilmStripView, elements: Element[]): void {\n      this.contentElement.removeChildren();\n      for (let i = 0; i < elements.length; ++i) {\n        this.contentElement.appendChild(elements[i]);\n      }\n    }\n  }\n\n  onResize(): void {\n    if (this.mode === Modes.FrameBased) {\n      return;\n    }\n    this.update();\n  }\n\n  private onMouseEvent(eventName: string|symbol, timestamp: number): void {\n    // TODO(crbug.com/1228674): Use type-safe event dispatch and remove <any>.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.dispatchEventToListeners<any>(eventName, timestamp);\n  }\n\n  private onDoubleClick(filmStripFrame: SDK.FilmStripModel.Frame): void {\n    new Dialog(filmStripFrame, this.zeroTime);\n  }\n\n  reset(): void {\n    this.zeroTime = 0;\n    this.contentElement.removeChildren();\n    this.contentElement.appendChild(this.statusLabel);\n  }\n\n  setStatusText(text: string): void {\n    this.statusLabel.textContent = text;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  FrameSelected = 'FrameSelected',\n  FrameEnter = 'FrameEnter',\n  FrameExit = 'FrameExit',\n}\n\nexport type EventTypes = {\n  [Events.FrameSelected]: number,\n  [Events.FrameEnter]: number,\n  [Events.FrameExit]: number,\n};\n\nexport const Modes = {\n  TimeBased: 'TimeBased',\n  FrameBased: 'FrameBased',\n};\n\nexport class Dialog {\n  private fragment: UI.Fragment.Fragment;\n  private readonly widget: UI.XWidget.XWidget;\n  private frames: SDK.FilmStripModel.Frame[];\n  private index: number;\n  private zeroTime: number;\n  private dialog: UI.Dialog.Dialog|null;\n\n  constructor(filmStripFrame: SDK.FilmStripModel.Frame, zeroTime?: number) {\n    const prevButton = UI.UIUtils.createTextButton('\\u25C0', this.onPrevFrame.bind(this));\n    UI.Tooltip.Tooltip.install(prevButton, i18nString(UIStrings.previousFrame));\n    const nextButton = UI.UIUtils.createTextButton('\\u25B6', this.onNextFrame.bind(this));\n    UI.Tooltip.Tooltip.install(nextButton, i18nString(UIStrings.nextFrame));\n\n    this.fragment = UI.Fragment.Fragment.build`\n      <x-widget flex=none margin=12px>\n        <x-hbox overflow=auto border='1px solid #ddd'>\n          <img $='image' style=\"max-height: 80vh; max-width: 80vw;\"></img>\n        </x-hbox>\n        <x-hbox x-center justify-content=center margin-top=10px>\n          ${prevButton}\n          <x-hbox $='time' margin=8px></x-hbox>\n          ${nextButton}\n        </x-hbox>\n      </x-widget>\n    `;\n\n    this.widget = (this.fragment.element() as UI.XWidget.XWidget);\n    (this.widget as HTMLElement).tabIndex = 0;\n    this.widget.addEventListener('keydown', this.keyDown.bind(this), false);\n\n    this.frames = filmStripFrame.model().frames();\n    this.index = filmStripFrame.index;\n    this.zeroTime = zeroTime || filmStripFrame.model().zeroTime();\n    this.dialog = null;\n    void this.render();\n  }\n\n  private resize(): void {\n    if (!this.dialog) {\n      this.dialog = new UI.Dialog.Dialog();\n      this.dialog.contentElement.appendChild(this.widget);\n      this.dialog.setDefaultFocusedElement(this.widget);\n      // Dialog can take an undefined `where` param for show(), however its superclass (GlassPane)\n      // requires a Document. TypeScript is unhappy that show() is not given a parameter here,\n      // however, so marking it as an ignore.\n      // @ts-ignore See above.\n      this.dialog.show();\n    }\n    this.dialog.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n  }\n\n  private keyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    switch (keyboardEvent.key) {\n      case 'ArrowLeft':\n        if (Host.Platform.isMac() && keyboardEvent.metaKey) {\n          this.onFirstFrame();\n        } else {\n          this.onPrevFrame();\n        }\n        break;\n\n      case 'ArrowRight':\n        if (Host.Platform.isMac() && keyboardEvent.metaKey) {\n          this.onLastFrame();\n        } else {\n          this.onNextFrame();\n        }\n        break;\n\n      case 'Home':\n        this.onFirstFrame();\n        break;\n\n      case 'End':\n        this.onLastFrame();\n        break;\n    }\n  }\n\n  private onPrevFrame(): void {\n    if (this.index > 0) {\n      --this.index;\n    }\n    void this.render();\n  }\n\n  private onNextFrame(): void {\n    if (this.index < this.frames.length - 1) {\n      ++this.index;\n    }\n    void this.render();\n  }\n\n  private onFirstFrame(): void {\n    this.index = 0;\n    void this.render();\n  }\n\n  private onLastFrame(): void {\n    this.index = this.frames.length - 1;\n    void this.render();\n  }\n\n  private render(): Promise<void> {\n    const frame = this.frames[this.index];\n    this.fragment.$('time').textContent = i18n.TimeUtilities.millisToString(frame.timestamp - this.zeroTime);\n    return frame.imageDataPromise()\n        .then(imageData => {\n          const image = (this.fragment.$('image') as HTMLImageElement);\n          return FilmStripView.setImageData(image, imageData);\n        })\n        .then(this.resize.bind(this));\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
