{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\nimport linearMemoryValueInterpreterStyles from './linearMemoryValueInterpreter.css.js';\n\nimport {ValueInterpreterDisplay} from './ValueInterpreterDisplay.js';\nimport {ValueInterpreterSettings} from './ValueInterpreterSettings.js';\n\nimport type {ValueDisplayData} from './ValueInterpreterDisplay.js';\nimport type {ValueType, ValueTypeMode} from './ValueInterpreterDisplayUtils.js';\nimport {Endianness} from './ValueInterpreterDisplayUtils.js';\nimport type {TypeToggleEvent, ValueInterpreterSettingsData} from './ValueInterpreterSettings.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\n\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over the gear button to open and close settings in the Linear Memory Inspector. These settings\n  *             allow the user to change the value type to view, such as 32-bit Integer, or 32-bit Float.\n  */\n  toggleValueTypeSettings: 'Toggle value type settings',\n  /**\n  *@description Tooltip text that appears when hovering over the 'Little Endian' or 'Big Endian' setting in the Linear Memory Inspector.\n  */\n  changeEndianness: 'Change `Endianness`',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport class EndiannessChangedEvent extends Event {\n  static readonly eventName = 'endiannesschanged';\n  data: Endianness;\n\n  constructor(endianness: Endianness) {\n    super(EndiannessChangedEvent.eventName);\n    this.data = endianness;\n  }\n}\n\nexport class ValueTypeToggledEvent extends Event {\n  static readonly eventName = 'valuetypetoggled';\n  data: {type: ValueType, checked: boolean};\n\n  constructor(type: ValueType, checked: boolean) {\n    super(ValueTypeToggledEvent.eventName);\n    this.data = {type, checked};\n  }\n}\n\nexport interface LinearMemoryValueInterpreterData {\n  value: ArrayBuffer;\n  valueTypes: Set<ValueType>;\n  endianness: Endianness;\n  valueTypeModes?: Map<ValueType, ValueTypeMode>;\n  memoryLength: number;\n}\n\nexport class LinearMemoryValueInterpreter extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-linear-memory-inspector-interpreter`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #endianness = Endianness.Little;\n  #buffer = new ArrayBuffer(0);\n  #valueTypes: Set<ValueType> = new Set();\n  #valueTypeModeConfig: Map<ValueType, ValueTypeMode> = new Map();\n  #memoryLength = 0;\n  #showSettings = false;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [linearMemoryValueInterpreterStyles];\n  }\n\n  set data(data: LinearMemoryValueInterpreterData) {\n    this.#endianness = data.endianness;\n    this.#buffer = data.value;\n    this.#valueTypes = data.valueTypes;\n    this.#valueTypeModeConfig = data.valueTypeModes || new Map();\n    this.#memoryLength = data.memoryLength;\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"value-interpreter\">\n        <div class=\"settings-toolbar\">\n          ${this.#renderEndiannessSetting()}\n          <button data-settings=\"true\" class=\"settings-toolbar-button ${this.#showSettings ? 'active' : ''}\" title=${i18nString(UIStrings.toggleValueTypeSettings)} @click=${this.#onSettingsToggle}>\n            <${IconButton.Icon.Icon.litTagName}\n              .data=${{ iconName: 'settings_14x14_icon', color: 'var(--color-text-secondary)', width: '14px' } as IconButton.Icon.IconWithName}>\n            </${IconButton.Icon.Icon.litTagName}>\n          </button>\n        </div>\n        <span class=\"divider\"></span>\n        <div>\n          ${this.#showSettings ?\n            html`\n              <${ValueInterpreterSettings.litTagName}\n                .data=${{ valueTypes: this.#valueTypes } as ValueInterpreterSettingsData}\n                @typetoggle=${this.#onTypeToggle}>\n              </${ValueInterpreterSettings.litTagName}>` :\n            html`\n              <${ValueInterpreterDisplay.litTagName}\n                .data=${{\n                  buffer: this.#buffer,\n                  valueTypes: this.#valueTypes,\n                  endianness: this.#endianness,\n                  valueTypeModes: this.#valueTypeModeConfig,\n                  memoryLength: this.#memoryLength,\n                } as ValueDisplayData}>\n              </${ValueInterpreterDisplay.litTagName}>`}\n        </div>\n      </div>\n    `,\n      this.#shadow, { host: this },\n    );\n    // clang-format on\n  }\n\n  #onEndiannessChange(event: Event): void {\n    event.preventDefault();\n    const select = event.target as HTMLInputElement;\n    const endianness = select.value as Endianness;\n    this.dispatchEvent(new EndiannessChangedEvent(endianness));\n  }\n\n  #renderEndiannessSetting(): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.#onEndiannessChange.bind(this);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n    <label data-endianness-setting=\"true\" title=${i18nString(UIStrings.changeEndianness)}>\n      <select class=\"chrome-select\"\n        style=\"border: none; background-color: transparent; cursor: pointer;\"\n        data-endianness=\"true\" @change=${onEnumSettingChange}>\n        ${[Endianness.Little, Endianness.Big].map(endianness => {\n            return html`<option value=${endianness} .selected=${this.#endianness === endianness}>${\n                i18n.i18n.lockedString(endianness)}</option>`;\n        })}\n      </select>\n    </label>\n    `;\n    // clang-format on\n  }\n\n  #onSettingsToggle(): void {\n    this.#showSettings = !this.#showSettings;\n    this.#render();\n  }\n\n  #onTypeToggle(e: TypeToggleEvent): void {\n    this.dispatchEvent(new ValueTypeToggledEvent(e.data.type, e.data.checked));\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-linear-memory-inspector-interpreter', LinearMemoryValueInterpreter);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-interpreter': LinearMemoryValueInterpreter;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAGA;AAEA,MAAM,YAAY;AAAA,EAKhB,yBAAyB;AAAA,EAIzB,kBAAkB;AAAA;AAEpB,MAAM,OACF,KAAK,KAAK,kBAAkB,yEAAyE;AACzG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,MAAM,EAAC,QAAQ,SAAQ;AAEhB,4CAAqC,MAAM;AAAA,SAChC,YAAY;AAAA,EAC5B;AAAA,EAEA,YAAY,YAAwB;AAClC,UAAM,uBAAuB;AAC7B,SAAK,OAAO;AAAA;AAAA;AAIT,2CAAoC,MAAM;AAAA,SAC/B,YAAY;AAAA,EAC5B;AAAA,EAEA,YAAY,MAAiB,SAAkB;AAC7C,UAAM,sBAAsB;AAC5B,SAAK,OAAO,EAAC,MAAM;AAAA;AAAA;AAYhB,kDAA2C,YAAY;AAAA,SAC5C,aAAa,QAAQ;AAAA,YAElB,KAAK,aAAa,EAAC,MAAM;AAAA,gBAC9B,WAAW;AAAA,YACf,IAAI,YAAY;AAAA,gBACI,oBAAI;AAAA,yBACoB,oBAAI;AAAA,kBAC1C;AAAA,kBACA;AAAA,EAEhB,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAwC;AAC/C,uBAAmB,KAAK;AACxB,mBAAe,KAAK;AACpB,uBAAmB,KAAK;AACxB,gCAA4B,KAAK,kBAAkB,oBAAI;AACvD,yBAAqB,KAAK;AAC1B;AAAA;AAAA,YAGc;AAGd,WAAO;AAAA;AAAA;AAAA,YAGC;AAAA,wEAC4D,qBAAqB,WAAW,aAAa,WAAW,UAAU,mCAAmC;AAAA,eAC9J,WAAW,KAAK,KAAK;AAAA,sBACd,EAAE,UAAU,uBAAuB,OAAO,+BAA+B,OAAO;AAAA,gBACtF,WAAW,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKzB,qBACA;AAAA,iBACK,yBAAyB;AAAA,wBAClB,EAAE,YAAY;AAAA,8BACR;AAAA,kBACZ,yBAAyB,gBAC/B;AAAA,iBACK,wBAAwB;AAAA,wBACjB;AAAA,MACN,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA;AAAA,kBAEd,wBAAwB;AAAA;AAAA;AAAA,OAIpC,cAAc,EAAE,MAAM;AAAA;AAAA,sBAKN,OAAoB;AACtC,UAAM;AACN,UAAM,SAAS,MAAM;AACrB,UAAM,aAAa,OAAO;AAC1B,SAAK,cAAc,IAAI,uBAAuB;AAAA;AAAA,6BAGG;AACjD,UAAM,sBAAsB,yBAAyB,KAAK;AAG1D,WAAO;AAAA,kDACuC,WAAW,UAAU;AAAA;AAAA;AAAA,yCAG9B;AAAA,UAC/B,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,gBAAc;AACpD,aAAO,qBAAqB,wBAAwB,qBAAqB,cACrE,KAAK,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQX;AACxB,yBAAqB,CAAC;AACtB;AAAA;AAAA,gBAGY,GAA0B;AACtC,SAAK,cAAc,IAAI,sBAAsB,EAAE,KAAK,MAAM,EAAE,KAAK;AAAA;AAAA;AAIrE,iBAAiB,eAAe,gBAC5B,gDAAgD;",
  "names": []
}
