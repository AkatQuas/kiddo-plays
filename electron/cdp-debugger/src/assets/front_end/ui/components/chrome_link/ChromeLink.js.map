{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/chrome_link/ChromeLink.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\n\nimport chromeLinkStyles from './chromeLink.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-chrome-link': ChromeLink;\n  }\n}\n\n// Use this component to render links to 'chrome://...'-URLs\n// (for which regular <x-link>s do not work).\nexport class ChromeLink extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-chrome-link`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #href: string = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [chromeLinkStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set href(href: string) {\n    if (!href.startsWith('chrome://')) {\n      throw new Error('ChromeLink href needs to start with \\'chrome://\\'');\n    }\n    this.#href = href;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  // Navigating to a chrome:// link via a normal anchor doesn't work, so we \"navigate\"\n  // there using CDP.\n  openSettingsTab(event: Event): void {\n    if (event.type === 'click' || (event.type === 'keydown' && self.isEnterOrSpaceKey(event))) {\n      const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n      mainTarget && mainTarget.targetAgent().invoke_createTarget({url: this.#href});\n      event.consume(true);\n    }\n  }\n\n  #render(): void {\n    // clang-format off\n    LitHtml.render(\n      /* x-link doesn't work with custom click/keydown handlers */\n      /* eslint-disable rulesdir/ban_a_tags_in_lit_html */\n      LitHtml.html`\n        <a href=${this.#href} class=\"link\" target=\"_blank\"\n          @click=${this.openSettingsTab}\n          @keydown=${this.openSettingsTab}><slot></slot></a>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-chrome-link', ChromeLink);\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AAUO,gCAAyB,YAAY;AAAA,SAC1B,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,iBACpB,aAAa,KAAK;AAAA,UAC1B;AAAA,EAEhB,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AACnC,SAAK,iBAAiB,gBAAgB,eAAe,MAAM;AAAA;AAAA,MAGzD,KAAK,MAAc;AACrB,QAAI,CAAC,KAAK,WAAW,cAAc;AACjC,YAAM,IAAI,MAAM;AAAA;AAElB,iBAAa;AACb,SAAK,iBAAiB,gBAAgB,eAAe,MAAM;AAAA;AAAA,EAK7D,gBAAgB,OAAoB;AAClC,QAAI,MAAM,SAAS,WAAY,MAAM,SAAS,aAAa,KAAK,kBAAkB,QAAS;AACzF,YAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,oBAAc,WAAW,cAAc,oBAAoB,EAAC,KAAK;AACjE,YAAM,QAAQ;AAAA;AAAA;AAAA,YAIF;AAEd,YAAQ,OAGN,QAAQ;AAAA,kBACI;AAAA,mBACC,KAAK;AAAA,qBACH,KAAK;AAAA,SACjB,cAAc,EAAC,MAAM;AAAA;AAAA;AAK9B,iBAAiB,eAAe,gBAAgB,wBAAwB;",
  "names": []
}
