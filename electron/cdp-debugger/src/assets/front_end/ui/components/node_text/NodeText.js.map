{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/node_text/NodeText.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\n\nimport nodeTextStyles from './nodeText.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface NodeTextData {\n  nodeTitle: string;\n  nodeId?: string;\n  nodeClasses?: string[];\n}\n\nexport class NodeText extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-node-text`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #nodeTitle: string = '';\n  #nodeId?: string = '';\n  #nodeClasses?: string[] = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [nodeTextStyles];\n  }\n\n  set data(data: NodeTextData) {\n    this.#nodeTitle = data.nodeTitle;\n    this.#nodeId = data.nodeId;\n    this.#nodeClasses = data.nodeClasses;\n    this.#render();\n  }\n\n  #render(): void {\n    const hasId = Boolean(this.#nodeId);\n    const hasNodeClasses = Boolean(this.#nodeClasses && this.#nodeClasses.length > 0);\n\n    const parts = [\n      html`<span class=\"node-label-name\">${this.#nodeTitle}</span>`,\n    ];\n\n    if (this.#nodeId) {\n      const classes = LitHtml.Directives.classMap({\n        'node-label-id': true,\n        'node-multiple-descriptors': hasNodeClasses,\n      });\n      parts.push(html`<span class=${classes}>#${CSS.escape(this.#nodeId)}</span>`);\n    }\n\n    if (this.#nodeClasses && this.#nodeClasses.length > 0) {\n      const text = this.#nodeClasses.map(c => `.${CSS.escape(c)}`).join('');\n      const classes = LitHtml.Directives.classMap({\n        'node-label-class': true,\n        'node-multiple-descriptors': hasId,\n      });\n      parts.push(html`<span class=${classes}>${text}</span>`);\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${parts}\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-node-text', NodeText);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-node-text': NodeText;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAEA;AAEA,MAAM,EAAC,QAAQ,SAAQ;AAQhB,8BAAuB,YAAY;AAAA,SACxB,aAAa,QAAQ;AAAA,YAElB,KAAK,aAAa,EAAC,MAAM;AAAA,eACvB;AAAA,YACF;AAAA,iBACO;AAAA,EAE1B,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAoB;AAC3B,sBAAkB,KAAK;AACvB,mBAAe,KAAK;AACpB,wBAAoB,KAAK;AACzB;AAAA;AAAA,YAGc;AACd,UAAM,QAAQ,QAAQ;AACtB,UAAM,iBAAiB,QAAQ,qBAAqB,kBAAkB,SAAS;AAE/E,UAAM,QAAQ;AAAA,MACZ,qCAAqC;AAAA;AAGvC,QAAI,cAAc;AAChB,YAAM,UAAU,QAAQ,WAAW,SAAS;AAAA,QAC1C,iBAAiB;AAAA,QACjB,6BAA6B;AAAA;AAE/B,YAAM,KAAK,mBAAmB,YAAY,IAAI,OAAO;AAAA;AAGvD,QAAI,qBAAqB,kBAAkB,SAAS,GAAG;AACrD,YAAM,OAAO,kBAAkB,IAAI,OAAK,IAAI,IAAI,OAAO,MAAM,KAAK;AAClE,YAAM,UAAU,QAAQ,WAAW,SAAS;AAAA,QAC1C,oBAAoB;AAAA,QACpB,6BAA6B;AAAA;AAE/B,YAAM,KAAK,mBAAmB,WAAW;AAAA;AAK3C,WAAO;AAAA,QACH;AAAA,OACD,cAAc;AAAA,MACf,MAAM;AAAA;AAAA;AAAA;AAMZ,iBAAiB,eAAe,gBAAgB,sBAAsB;",
  "names": []
}
