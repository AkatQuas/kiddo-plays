{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/adorners/Adorner.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport adornerStyles from './adorner.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface AdornerData {\n  name: string;\n  content: HTMLElement;\n}\n\nexport class Adorner extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-adorner`;\n  name = '';\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #isToggle = false;\n  #ariaLabelDefault?: string;\n  #ariaLabelActive?: string;\n  #content?: HTMLElement;\n\n  set data(data: AdornerData) {\n    this.name = data.name;\n    data.content.slot = 'content';\n    this.#content?.remove();\n    this.append(data.content);\n    this.#content = data.content;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    if (!this.getAttribute('aria-label')) {\n      this.setAttribute('aria-label', this.name);\n    }\n    this.#shadow.adoptedStyleSheets = [adornerStyles];\n  }\n\n  isActive(): boolean {\n    return this.getAttribute('aria-pressed') === 'true';\n  }\n\n  /**\n   * Toggle the active state of the adorner. Optionally pass `true` to force-set\n   * an active state; pass `false` to force-set an inactive state.\n   */\n  toggle(forceActiveState?: boolean): void {\n    if (!this.#isToggle) {\n      return;\n    }\n    const shouldBecomeActive = forceActiveState === undefined ? !this.isActive() : forceActiveState;\n    this.setAttribute('aria-pressed', Boolean(shouldBecomeActive).toString());\n    this.setAttribute('aria-label', (shouldBecomeActive ? this.#ariaLabelActive : this.#ariaLabelDefault) || this.name);\n  }\n\n  show(): void {\n    this.classList.remove('hidden');\n  }\n\n  hide(): void {\n    this.classList.add('hidden');\n  }\n\n  /**\n   * Make adorner interactive by responding to click events with the provided action\n   * and simulating ARIA-capable toggle button behavior.\n   */\n  addInteraction(action: EventListener, options: {\n    ariaLabelDefault: Platform.UIString.LocalizedString,\n    ariaLabelActive: Platform.UIString.LocalizedString,\n    isToggle?: boolean,\n    shouldPropagateOnKeydown?: boolean,\n  }): void {\n    const {isToggle = false, shouldPropagateOnKeydown = false, ariaLabelDefault, ariaLabelActive} = options;\n\n    this.#isToggle = isToggle;\n    this.#ariaLabelDefault = ariaLabelDefault;\n    this.#ariaLabelActive = ariaLabelActive;\n    this.setAttribute('aria-label', ariaLabelDefault);\n\n    if (isToggle) {\n      this.addEventListener('click', () => {\n        this.toggle();\n      });\n      this.toggle(false /* initialize inactive state */);\n    }\n\n    this.addEventListener('click', action);\n\n    // Simulate an ARIA-capable toggle button\n    this.classList.add('clickable');\n    this.setAttribute('role', 'button');\n    this.tabIndex = 0;\n    this.addEventListener('keydown', event => {\n      if (event.code === 'Enter' || event.code === 'Space') {\n        this.click();\n        if (!shouldPropagateOnKeydown) {\n          event.stopPropagation();\n        }\n      }\n    });\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <slot name=\"content\"></slot>\n    `, this.#shadow, {\n      host: this,\n    });\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-adorner', Adorner);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-adorner': Adorner;\n  }\n}\n"],
  "mappings": "AAKA;AACA;AAEA;AAEA,MAAM,EAAC,QAAQ,SAAQ;AAOhB,6BAAsB,YAAY;AAAA,SACvB,aAAa,QAAQ;AAAA,EACrC,OAAO;AAAA,YAEY,KAAK,aAAa,EAAC,MAAM;AAAA,cAChC;AAAA;AAAA;AAAA;AAAA,MAKR,KAAK,MAAmB;AAC1B,SAAK,OAAO,KAAK;AACjB,SAAK,QAAQ,OAAO;AACpB,mBAAe;AACf,SAAK,OAAO,KAAK;AACjB,oBAAgB,KAAK;AACrB;AAAA;AAAA,EAGF,oBAA0B;AACxB,QAAI,CAAC,KAAK,aAAa,eAAe;AACpC,WAAK,aAAa,cAAc,KAAK;AAAA;AAEvC,iBAAa,qBAAqB,CAAC;AAAA;AAAA,EAGrC,WAAoB;AAClB,WAAO,KAAK,aAAa,oBAAoB;AAAA;AAAA,EAO/C,OAAO,kBAAkC;AACvC,QAAI,CAAC,gBAAgB;AACnB;AAAA;AAEF,UAAM,qBAAqB,qBAAqB,SAAY,CAAC,KAAK,aAAa;AAC/E,SAAK,aAAa,gBAAgB,QAAQ,oBAAoB;AAC9D,SAAK,aAAa,cAAe,sBAAqB,wBAAwB,2BAA2B,KAAK;AAAA;AAAA,EAGhH,OAAa;AACX,SAAK,UAAU,OAAO;AAAA;AAAA,EAGxB,OAAa;AACX,SAAK,UAAU,IAAI;AAAA;AAAA,EAOrB,eAAe,QAAuB,SAK7B;AACP,UAAM,EAAC,WAAW,OAAO,2BAA2B,OAAO,kBAAkB,oBAAmB;AAEhG,qBAAiB;AACjB,6BAAyB;AACzB,4BAAwB;AACxB,SAAK,aAAa,cAAc;AAEhC,QAAI,UAAU;AACZ,WAAK,iBAAiB,SAAS,MAAM;AACnC,aAAK;AAAA;AAEP,WAAK,OAAO;AAAA;AAGd,SAAK,iBAAiB,SAAS;AAG/B,SAAK,UAAU,IAAI;AACnB,SAAK,aAAa,QAAQ;AAC1B,SAAK,WAAW;AAChB,SAAK,iBAAiB,WAAW,WAAS;AACxC,UAAI,MAAM,SAAS,WAAW,MAAM,SAAS,SAAS;AACpD,aAAK;AACL,YAAI,CAAC,0BAA0B;AAC7B,gBAAM;AAAA;AAAA;AAAA;AAAA;AAAA,YAME;AAGd,WAAO;AAAA;AAAA,OAEJ,cAAc;AAAA,MACf,MAAM;AAAA;AAAA;AAAA;AAKZ,iBAAiB,eAAe,gBAAgB,oBAAoB;",
  "names": []
}
