{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/request_link_icon/RequestLinkIcon.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport type * as Logs from '../../../models/logs/logs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport requestLinkIconStyles from './requestLinkIcon.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show a request in the network panel\n   * @example {https://example.org/index.html} url\n   */\n  clickToShowRequestInTheNetwork: 'Click to open the network panel and show request for URL: {url}',\n  /**\n   * @description Title for an link to show a request that is unavailable because the request couldn't be resolved\n   */\n  requestUnavailableInTheNetwork: 'Request unavailable in the network panel, try reloading the inspected page',\n  /**\n   * @description Label for the shortened URL displayed in a link to show a request in the network panel\n   */\n  shortenedURL: 'Shortened URL',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/request_link_icon/RequestLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface RequestLinkIconData {\n  linkToPreflight?: boolean;\n  request?: SDK.NetworkRequest.NetworkRequest|null;\n  affectedRequest?: {requestId: Protocol.Network.RequestId, url?: string};\n  highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  requestResolver?: Logs.RequestResolver.RequestResolver;\n  displayURL?: boolean;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: Object|null, omitFocus?: boolean|undefined) => Promise<void>;\n}\n\nexport const extractShortPath = (path: Platform.DevToolsPath.UrlString): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class RequestLinkIcon extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-request-link-icon`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #linkToPreflight?: boolean;\n  // The value `null` indicates that the request is not available,\n  // `undefined` that it is still being resolved.\n  #request?: SDK.NetworkRequest.NetworkRequest|null;\n  #highlightHeader?: {section: NetworkForward.UIRequestLocation.UIHeaderSection, name: string};\n  #requestResolver?: Logs.RequestResolver.RequestResolver;\n  #displayURL: boolean = false;\n  #networkTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n  #affectedRequest?: {requestId: Protocol.Network.RequestId, url?: string};\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n  #requestResolvedPromise = Promise.resolve<void>(undefined);\n\n  set data(data: RequestLinkIconData) {\n    this.#linkToPreflight = data.linkToPreflight;\n    this.#request = data.request;\n    if (data.affectedRequest) {\n      this.#affectedRequest = {...data.affectedRequest};\n    }\n    this.#highlightHeader = data.highlightHeader;\n    this.#networkTab = data.networkTab;\n    this.#requestResolver = data.requestResolver;\n    this.#displayURL = data.displayURL ?? false;\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    if (!this.#request && data.affectedRequest) {\n      this.#requestResolvedPromise = this.#resolveRequest(data.affectedRequest.requestId);\n    }\n    void this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestLinkIconStyles];\n  }\n\n  #resolveRequest(requestId: Protocol.Network.RequestId): Promise<void> {\n    if (!this.#requestResolver) {\n      throw new Error('A `RequestResolver` must be provided if an `affectedRequest` is provided.');\n    }\n    return this.#requestResolver.waitFor(requestId)\n        .then(request => {\n          this.#request = request;\n        })\n        .catch(() => {\n          this.#request = null;\n        });\n  }\n\n  get data(): RequestLinkIconData {\n    return {\n      linkToPreflight: this.#linkToPreflight,\n      request: this.#request,\n      affectedRequest: this.#affectedRequest,\n      highlightHeader: this.#highlightHeader,\n      networkTab: this.#networkTab,\n      requestResolver: this.#requestResolver,\n      displayURL: this.#displayURL,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  #iconColor(): string {\n    if (!this.#request) {\n      return '--issue-color-yellow';\n    }\n    return '--color-link';\n  }\n\n  iconData(): IconButton.Icon.IconData {\n    return {\n      iconName: 'network_panel_icon',\n      color: `var(${this.#iconColor()})`,\n      width: '16px',\n      height: '16px',\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    const linkedRequest = this.#linkToPreflight ? this.#request?.preflightRequest() : this.#request;\n    if (!linkedRequest) {\n      return;\n    }\n    if (this.#highlightHeader) {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.header(\n          linkedRequest, this.#highlightHeader.section, this.#highlightHeader.name);\n      void this.#reveal(requestLocation);\n    } else {\n      const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n          linkedRequest, this.#networkTab ?? NetworkForward.UIRequestLocation.UIRequestTabs.Headers);\n      void this.#reveal(requestLocation);\n    }\n    this.#additionalOnClickAction?.();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#request) {\n      return i18nString(UIStrings.clickToShowRequestInTheNetwork, {url: this.#request.url()});\n    }\n    return i18nString(UIStrings.requestUnavailableInTheNetwork);\n  }\n\n  #getUrlForDisplaying(): Platform.DevToolsPath.UrlString|undefined {\n    if (!this.#request) {\n      return this.#affectedRequest?.url as Platform.DevToolsPath.UrlString;\n    }\n    return this.#request.url();\n  }\n\n  #maybeRenderURL(): LitHtml.LitTemplate {\n    if (!this.#displayURL) {\n      return LitHtml.nothing;\n    }\n    const url = this.#getUrlForDisplaying();\n    if (!url) {\n      return LitHtml.nothing;\n    }\n    const filename = extractShortPath(url);\n    return LitHtml.html`<span aria-label=${i18nString(UIStrings.shortenedURL)} title=${url}>${filename}</span>`;\n  }\n\n  #render(): Promise<void> {\n    return coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        ${LitHtml.Directives.until(this.#requestResolvedPromise.then(() => this.#renderComponent()), this.#renderComponent())}\n      `,\n      this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #renderComponent(): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <span class=${LitHtml.Directives.classMap({'link': Boolean(this.#request)})}\n            tabindex=\"0\"\n            @click=${this.handleClick}>\n        <${IconButton.Icon.Icon.litTagName} .data=${this.iconData() as IconButton.Icon.IconData}\n          title=${this.#getTooltip()}></${IconButton.Icon.Icon.litTagName}>\n        ${this.#maybeRenderURL()}\n      </span>`;\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-request-link-icon', RequestLinkIcon);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-request-link-icon': RequestLinkIcon;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
