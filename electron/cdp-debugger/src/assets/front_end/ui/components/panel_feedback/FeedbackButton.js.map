{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/panel_feedback/FeedbackButton.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as Buttons from '../buttons/buttons.js';\n\nconst UIStrings = {\n  /**\n   * @description The title of the button that leads to the feedback form.\n   */\n  feedback: 'Feedback',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('ui/components/panel_feedback/FeedbackButton.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst feedbackIconUrl = new URL('../../../Images/feedback_button_icon.svg', import.meta.url).toString();\n\nexport interface FeedbackButtonData {\n  feedbackUrl: Platform.DevToolsPath.UrlString;\n}\nexport class FeedbackButton extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-feedback-button`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n\n  #props: FeedbackButtonData = {\n    feedbackUrl: Platform.DevToolsPath.EmptyUrlString,\n  };\n\n  set data(data: FeedbackButtonData) {\n    this.#props = data;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #onFeedbackClick(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.#props.feedbackUrl);\n  }\n\n  #render(): void {\n    if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n      throw new Error('FeedbackButton render was not scheduled');\n    }\n\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <${Buttons.Button.Button.litTagName}\n          @click=${this.#onFeedbackClick}\n          .iconUrl=${feedbackIconUrl}\n          .variant=${Buttons.Button.Variant.SECONDARY}\n      >${i18nString(UIStrings.feedback)}</${Buttons.Button.Button.litTagName}>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-feedback-button', FeedbackButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-feedback-button': FeedbackButton;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,UAAU;AAAA;AAGZ,MAAM,OAAO,KAAK,KAAK,kBAAkB,kDAAkD;AAC3F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,MAAM,kBAAkB,IAAI,IAAI,4CAA4C,YAAY,KAAK;AAKtF,oCAA6B,YAAY;AAAA,SAC9B,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,iBACpB,aAAa,KAAK;AAAA,WAEb;AAAA,IAC3B,aAAa,SAAS,aAAa;AAAA;AAAA,MAGjC,KAAK,MAA0B;AACjC,kBAAc;AACd,SAAK,iBAAiB,gBAAgB,eAAe,MAAM;AAAA;AAAA,qBAGpC;AACvB,SAAK,sBAAsB,8BAA8B,aAAa,YAAY;AAAA;AAAA,YAGpE;AACd,QAAI,CAAC,iBAAiB,gBAAgB,kBAAkB,OAAO;AAC7D,YAAM,IAAI,MAAM;AAAA;AAIlB,YAAQ,OAAO,QAAQ;AAAA,SAClB,QAAQ,OAAO,OAAO;AAAA,mBACZ;AAAA,qBACE;AAAA,qBACA,QAAQ,OAAO,QAAQ;AAAA,SACnC,WAAW,UAAU,cAAc,QAAQ,OAAO,OAAO;AAAA,SACzD,cAAc,EAAC,MAAM;AAAA;AAAA;AAK9B,iBAAiB,eAAe,gBAAgB,4BAA4B;",
  "names": []
}
