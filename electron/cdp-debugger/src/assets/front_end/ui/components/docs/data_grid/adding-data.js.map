{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/components/docs/data_grid/adding-data.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as DataGrid from '../../data_grid/data_grid.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\n\nconst component = new DataGrid.DataGrid.DataGrid();\n\ncomponent.data = {\n  columns: [\n    {id: 'key', title: 'Key', widthWeighting: 1, visible: true, hideable: false},\n    {id: 'value', title: 'Value', widthWeighting: 1, visible: true, hideable: false},\n  ],\n  rows: Array.from(\n      {length: 10},\n      () => {\n        return getRandomRow();\n      }),\n  activeSort: null,\n};\n\ndocument.getElementById('container')?.appendChild(component);\n\nfunction getRandomRow() {\n  const key = Math.floor(Math.random() * 10);\n  const value = Math.floor(Math.random() * 10);\n  const randomDataRow = {\n    cells: [\n      {columnId: 'key', value: `Key: ${key}`, title: `Key: ${key}`},\n      {columnId: 'value', value: `Value: ${value}`, title: `Value: ${value}`},\n    ],\n  };\n  return randomDataRow;\n}\n\n/**\n * Set so we can call this from an interaction test to emulate the user\n * interacting with the data grid whilst something is populating the grid with\n * new data - e.g. like the protocol monitor.\n */\n// @ts-expect-error\nwindow.addNewRow = function() {\n  addNewRow();\n};\n\nfunction addNewRow() {\n  const newRow = getRandomRow();\n\n  component.data = {\n    ...component.data,\n    rows: [...component.data.rows, newRow],\n  };\n}\n\ndocument.querySelector('#add')?.addEventListener('click', (event: Event) => {\n  event.preventDefault();\n  addNewRow();\n});\n"],
  "mappings": "AAIA;AACA;AAEA,MAAM,iBAAiB,qBAAqB;AAE5C,MAAM,YAAY,IAAI,SAAS,SAAS;AAExC,UAAU,OAAO;AAAA,EACf,SAAS;AAAA,IACP,EAAC,IAAI,OAAO,OAAO,OAAO,gBAAgB,GAAG,SAAS,MAAM,UAAU;AAAA,IACtE,EAAC,IAAI,SAAS,OAAO,SAAS,gBAAgB,GAAG,SAAS,MAAM,UAAU;AAAA;AAAA,EAE5E,MAAM,MAAM,KACR,EAAC,QAAQ,MACT,MAAM;AACJ,WAAO;AAAA;AAAA,EAEb,YAAY;AAAA;AAGd,SAAS,eAAe,cAAc,YAAY;AAElD,wBAAwB;AACtB,QAAM,MAAM,KAAK,MAAM,KAAK,WAAW;AACvC,QAAM,QAAQ,KAAK,MAAM,KAAK,WAAW;AACzC,QAAM,gBAAgB;AAAA,IACpB,OAAO;AAAA,MACL,EAAC,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ;AAAA,MACvD,EAAC,UAAU,SAAS,OAAO,UAAU,SAAS,OAAO,UAAU;AAAA;AAAA;AAGnE,SAAO;AAAA;AAST,OAAO,YAAY,WAAW;AAC5B;AAAA;AAGF,qBAAqB;AACnB,QAAM,SAAS;AAEf,YAAU,OAAO;AAAA,OACZ,UAAU;AAAA,IACb,MAAM,CAAC,GAAG,UAAU,KAAK,MAAM;AAAA;AAAA;AAInC,SAAS,cAAc,SAAS,iBAAiB,SAAS,CAAC,UAAiB;AAC1E,QAAM;AACN;AAAA;",
  "names": []
}
