{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/components/docs/legacy_color_invert/basic.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\nawait FrontendHelpers.initializeGlobalVars();\n\nconst form = document.querySelector<HTMLFormElement>('form');\nif (!form) {\n  throw new Error('could not find form');\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const property = form.querySelector<HTMLInputElement>('#css-property')?.value;\n  const value = form.querySelector<HTMLInputElement>('#css-value')?.value;\n  if (!property || !value) {\n    return;\n  }\n  const output = legacyInvertVariableForDarkMode(property, value);\n  const outputElem = document.querySelector<HTMLElement>('#output');\n  if (outputElem) {\n    outputElem.innerText = output;\n  }\n});\n\n/**\n * This code is largely copy and pasted from the legacy theme_support_impl\n * around color patching. This is because we are working towards removing the\n * legacy color patching, but still may need to be able to generate legacy dark\n * mode values for light colors during the migration. This doc exists for that\n * reason.\n */\n\ntype ColorUsage = 'unknown'|'foreground'|'background';\n\nfunction patchHSLA(hsla: number[], colorUsage: ColorUsage): void {\n  const hue = hsla[0];\n  const sat = hsla[1];\n  let lit: number = hsla[2];\n  const alpha = hsla[3];\n\n  const minCap = colorUsage === 'background' ? 0.14 : 0;\n  const maxCap = colorUsage === 'foreground' ? 0.9 : 1;\n  lit = 1 - lit;\n  if (lit < minCap * 2) {\n    lit = minCap + lit / 2;\n  } else if (lit > 2 * maxCap - 1) {\n    lit = maxCap - 1 / 2 + lit / 2;\n  }\n  hsla[0] = Platform.NumberUtilities.clamp(hue, 0, 1);\n  hsla[1] = Platform.NumberUtilities.clamp(sat, 0, 1);\n  hsla[2] = Platform.NumberUtilities.clamp(lit, 0, 1);\n  hsla[3] = Platform.NumberUtilities.clamp(alpha, 0, 1);\n}\n\nfunction patchColor(colorAsText: string, colorUsage: ColorUsage): string {\n  const color = Common.Color.Color.parse(colorAsText);\n  if (!color) {\n    return colorAsText;\n  }\n  const hsla = color.hsla();\n  patchHSLA(hsla, colorUsage);\n\n  const rgba: number[] = [];\n  Common.Color.Color.hsl2rgb(hsla, rgba);\n  const outColor = new Common.Color.Color(rgba, color.format());\n  let outText = outColor.asString(null);\n  if (!outText) {\n    outText = outColor.asString(outColor.hasAlpha() ? Common.Color.Format.RGBA : Common.Color.Format.RGB);\n  }\n  return outText || colorAsText;\n}\n\nfunction legacyInvertVariableForDarkMode(cssProperty: string, cssValue: string): string {\n  let colorUsage: ColorUsage = 'unknown';\n  if (cssProperty.indexOf('background') === 0 || cssProperty.indexOf('border') === 0) {\n    colorUsage = 'background';\n  }\n  if (cssProperty.indexOf('background') === -1) {\n    colorUsage = 'foreground';\n  }\n\n  const items = cssValue.replace(Common.Color.Regex, '\\0$1\\0').split('\\0');\n  const output = [];\n  for (const item of items) {\n    if (!item) {\n      continue;\n    }\n    const newColor = patchColor(item, colorUsage);\n    output.push(newColor);\n  }\n  return output.join(' ');\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAEA,MAAM,iBAAiB,qBAAqB;AAC5C,MAAM,gBAAgB;AAEtB,MAAM,OAAO,SAAS,cAA+B;AACrD,IAAI,CAAC,MAAM;AACT,QAAM,IAAI,MAAM;AAAA;AAGlB,KAAK,iBAAiB,UAAU,WAAS;AACvC,QAAM;AACN,QAAM,WAAW,KAAK,cAAgC,kBAAkB;AACxE,QAAM,QAAQ,KAAK,cAAgC,eAAe;AAClE,MAAI,CAAC,YAAY,CAAC,OAAO;AACvB;AAAA;AAEF,QAAM,SAAS,gCAAgC,UAAU;AACzD,QAAM,aAAa,SAAS,cAA2B;AACvD,MAAI,YAAY;AACd,eAAW,YAAY;AAAA;AAAA;AAc3B,mBAAmB,MAAgB,YAA8B;AAC/D,QAAM,MAAM,KAAK;AACjB,QAAM,MAAM,KAAK;AACjB,MAAI,MAAc,KAAK;AACvB,QAAM,QAAQ,KAAK;AAEnB,QAAM,SAAS,eAAe,eAAe,OAAO;AACpD,QAAM,SAAS,eAAe,eAAe,MAAM;AACnD,QAAM,IAAI;AACV,MAAI,MAAM,SAAS,GAAG;AACpB,UAAM,SAAS,MAAM;AAAA,aACZ,MAAM,IAAI,SAAS,GAAG;AAC/B,UAAM,SAAS,IAAI,IAAI,MAAM;AAAA;AAE/B,OAAK,KAAK,SAAS,gBAAgB,MAAM,KAAK,GAAG;AACjD,OAAK,KAAK,SAAS,gBAAgB,MAAM,KAAK,GAAG;AACjD,OAAK,KAAK,SAAS,gBAAgB,MAAM,KAAK,GAAG;AACjD,OAAK,KAAK,SAAS,gBAAgB,MAAM,OAAO,GAAG;AAAA;AAGrD,oBAAoB,aAAqB,YAAgC;AACvE,QAAM,QAAQ,OAAO,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA;AAET,QAAM,OAAO,MAAM;AACnB,YAAU,MAAM;AAEhB,QAAM,OAAiB;AACvB,SAAO,MAAM,MAAM,QAAQ,MAAM;AACjC,QAAM,WAAW,IAAI,OAAO,MAAM,MAAM,MAAM,MAAM;AACpD,MAAI,UAAU,SAAS,SAAS;AAChC,MAAI,CAAC,SAAS;AACZ,cAAU,SAAS,SAAS,SAAS,aAAa,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO;AAAA;AAEnG,SAAO,WAAW;AAAA;AAGpB,yCAAyC,aAAqB,UAA0B;AACtF,MAAI,aAAyB;AAC7B,MAAI,YAAY,QAAQ,kBAAkB,KAAK,YAAY,QAAQ,cAAc,GAAG;AAClF,iBAAa;AAAA;AAEf,MAAI,YAAY,QAAQ,kBAAkB,IAAI;AAC5C,iBAAa;AAAA;AAGf,QAAM,QAAQ,SAAS,QAAQ,OAAO,MAAM,OAAO,UAAU,MAAM;AACnE,QAAM,SAAS;AACf,aAAW,QAAQ,OAAO;AACxB,QAAI,CAAC,MAAM;AACT;AAAA;AAEF,UAAM,WAAW,WAAW,MAAM;AAClC,WAAO,KAAK;AAAA;AAEd,SAAO,OAAO,KAAK;AAAA;",
  "names": []
}
