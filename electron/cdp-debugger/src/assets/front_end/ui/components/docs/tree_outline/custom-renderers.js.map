{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/components/docs/tree_outline/custom-renderers.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\nimport * as TreeOutline from '../../tree_outline/tree_outline.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\nawait FrontendHelpers.initializeGlobalVars();\n\ninterface TreeNodeData {\n  cssProperty: string;\n  cssValue: string;\n}\n\nconst data: TreeOutline.TreeOutline.TreeOutlineData<TreeNodeData> = {\n  defaultRenderer: (node, state) => {\n    const {cssProperty, cssValue} = node.treeNodeData;\n    const valueStyles = LitHtml.Directives.styleMap({\n      paddingLeft: '10px',\n      fontStyle: 'italic',\n      color: 'var(--color-syntax-1)',\n    });\n    return LitHtml.html`<code>${cssProperty}</code>:${\n        state.isExpanded ? LitHtml.nothing : LitHtml.html`<code style=${valueStyles}>${cssValue}</code>`}`;\n  },\n  tree: [\n    {\n      treeNodeData: {cssProperty: 'border', cssValue: '1px solid red'},\n      id: '1',\n    },\n    {\n      treeNodeData: {cssProperty: 'font-size', cssValue: '20px'},\n      id: '2',\n    },\n    {\n      treeNodeData: {cssProperty: 'margin', cssValue: '10px 5px'},\n      id: '3',\n      async children(): Promise<TreeOutline.TreeOutlineUtils.TreeNode<TreeNodeData>[]> {\n        return [\n          {treeNodeData: {cssProperty: 'margin-left', cssValue: '5px'}, id: '4'},\n          {treeNodeData: {cssProperty: 'margin-right', cssValue: '5px'}, id: '5'},\n          {treeNodeData: {cssProperty: 'margin-top', cssValue: '10px'}, id: '6'},\n          {treeNodeData: {cssProperty: 'margin-bottom', cssValue: '10px'}, id: '7'},\n        ];\n      },\n    },\n  ],\n};\n\nconst component = new TreeOutline.TreeOutline.TreeOutline<TreeNodeData>();\ncomponent.data = data;\n\ndocument.getElementById('container')?.appendChild(component);\ndocument.getElementById('recursively-expand')?.addEventListener('click', () => {\n  void component.expandRecursively();\n});\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAEA,MAAM,iBAAiB,qBAAqB;AAC5C,MAAM,gBAAgB;AAOtB,MAAM,OAA8D;AAAA,EAClE,iBAAiB,CAAC,MAAM,UAAU;AAChC,UAAM,EAAC,aAAa,aAAY,KAAK;AACrC,UAAM,cAAc,QAAQ,WAAW,SAAS;AAAA,MAC9C,aAAa;AAAA,MACb,WAAW;AAAA,MACX,OAAO;AAAA;AAET,WAAO,QAAQ,aAAa,sBACxB,MAAM,aAAa,QAAQ,UAAU,QAAQ,mBAAmB,eAAe;AAAA;AAAA,EAErF,MAAM;AAAA,IACJ;AAAA,MACE,cAAc,EAAC,aAAa,UAAU,UAAU;AAAA,MAChD,IAAI;AAAA;AAAA,IAEN;AAAA,MACE,cAAc,EAAC,aAAa,aAAa,UAAU;AAAA,MACnD,IAAI;AAAA;AAAA,IAEN;AAAA,MACE,cAAc,EAAC,aAAa,UAAU,UAAU;AAAA,MAChD,IAAI;AAAA,YACE,WAA2E;AAC/E,eAAO;AAAA,UACL,EAAC,cAAc,EAAC,aAAa,eAAe,UAAU,SAAQ,IAAI;AAAA,UAClE,EAAC,cAAc,EAAC,aAAa,gBAAgB,UAAU,SAAQ,IAAI;AAAA,UACnE,EAAC,cAAc,EAAC,aAAa,cAAc,UAAU,UAAS,IAAI;AAAA,UAClE,EAAC,cAAc,EAAC,aAAa,iBAAiB,UAAU,UAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/E,MAAM,YAAY,IAAI,YAAY,YAAY;AAC9C,UAAU,OAAO;AAEjB,SAAS,eAAe,cAAc,YAAY;AAClD,SAAS,eAAe,uBAAuB,iBAAiB,SAAS,MAAM;AAC7E,OAAK,UAAU;AAAA;",
  "names": []
}
