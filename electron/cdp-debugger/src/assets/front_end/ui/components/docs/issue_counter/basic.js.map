{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/components/docs/issue_counter/basic.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\n\nimport type * as IssueCounterModule from '../../../../ui/components/issue_counter/issue_counter.js';\nimport type * as IssuesManager from '../../../../models/issues_manager/issues_manager.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\nawait FrontendHelpers.initializeGlobalVars();\n\nconst IssueCounter: typeof IssueCounterModule =\n    await import('../../../../ui/components/issue_counter/issue_counter.js');\n\nfunction appendComponent(data: IssueCounterModule.IssueCounter.IssueCounterData) {\n  const component = new IssueCounter.IssueCounter.IssueCounter();\n  component.data = data;\n  document.getElementById('container')?.appendChild(component);\n}\n\nconst mockIssueManager = {\n  addEventListener(): void{},\n  removeEventListener(): void{},\n  numberOfIssues(): number {\n    return 1;\n  },\n} as unknown as IssuesManager.IssuesManager.IssuesManager;\n\nappendComponent({issuesManager: mockIssueManager});\n\nappendComponent({issuesManager: mockIssueManager, clickHandler: () => {}});\n\nappendComponent({issuesManager: mockIssueManager, clickHandler: () => {}, compact: true});\n"],
  "mappings": "AAIA;AACA;AAKA,MAAM,iBAAiB,qBAAqB;AAC5C,MAAM,gBAAgB;AAEtB,MAAM,eACF,MAAM,OAAO;AAEjB,yBAAyB,MAAwD;AAC/E,QAAM,YAAY,IAAI,aAAa,aAAa;AAChD,YAAU,OAAO;AACjB,WAAS,eAAe,cAAc,YAAY;AAAA;AAGpD,MAAM,mBAAmB;AAAA,EACvB,mBAAwB;AAAA;AAAA,EACxB,sBAA2B;AAAA;AAAA,EAC3B,iBAAyB;AACvB,WAAO;AAAA;AAAA;AAIX,gBAAgB,EAAC,eAAe;AAEhC,gBAAgB,EAAC,eAAe,kBAAkB,cAAc,MAAM;AAAA;AAEtE,gBAAgB,EAAC,eAAe,kBAAkB,cAAc,MAAM;AAAA,GAAI,SAAS;",
  "names": []
}
