{
  "version": 3,
  "sources": ["../../../../../../../../front_end/ui/components/docs/tree_outline/lazy-children.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\nimport * as TreeOutline from '../../tree_outline/tree_outline.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\nawait FrontendHelpers.initializeGlobalVars();\n\nasync function loadInSomeNodes(): Promise<TreeOutline.TreeOutlineUtils.TreeNode<string>[]> {\n  const europeanOffices: TreeOutline.TreeOutlineUtils.TreeNode<string>[] = [\n    {\n      treeNodeData: 'UK',\n      id: 'UK',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'LON',\n          id: 'LON',\n          children: () => Promise.resolve(\n              [{treeNodeData: '6PS', id: '6PS'}, {treeNodeData: 'CSG', id: 'CSG'}, {treeNodeData: 'BEL', id: 'BEL'}]),\n        },\n      ]),\n    },\n    {\n      treeNodeData: 'Germany',\n      id: 'Germany',\n      children: () => Promise.resolve([\n        {treeNodeData: 'MUC', id: 'MUC'},\n        {treeNodeData: 'BER', id: 'MUC'},\n      ]),\n    },\n  ];\n\n  return new Promise(resolve => {\n    setTimeout(() => resolve(europeanOffices), 250);\n  });\n}\n\nconst data: TreeOutline.TreeOutline.TreeOutlineData<string> = {\n  defaultRenderer: TreeOutline.TreeOutline.defaultRenderer,\n  tree: [\n    {\n      treeNodeData: 'Offices',\n      id: 'Offices',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'Europe',\n          id: 'Europe',\n          async children() {\n            const children = await loadInSomeNodes();\n            return children;\n          },\n        },\n      ]),\n    },\n    {\n      treeNodeData: 'Products',\n      id: 'Products',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'Chrome',\n          id: 'Chrome',\n        },\n        {\n          treeNodeData: 'YouTube',\n          id: 'YouTube',\n        },\n        {\n          treeNodeData: 'Drive',\n          id: 'Drive',\n        },\n        {\n          treeNodeData: 'Calendar',\n          id: 'Calendar',\n        },\n      ]),\n\n    },\n  ],\n\n};\nconst component = new TreeOutline.TreeOutline.TreeOutline<string>();\ncomponent.setAttribute('toplevelbordercolor', 'var(--color-syntax-1)');\ncomponent.data = data;\n\ndocument.getElementById('container')?.appendChild(component);\ndocument.getElementById('recursively-expand')?.addEventListener('click', () => {\n  void component.expandRecursively();\n});\n"],
  "mappings": "AAIA;AACA;AACA;AAEA,MAAM,iBAAiB,qBAAqB;AAC5C,MAAM,gBAAgB;AAEtB,iCAA2F;AACzF,QAAM,kBAAmE;AAAA,IACvE;AAAA,MACE,cAAc;AAAA,MACd,IAAI;AAAA,MACJ,UAAU,MAAM,QAAQ,QAAQ;AAAA,QAC9B;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA,UACJ,UAAU,MAAM,QAAQ,QACpB,CAAC,EAAC,cAAc,OAAO,IAAI,SAAQ,EAAC,cAAc,OAAO,IAAI,SAAQ,EAAC,cAAc,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA,IAIzG;AAAA,MACE,cAAc;AAAA,MACd,IAAI;AAAA,MACJ,UAAU,MAAM,QAAQ,QAAQ;AAAA,QAC9B,EAAC,cAAc,OAAO,IAAI;AAAA,QAC1B,EAAC,cAAc,OAAO,IAAI;AAAA;AAAA;AAAA;AAKhC,SAAO,IAAI,QAAQ,aAAW;AAC5B,eAAW,MAAM,QAAQ,kBAAkB;AAAA;AAAA;AAI/C,MAAM,OAAwD;AAAA,EAC5D,iBAAiB,YAAY,YAAY;AAAA,EACzC,MAAM;AAAA,IACJ;AAAA,MACE,cAAc;AAAA,MACd,IAAI;AAAA,MACJ,UAAU,MAAM,QAAQ,QAAQ;AAAA,QAC9B;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA,gBACE,WAAW;AACf,kBAAM,WAAW,MAAM;AACvB,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA,IAKf;AAAA,MACE,cAAc;AAAA,MACd,IAAI;AAAA,MACJ,UAAU,MAAM,QAAQ,QAAQ;AAAA,QAC9B;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA;AAAA,QAEN;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA;AAAA,QAEN;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA;AAAA,QAEN;AAAA,UACE,cAAc;AAAA,UACd,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAQd,MAAM,YAAY,IAAI,YAAY,YAAY;AAC9C,UAAU,aAAa,uBAAuB;AAC9C,UAAU,OAAO;AAEjB,SAAS,eAAe,cAAc,YAAY;AAClD,SAAS,eAAe,uBAAuB,iBAAiB,SAAS,MAAM;AAC7E,OAAK,UAAU;AAAA;",
  "names": []
}
