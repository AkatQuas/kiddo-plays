{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/survey_link/SurveyLink.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../components/helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\nimport surveyLinkStyles from './surveyLink.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text shown when the link to open a survey is clicked but the survey has not yet appeared\n  */\n  openingSurvey: 'Opening survey \u2026',\n  /**\n  *@description Text displayed instead of the survey link after the survey link is clicked, if the survey was shown successfully\n  */\n  thankYouForYourFeedback: 'Thank you for your feedback',\n  /**\n  *@description Text displayed instead of the survey link after the survey link is clicked, if the survey was not shown successfully\n  */\n  anErrorOccurredWithTheSurvey: 'An error occurred with the survey',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/survey_link/SurveyLink.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type CanShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.CanShowSurveyResult) => void;\nexport type ShowSurveyCallback = (result: Host.InspectorFrontendHostAPI.ShowSurveyResult) => void;\n\nexport interface SurveyLinkData {\n  trigger: string;\n  promptText: Common.UIString.LocalizedString;\n  canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void;\n  showSurvey: (trigger: string, callback: ShowSurveyCallback) => void;\n}\n\nconst enum State {\n  Checking = 'Checking',  // (begin state) -> ShowLink | DontShowLink\n  ShowLink = 'ShowLink',  // -> Sending\n  Sending = 'Sending',    // -> SurveyShown | Failed\n  SurveyShown = 'SurveyShown',\n  Failed = 'Failed',\n  DontShowLink = 'DontShowLink',\n}\n\n// A link to a survey. The link is rendered aysnchronously because we need to first check if\n// canShowSurvey succeeds.\nexport class SurveyLink extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-survey-link`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #trigger = '';\n  #promptText = Common.UIString.LocalizedEmptyString;\n  #canShowSurvey: (trigger: string, callback: CanShowSurveyCallback) => void = () => {};\n  #showSurvey: (trigger: string, callback: ShowSurveyCallback) => void = () => {};\n  #state: State = State.Checking;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [surveyLinkStyles];\n  }\n\n  // Re-setting data will cause the state to go back to 'Checking' which hides the link.\n  set data(data: SurveyLinkData) {\n    this.#trigger = data.trigger;\n    this.#promptText = data.promptText;\n    this.#canShowSurvey = data.canShowSurvey;\n    this.#showSurvey = data.showSurvey;\n\n    this.#checkSurvey();\n  }\n\n  #checkSurvey(): void {\n    this.#state = State.Checking;\n    this.#canShowSurvey(this.#trigger, ({canShowSurvey}) => {\n      if (!canShowSurvey) {\n        this.#state = State.DontShowLink;\n      } else {\n        this.#state = State.ShowLink;\n      }\n      this.#render();\n    });\n  }\n\n  #sendSurvey(): void {\n    this.#state = State.Sending;\n    this.#render();\n    this.#showSurvey(this.#trigger, ({surveyShown}) => {\n      if (!surveyShown) {\n        this.#state = State.Failed;\n      } else {\n        this.#state = State.SurveyShown;\n      }\n      this.#render();\n    });\n  }\n\n  #render(): void {\n    if (this.#state === State.Checking || this.#state === State.DontShowLink) {\n      return;\n    }\n\n    let linkText = this.#promptText;\n    if (this.#state === State.Sending) {\n      linkText = i18nString(UIStrings.openingSurvey);\n    } else if (this.#state === State.SurveyShown) {\n      linkText = i18nString(UIStrings.thankYouForYourFeedback);\n    } else if (this.#state === State.Failed) {\n      linkText = i18nString(UIStrings.anErrorOccurredWithTheSurvey);\n    }\n\n    let linkState = '';\n    if (this.#state === State.Sending) {\n      linkState = 'pending-link';\n    } else if (this.#state === State.Failed || this.#state === State.SurveyShown) {\n      linkState = 'disabled-link';\n    }\n\n    const ariaDisabled = this.#state !== State.ShowLink;\n\n    // clang-format off\n    // eslint-disable-next-line rulesdir/ban_style_tags_in_lit_html\n    const output = LitHtml.html`\n      <button class=\"link ${linkState}\" tabindex=${ariaDisabled ? '-1' : '0'} .disabled=${ariaDisabled} aria-disabled=${ariaDisabled} @click=${this.#sendSurvey}>\n        <${IconButton.Icon.Icon.litTagName} class=\"link-icon\" .data=${{iconName: 'feedback_button_icon', color: 'var(--color-link)', width: 'var(--issue-link-icon-size, 16px)', height: 'var(--issue-link-icon-size, 16px)'} as IconButton.Icon.IconData}></${IconButton.Icon.Icon.litTagName}><!--\n      -->${linkText}\n      </button>\n    `;\n    // clang-format on\n    LitHtml.render(output, this.#shadow, {host: this});\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-survey-link', SurveyLink);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-survey-link': SurveyLink;\n  }\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA,EAIf,yBAAyB;AAAA,EAIzB,8BAA8B;AAAA;AAEhC,MAAM,OAAO,KAAK,KAAK,kBAAkB,2CAA2C;AACpF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAYhE,IAAW,QAAX,kBAAW,WAAX;AACE,uBAAW;AACX,uBAAW;AACX,sBAAU;AACV,0BAAc;AACd,qBAAS;AACT,2BAAe;AANN;AAAA;AAWJ,gCAAyB,YAAY;AAAA,SAC1B,aAAa,QAAQ;AAAA,YAElB,KAAK,aAAa,EAAC,MAAM;AAAA,aACjC;AAAA,gBACG,OAAO,SAAS;AAAA,mBAC+C,MAAM;AAAA;AAAA,gBACZ,MAAM;AAAA;AAAA,WAC7D;AAAA,EAEhB,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAIjC,KAAK,MAAsB;AAC7B,oBAAgB,KAAK;AACrB,uBAAmB,KAAK;AACxB,0BAAsB,KAAK;AAC3B,uBAAmB,KAAK;AAExB;AAAA;AAAA,iBAGmB;AACnB,kBAAc;AACd,wBAAoB,eAAe,CAAC,EAAC,oBAAmB;AACtD,UAAI,CAAC,eAAe;AAClB,sBAAc;AAAA,aACT;AACL,sBAAc;AAAA;AAEhB;AAAA;AAAA;AAAA,gBAIgB;AAClB,kBAAc;AACd;AACA,qBAAiB,eAAe,CAAC,EAAC,kBAAiB;AACjD,UAAI,CAAC,aAAa;AAChB,sBAAc;AAAA,aACT;AACL,sBAAc;AAAA;AAEhB;AAAA;AAAA;AAAA,YAIY;AACd,QAAI,gBAAgB,6BAAkB,gBAAgB,mCAAoB;AACxE;AAAA;AAGF,QAAI,WAAW;AACf,QAAI,gBAAgB,yBAAe;AACjC,iBAAW,WAAW,UAAU;AAAA,eACvB,gBAAgB,iCAAmB;AAC5C,iBAAW,WAAW,UAAU;AAAA,eACvB,gBAAgB,uBAAc;AACvC,iBAAW,WAAW,UAAU;AAAA;AAGlC,QAAI,YAAY;AAChB,QAAI,gBAAgB,yBAAe;AACjC,kBAAY;AAAA,eACH,gBAAgB,yBAAgB,gBAAgB,iCAAmB;AAC5E,kBAAY;AAAA;AAGd,UAAM,eAAe,gBAAgB;AAIrC,UAAM,SAAS,QAAQ;AAAA,4BACC,uBAAuB,eAAe,OAAO,iBAAiB,8BAA8B,uBAAuB;AAAA,WACpI,WAAW,KAAK,KAAK,sCAAsC,EAAC,UAAU,wBAAwB,OAAO,qBAAqB,OAAO,qCAAqC,QAAQ,2CAAsE,WAAW,KAAK,KAAK;AAAA,WACzQ;AAAA;AAAA;AAIP,YAAQ,OAAO,QAAQ,cAAc,EAAC,MAAM;AAAA;AAAA;AAIhD,iBAAiB,eAAe,gBAAgB,wBAAwB;",
  "names": []
}
