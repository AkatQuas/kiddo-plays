{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/icon_button/Icon.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Coordinator from '../render_coordinator/render_coordinator.js';\nimport iconStyles from './icon.css.js';\n\nexport interface IconWithPath {\n  iconPath: string;\n  color: string;\n  width?: string;\n  height?: string;\n}\n\nexport interface IconWithName {\n  iconName: string;\n  color: string;\n  width?: string;\n  height?: string;\n}\n\nexport type IconData = IconWithPath|IconWithName;\n\nconst isString = (value: string|undefined): value is string => value !== undefined;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class Icon extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-icon`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #iconPath: Readonly<string> = '';\n  #color: Readonly<string> = 'rgb(110 110 110)';\n  #width: Readonly<string> = '100%';\n  #height: Readonly<string> = '100%';\n  #iconName?: Readonly<string>;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [iconStyles];\n  }\n\n  set data(data: IconData) {\n    const {width, height} = data;\n    this.#color = data.color;\n    this.#width = isString(width) ? width : (isString(height) ? height : this.#width);\n    this.#height = isString(height) ? height : (isString(width) ? width : this.#height);\n    if ('iconPath' in data) {\n      this.#iconPath = data.iconPath;\n    } else {\n      this.#iconPath = new URL(`../../../Images/${data.iconName}.svg`, import.meta.url).toString();\n      this.#iconName = data.iconName;\n    }\n    this.#render();\n  }\n\n  get data(): IconData {\n    const commonData = {\n      color: this.#color,\n      width: this.#width,\n      height: this.#height,\n    };\n    if (this.#iconName) {\n      return {\n        ...commonData,\n        iconName: this.#iconName,\n      };\n    }\n    return {\n      ...commonData,\n      iconPath: this.#iconPath,\n    };\n  }\n\n  #getStyles(): {[key: string]: string} {\n    const iconPath = this.#iconPath;\n    const width = this.#width;\n    const height = this.#height;\n    const color = this.#color;\n    const commonStyles = {\n      width,\n      height,\n      display: 'block',\n    };\n    if (color) {\n      return {\n        ...commonStyles,\n        webkitMaskImage: `url(${iconPath})`,\n        webkitMaskPosition: 'center',\n        webkitMaskRepeat: 'no-repeat',\n        // We are setting this to 99% to work around an issue where non-standard zoom levels would cause the icon to clip.\n        webkitMaskSize: '99%',\n        backgroundColor: `var(--icon-color, ${color})`,\n      };\n    }\n    return {\n      ...commonStyles,\n      backgroundImage: `url(${iconPath})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      // We are setting this to 99% to work around an issue where non-standard zoom levels would cause the icon to clip.\n      backgroundSize: '99%',\n    };\n  }\n\n  #render(): void {\n    void coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <div class=\"icon-basic\" style=${LitHtml.Directives.styleMap(this.#getStyles())}></div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-icon', Icon);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-icon': Icon;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAkBA,MAAM,WAAW,CAAC,UAA6C,UAAU;AACzE,MAAM,cAAc,YAAY,kBAAkB,kBAAkB;AAE7D,0BAAmB,YAAY;AAAA,SACpB,aAAa,QAAQ;AAAA,YAElB,KAAK,aAAa,EAAC,MAAM;AAAA,cAEd;AAAA,WACH;AAAA,WACA;AAAA,YACC;AAAA;AAAA,EAG5B,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAgB;AACvB,UAAM,EAAC,OAAO,WAAU;AACxB,kBAAc,KAAK;AACnB,kBAAc,SAAS,SAAS,QAAS,SAAS,UAAU,SAAS;AACrE,mBAAe,SAAS,UAAU,SAAU,SAAS,SAAS,QAAQ;AACtE,QAAI,cAAc,MAAM;AACtB,uBAAiB,KAAK;AAAA,WACjB;AACL,uBAAiB,IAAI,IAAI,mBAAmB,KAAK,gBAAgB,YAAY,KAAK;AAClF,uBAAiB,KAAK;AAAA;AAExB;AAAA;AAAA,MAGE,OAAiB;AACnB,UAAM,aAAa;AAAA,MACjB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA;AAEV,QAAI,gBAAgB;AAClB,aAAO;AAAA,WACF;AAAA,QACH,UAAU;AAAA;AAAA;AAGd,WAAO;AAAA,SACF;AAAA,MACH,UAAU;AAAA;AAAA;AAAA,eAIwB;AACpC,UAAM,WAAW;AACjB,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,SAAS;AAAA;AAEX,QAAI,OAAO;AACT,aAAO;AAAA,WACF;AAAA,QACH,iBAAiB,OAAO;AAAA,QACxB,oBAAoB;AAAA,QACpB,kBAAkB;AAAA,QAElB,gBAAgB;AAAA,QAChB,iBAAiB,qBAAqB;AAAA;AAAA;AAG1C,WAAO;AAAA,SACF;AAAA,MACH,iBAAiB,OAAO;AAAA,MACxB,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAElB,gBAAgB;AAAA;AAAA;AAAA,YAIJ;AACd,SAAK,YAAY,MAAM,MAAM;AAE3B,cAAQ,OAAO,QAAQ;AAAA,wCACW,QAAQ,WAAW,SAAS;AAAA,SAC3D,cAAc,EAAC,MAAM;AAAA;AAAA;AAAA;AAM9B,iBAAiB,eAAe,gBAAgB,iBAAiB;",
  "names": []
}
