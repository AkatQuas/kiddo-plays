{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/RuntimeModel.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport type {FunctionDetails} from './DebuggerModel.js';\nimport {DebuggerModel} from './DebuggerModel.js';\nimport {HeapProfilerModel} from './HeapProfilerModel.js';\nimport type {ScopeRef} from './RemoteObject.js';\nimport {\n  RemoteFunction,\n  RemoteObject,\n  RemoteObjectImpl,\n  RemoteObjectProperty,\n  ScopeRemoteObject,\n} from './RemoteObject.js';\nimport type {Target} from './Target.js';\nimport {Capability, Type} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class RuntimeModel extends SDKModel<EventTypes> {\n  readonly agent: ProtocolProxyApi.RuntimeApi;\n  readonly #executionContextById: Map<number, ExecutionContext>;\n  #executionContextComparatorInternal: (arg0: ExecutionContext, arg1: ExecutionContext) => number;\n  #hasSideEffectSupportInternal: boolean|null;\n  constructor(target: Target) {\n    super(target);\n\n    this.agent = target.runtimeAgent();\n    this.target().registerRuntimeDispatcher(new RuntimeDispatcher(this));\n    void this.agent.invoke_enable();\n    this.#executionContextById = new Map();\n    this.#executionContextComparatorInternal = ExecutionContext.comparator;\n    this.#hasSideEffectSupportInternal = null;\n\n    if (Common.Settings.Settings.instance().moduleSetting('customFormatters').get()) {\n      void this.agent.invoke_setCustomObjectFormatterEnabled({enabled: true});\n    }\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('customFormatters')\n        .addChangeListener(this.customFormattersStateChanged.bind(this));\n  }\n\n  static isSideEffectFailure(response: Protocol.Runtime.EvaluateResponse|EvaluationResult): boolean {\n    const exceptionDetails = 'exceptionDetails' in response && response.exceptionDetails;\n    return Boolean(\n        exceptionDetails && exceptionDetails.exception && exceptionDetails.exception.description &&\n        exceptionDetails.exception.description.startsWith('EvalError: Possible side-effect in debug-evaluate'));\n  }\n\n  debuggerModel(): DebuggerModel {\n    return this.target().model(DebuggerModel) as DebuggerModel;\n  }\n\n  heapProfilerModel(): HeapProfilerModel {\n    return this.target().model(HeapProfilerModel) as HeapProfilerModel;\n  }\n\n  executionContexts(): ExecutionContext[] {\n    return [...this.#executionContextById.values()].sort(this.executionContextComparator());\n  }\n\n  setExecutionContextComparator(comparator: (arg0: ExecutionContext, arg1: ExecutionContext) => number): void {\n    this.#executionContextComparatorInternal = comparator;\n  }\n\n  /** comparator\n     */\n  executionContextComparator(): (arg0: ExecutionContext, arg1: ExecutionContext) => number {\n    return this.#executionContextComparatorInternal;\n  }\n\n  defaultExecutionContext(): ExecutionContext|null {\n    for (const context of this.executionContexts()) {\n      if (context.isDefault) {\n        return context;\n      }\n    }\n    return null;\n  }\n\n  executionContext(id: number): ExecutionContext|null {\n    return this.#executionContextById.get(id) || null;\n  }\n\n  executionContextCreated(context: Protocol.Runtime.ExecutionContextDescription): void {\n    const data = context.auxData || {isDefault: true};\n    const executionContext = new ExecutionContext(\n        this, context.id, context.uniqueId, context.name, context.origin as Platform.DevToolsPath.UrlString,\n        data['isDefault'], data['frameId']);\n    this.#executionContextById.set(executionContext.id, executionContext);\n    this.dispatchEventToListeners(Events.ExecutionContextCreated, executionContext);\n  }\n\n  executionContextDestroyed(executionContextId: number): void {\n    const executionContext = this.#executionContextById.get(executionContextId);\n    if (!executionContext) {\n      return;\n    }\n    this.debuggerModel().executionContextDestroyed(executionContext);\n    this.#executionContextById.delete(executionContextId);\n    this.dispatchEventToListeners(Events.ExecutionContextDestroyed, executionContext);\n  }\n\n  fireExecutionContextOrderChanged(): void {\n    this.dispatchEventToListeners(Events.ExecutionContextOrderChanged, this);\n  }\n\n  executionContextsCleared(): void {\n    this.debuggerModel().globalObjectCleared();\n    const contexts = this.executionContexts();\n    this.#executionContextById.clear();\n    for (let i = 0; i < contexts.length; ++i) {\n      this.dispatchEventToListeners(Events.ExecutionContextDestroyed, contexts[i]);\n    }\n  }\n\n  createRemoteObject(payload: Protocol.Runtime.RemoteObject): RemoteObject {\n    console.assert(typeof payload === 'object', 'Remote object payload should only be an object');\n    return new RemoteObjectImpl(\n        this, payload.objectId, payload.type, payload.subtype, payload.value, payload.unserializableValue,\n        payload.description, payload.preview, payload.customPreview, payload.className);\n  }\n\n  createScopeRemoteObject(payload: Protocol.Runtime.RemoteObject, scopeRef: ScopeRef): RemoteObject {\n    return new ScopeRemoteObject(\n        this, payload.objectId, scopeRef, payload.type, payload.subtype, payload.value, payload.unserializableValue,\n        payload.description, payload.preview);\n  }\n\n  createRemoteObjectFromPrimitiveValue(value: string|number|bigint|boolean|undefined): RemoteObject {\n    const type = typeof value;\n    let unserializableValue: string|undefined = undefined;\n    const unserializableDescription = RemoteObject.unserializableDescription(value);\n    if (unserializableDescription !== null) {\n      unserializableValue = (unserializableDescription as string);\n    }\n    if (typeof unserializableValue !== 'undefined') {\n      value = undefined;\n    }\n    return new RemoteObjectImpl(this, undefined, type, undefined, value, unserializableValue);\n  }\n\n  createRemotePropertyFromPrimitiveValue(name: string, value: string|number|boolean): RemoteObjectProperty {\n    return new RemoteObjectProperty(name, this.createRemoteObjectFromPrimitiveValue(value));\n  }\n\n  discardConsoleEntries(): void {\n    void this.agent.invoke_discardConsoleEntries();\n  }\n\n  releaseObjectGroup(objectGroup: string): void {\n    void this.agent.invoke_releaseObjectGroup({objectGroup});\n  }\n\n  releaseEvaluationResult(result: EvaluationResult): void {\n    if ('object' in result && result.object) {\n      result.object.release();\n    }\n    if ('exceptionDetails' in result && result.exceptionDetails && result.exceptionDetails.exception) {\n      const exception = result.exceptionDetails.exception;\n      const exceptionObject = this.createRemoteObject({type: exception.type, objectId: exception.objectId});\n      exceptionObject.release();\n    }\n  }\n\n  runIfWaitingForDebugger(): void {\n    void this.agent.invoke_runIfWaitingForDebugger();\n  }\n\n  private customFormattersStateChanged({data: enabled}: Common.EventTarget.EventTargetEvent<boolean>): void {\n    void this.agent.invoke_setCustomObjectFormatterEnabled({enabled});\n  }\n\n  async compileScript(\n      expression: string, sourceURL: string, persistScript: boolean,\n      executionContextId: Protocol.Runtime.ExecutionContextId): Promise<CompileScriptResult|null> {\n    const response = await this.agent.invoke_compileScript({\n      expression: expression,\n      sourceURL: sourceURL,\n      persistScript: persistScript,\n      executionContextId: executionContextId,\n    });\n\n    if (response.getError()) {\n      console.error(response.getError());\n      return null;\n    }\n    return {scriptId: response.scriptId, exceptionDetails: response.exceptionDetails};\n  }\n\n  async runScript(\n      scriptId: Protocol.Runtime.ScriptId, executionContextId: Protocol.Runtime.ExecutionContextId,\n      objectGroup?: string, silent?: boolean, includeCommandLineAPI?: boolean, returnByValue?: boolean,\n      generatePreview?: boolean, awaitPromise?: boolean): Promise<EvaluationResult> {\n    const response = await this.agent.invoke_runScript({\n      scriptId,\n      executionContextId,\n      objectGroup,\n      silent,\n      includeCommandLineAPI,\n      returnByValue,\n      generatePreview,\n      awaitPromise,\n    });\n\n    const error = response.getError();\n    if (error) {\n      console.error(error);\n      return {error: error};\n    }\n    return {object: this.createRemoteObject(response.result), exceptionDetails: response.exceptionDetails};\n  }\n\n  async queryObjects(prototype: RemoteObject): Promise<QueryObjectResult> {\n    if (!prototype.objectId) {\n      return {error: 'Prototype should be an Object.'};\n    }\n    const response =\n        await this.agent.invoke_queryObjects({prototypeObjectId: prototype.objectId, objectGroup: 'console'});\n    const error = response.getError();\n    if (error) {\n      console.error(error);\n      return {error: error};\n    }\n    return {objects: this.createRemoteObject(response.objects)};\n  }\n\n  async isolateId(): Promise<string> {\n    const response = await this.agent.invoke_getIsolateId();\n    if (response.getError() || !response.id) {\n      return this.target().id();\n    }\n    return response.id;\n  }\n\n  async heapUsage(): Promise<{\n    usedSize: number,\n    totalSize: number,\n  }|null> {\n    const result = await this.agent.invoke_getHeapUsage();\n    return result.getError() ? null : result;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inspectRequested(payload: Protocol.Runtime.RemoteObject, hints?: any, executionContextId?: number): void {\n    const object = this.createRemoteObject(payload);\n\n    if (hints && 'copyToClipboard' in hints && Boolean(hints.copyToClipboard)) {\n      this.copyRequested(object);\n      return;\n    }\n\n    if (hints && 'queryObjects' in hints && hints.queryObjects) {\n      void this.queryObjectsRequested(object, executionContextId);\n      return;\n    }\n\n    if (object.isNode()) {\n      void Common.Revealer.reveal(object).then(object.release.bind(object));\n      return;\n    }\n\n    if (object.type === 'function') {\n      void RemoteFunction.objectAsFunction(object).targetFunctionDetails().then(didGetDetails);\n      return;\n    }\n\n    function didGetDetails(response: FunctionDetails|null): void {\n      object.release();\n      if (!response || !response.location) {\n        return;\n      }\n      void Common.Revealer.reveal(response.location);\n    }\n    object.release();\n  }\n\n  async addBinding(event: Protocol.Runtime.AddBindingRequest): Promise<Protocol.ProtocolResponseWithError> {\n    return await this.agent.invoke_addBinding(event);\n  }\n\n  bindingCalled(event: Protocol.Runtime.BindingCalledEvent): void {\n    this.dispatchEventToListeners(Events.BindingCalled, event);\n  }\n\n  private copyRequested(object: RemoteObject): void {\n    if (!object.objectId) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(\n          object.unserializableValue() || (object.value as string));\n      return;\n    }\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n    void object\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        .callFunctionJSON(toStringForClipboard, [{\n                            value: {\n                              subtype: object.subtype,\n                              indent: indent,\n                            },\n                          }])\n        .then(Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance));\n\n    function toStringForClipboard(this: Object, data: {\n      subtype: string,\n      indent: string,\n    }): string|undefined {\n      const subtype = data.subtype;\n      const indent = data.indent;\n\n      if (subtype === 'node') {\n        return this instanceof Element ? this.outerHTML : undefined;\n      }\n      if (subtype && typeof this === 'undefined') {\n        return String(subtype);\n      }\n      try {\n        return JSON.stringify(this, null, indent);\n      } catch (error) {\n        return String(this);\n      }\n    }\n  }\n\n  private async queryObjectsRequested(object: RemoteObject, executionContextId?: number): Promise<void> {\n    const result = await this.queryObjects(object);\n    object.release();\n    if ('error' in result) {\n      Common.Console.Console.instance().error(result.error);\n      return;\n    }\n    this.dispatchEventToListeners(Events.QueryObjectRequested, {objects: result.objects, executionContextId});\n  }\n\n  static simpleTextFromException(exceptionDetails: Protocol.Runtime.ExceptionDetails): string {\n    let text = exceptionDetails.text;\n    if (exceptionDetails.exception && exceptionDetails.exception.description) {\n      let description: string = exceptionDetails.exception.description;\n      if (description.indexOf('\\n') !== -1) {\n        description = description.substring(0, description.indexOf('\\n'));\n      }\n      text += ' ' + description;\n    }\n    return text;\n  }\n\n  exceptionThrown(timestamp: number, exceptionDetails: Protocol.Runtime.ExceptionDetails): void {\n    const exceptionWithTimestamp = {timestamp: timestamp, details: exceptionDetails};\n    this.dispatchEventToListeners(Events.ExceptionThrown, exceptionWithTimestamp);\n  }\n\n  exceptionRevoked(exceptionId: number): void {\n    this.dispatchEventToListeners(Events.ExceptionRevoked, exceptionId);\n  }\n\n  consoleAPICalled(\n      type: Protocol.Runtime.ConsoleAPICalledEventType, args: Protocol.Runtime.RemoteObject[],\n      executionContextId: number, timestamp: number, stackTrace?: Protocol.Runtime.StackTrace, context?: string): void {\n    const consoleAPICall = {\n      type: type,\n      args: args,\n      executionContextId: executionContextId,\n      timestamp: timestamp,\n      stackTrace: stackTrace,\n      context: context,\n    };\n    this.dispatchEventToListeners(Events.ConsoleAPICalled, consoleAPICall);\n  }\n\n  executionContextIdForScriptId(scriptId: string): number {\n    const script = this.debuggerModel().scriptForId(scriptId);\n    return script ? script.executionContextId : 0;\n  }\n\n  executionContextForStackTrace(stackTrace: Protocol.Runtime.StackTrace): number {\n    let currentStackTrace: (Protocol.Runtime.StackTrace|null)|Protocol.Runtime.StackTrace = stackTrace;\n    while (currentStackTrace && !currentStackTrace.callFrames.length) {\n      currentStackTrace = currentStackTrace.parent || null;\n    }\n    if (!currentStackTrace || !currentStackTrace.callFrames.length) {\n      return 0;\n    }\n    return this.executionContextIdForScriptId(currentStackTrace.callFrames[0].scriptId);\n  }\n\n  hasSideEffectSupport(): boolean|null {\n    return this.#hasSideEffectSupportInternal;\n  }\n\n  async checkSideEffectSupport(): Promise<boolean> {\n    const contexts = this.executionContexts();\n    const testContext = contexts[contexts.length - 1];\n    if (!testContext) {\n      return false;\n    }\n    // Check for a positive throwOnSideEffect response without triggering side effects.\n    const response = await this.agent.invoke_evaluate({\n      expression: _sideEffectTestExpression,\n      contextId: testContext.id,\n      throwOnSideEffect: true,\n    });\n\n    this.#hasSideEffectSupportInternal = response.getError() ? false : RuntimeModel.isSideEffectFailure(response);\n\n    return this.#hasSideEffectSupportInternal;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  terminateExecution(): Promise<any> {\n    return this.agent.invoke_terminateExecution();\n  }\n\n  async getExceptionDetails(errorObjectId: Protocol.Runtime.RemoteObjectId):\n      Promise<Protocol.Runtime.ExceptionDetails|undefined> {\n    const response = await this.agent.invoke_getExceptionDetails({errorObjectId});\n    if (response.getError()) {\n      // This CDP method errors if called with non-Error object ids. Swallow that.\n      return undefined;\n    }\n    return response.exceptionDetails;\n  }\n}\n\n/**\n * This expression:\n * - IMPORTANT: must not actually cause user-visible or JS-visible side-effects.\n * - Must throw when evaluated with `throwOnSideEffect: true`.\n * - Must be valid when run from any ExecutionContext that supports `throwOnSideEffect`.\n * @const\n */\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _sideEffectTestExpression: string = '(async function(){ await 1; })()';\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  BindingCalled = 'BindingCalled',\n  ExecutionContextCreated = 'ExecutionContextCreated',\n  ExecutionContextDestroyed = 'ExecutionContextDestroyed',\n  ExecutionContextChanged = 'ExecutionContextChanged',\n  ExecutionContextOrderChanged = 'ExecutionContextOrderChanged',\n  ExceptionThrown = 'ExceptionThrown',\n  ExceptionRevoked = 'ExceptionRevoked',\n  ConsoleAPICalled = 'ConsoleAPICalled',\n  QueryObjectRequested = 'QueryObjectRequested',\n}\n\nexport interface ConsoleAPICall {\n  type: Protocol.Runtime.ConsoleAPICalledEventType;\n  args: Protocol.Runtime.RemoteObject[];\n  executionContextId: number;\n  timestamp: number;\n  stackTrace?: Protocol.Runtime.StackTrace;\n  context?: string;\n}\n\nexport interface ExceptionWithTimestamp {\n  timestamp: number;\n  details: Protocol.Runtime.ExceptionDetails;\n}\n\nexport interface QueryObjectRequestedEvent {\n  objects: RemoteObject;\n  executionContextId?: number;\n}\n\nexport type EventTypes = {\n  [Events.BindingCalled]: Protocol.Runtime.BindingCalledEvent,\n  [Events.ExecutionContextCreated]: ExecutionContext,\n  [Events.ExecutionContextDestroyed]: ExecutionContext,\n  [Events.ExecutionContextChanged]: ExecutionContext,\n  [Events.ExecutionContextOrderChanged]: RuntimeModel,\n  [Events.ExceptionThrown]: ExceptionWithTimestamp,\n  [Events.ExceptionRevoked]: number,\n  [Events.ConsoleAPICalled]: ConsoleAPICall,\n  [Events.QueryObjectRequested]: QueryObjectRequestedEvent,\n};\n\nclass RuntimeDispatcher implements ProtocolProxyApi.RuntimeDispatcher {\n  readonly #runtimeModel: RuntimeModel;\n  constructor(runtimeModel: RuntimeModel) {\n    this.#runtimeModel = runtimeModel;\n  }\n\n  executionContextCreated({context}: Protocol.Runtime.ExecutionContextCreatedEvent): void {\n    this.#runtimeModel.executionContextCreated(context);\n  }\n\n  executionContextDestroyed({executionContextId}: Protocol.Runtime.ExecutionContextDestroyedEvent): void {\n    this.#runtimeModel.executionContextDestroyed(executionContextId);\n  }\n\n  executionContextsCleared(): void {\n    this.#runtimeModel.executionContextsCleared();\n  }\n\n  exceptionThrown({timestamp, exceptionDetails}: Protocol.Runtime.ExceptionThrownEvent): void {\n    this.#runtimeModel.exceptionThrown(timestamp, exceptionDetails);\n  }\n\n  exceptionRevoked({exceptionId}: Protocol.Runtime.ExceptionRevokedEvent): void {\n    this.#runtimeModel.exceptionRevoked(exceptionId);\n  }\n\n  consoleAPICalled({type, args, executionContextId, timestamp, stackTrace, context}:\n                       Protocol.Runtime.ConsoleAPICalledEvent): void {\n    this.#runtimeModel.consoleAPICalled(type, args, executionContextId, timestamp, stackTrace, context);\n  }\n\n  inspectRequested({object, hints, executionContextId}: Protocol.Runtime.InspectRequestedEvent): void {\n    this.#runtimeModel.inspectRequested(object, hints, executionContextId);\n  }\n\n  bindingCalled(event: Protocol.Runtime.BindingCalledEvent): void {\n    this.#runtimeModel.bindingCalled(event);\n  }\n}\n\nexport class ExecutionContext {\n  id: Protocol.Runtime.ExecutionContextId;\n  uniqueId: string;\n  name: string;\n  #labelInternal: string|null;\n  origin: Platform.DevToolsPath.UrlString;\n  isDefault: boolean;\n  runtimeModel: RuntimeModel;\n  debuggerModel: DebuggerModel;\n  frameId: Protocol.Page.FrameId|undefined;\n  constructor(\n      runtimeModel: RuntimeModel, id: Protocol.Runtime.ExecutionContextId, uniqueId: string, name: string,\n      origin: Platform.DevToolsPath.UrlString, isDefault: boolean, frameId?: Protocol.Page.FrameId) {\n    this.id = id;\n    this.uniqueId = uniqueId;\n    this.name = name;\n    this.#labelInternal = null;\n    this.origin = origin;\n    this.isDefault = isDefault;\n    this.runtimeModel = runtimeModel;\n    this.debuggerModel = runtimeModel.debuggerModel();\n    this.frameId = frameId;\n    this.setLabelInternal('');\n  }\n\n  target(): Target {\n    return this.runtimeModel.target();\n  }\n\n  static comparator(a: ExecutionContext, b: ExecutionContext): number {\n    function targetWeight(target: Target): number {\n      if (!target.parentTarget()) {\n        return 5;\n      }\n      if (target.type() === Type.Frame) {\n        return 4;\n      }\n      if (target.type() === Type.ServiceWorker) {\n        return 3;\n      }\n      if (target.type() === Type.Worker || target.type() === Type.SharedWorker) {\n        return 2;\n      }\n      return 1;\n    }\n\n    function targetPath(target: Target): Target[] {\n      let currentTarget: (Target|null)|Target = target;\n      const parents = [];\n      while (currentTarget) {\n        parents.push(currentTarget);\n        currentTarget = currentTarget.parentTarget();\n      }\n      return parents.reverse();\n    }\n\n    const tagetsA = targetPath(a.target());\n    const targetsB = targetPath(b.target());\n    let targetA;\n    let targetB;\n    for (let i = 0;; i++) {\n      if (!tagetsA[i] || !targetsB[i] || (tagetsA[i] !== targetsB[i])) {\n        targetA = tagetsA[i];\n        targetB = targetsB[i];\n        break;\n      }\n    }\n    if (!targetA && targetB) {\n      return -1;\n    }\n\n    if (!targetB && targetA) {\n      return 1;\n    }\n\n    if (targetA && targetB) {\n      const weightDiff = targetWeight(targetA) - targetWeight(targetB);\n      if (weightDiff) {\n        return -weightDiff;\n      }\n      return targetA.id().localeCompare(targetB.id());\n    }\n\n    // Main world context should always go first.\n    if (a.isDefault) {\n      return -1;\n    }\n    if (b.isDefault) {\n      return +1;\n    }\n    return a.name.localeCompare(b.name);\n  }\n\n  async evaluate(options: EvaluationOptions, userGesture: boolean, awaitPromise: boolean): Promise<EvaluationResult> {\n    // FIXME: It will be moved to separate ExecutionContext.\n    if (this.debuggerModel.selectedCallFrame()) {\n      return this.debuggerModel.evaluateOnSelectedCallFrame(options);\n    }\n    // Assume backends either support both throwOnSideEffect and timeout options or neither.\n    const needsTerminationOptions = Boolean(options.throwOnSideEffect) || options.timeout !== undefined;\n    if (!needsTerminationOptions || this.runtimeModel.hasSideEffectSupport()) {\n      return this.evaluateGlobal(options, userGesture, awaitPromise);\n    }\n\n    if (this.runtimeModel.hasSideEffectSupport() !== false) {\n      await this.runtimeModel.checkSideEffectSupport();\n      if (this.runtimeModel.hasSideEffectSupport()) {\n        return this.evaluateGlobal(options, userGesture, awaitPromise);\n      }\n    }\n    return {error: 'Side-effect checks not supported by backend.'};\n  }\n\n  globalObject(objectGroup: string, generatePreview: boolean): Promise<EvaluationResult> {\n    const evaluationOptions = {\n      expression: 'this',\n      objectGroup: objectGroup,\n      includeCommandLineAPI: false,\n      silent: true,\n      returnByValue: false,\n      generatePreview: generatePreview,\n    };\n    return this.evaluateGlobal((evaluationOptions as EvaluationOptions), false, false);\n  }\n\n  private async evaluateGlobal(options: EvaluationOptions, userGesture: boolean, awaitPromise: boolean):\n      Promise<EvaluationResult> {\n    if (!options.expression) {\n      // There is no expression, so the completion should happen against global properties.\n      options.expression = 'this';\n    }\n\n    const response = await this.runtimeModel.agent.invoke_evaluate({\n      expression: options.expression,\n      objectGroup: options.objectGroup,\n      includeCommandLineAPI: options.includeCommandLineAPI,\n      silent: options.silent,\n      returnByValue: options.returnByValue,\n      generatePreview: options.generatePreview,\n      userGesture: userGesture,\n      awaitPromise: awaitPromise,\n      throwOnSideEffect: options.throwOnSideEffect,\n      timeout: options.timeout,\n      disableBreaks: options.disableBreaks,\n      replMode: options.replMode,\n      allowUnsafeEvalBlockedByCSP: options.allowUnsafeEvalBlockedByCSP,\n      // Old back-ends don't know about uniqueContextId (and also don't generate\n      // one), so fall back to contextId in that case (https://crbug.com/1192621).\n      ...(this.uniqueId ? {uniqueContextId: this.uniqueId} : {contextId: this.id}),\n    });\n\n    const error = response.getError();\n    if (error) {\n      console.error(error);\n      return {error: error};\n    }\n    return {object: this.runtimeModel.createRemoteObject(response.result), exceptionDetails: response.exceptionDetails};\n  }\n\n  async globalLexicalScopeNames(): Promise<string[]|null> {\n    const response = await this.runtimeModel.agent.invoke_globalLexicalScopeNames({executionContextId: this.id});\n    return response.getError() ? [] : response.names;\n  }\n\n  label(): string|null {\n    return this.#labelInternal;\n  }\n\n  setLabel(label: string): void {\n    this.setLabelInternal(label);\n    this.runtimeModel.dispatchEventToListeners(Events.ExecutionContextChanged, this);\n  }\n\n  private setLabelInternal(label: string): void {\n    if (label) {\n      this.#labelInternal = label;\n      return;\n    }\n    if (this.name) {\n      this.#labelInternal = this.name;\n      return;\n    }\n    const parsedUrl = Common.ParsedURL.ParsedURL.fromString(this.origin);\n    this.#labelInternal = parsedUrl ? parsedUrl.lastPathComponentWithFragment() : '';\n  }\n}\n\nSDKModel.register(RuntimeModel, {capabilities: Capability.JS, autostart: true});\n\nexport type EvaluationResult = {\n  object: RemoteObject,\n  exceptionDetails?: Protocol.Runtime.ExceptionDetails,\n}|{\n  error: string,\n};\n\nexport interface CompileScriptResult {\n  scriptId?: string;\n  exceptionDetails?: Protocol.Runtime.ExceptionDetails;\n}\n\nexport interface EvaluationOptions {\n  expression: string;\n  objectGroup?: string;\n  includeCommandLineAPI?: boolean;\n  silent?: boolean;\n  returnByValue?: boolean;\n  generatePreview?: boolean;\n  throwOnSideEffect?: boolean;\n  timeout?: number;\n  disableBreaks?: boolean;\n  replMode?: boolean;\n  allowUnsafeEvalBlockedByCSP?: boolean;\n  contextId?: number;\n}\n\nexport type QueryObjectResult = {\n  objects: RemoteObject,\n}|{error: string};\n"],
  "mappings": "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",
  "names": []
}
