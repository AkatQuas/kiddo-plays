{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/FilmStripModel.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nimport type {Event, ObjectSnapshot} from './TracingModel.js';\nimport {TracingModel} from './TracingModel.js';\n\nexport class FilmStripModel {\n  #framesInternal: Frame[];\n  #zeroTimeInternal: number;\n  #spanTimeInternal: number;\n  constructor(tracingModel: TracingModel, zeroTime?: number) {\n    this.#framesInternal = [];\n    this.#zeroTimeInternal = 0;\n    this.#spanTimeInternal = 0;\n\n    this.reset(tracingModel, zeroTime);\n  }\n\n  reset(tracingModel: TracingModel, zeroTime?: number): void {\n    this.#zeroTimeInternal = zeroTime || tracingModel.minimumRecordTime();\n    this.#spanTimeInternal = tracingModel.maximumRecordTime() - this.#zeroTimeInternal;\n\n    this.#framesInternal = [];\n    const browserMain = TracingModel.browserMainThread(tracingModel);\n    if (!browserMain) {\n      return;\n    }\n\n    const events = browserMain.events();\n    for (let i = 0; i < events.length; ++i) {\n      const event = events[i];\n      if (event.startTime < this.#zeroTimeInternal) {\n        continue;\n      }\n      if (!event.hasCategory(category)) {\n        continue;\n      }\n      if (event.name === TraceEvents.CaptureFrame) {\n        const data = event.args['data'];\n        if (data) {\n          this.#framesInternal.push(Frame.fromEvent(this, event, this.#framesInternal.length));\n        }\n      } else if (event.name === TraceEvents.Screenshot) {\n        this.#framesInternal.push(Frame.fromSnapshot(this, (event as ObjectSnapshot), this.#framesInternal.length));\n      }\n    }\n  }\n\n  frames(): Frame[] {\n    return this.#framesInternal;\n  }\n\n  zeroTime(): number {\n    return this.#zeroTimeInternal;\n  }\n\n  spanTime(): number {\n    return this.#spanTimeInternal;\n  }\n\n  frameByTimestamp(timestamp: number): Frame|null {\n    const index = Platform.ArrayUtilities.upperBound(\n                      this.#framesInternal, timestamp, (timestamp, frame) => timestamp - frame.timestamp) -\n        1;\n    return index >= 0 ? this.#framesInternal[index] : null;\n  }\n}\n\nconst category = 'disabled-by-default-devtools.screenshot';\n\nconst TraceEvents = {\n  CaptureFrame: 'CaptureFrame',\n  Screenshot: 'Screenshot',\n};\n\nexport class Frame {\n  readonly #modelInternal: FilmStripModel;\n  timestamp: number;\n  index: number;\n  #imageData: string|null;\n  #snapshot: ObjectSnapshot|null;\n  constructor(model: FilmStripModel, timestamp: number, index: number) {\n    this.#modelInternal = model;\n    this.timestamp = timestamp;\n    this.index = index;\n    this.#imageData = null;\n    this.#snapshot = null;\n  }\n\n  static fromEvent(model: FilmStripModel, event: Event, index: number): Frame {\n    const frame = new Frame(model, event.startTime, index);\n    frame.#imageData = event.args['data'];\n    return frame;\n  }\n\n  static fromSnapshot(model: FilmStripModel, snapshot: ObjectSnapshot, index: number): Frame {\n    const frame = new Frame(model, snapshot.startTime, index);\n    frame.#snapshot = snapshot;\n    return frame;\n  }\n\n  model(): FilmStripModel {\n    return this.#modelInternal;\n  }\n\n  imageDataPromise(): Promise<string|null> {\n    if (this.#imageData || !this.#snapshot) {\n      return Promise.resolve(this.#imageData);\n    }\n\n    return this.#snapshot.objectPromise() as Promise<string|null>;\n  }\n}\n"],
  "mappings": "AAIA;AAGA;AAEO,4BAAqB;AAAA;AAAA;AAAA;AAAA,EAI1B,YAAY,cAA4B,UAAmB;AACzD,2BAAuB;AACvB,6BAAyB;AACzB,6BAAyB;AAEzB,SAAK,MAAM,cAAc;AAAA;AAAA,EAG3B,MAAM,cAA4B,UAAyB;AACzD,6BAAyB,YAAY,aAAa;AAClD,6BAAyB,aAAa,sBAAsB;AAE5D,2BAAuB;AACvB,UAAM,cAAc,aAAa,kBAAkB;AACnD,QAAI,CAAC,aAAa;AAChB;AAAA;AAGF,UAAM,SAAS,YAAY;AAC3B,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACtC,YAAM,QAAQ,OAAO;AACrB,UAAI,MAAM,YAAY,wBAAwB;AAC5C;AAAA;AAEF,UAAI,CAAC,MAAM,YAAY,WAAW;AAChC;AAAA;AAEF,UAAI,MAAM,SAAS,YAAY,cAAc;AAC3C,cAAM,OAAO,MAAM,KAAK;AACxB,YAAI,MAAM;AACR,+BAAqB,KAAK,MAAM,UAAU,MAAM,OAAO,qBAAqB;AAAA;AAAA,iBAErE,MAAM,SAAS,YAAY,YAAY;AAChD,6BAAqB,KAAK,MAAM,aAAa,MAAO,OAA0B,qBAAqB;AAAA;AAAA;AAAA;AAAA,EAKzG,SAAkB;AAChB,WAAO;AAAA;AAAA,EAGT,WAAmB;AACjB,WAAO;AAAA;AAAA,EAGT,WAAmB;AACjB,WAAO;AAAA;AAAA,EAGT,iBAAiB,WAA+B;AAC9C,UAAM,QAAQ,SAAS,eAAe,WACpB,sBAAsB,WAAW,CAAC,YAAW,UAAU,aAAY,MAAM,aACvF;AACJ,WAAO,SAAS,IAAI,qBAAqB,SAAS;AAAA;AAAA;AAItD,MAAM,WAAW;AAEjB,MAAM,cAAc;AAAA,EAClB,cAAc;AAAA,EACd,YAAY;AAAA;AAGP,mBAAY;AAAA;AAAA,EAEjB;AAAA,EACA;AAAA;AAAA;AAAA,EAGA,YAAY,OAAuB,WAAmB,OAAe;AACnE,0BAAsB;AACtB,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,sBAAkB;AAClB,qBAAiB;AAAA;AAAA,SAGZ,UAAU,OAAuB,OAAc,OAAsB;AAC1E,UAAM,QAAQ,IAAI,MAAM,OAAO,MAAM,WAAW;AAChD,uBAAmB,MAAM,KAAK;AAC9B,WAAO;AAAA;AAAA,SAGF,aAAa,OAAuB,UAA0B,OAAsB;AACzF,UAAM,QAAQ,IAAI,MAAM,OAAO,SAAS,WAAW;AACnD,sBAAkB;AAClB,WAAO;AAAA;AAAA,EAGT,QAAwB;AACtB,WAAO;AAAA;AAAA,EAGT,mBAAyC;AACvC,QAAI,mBAAmB,CAAC,gBAAgB;AACtC,aAAO,QAAQ,QAAQ;AAAA;AAGzB,WAAO,eAAe;AAAA;AAAA;",
  "names": []
}
