{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/AccessibilityModel.ts"],
  "sourcesContent": ["// Copyright (c) 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\n\nimport type {DOMNode} from './DOMModel.js';\nimport {DeferredDOMNode} from './DOMModel.js';\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum CoreAxPropertyName {\n  Name = 'name',\n  Description = 'description',\n  Value = 'value',\n  Role = 'role',\n}\n\nexport interface CoreOrProtocolAxProperty {\n  name: CoreAxPropertyName|Protocol.Accessibility.AXPropertyName;\n  value: Protocol.Accessibility.AXValue;\n}\n\nexport class AccessibilityNode {\n  readonly #accessibilityModelInternal: AccessibilityModel;\n  readonly #idInternal: Protocol.Accessibility.AXNodeId;\n  readonly #backendDOMNodeIdInternal: Protocol.DOM.BackendNodeId|null;\n  readonly #deferredDOMNodeInternal: DeferredDOMNode|null;\n  readonly #ignoredInternal: boolean;\n  readonly #ignoredReasonsInternal: Protocol.Accessibility.AXProperty[]|undefined;\n  readonly #roleInternal: Protocol.Accessibility.AXValue|null;\n  readonly #nameInternal: Protocol.Accessibility.AXValue|null;\n  readonly #descriptionInternal: Protocol.Accessibility.AXValue|null;\n  readonly #valueInternal: Protocol.Accessibility.AXValue|null;\n  readonly #propertiesInternal: Protocol.Accessibility.AXProperty[]|null;\n  readonly #parentId: Protocol.Accessibility.AXNodeId|null;\n  readonly #frameId: Protocol.Page.FrameId|null;\n  readonly #childIds: Protocol.Accessibility.AXNodeId[]|null;\n\n  constructor(accessibilityModel: AccessibilityModel, payload: Protocol.Accessibility.AXNode) {\n    this.#accessibilityModelInternal = accessibilityModel;\n\n    this.#idInternal = payload.nodeId;\n    accessibilityModel.setAXNodeForAXId(this.#idInternal, this);\n    if (payload.backendDOMNodeId) {\n      accessibilityModel.setAXNodeForBackendDOMNodeId(payload.backendDOMNodeId, this);\n      this.#backendDOMNodeIdInternal = payload.backendDOMNodeId;\n      this.#deferredDOMNodeInternal = new DeferredDOMNode(accessibilityModel.target(), payload.backendDOMNodeId);\n    } else {\n      this.#backendDOMNodeIdInternal = null;\n      this.#deferredDOMNodeInternal = null;\n    }\n    this.#ignoredInternal = payload.ignored;\n    if (this.#ignoredInternal && 'ignoredReasons' in payload) {\n      this.#ignoredReasonsInternal = payload.ignoredReasons;\n    }\n\n    this.#roleInternal = payload.role || null;\n    this.#nameInternal = payload.name || null;\n    this.#descriptionInternal = payload.description || null;\n    this.#valueInternal = payload.value || null;\n    this.#propertiesInternal = payload.properties || null;\n    this.#childIds = payload.childIds || null;\n    this.#parentId = payload.parentId || null;\n    if (payload.frameId && !payload.parentId) {\n      this.#frameId = payload.frameId;\n      accessibilityModel.setRootAXNodeForFrameId(payload.frameId, this);\n    } else {\n      this.#frameId = null;\n    }\n  }\n\n  id(): Protocol.Accessibility.AXNodeId {\n    return this.#idInternal;\n  }\n\n  accessibilityModel(): AccessibilityModel {\n    return this.#accessibilityModelInternal;\n  }\n\n  ignored(): boolean {\n    return this.#ignoredInternal;\n  }\n\n  ignoredReasons(): Protocol.Accessibility.AXProperty[]|null {\n    return this.#ignoredReasonsInternal || null;\n  }\n\n  role(): Protocol.Accessibility.AXValue|null {\n    return this.#roleInternal || null;\n  }\n\n  coreProperties(): CoreOrProtocolAxProperty[] {\n    const properties: CoreOrProtocolAxProperty[] = [];\n\n    if (this.#nameInternal) {\n      properties.push({name: CoreAxPropertyName.Name, value: this.#nameInternal});\n    }\n    if (this.#descriptionInternal) {\n      properties.push({name: CoreAxPropertyName.Description, value: this.#descriptionInternal});\n    }\n    if (this.#valueInternal) {\n      properties.push({name: CoreAxPropertyName.Value, value: this.#valueInternal});\n    }\n\n    return properties;\n  }\n\n  name(): Protocol.Accessibility.AXValue|null {\n    return this.#nameInternal || null;\n  }\n\n  description(): Protocol.Accessibility.AXValue|null {\n    return this.#descriptionInternal || null;\n  }\n\n  value(): Protocol.Accessibility.AXValue|null {\n    return this.#valueInternal || null;\n  }\n\n  properties(): Protocol.Accessibility.AXProperty[]|null {\n    return this.#propertiesInternal || null;\n  }\n\n  parentNode(): AccessibilityNode|null {\n    if (this.#parentId) {\n      return this.#accessibilityModelInternal.axNodeForId(this.#parentId);\n    }\n    return null;\n  }\n\n  isDOMNode(): boolean {\n    return Boolean(this.#backendDOMNodeIdInternal);\n  }\n\n  backendDOMNodeId(): Protocol.DOM.BackendNodeId|null {\n    return this.#backendDOMNodeIdInternal;\n  }\n\n  deferredDOMNode(): DeferredDOMNode|null {\n    return this.#deferredDOMNodeInternal;\n  }\n\n  highlightDOMNode(): void {\n    const deferredNode = this.deferredDOMNode();\n    if (!deferredNode) {\n      return;\n    }\n    // Highlight node in page.\n    deferredNode.highlight();\n  }\n\n  children(): AccessibilityNode[] {\n    if (!this.#childIds) {\n      return [];\n    }\n\n    const children = [];\n    for (const childId of this.#childIds) {\n      const child = this.#accessibilityModelInternal.axNodeForId(childId);\n      if (child) {\n        children.push(child);\n      }\n    }\n\n    return children;\n  }\n\n  numChildren(): number {\n    if (!this.#childIds) {\n      return 0;\n    }\n    return this.#childIds.length;\n  }\n\n  hasOnlyUnloadedChildren(): boolean {\n    if (!this.#childIds || !this.#childIds.length) {\n      return false;\n    }\n    return this.#childIds.every(id => this.#accessibilityModelInternal.axNodeForId(id) === null);\n  }\n\n  hasUnloadedChildren(): boolean {\n    if (!this.#childIds || !this.#childIds.length) {\n      return false;\n    }\n    return this.#childIds.some(id => this.#accessibilityModelInternal.axNodeForId(id) === null);\n  }\n  // Only the root node gets a frameId, so nodes have to walk up the tree to find their frameId.\n  getFrameId(): Protocol.Page.FrameId|null {\n    return this.#frameId || this.parentNode()?.getFrameId() || null;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  TreeUpdated = 'TreeUpdated',\n}\n\nexport type EventTypes = {\n  [Events.TreeUpdated]: {root?: AccessibilityNode},\n};\n\nexport class AccessibilityModel extends SDKModel<EventTypes> implements ProtocolProxyApi.AccessibilityDispatcher {\n  agent: ProtocolProxyApi.AccessibilityApi;\n  #axIdToAXNode: Map<string, AccessibilityNode>;\n  #backendDOMNodeIdToAXNode: Map<Protocol.DOM.BackendNodeId, AccessibilityNode>;\n  #frameIdToAXNode: Map<Protocol.Page.FrameId, AccessibilityNode>;\n  #pendingChildRequests: Map<string, Promise<Protocol.Accessibility.GetChildAXNodesResponse>>;\n  #root: AccessibilityNode|null;\n\n  constructor(target: Target) {\n    super(target);\n    target.registerAccessibilityDispatcher(this);\n    this.agent = target.accessibilityAgent();\n    void this.resumeModel();\n\n    this.#axIdToAXNode = new Map();\n    this.#backendDOMNodeIdToAXNode = new Map();\n    this.#frameIdToAXNode = new Map();\n    this.#pendingChildRequests = new Map();\n    this.#root = null;\n  }\n\n  clear(): void {\n    this.#root = null;\n    this.#axIdToAXNode.clear();\n    this.#backendDOMNodeIdToAXNode.clear();\n    this.#frameIdToAXNode.clear();\n  }\n\n  async resumeModel(): Promise<void> {\n    await this.agent.invoke_enable();\n  }\n\n  async suspendModel(): Promise<void> {\n    await this.agent.invoke_disable();\n  }\n\n  async requestPartialAXTree(node: DOMNode): Promise<void> {\n    const {nodes} = await this.agent.invoke_getPartialAXTree({nodeId: node.id, fetchRelatives: true});\n    if (!nodes) {\n      return;\n    }\n    const axNodes = [];\n    for (const payload of nodes) {\n      axNodes.push(new AccessibilityNode(this, payload));\n    }\n  }\n\n  loadComplete({root}: Protocol.Accessibility.LoadCompleteEvent): void {\n    this.clear();\n    this.#root = new AccessibilityNode(this, root);\n    this.dispatchEventToListeners(Events.TreeUpdated, {root: this.#root});\n  }\n\n  nodesUpdated({nodes}: Protocol.Accessibility.NodesUpdatedEvent): void {\n    this.createNodesFromPayload(nodes);\n    this.dispatchEventToListeners(Events.TreeUpdated, {});\n    return;\n  }\n\n  private createNodesFromPayload(payloadNodes: Protocol.Accessibility.AXNode[]): AccessibilityNode[] {\n    const accessibilityNodes = payloadNodes.map(node => {\n      const sdkNode = new AccessibilityNode(this, node);\n      return sdkNode;\n    });\n\n    return accessibilityNodes;\n  }\n\n  async requestRootNode(frameId?: Protocol.Page.FrameId): Promise<AccessibilityNode|undefined> {\n    if (frameId && this.#frameIdToAXNode.has(frameId)) {\n      return this.#frameIdToAXNode.get(frameId);\n    }\n    if (!frameId && this.#root) {\n      return this.#root;\n    }\n    const {node} = await this.agent.invoke_getRootAXNode({frameId});\n    if (!node) {\n      return;\n    }\n    return this.createNodesFromPayload([node])[0];\n  }\n\n  async requestAXChildren(nodeId: Protocol.Accessibility.AXNodeId, frameId?: Protocol.Page.FrameId):\n      Promise<AccessibilityNode[]> {\n    const parent = this.#axIdToAXNode.get(nodeId);\n    if (!parent) {\n      throw Error('Cannot request children before parent');\n    }\n    if (!parent.hasUnloadedChildren()) {\n      return parent.children();\n    }\n\n    const request = this.#pendingChildRequests.get(nodeId);\n    if (request) {\n      await request;\n    } else {\n      const request = this.agent.invoke_getChildAXNodes({id: nodeId, frameId});\n      this.#pendingChildRequests.set(nodeId, request);\n      const result = await request;\n      if (!result.getError()) {\n        this.createNodesFromPayload(result.nodes);\n        this.#pendingChildRequests.delete(nodeId);\n      }\n    }\n    return parent.children();\n  }\n\n  async requestAndLoadSubTreeToNode(node: DOMNode): Promise<AccessibilityNode[]|null> {\n    // Node may have already been loaded, so don't bother requesting it again.\n    const result = [];\n    let ancestor = this.axNodeForDOMNode(node);\n    while (ancestor) {\n      result.push(ancestor);\n      const parent = ancestor.parentNode();\n      if (!parent) {\n        return result;\n      }\n      ancestor = parent;\n    }\n    const {nodes} = await this.agent.invoke_getAXNodeAndAncestors({backendNodeId: node.backendNodeId()});\n    if (!nodes) {\n      return null;\n    }\n    const ancestors = this.createNodesFromPayload(nodes);\n\n    return ancestors;\n  }\n\n  axNodeForId(axId: Protocol.Accessibility.AXNodeId): AccessibilityNode|null {\n    return this.#axIdToAXNode.get(axId) || null;\n  }\n\n  setRootAXNodeForFrameId(frameId: Protocol.Page.FrameId, axNode: AccessibilityNode): void {\n    this.#frameIdToAXNode.set(frameId, axNode);\n  }\n\n  axNodeForFrameId(frameId: Protocol.Page.FrameId): AccessibilityNode|null {\n    return this.#frameIdToAXNode.get(frameId) ?? null;\n  }\n\n  setAXNodeForAXId(axId: string, axNode: AccessibilityNode): void {\n    this.#axIdToAXNode.set(axId, axNode);\n  }\n\n  axNodeForDOMNode(domNode: DOMNode|null): AccessibilityNode|null {\n    if (!domNode) {\n      return null;\n    }\n    return this.#backendDOMNodeIdToAXNode.get(domNode.backendNodeId()) ?? null;\n  }\n\n  setAXNodeForBackendDOMNodeId(backendDOMNodeId: Protocol.DOM.BackendNodeId, axNode: AccessibilityNode): void {\n    this.#backendDOMNodeIdToAXNode.set(backendDOMNodeId, axNode);\n  }\n\n  getAgent(): ProtocolProxyApi.AccessibilityApi {\n    return this.agent;\n  }\n}\n\nSDKModel.register(AccessibilityModel, {capabilities: Capability.DOM, autostart: false});\n"],
  "mappings": "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",
  "names": []
}
