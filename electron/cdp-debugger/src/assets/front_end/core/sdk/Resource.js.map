{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/Resource.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {NetworkRequest} from './NetworkRequest.js';\nimport {Events} from './NetworkRequest.js';\nimport type {ResourceTreeFrame, ResourceTreeModel} from './ResourceTreeModel.js';\n\nexport class Resource implements TextUtils.ContentProvider.ContentProvider {\n  readonly #resourceTreeModel: ResourceTreeModel;\n  #requestInternal: NetworkRequest|null;\n  #urlInternal!: Platform.DevToolsPath.UrlString;\n  readonly #documentURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #frameIdInternal: Protocol.Page.FrameId|null;\n  readonly #loaderIdInternal: Protocol.Network.LoaderId|null;\n  readonly #type: Common.ResourceType.ResourceType;\n  #mimeTypeInternal: string;\n  #isGeneratedInternal: boolean;\n  #lastModifiedInternal: Date|null;\n  readonly #contentSizeInternal: number|null;\n  #contentInternal!: string|null;\n  #contentEncodedInternal!: boolean;\n  readonly #pendingContentCallbacks: ((arg0: Object|null) => void)[];\n  #parsedURLInternal?: Common.ParsedURL.ParsedURL;\n  #contentRequested?: boolean;\n\n  constructor(\n      resourceTreeModel: ResourceTreeModel, request: NetworkRequest|null, url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString, frameId: Protocol.Page.FrameId|null,\n      loaderId: Protocol.Network.LoaderId|null, type: Common.ResourceType.ResourceType, mimeType: string,\n      lastModified: Date|null, contentSize: number|null) {\n    this.#resourceTreeModel = resourceTreeModel;\n    this.#requestInternal = request;\n    this.url = url;\n\n    this.#documentURLInternal = documentURL;\n    this.#frameIdInternal = frameId;\n    this.#loaderIdInternal = loaderId;\n    this.#type = type || Common.ResourceType.resourceTypes.Other;\n    this.#mimeTypeInternal = mimeType;\n    this.#isGeneratedInternal = false;\n\n    this.#lastModifiedInternal = lastModified && Platform.DateUtilities.isValid(lastModified) ? lastModified : null;\n    this.#contentSizeInternal = contentSize;\n    this.#pendingContentCallbacks = [];\n    if (this.#requestInternal && !this.#requestInternal.finished) {\n      this.#requestInternal.addEventListener(Events.FinishedLoading, this.requestFinished, this);\n    }\n  }\n\n  lastModified(): Date|null {\n    if (this.#lastModifiedInternal || !this.#requestInternal) {\n      return this.#lastModifiedInternal;\n    }\n    const lastModifiedHeader = this.#requestInternal.responseLastModified();\n    const date = lastModifiedHeader ? new Date(lastModifiedHeader) : null;\n    this.#lastModifiedInternal = date && Platform.DateUtilities.isValid(date) ? date : null;\n    return this.#lastModifiedInternal;\n  }\n\n  contentSize(): number|null {\n    if (typeof this.#contentSizeInternal === 'number' || !this.#requestInternal) {\n      return this.#contentSizeInternal;\n    }\n    return this.#requestInternal.resourceSize;\n  }\n\n  get request(): NetworkRequest|null {\n    return this.#requestInternal;\n  }\n\n  get url(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  set url(x: Platform.DevToolsPath.UrlString) {\n    this.#urlInternal = x;\n    this.#parsedURLInternal = new Common.ParsedURL.ParsedURL(x);\n  }\n\n  get parsedURL(): Common.ParsedURL.ParsedURL|undefined {\n    return this.#parsedURLInternal;\n  }\n\n  get documentURL(): Platform.DevToolsPath.UrlString {\n    return this.#documentURLInternal;\n  }\n\n  get frameId(): Protocol.Page.FrameId|null {\n    return this.#frameIdInternal;\n  }\n\n  get loaderId(): Protocol.Network.LoaderId|null {\n    return this.#loaderIdInternal;\n  }\n\n  get displayName(): string {\n    return this.#parsedURLInternal ? this.#parsedURLInternal.displayName : '';\n  }\n\n  resourceType(): Common.ResourceType.ResourceType {\n    return this.#requestInternal ? this.#requestInternal.resourceType() : this.#type;\n  }\n\n  get mimeType(): string {\n    return this.#requestInternal ? this.#requestInternal.mimeType : this.#mimeTypeInternal;\n  }\n\n  get content(): string|null {\n    return this.#contentInternal;\n  }\n\n  get isGenerated(): boolean {\n    return this.#isGeneratedInternal;\n  }\n\n  set isGenerated(val: boolean) {\n    this.#isGeneratedInternal = val;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    if (this.resourceType() === Common.ResourceType.resourceTypes.Document &&\n        this.mimeType.indexOf('javascript') !== -1) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return this.resourceType();\n  }\n\n  async contentEncoded(): Promise<boolean> {\n    await this.requestContent();\n    return this.#contentEncodedInternal;\n  }\n\n  async requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    if (typeof this.#contentInternal !== 'undefined') {\n      return {\n        content: (this.#contentInternal as string),\n        isEncoded: this.#contentEncodedInternal,\n      };\n    }\n\n    return new Promise(resolve => {\n      this.#pendingContentCallbacks.push((resolve as (arg0: Object|null) => void));\n      if (!this.#requestInternal || this.#requestInternal.finished) {\n        void this.innerRequestContent();\n      }\n    });\n  }\n\n  canonicalMimeType(): string {\n    return this.contentType().canonicalMimeType() || this.mimeType;\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.frameId) {\n      return [];\n    }\n    if (this.request) {\n      return this.request.searchInContent(query, caseSensitive, isRegex);\n    }\n    const result = await this.#resourceTreeModel.target().pageAgent().invoke_searchInResource(\n        {frameId: this.frameId, url: this.url, query, caseSensitive, isRegex});\n    return result.result || [];\n  }\n\n  async populateImageSource(image: HTMLImageElement): Promise<void> {\n    const {content} = await this.requestContent();\n    const encoded = this.#contentEncodedInternal;\n    image.src =\n        TextUtils.ContentProvider.contentAsDataURL(content, this.#mimeTypeInternal, encoded) || this.#urlInternal;\n  }\n\n  private requestFinished(): void {\n    if (this.#requestInternal) {\n      this.#requestInternal.removeEventListener(Events.FinishedLoading, this.requestFinished, this);\n    }\n    if (this.#pendingContentCallbacks.length) {\n      void this.innerRequestContent();\n    }\n  }\n\n  private async innerRequestContent(): Promise<void> {\n    if (this.#contentRequested) {\n      return;\n    }\n    this.#contentRequested = true;\n\n    let loadResult: {\n      content: string,\n      isEncoded: boolean,\n    }|{\n      content: null,\n      error: string,\n      isEncoded: false,\n    }|{\n      content: string,\n      isEncoded: boolean,\n    }|null = null;\n    if (this.request) {\n      const contentData = await this.request.contentData();\n      if (!contentData.error) {\n        this.#contentInternal = contentData.content;\n        this.#contentEncodedInternal = contentData.encoded;\n        loadResult = {content: (contentData.content as string), isEncoded: contentData.encoded};\n      }\n    }\n    if (!loadResult) {\n      const response = await this.#resourceTreeModel.target().pageAgent().invoke_getResourceContent(\n          {frameId: this.frameId as Protocol.Page.FrameId, url: this.url});\n      const protocolError = response.getError();\n      if (protocolError) {\n        this.#contentInternal = null;\n        loadResult = {content: null, error: protocolError, isEncoded: false};\n      } else {\n        this.#contentInternal = response.content;\n        loadResult = {content: response.content, isEncoded: response.base64Encoded};\n      }\n      this.#contentEncodedInternal = response.base64Encoded;\n    }\n\n    if (this.#contentInternal === null) {\n      this.#contentEncodedInternal = false;\n    }\n\n    for (const callback of this.#pendingContentCallbacks.splice(0)) {\n      callback(loadResult);\n    }\n\n    this.#contentRequested = undefined;\n  }\n\n  hasTextContent(): boolean {\n    if (this.#type.isTextType()) {\n      return true;\n    }\n    if (this.#type === Common.ResourceType.resourceTypes.Other) {\n      return Boolean(this.#contentInternal) && !this.#contentEncodedInternal;\n    }\n    return false;\n  }\n\n  frame(): ResourceTreeFrame|null {\n    return this.#frameIdInternal ? this.#resourceTreeModel.frameForId(this.#frameIdInternal) : null;\n  }\n\n  statusCode(): number {\n    return this.#requestInternal ? this.#requestInternal.statusCode : 0;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
