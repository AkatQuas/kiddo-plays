{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/SecurityOriginManager.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class SecurityOriginManager extends SDKModel<EventTypes> {\n  #mainSecurityOriginInternal: string;\n  #unreachableMainSecurityOriginInternal: string|null;\n  #securityOriginsInternal: Set<string>;\n  constructor(target: Target) {\n    super(target);\n\n    // if a URL is unreachable, the browser will jump to an error page at\n    // 'chrome-error://chromewebdata/', and |this.#mainSecurityOriginInternal| stores\n    // its origin. In this situation, the original unreachable URL's security\n    // origin will be stored in |this.#unreachableMainSecurityOriginInternal|.\n    this.#mainSecurityOriginInternal = '';\n    this.#unreachableMainSecurityOriginInternal = '';\n\n    this.#securityOriginsInternal = new Set();\n  }\n\n  updateSecurityOrigins(securityOrigins: Set<string>): void {\n    const oldOrigins = this.#securityOriginsInternal;\n    this.#securityOriginsInternal = securityOrigins;\n\n    for (const origin of oldOrigins) {\n      if (!this.#securityOriginsInternal.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginRemoved, origin);\n      }\n    }\n\n    for (const origin of this.#securityOriginsInternal) {\n      if (!oldOrigins.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginAdded, origin);\n      }\n    }\n  }\n\n  securityOrigins(): string[] {\n    return [...this.#securityOriginsInternal];\n  }\n\n  mainSecurityOrigin(): string {\n    return this.#mainSecurityOriginInternal;\n  }\n\n  unreachableMainSecurityOrigin(): string|null {\n    return this.#unreachableMainSecurityOriginInternal;\n  }\n\n  setMainSecurityOrigin(securityOrigin: string, unreachableSecurityOrigin: string): void {\n    this.#mainSecurityOriginInternal = securityOrigin;\n    this.#unreachableMainSecurityOriginInternal = unreachableSecurityOrigin || null;\n    this.dispatchEventToListeners(Events.MainSecurityOriginChanged, {\n      mainSecurityOrigin: this.#mainSecurityOriginInternal,\n      unreachableMainSecurityOrigin: this.#unreachableMainSecurityOriginInternal,\n    });\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  SecurityOriginAdded = 'SecurityOriginAdded',\n  SecurityOriginRemoved = 'SecurityOriginRemoved',\n  MainSecurityOriginChanged = 'MainSecurityOriginChanged',\n}\n\nexport interface MainSecurityOriginChangedEvent {\n  mainSecurityOrigin: string;\n  unreachableMainSecurityOrigin: string|null;\n}\n\nexport type EventTypes = {\n  [Events.SecurityOriginAdded]: string,\n  [Events.SecurityOriginRemoved]: string,\n  [Events.MainSecurityOriginChanged]: MainSecurityOriginChangedEvent,\n};\n\n// TODO(jarhar): this is the one of the two usages of Capability.None. Do something about it!\nSDKModel.register(SecurityOriginManager, {capabilities: Capability.None, autostart: false});\n"],
  "mappings": "AAKA;AACA;AAEO,2CAAoC,SAAqB;AAAA;AAAA;AAAA;AAAA,EAI9D,YAAY,QAAgB;AAC1B,UAAM;AAMN,uCAAmC;AACnC,kDAA8C;AAE9C,oCAAgC,oBAAI;AAAA;AAAA,EAGtC,sBAAsB,iBAAoC;AACxD,UAAM,aAAa;AACnB,oCAAgC;AAEhC,eAAW,UAAU,YAAY;AAC/B,UAAI,CAAC,8BAA8B,IAAI,SAAS;AAC9C,aAAK,yBAAyB,OAAO,uBAAuB;AAAA;AAAA;AAIhE,eAAW,UAAU,+BAA+B;AAClD,UAAI,CAAC,WAAW,IAAI,SAAS;AAC3B,aAAK,yBAAyB,OAAO,qBAAqB;AAAA;AAAA;AAAA;AAAA,EAKhE,kBAA4B;AAC1B,WAAO,CAAC,GAAG;AAAA;AAAA,EAGb,qBAA6B;AAC3B,WAAO;AAAA;AAAA,EAGT,gCAA6C;AAC3C,WAAO;AAAA;AAAA,EAGT,sBAAsB,gBAAwB,2BAAyC;AACrF,uCAAmC;AACnC,kDAA8C,6BAA6B;AAC3E,SAAK,yBAAyB,OAAO,2BAA2B;AAAA,MAC9D,oBAAoB;AAAA,MACpB,+BAA+B;AAAA;AAAA;AAAA;AAO9B,WAAK,SAAL,kBAAK,YAAL;AACL,mCAAsB;AACtB,qCAAwB;AACxB,yCAA4B;AAHlB;AAAA;AAkBZ,SAAS,SAAS,uBAAuB,EAAC,cAAc,WAAW,MAAM,WAAW;",
  "names": []
}
