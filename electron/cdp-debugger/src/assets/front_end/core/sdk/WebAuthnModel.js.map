{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/WebAuthnModel.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class WebAuthnModel extends SDKModel {\n  readonly #agent: ProtocolProxyApi.WebAuthnApi;\n  constructor(target: Target) {\n    super(target);\n    this.#agent = target.webAuthnAgent();\n  }\n\n  setVirtualAuthEnvEnabled(enable: boolean): Promise<Object> {\n    if (enable) {\n      return this.#agent.invoke_enable({enableUI: true});\n    }\n    return this.#agent.invoke_disable();\n  }\n\n  async addAuthenticator(options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Promise<Protocol.WebAuthn.AuthenticatorId> {\n    const response = await this.#agent.invoke_addVirtualAuthenticator({options});\n    return response.authenticatorId;\n  }\n\n  async removeAuthenticator(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<void> {\n    await this.#agent.invoke_removeVirtualAuthenticator({authenticatorId});\n  }\n\n  async setAutomaticPresenceSimulation(authenticatorId: Protocol.WebAuthn.AuthenticatorId, enabled: boolean):\n      Promise<void> {\n    await this.#agent.invoke_setAutomaticPresenceSimulation({authenticatorId, enabled});\n  }\n\n  async getCredentials(authenticatorId: Protocol.WebAuthn.AuthenticatorId): Promise<Protocol.WebAuthn.Credential[]> {\n    const response = await this.#agent.invoke_getCredentials({authenticatorId});\n    return response.credentials;\n  }\n\n  async removeCredential(authenticatorId: Protocol.WebAuthn.AuthenticatorId, credentialId: string): Promise<void> {\n    await this.#agent.invoke_removeCredential({authenticatorId, credentialId});\n  }\n}\n\nSDKModel.register(WebAuthnModel, {capabilities: Capability.WebAuthn, autostart: false});\n"],
  "mappings": "AAQA;AACA;AAEO,mCAA4B,SAAS;AAAA;AAAA,EAE1C,YAAY,QAAgB;AAC1B,UAAM;AACN,kBAAc,OAAO;AAAA;AAAA,EAGvB,yBAAyB,QAAkC;AACzD,QAAI,QAAQ;AACV,aAAO,YAAY,cAAc,EAAC,UAAU;AAAA;AAE9C,WAAO,YAAY;AAAA;AAAA,QAGf,iBAAiB,SACwB;AAC7C,UAAM,WAAW,MAAM,YAAY,+BAA+B,EAAC;AACnE,WAAO,SAAS;AAAA;AAAA,QAGZ,oBAAoB,iBAAmE;AAC3F,UAAM,YAAY,kCAAkC,EAAC;AAAA;AAAA,QAGjD,+BAA+B,iBAAoD,SACvE;AAChB,UAAM,YAAY,sCAAsC,EAAC,iBAAiB;AAAA;AAAA,QAGtE,eAAe,iBAA6F;AAChH,UAAM,WAAW,MAAM,YAAY,sBAAsB,EAAC;AAC1D,WAAO,SAAS;AAAA;AAAA,QAGZ,iBAAiB,iBAAoD,cAAqC;AAC9G,UAAM,YAAY,wBAAwB,EAAC,iBAAiB;AAAA;AAAA;AAIhE,SAAS,SAAS,eAAe,EAAC,cAAc,WAAW,UAAU,WAAW;",
  "names": []
}
