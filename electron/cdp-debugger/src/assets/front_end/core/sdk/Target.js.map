{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/Target.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type {TargetManager} from './TargetManager.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class Target extends ProtocolClient.InspectorBackend.TargetBase {\n  readonly #targetManagerInternal: TargetManager;\n  #nameInternal: string;\n  #inspectedURLInternal: Platform.DevToolsPath.UrlString;\n  #inspectedURLName: string;\n  readonly #capabilitiesMask: number;\n  #typeInternal: Type;\n  readonly #parentTargetInternal: Target|null;\n  #idInternal: Protocol.Target.TargetID|'main';\n  #modelByConstructor: Map<new(arg1: Target) => SDKModel, SDKModel>;\n  #isSuspended: boolean;\n  #targetInfoInternal: Protocol.Target.TargetInfo|undefined;\n  #creatingModels?: boolean;\n\n  constructor(\n      targetManager: TargetManager, id: Protocol.Target.TargetID|'main', name: string, type: Type,\n      parentTarget: Target|null, sessionId: string, suspended: boolean,\n      connection: ProtocolClient.InspectorBackend.Connection|null, targetInfo?: Protocol.Target.TargetInfo) {\n    const needsNodeJSPatching = type === Type.Node;\n    super(needsNodeJSPatching, parentTarget, sessionId, connection);\n    this.#targetManagerInternal = targetManager;\n    this.#nameInternal = name;\n    this.#inspectedURLInternal = Platform.DevToolsPath.EmptyUrlString;\n    this.#inspectedURLName = '';\n    this.#capabilitiesMask = 0;\n    switch (type) {\n      case Type.Frame:\n        this.#capabilitiesMask = Capability.Browser | Capability.Storage | Capability.DOM | Capability.JS |\n            Capability.Log | Capability.Network | Capability.Target | Capability.Tracing | Capability.Emulation |\n            Capability.Input | Capability.Inspector | Capability.Audits | Capability.WebAuthn | Capability.IO |\n            Capability.Media;\n        if (!parentTarget) {\n          // This matches backend exposing certain capabilities only for the main frame.\n          this.#capabilitiesMask |=\n              Capability.DeviceEmulation | Capability.ScreenCapture | Capability.Security | Capability.ServiceWorker;\n          // TODO(dgozman): we report service workers for the whole frame tree on the main frame,\n          // while we should be able to only cover the subtree corresponding to the target.\n        }\n        break;\n      case Type.ServiceWorker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.Inspector | Capability.IO;\n        if (!parentTarget) {\n          this.#capabilitiesMask |= Capability.Browser;\n        }\n        break;\n      case Type.SharedWorker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.IO | Capability.Media | Capability.Inspector;\n        break;\n      case Type.Worker:\n        this.#capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.IO | Capability.Media | Capability.Emulation;\n        break;\n      case Type.Node:\n        this.#capabilitiesMask = Capability.JS;\n        break;\n      case Type.AuctionWorklet:\n        this.#capabilitiesMask = Capability.JS | Capability.EventBreakpoints;\n        break;\n      case Type.Browser:\n        this.#capabilitiesMask = Capability.Target | Capability.IO;\n        break;\n    }\n    this.#typeInternal = type;\n    this.#parentTargetInternal = parentTarget;\n    this.#idInternal = id;\n    /* } */\n    this.#modelByConstructor = new Map();\n    this.#isSuspended = suspended;\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  createModels(required: Set<new(arg1: Target) => SDKModel>): void {\n    this.#creatingModels = true;\n    const registeredModels = Array.from(SDKModel.registeredModels.entries());\n    // Create early models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.early) {\n        this.model(modelClass);\n      }\n    }\n    // Create autostart and required models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.autostart || required.has(modelClass)) {\n        this.model(modelClass);\n      }\n    }\n    this.#creatingModels = false;\n  }\n\n  id(): Protocol.Target.TargetID|'main' {\n    return this.#idInternal;\n  }\n\n  name(): string {\n    return this.#nameInternal || this.#inspectedURLName;\n  }\n\n  type(): Type {\n    return this.#typeInternal;\n  }\n\n  markAsNodeJSForTest(): void {\n    super.markAsNodeJSForTest();\n    this.#typeInternal = Type.Node;\n  }\n\n  targetManager(): TargetManager {\n    return this.#targetManagerInternal;\n  }\n\n  hasAllCapabilities(capabilitiesMask: number): boolean {\n    // TODO(dgozman): get rid of this method, once we never observe targets with\n    // capability mask.\n    return (this.#capabilitiesMask & capabilitiesMask) === capabilitiesMask;\n  }\n\n  decorateLabel(label: string): string {\n    return (this.#typeInternal === Type.Worker || this.#typeInternal === Type.ServiceWorker) ? '\\u2699 ' + label :\n                                                                                               label;\n  }\n\n  parentTarget(): Target|null {\n    return this.#parentTargetInternal;\n  }\n\n  dispose(reason: string): void {\n    super.dispose(reason);\n    this.#targetManagerInternal.removeTarget(this);\n    for (const model of this.#modelByConstructor.values()) {\n      model.dispose();\n    }\n  }\n\n  model<T extends SDKModel>(modelClass: new(arg1: Target) => T): T|null {\n    if (!this.#modelByConstructor.get(modelClass)) {\n      const info = SDKModel.registeredModels.get(modelClass);\n      if (info === undefined) {\n        throw 'Model class is not registered @' + new Error().stack;\n      }\n      if ((this.#capabilitiesMask & info.capabilities) === info.capabilities) {\n        const model = new modelClass(this);\n        this.#modelByConstructor.set(modelClass, model);\n        if (!this.#creatingModels) {\n          this.#targetManagerInternal.modelAdded(this, modelClass, model);\n        }\n      }\n    }\n    return (this.#modelByConstructor.get(modelClass) as T) || null;\n  }\n\n  models(): Map<new(arg1: Target) => SDKModel, SDKModel> {\n    return this.#modelByConstructor;\n  }\n\n  inspectedURL(): Platform.DevToolsPath.UrlString {\n    return this.#inspectedURLInternal;\n  }\n\n  setInspectedURL(inspectedURL: Platform.DevToolsPath.UrlString): void {\n    this.#inspectedURLInternal = inspectedURL;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n    this.#inspectedURLName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + this.#idInternal;\n    if (!this.parentTarget()) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(\n          inspectedURL || Platform.DevToolsPath.EmptyUrlString);\n    }\n    this.#targetManagerInternal.onInspectedURLChange(this);\n    if (!this.#nameInternal) {\n      this.#targetManagerInternal.onNameChange(this);\n    }\n  }\n\n  async suspend(reason?: string): Promise<void> {\n    if (this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = true;\n\n    await Promise.all(Array.from(this.models().values(), m => m.preSuspendModel(reason)));\n    await Promise.all(Array.from(this.models().values(), m => m.suspendModel(reason)));\n  }\n\n  async resume(): Promise<void> {\n    if (!this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = false;\n\n    await Promise.all(Array.from(this.models().values(), m => m.resumeModel()));\n    await Promise.all(Array.from(this.models().values(), m => m.postResumeModel()));\n  }\n\n  suspended(): boolean {\n    return this.#isSuspended;\n  }\n\n  updateTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this.#targetInfoInternal = targetInfo;\n  }\n\n  targetInfo(): Protocol.Target.TargetInfo|undefined {\n    return this.#targetInfoInternal;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  Frame = 'frame',\n  ServiceWorker = 'service-worker',\n  Worker = 'worker',\n  SharedWorker = 'shared-worker',\n  Node = 'node',\n  Browser = 'browser',\n  AuctionWorklet = 'auction-worklet',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Capability {\n  Browser = 1 << 0,\n  DOM = 1 << 1,\n  JS = 1 << 2,\n  Log = 1 << 3,\n  Network = 1 << 4,\n  Target = 1 << 5,\n  ScreenCapture = 1 << 6,\n  Tracing = 1 << 7,\n  Emulation = 1 << 8,\n  Security = 1 << 9,\n  Input = 1 << 10,\n  Inspector = 1 << 11,\n  DeviceEmulation = 1 << 12,\n  Storage = 1 << 13,\n  ServiceWorker = 1 << 14,\n  Audits = 1 << 15,\n  WebAuthn = 1 << 16,\n  IO = 1 << 17,\n  Media = 1 << 18,\n  EventBreakpoints = 1 << 19,\n  None = 0,\n}\n"],
  "mappings": "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",
  "names": []
}
