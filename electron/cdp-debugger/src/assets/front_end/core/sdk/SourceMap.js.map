{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/SourceMap.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {CompilerSourceMappingContentProvider} from './CompilerSourceMappingContentProvider.js';\nimport type {PageResourceLoadInitiator} from './PageResourceLoader.js';\nimport {PageResourceLoader} from './PageResourceLoader.js';\n\nconst UIStrings = {\n  /**\n  *@description Error message when failing to load a source map text via the network\n  *@example {https://example.com/sourcemap.map} PH1\n  *@example {A certificate error occurred} PH2\n  */\n  couldNotLoadContentForSS: 'Could not load content for {PH1}: {PH2}',\n  /**\n  *@description Error message when failing to load a script source text via the network\n  *@example {https://example.com} PH1\n  *@example {Unexpected token} PH2\n  */\n  couldNotParseContentForSS: 'Could not parse content for {PH1}: {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/SourceMap.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SourceMap {\n  compiledURL(): Platform.DevToolsPath.UrlString;\n  url(): Platform.DevToolsPath.UrlString;\n  sourceURLs(): Platform.DevToolsPath.UrlString[];\n  sourceContentProvider(sourceURL: Platform.DevToolsPath.UrlString, contentType: Common.ResourceType.ResourceType):\n      TextUtils.ContentProvider.ContentProvider;\n  embeddedContentByURL(sourceURL: Platform.DevToolsPath.UrlString): string|null;\n  findEntry(lineNumber: number, columnNumber: number): SourceMapEntry|null;\n  findEntryRanges(lineNumber: number, columnNumber: number): {\n    range: TextUtils.TextRange.TextRange,\n    sourceRange: TextUtils.TextRange.TextRange,\n    sourceURL: Platform.DevToolsPath.UrlString,\n  }|null;\n  findReverseRanges(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      TextUtils.TextRange.TextRange[];\n  sourceLineMapping(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      SourceMapEntry|null;\n  mappings(): SourceMapEntry[];\n  mapsOrigin(): boolean;\n}\n\nexport class SourceMapV3 {\n  version!: number;\n  file!: string|undefined;\n  sources!: Platform.DevToolsPath.UrlString[];\n  sections!: Section[]|undefined;\n  mappings!: string;\n  sourceRoot!: Platform.DevToolsPath.UrlString|undefined;\n  names!: string[]|undefined;\n  sourcesContent!: string|undefined;\n  constructor() {\n  }\n}\n\nexport class Section {\n  map!: SourceMapV3;\n  offset!: Offset;\n  url!: Platform.DevToolsPath.UrlString|undefined;\n  constructor() {\n  }\n}\n\nexport class Offset {\n  line!: number;\n  column!: number;\n  constructor() {\n  }\n}\n\nexport class SourceMapEntry {\n  lineNumber: number;\n  columnNumber: number;\n  sourceURL: Platform.DevToolsPath.UrlString|undefined;\n  sourceLineNumber: number;\n  sourceColumnNumber: number;\n  name: string|undefined;\n\n  constructor(\n      lineNumber: number, columnNumber: number, sourceURL?: Platform.DevToolsPath.UrlString, sourceLineNumber?: number,\n      sourceColumnNumber?: number, name?: string) {\n    this.lineNumber = lineNumber;\n    this.columnNumber = columnNumber;\n    this.sourceURL = sourceURL;\n    this.sourceLineNumber = (sourceLineNumber as number);\n    this.sourceColumnNumber = (sourceColumnNumber as number);\n    this.name = name;\n  }\n\n  static compare(entry1: SourceMapEntry, entry2: SourceMapEntry): number {\n    if (entry1.lineNumber !== entry2.lineNumber) {\n      return entry1.lineNumber - entry2.lineNumber;\n    }\n    return entry1.columnNumber - entry2.columnNumber;\n  }\n}\n\nconst base64Digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Map = new Map<string, number>();\n\nfor (let i = 0; i < base64Digits.length; ++i) {\n  base64Map.set(base64Digits.charAt(i), i);\n}\n\nconst sourceMapToSourceList = new WeakMap<SourceMapV3, Platform.DevToolsPath.UrlString[]>();\n\nexport class TextSourceMap implements SourceMap {\n  readonly #initiator: PageResourceLoadInitiator;\n  #json: SourceMapV3|null;\n  readonly #compiledURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #sourceMappingURL: Platform.DevToolsPath.UrlString;\n  readonly #baseURL: Platform.DevToolsPath.UrlString;\n  #mappingsInternal: SourceMapEntry[]|null;\n  readonly #sourceInfos: Map<Platform.DevToolsPath.UrlString, TextSourceMap.SourceInfo>;\n\n  /**\n   * Implements Source Map V3 model. See https://github.com/google/closure-compiler/wiki/Source-Maps\n   * for format description.\n   */\n  constructor(\n      compiledURL: Platform.DevToolsPath.UrlString, sourceMappingURL: Platform.DevToolsPath.UrlString,\n      payload: SourceMapV3, initiator: PageResourceLoadInitiator) {\n    this.#initiator = initiator;\n    this.#json = payload;\n    this.#compiledURLInternal = compiledURL;\n    this.#sourceMappingURL = sourceMappingURL;\n    this.#baseURL = (sourceMappingURL.startsWith('data:') ? compiledURL : sourceMappingURL);\n\n    this.#mappingsInternal = null;\n    this.#sourceInfos = new Map();\n    if (this.#json.sections) {\n      const sectionWithURL = Boolean(this.#json.sections.find(section => Boolean(section.url)));\n      if (sectionWithURL) {\n        Common.Console.Console.instance().warn(\n            `SourceMap \"${sourceMappingURL}\" contains unsupported \"URL\" field in one of its sections.`);\n      }\n    }\n    this.eachSection(this.parseSources.bind(this));\n  }\n\n  /**\n   * @throws {!Error}\n   */\n  static async load(\n      sourceMapURL: Platform.DevToolsPath.UrlString, compiledURL: Platform.DevToolsPath.UrlString,\n      initiator: PageResourceLoadInitiator): Promise<TextSourceMap> {\n    let updatedContent;\n    try {\n      const {content} = await PageResourceLoader.instance().loadResource(sourceMapURL, initiator);\n      updatedContent = content;\n      if (content.slice(0, 3) === ')]}') {\n        updatedContent = content.substring(content.indexOf('\\n'));\n      }\n    } catch (error) {\n      throw new Error(i18nString(UIStrings.couldNotLoadContentForSS, {PH1: sourceMapURL, PH2: error.message}));\n    }\n\n    try {\n      const payload = (JSON.parse(updatedContent) as SourceMapV3);\n      return new TextSourceMap(compiledURL, sourceMapURL, payload, initiator);\n    } catch (error) {\n      throw new Error(i18nString(UIStrings.couldNotParseContentForSS, {PH1: sourceMapURL, PH2: error.message}));\n    }\n  }\n\n  compiledURL(): Platform.DevToolsPath.UrlString {\n    return this.#compiledURLInternal;\n  }\n\n  url(): Platform.DevToolsPath.UrlString {\n    return this.#sourceMappingURL;\n  }\n\n  sourceURLs(): Platform.DevToolsPath.UrlString[] {\n    return [...this.#sourceInfos.keys()];\n  }\n\n  sourceContentProvider(sourceURL: Platform.DevToolsPath.UrlString, contentType: Common.ResourceType.ResourceType):\n      TextUtils.ContentProvider.ContentProvider {\n    const info = this.#sourceInfos.get(sourceURL);\n    if (info && info.content) {\n      return TextUtils.StaticContentProvider.StaticContentProvider.fromString(sourceURL, contentType, info.content);\n    }\n    return new CompilerSourceMappingContentProvider(sourceURL, contentType, this.#initiator);\n  }\n\n  embeddedContentByURL(sourceURL: Platform.DevToolsPath.UrlString): string|null {\n    const entry = this.#sourceInfos.get(sourceURL);\n    if (!entry) {\n      return null;\n    }\n    return entry.content;\n  }\n\n  findEntry(lineNumber: number, columnNumber: number): SourceMapEntry|null {\n    const mappings = this.mappings();\n    const index = Platform.ArrayUtilities.upperBound(\n        mappings, undefined, (unused, entry) => lineNumber - entry.lineNumber || columnNumber - entry.columnNumber);\n    return index ? mappings[index - 1] : null;\n  }\n\n  findEntryRanges(lineNumber: number, columnNumber: number): {\n    range: TextUtils.TextRange.TextRange,\n    sourceRange: TextUtils.TextRange.TextRange,\n    sourceURL: Platform.DevToolsPath.UrlString,\n  }|null {\n    const mappings = this.mappings();\n    const index = Platform.ArrayUtilities.upperBound(\n        mappings, undefined, (unused, entry) => lineNumber - entry.lineNumber || columnNumber - entry.columnNumber);\n    if (!index) {\n      // If the line and column are preceding all the entries, then there is nothing to map.\n      return null;\n    }\n    const sourceURL = mappings[index].sourceURL;\n    if (!sourceURL) {\n      return null;\n    }\n\n    // Let us compute the range that contains the source position in the compiled code.\n    const endLine = index < mappings.length ? mappings[index].lineNumber : 2 ** 31 - 1;\n    const endColumn = index < mappings.length ? mappings[index].columnNumber : 2 ** 31 - 1;\n    const range = new TextUtils.TextRange.TextRange(\n        mappings[index - 1].lineNumber, mappings[index - 1].columnNumber, endLine, endColumn);\n\n    // Now try to find the corresponding token in the original code.\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const startSourceLine = mappings[index - 1].sourceLineNumber;\n    const startSourceColumn = mappings[index - 1].sourceColumnNumber;\n    const endReverseIndex = Platform.ArrayUtilities.upperBound(\n        reverseMappings, undefined,\n        (unused, i) =>\n            startSourceLine - mappings[i].sourceLineNumber || startSourceColumn - mappings[i].sourceColumnNumber);\n    if (!endReverseIndex) {\n      return null;\n    }\n    const endSourceLine = endReverseIndex < reverseMappings.length ?\n        mappings[reverseMappings[endReverseIndex]].sourceLineNumber :\n        2 ** 31 - 1;\n    const endSourceColumn = endReverseIndex < reverseMappings.length ?\n        mappings[reverseMappings[endReverseIndex]].sourceColumnNumber :\n        2 ** 31 - 1;\n\n    const sourceRange =\n        new TextUtils.TextRange.TextRange(startSourceLine, startSourceColumn, endSourceLine, endSourceColumn);\n    return {range, sourceRange, sourceURL};\n  }\n\n  sourceLineMapping(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      SourceMapEntry|null {\n    const mappings = this.mappings();\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const first = Platform.ArrayUtilities.lowerBound(reverseMappings, lineNumber, lineComparator);\n    const last = Platform.ArrayUtilities.upperBound(reverseMappings, lineNumber, lineComparator);\n    if (first >= reverseMappings.length || mappings[reverseMappings[first]].sourceLineNumber !== lineNumber) {\n      return null;\n    }\n    const columnMappings = reverseMappings.slice(first, last);\n    if (!columnMappings.length) {\n      return null;\n    }\n    const index = Platform.ArrayUtilities.lowerBound(\n        columnMappings, columnNumber, (columnNumber, i) => columnNumber - mappings[i].sourceColumnNumber);\n    return index >= columnMappings.length ? mappings[columnMappings[columnMappings.length - 1]] :\n                                            mappings[columnMappings[index]];\n\n    function lineComparator(lineNumber: number, i: number): number {\n      return lineNumber - mappings[i].sourceLineNumber;\n    }\n  }\n\n  private findReverseIndices(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      number[] {\n    const mappings = this.mappings();\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const endIndex = Platform.ArrayUtilities.upperBound(\n        reverseMappings, undefined,\n        (unused, i) => lineNumber - mappings[i].sourceLineNumber || columnNumber - mappings[i].sourceColumnNumber);\n    let startIndex = endIndex;\n    while (startIndex > 0 &&\n           mappings[reverseMappings[startIndex - 1]].sourceLineNumber ===\n               mappings[reverseMappings[endIndex - 1]].sourceLineNumber &&\n           mappings[reverseMappings[startIndex - 1]].sourceColumnNumber ===\n               mappings[reverseMappings[endIndex - 1]].sourceColumnNumber) {\n      --startIndex;\n    }\n\n    return reverseMappings.slice(startIndex, endIndex);\n  }\n\n  findReverseEntries(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      SourceMapEntry[] {\n    const mappings = this.mappings();\n    return this.findReverseIndices(sourceURL, lineNumber, columnNumber).map(i => mappings[i]);\n  }\n\n  findReverseRanges(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      TextUtils.TextRange.TextRange[] {\n    const mappings = this.mappings();\n    const indices = this.findReverseIndices(sourceURL, lineNumber, columnNumber);\n    const ranges: TextUtils.TextRange.TextRange[] = [];\n\n    for (let i = 0; i < indices.length; ++i) {\n      const startIndex = indices[i];\n\n      // Merge adjacent ranges.\n      let endIndex = startIndex + 1;\n      while (i + 1 < indices.length && endIndex === indices[i + 1]) {\n        ++endIndex;\n        ++i;\n      }\n\n      // Source maps don't contain end positions for entries, but each entry is assumed to\n      // span until the following entry. This doesn't work however in case of the last\n      // entry, where there's no following entry. We also don't know the number of lines\n      // and columns in the original source code (which might not be available at all), so\n      // for that case we store the maximum signed 32-bit integer, which is definitely going\n      // to be larger than any script we can process and can safely be serialized as part of\n      // the skip list we send to V8 with `Debugger.stepOver` (http://crbug.com/1305956).\n      const startLine = mappings[startIndex].lineNumber;\n      const startColumn = mappings[startIndex].columnNumber;\n      const endLine = endIndex < mappings.length ? mappings[endIndex].lineNumber : 2 ** 31 - 1;\n      const endColumn = endIndex < mappings.length ? mappings[endIndex].columnNumber : 2 ** 31 - 1;\n      ranges.push(new TextUtils.TextRange.TextRange(startLine, startColumn, endLine, endColumn));\n    }\n\n    return ranges;\n  }\n\n  mappings(): SourceMapEntry[] {\n    this.#ensureMappingsProcessed();\n    return this.#mappingsInternal ?? [];\n  }\n\n  private reversedMappings(sourceURL: Platform.DevToolsPath.UrlString): number[] {\n    this.#ensureMappingsProcessed();\n    return this.#sourceInfos.get(sourceURL)?.reverseMappings ?? [];\n  }\n\n  #ensureMappingsProcessed(): void {\n    if (this.#mappingsInternal === null) {\n      this.#mappingsInternal = [];\n      this.eachSection(this.parseMap.bind(this));\n      this.#computeReverseMappings(this.#mappingsInternal);\n      this.#json = null;\n    }\n  }\n\n  #computeReverseMappings(mappings: SourceMapEntry[]): void {\n    const reverseMappingsPerUrl = new Map<Platform.DevToolsPath.UrlString, number[]>();\n    for (let i = 0; i < mappings.length; i++) {\n      const entryUrl = mappings[i].sourceURL;\n      if (!entryUrl) {\n        continue;\n      }\n      let reverseMap = reverseMappingsPerUrl.get(entryUrl);\n      if (!reverseMap) {\n        reverseMap = [];\n        reverseMappingsPerUrl.set(entryUrl, reverseMap);\n      }\n      reverseMap.push(i);\n    }\n\n    for (const [url, reverseMap] of reverseMappingsPerUrl.entries()) {\n      const info = this.#sourceInfos.get(url);\n      if (!info) {\n        continue;\n      }\n      reverseMap.sort(sourceMappingComparator);\n      info.reverseMappings = reverseMap;\n    }\n\n    function sourceMappingComparator(indexA: number, indexB: number): number {\n      const a = mappings[indexA];\n      const b = mappings[indexB];\n      return a.sourceLineNumber - b.sourceLineNumber || a.sourceColumnNumber - b.sourceColumnNumber ||\n          a.lineNumber - b.lineNumber || a.columnNumber - b.columnNumber;\n    }\n  }\n\n  private eachSection(callback: (arg0: SourceMapV3, arg1: number, arg2: number) => void): void {\n    if (!this.#json) {\n      return;\n    }\n    if (!this.#json.sections) {\n      callback(this.#json, 0, 0);\n      return;\n    }\n    for (const section of this.#json.sections) {\n      callback(section.map, section.offset.line, section.offset.column);\n    }\n  }\n\n  private parseSources(sourceMap: SourceMapV3): void {\n    const sourcesList = [];\n    const sourceRoot = sourceMap.sourceRoot || Platform.DevToolsPath.EmptyUrlString;\n    for (let i = 0; i < sourceMap.sources.length; ++i) {\n      let href = sourceMap.sources[i];\n      // The source map v3 proposal says to prepend the sourceRoot to the source URL\n      // and if the resulting URL is not absolute, then resolve the source URL against\n      // the source map URL. Appending the sourceRoot (if one exists) is not likely to\n      // be meaningful or useful if the source URL is already absolute though. In this\n      // case, use the source URL as is without prepending the sourceRoot.\n      if (Common.ParsedURL.ParsedURL.isRelativeURL(href)) {\n        if (sourceRoot && !sourceRoot.endsWith('/') && href && !href.startsWith('/')) {\n          href = Common.ParsedURL.ParsedURL.concatenate(sourceRoot, '/', href);\n        } else {\n          href = Common.ParsedURL.ParsedURL.concatenate(sourceRoot, href);\n        }\n      }\n      let url = Common.ParsedURL.ParsedURL.completeURL(this.#baseURL, href) || href;\n      const source = sourceMap.sourcesContent && sourceMap.sourcesContent[i];\n      if (url === this.#compiledURLInternal && source) {\n        url = Common.ParsedURL.ParsedURL.concatenate(url, '? [sm]');\n      }\n      sourcesList.push(url);\n      if (!this.#sourceInfos.has(url)) {\n        this.#sourceInfos.set(url, new TextSourceMap.SourceInfo(source ?? null));\n      }\n    }\n    sourceMapToSourceList.set(sourceMap, sourcesList);\n  }\n\n  private parseMap(map: SourceMapV3, lineNumber: number, columnNumber: number): void {\n    let sourceIndex = 0;\n    let sourceLineNumber = 0;\n    let sourceColumnNumber = 0;\n    let nameIndex = 0;\n    // TODO(crbug.com/1011811): refactor away map.\n    // `sources` can be undefined if it wasn't previously\n    // processed and added to the list. However, that\n    // is not WAI and we should make sure that we can\n    // only reach this point when we are certain\n    // we have the list available.\n    const sources = sourceMapToSourceList.get(map);\n    const names = map.names || [];\n    const stringCharIterator = new TextSourceMap.StringCharIterator(map.mappings);\n    let sourceURL: Platform.DevToolsPath.UrlString|undefined = sources && sources[sourceIndex];\n\n    while (true) {\n      if (stringCharIterator.peek() === ',') {\n        stringCharIterator.next();\n      } else {\n        while (stringCharIterator.peek() === ';') {\n          lineNumber += 1;\n          columnNumber = 0;\n          stringCharIterator.next();\n        }\n        if (!stringCharIterator.hasNext()) {\n          break;\n        }\n      }\n\n      columnNumber += this.decodeVLQ(stringCharIterator);\n      if (!stringCharIterator.hasNext() || this.isSeparator(stringCharIterator.peek())) {\n        this.mappings().push(new SourceMapEntry(lineNumber, columnNumber));\n        continue;\n      }\n\n      const sourceIndexDelta = this.decodeVLQ(stringCharIterator);\n      if (sourceIndexDelta) {\n        sourceIndex += sourceIndexDelta;\n        if (sources) {\n          sourceURL = sources[sourceIndex];\n        }\n      }\n      sourceLineNumber += this.decodeVLQ(stringCharIterator);\n      sourceColumnNumber += this.decodeVLQ(stringCharIterator);\n\n      if (!stringCharIterator.hasNext() || this.isSeparator(stringCharIterator.peek())) {\n        this.mappings().push(\n            new SourceMapEntry(lineNumber, columnNumber, sourceURL, sourceLineNumber, sourceColumnNumber));\n        continue;\n      }\n\n      nameIndex += this.decodeVLQ(stringCharIterator);\n      this.mappings().push(new SourceMapEntry(\n          lineNumber, columnNumber, sourceURL, sourceLineNumber, sourceColumnNumber, names[nameIndex]));\n    }\n\n    // As per spec, mappings are not necessarily sorted.\n    this.mappings().sort(SourceMapEntry.compare);\n  }\n\n  private isSeparator(char: string): boolean {\n    return char === ',' || char === ';';\n  }\n\n  private decodeVLQ(stringCharIterator: TextSourceMap.StringCharIterator): number {\n    // Read unsigned value.\n    let result = 0;\n    let shift = 0;\n    let digit: number = TextSourceMap._VLQ_CONTINUATION_MASK;\n    while (digit & TextSourceMap._VLQ_CONTINUATION_MASK) {\n      digit = base64Map.get(stringCharIterator.next()) || 0;\n      result += (digit & TextSourceMap._VLQ_BASE_MASK) << shift;\n      shift += TextSourceMap._VLQ_BASE_SHIFT;\n    }\n\n    // Fix the sign.\n    const negative = result & 1;\n    result >>= 1;\n    return negative ? -result : result;\n  }\n\n  reverseMapTextRange(url: Platform.DevToolsPath.UrlString, textRange: TextUtils.TextRange.TextRange):\n      TextUtils.TextRange.TextRange|null {\n    function comparator(\n        position: {\n          lineNumber: number,\n          columnNumber: number,\n        },\n        mappingIndex: number): number {\n      if (position.lineNumber !== mappings[mappingIndex].sourceLineNumber) {\n        return position.lineNumber - mappings[mappingIndex].sourceLineNumber;\n      }\n\n      return position.columnNumber - mappings[mappingIndex].sourceColumnNumber;\n    }\n\n    const reverseMappings = this.reversedMappings(url);\n    const mappings = this.mappings();\n    if (!reverseMappings.length) {\n      return null;\n    }\n    const startIndex = Platform.ArrayUtilities.lowerBound(\n        reverseMappings, {lineNumber: textRange.startLine, columnNumber: textRange.startColumn}, comparator);\n    const endIndex = Platform.ArrayUtilities.upperBound(\n        reverseMappings, {lineNumber: textRange.endLine, columnNumber: textRange.endColumn}, comparator);\n\n    if (endIndex >= reverseMappings.length) {\n      return null;\n    }\n\n    const startMapping = mappings[reverseMappings[startIndex]];\n    const endMapping = mappings[reverseMappings[endIndex]];\n    return new TextUtils.TextRange.TextRange(\n        startMapping.lineNumber, startMapping.columnNumber, endMapping.lineNumber, endMapping.columnNumber);\n  }\n\n  mapsOrigin(): boolean {\n    const mappings = this.mappings();\n    if (mappings.length > 0) {\n      const firstEntry = mappings[0];\n      return firstEntry?.lineNumber === 0 || firstEntry.columnNumber === 0;\n    }\n    return false;\n  }\n}\n\nexport namespace TextSourceMap {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  export const _VLQ_BASE_SHIFT = 5;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  export const _VLQ_BASE_MASK = (1 << 5) - 1;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  export const _VLQ_CONTINUATION_MASK = 1 << 5;\n\n  export class StringCharIterator {\n    private readonly string: string;\n    private position: number;\n\n    constructor(string: string) {\n      this.string = string;\n      this.position = 0;\n    }\n\n    next(): string {\n      return this.string.charAt(this.position++);\n    }\n\n    peek(): string {\n      return this.string.charAt(this.position);\n    }\n\n    hasNext(): boolean {\n      return this.position < this.string.length;\n    }\n  }\n\n  export class SourceInfo {\n    content: string|null;\n    reverseMappings: number[]|null = null;\n\n    constructor(content: string|null) {\n      this.content = content;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
