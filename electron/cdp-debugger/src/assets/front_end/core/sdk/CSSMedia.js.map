{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/CSSMedia.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {CSSModel} from './CSSModel.js';\nimport {CSSQuery} from './CSSQuery.js';\n\nexport class CSSMediaQuery {\n  readonly #activeInternal: boolean;\n  readonly #expressionsInternal: CSSMediaQueryExpression[]|null;\n  constructor(payload: Protocol.CSS.MediaQuery) {\n    this.#activeInternal = payload.active;\n    this.#expressionsInternal = [];\n    for (let j = 0; j < payload.expressions.length; ++j) {\n      this.#expressionsInternal.push(CSSMediaQueryExpression.parsePayload(payload.expressions[j]));\n    }\n  }\n\n  static parsePayload(payload: Protocol.CSS.MediaQuery): CSSMediaQuery {\n    return new CSSMediaQuery(payload);\n  }\n\n  active(): boolean {\n    return this.#activeInternal;\n  }\n\n  expressions(): CSSMediaQueryExpression[]|null {\n    return this.#expressionsInternal;\n  }\n}\n\nexport class CSSMediaQueryExpression {\n  readonly #valueInternal: number;\n  readonly #unitInternal: string;\n  readonly #featureInternal: string;\n  readonly #valueRangeInternal: TextUtils.TextRange.TextRange|null;\n  readonly #computedLengthInternal: number|null;\n  constructor(payload: Protocol.CSS.MediaQueryExpression) {\n    this.#valueInternal = payload.value;\n    this.#unitInternal = payload.unit;\n    this.#featureInternal = payload.feature;\n    this.#valueRangeInternal = payload.valueRange ? TextUtils.TextRange.TextRange.fromObject(payload.valueRange) : null;\n    this.#computedLengthInternal = payload.computedLength || null;\n  }\n\n  static parsePayload(payload: Protocol.CSS.MediaQueryExpression): CSSMediaQueryExpression {\n    return new CSSMediaQueryExpression(payload);\n  }\n\n  value(): number {\n    return this.#valueInternal;\n  }\n\n  unit(): string {\n    return this.#unitInternal;\n  }\n\n  feature(): string {\n    return this.#featureInternal;\n  }\n\n  valueRange(): TextUtils.TextRange.TextRange|null {\n    return this.#valueRangeInternal;\n  }\n\n  computedLength(): number|null {\n    return this.#computedLengthInternal;\n  }\n}\n\nexport class CSSMedia extends CSSQuery {\n  source?: Protocol.CSS.CSSMediaSource;\n  sourceURL?: string;\n  mediaList?: CSSMediaQuery[]|null;\n\n  static parseMediaArrayPayload(cssModel: CSSModel, payload: Protocol.CSS.CSSMedia[]): CSSMedia[] {\n    return payload.map(mq => new CSSMedia(cssModel, mq));\n  }\n\n  constructor(cssModel: CSSModel, payload: Protocol.CSS.CSSMedia) {\n    super(cssModel);\n    this.reinitialize(payload);\n  }\n\n  reinitialize(payload: Protocol.CSS.CSSMedia): void {\n    this.text = payload.text;\n    this.source = payload.source;\n    this.sourceURL = payload.sourceURL || '';\n    this.range = payload.range ? TextUtils.TextRange.TextRange.fromObject(payload.range) : null;\n    this.styleSheetId = payload.styleSheetId;\n    this.mediaList = null;\n    if (payload.mediaList) {\n      this.mediaList = [];\n      for (let i = 0; i < payload.mediaList.length; ++i) {\n        this.mediaList.push(CSSMediaQuery.parsePayload(payload.mediaList[i]));\n      }\n    }\n  }\n\n  active(): boolean {\n    if (!this.mediaList) {\n      return true;\n    }\n    for (let i = 0; i < this.mediaList.length; ++i) {\n      if (this.mediaList[i].active()) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport const Source = {\n  LINKED_SHEET: 'linkedSheet',\n  INLINE_SHEET: 'inlineSheet',\n  MEDIA_RULE: 'mediaRule',\n  IMPORT_RULE: 'importRule',\n};\n"],
  "mappings": "AAIA;AAIA;AAEO,2BAAoB;AAAA;AAAA;AAAA,EAGzB,YAAY,SAAkC;AAC5C,2BAAuB,QAAQ;AAC/B,gCAA4B;AAC5B,aAAS,IAAI,GAAG,IAAI,QAAQ,YAAY,QAAQ,EAAE,GAAG;AACnD,gCAA0B,KAAK,wBAAwB,aAAa,QAAQ,YAAY;AAAA;AAAA;AAAA,SAIrF,aAAa,SAAiD;AACnE,WAAO,IAAI,cAAc;AAAA;AAAA,EAG3B,SAAkB;AAChB,WAAO;AAAA;AAAA,EAGT,cAA8C;AAC5C,WAAO;AAAA;AAAA;AAIJ,qCAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnC,YAAY,SAA4C;AACtD,0BAAsB,QAAQ;AAC9B,yBAAqB,QAAQ;AAC7B,4BAAwB,QAAQ;AAChC,+BAA2B,QAAQ,aAAa,UAAU,UAAU,UAAU,WAAW,QAAQ,cAAc;AAC/G,mCAA+B,QAAQ,kBAAkB;AAAA;AAAA,SAGpD,aAAa,SAAqE;AACvF,WAAO,IAAI,wBAAwB;AAAA;AAAA,EAGrC,QAAgB;AACd,WAAO;AAAA;AAAA,EAGT,OAAe;AACb,WAAO;AAAA;AAAA,EAGT,UAAkB;AAChB,WAAO;AAAA;AAAA,EAGT,aAAiD;AAC/C,WAAO;AAAA;AAAA,EAGT,iBAA8B;AAC5B,WAAO;AAAA;AAAA;AAIJ,8BAAuB,SAAS;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,SAEO,uBAAuB,UAAoB,SAA8C;AAC9F,WAAO,QAAQ,IAAI,QAAM,IAAI,SAAS,UAAU;AAAA;AAAA,EAGlD,YAAY,UAAoB,SAAgC;AAC9D,UAAM;AACN,SAAK,aAAa;AAAA;AAAA,EAGpB,aAAa,SAAsC;AACjD,SAAK,OAAO,QAAQ;AACpB,SAAK,SAAS,QAAQ;AACtB,SAAK,YAAY,QAAQ,aAAa;AACtC,SAAK,QAAQ,QAAQ,QAAQ,UAAU,UAAU,UAAU,WAAW,QAAQ,SAAS;AACvF,SAAK,eAAe,QAAQ;AAC5B,SAAK,YAAY;AACjB,QAAI,QAAQ,WAAW;AACrB,WAAK,YAAY;AACjB,eAAS,IAAI,GAAG,IAAI,QAAQ,UAAU,QAAQ,EAAE,GAAG;AACjD,aAAK,UAAU,KAAK,cAAc,aAAa,QAAQ,UAAU;AAAA;AAAA;AAAA;AAAA,EAKvE,SAAkB;AAChB,QAAI,CAAC,KAAK,WAAW;AACnB,aAAO;AAAA;AAET,aAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,EAAE,GAAG;AAC9C,UAAI,KAAK,UAAU,GAAG,UAAU;AAC9B,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAAA;AAIJ,aAAM,SAAS;AAAA,EACpB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,YAAY;AAAA,EACZ,aAAa;AAAA;",
  "names": []
}
