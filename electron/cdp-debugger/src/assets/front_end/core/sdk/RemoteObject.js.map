{
  "version": 3,
  "sources": ["../../../../../../front_end/core/sdk/RemoteObject.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the #name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type {DOMPinnedWebIDLProp, DOMPinnedWebIDLType} from '../common/JavaScriptMetaData.js';\n\nimport type {DebuggerModel, FunctionDetails} from './DebuggerModel.js';\nimport type {RuntimeModel} from './RuntimeModel.js';\n\nexport class RemoteObject {\n  /**\n   * This may not be an interface due to \"instanceof RemoteObject\" checks in the code.\n   */\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static fromLocalObject(value: any): RemoteObject {\n    return new LocalJSONObject(value);\n  }\n\n  static type(remoteObject: RemoteObject): string {\n    if (remoteObject === null) {\n      return 'null';\n    }\n\n    const type = typeof remoteObject;\n    if (type !== 'object' && type !== 'function') {\n      return type;\n    }\n\n    return remoteObject.type;\n  }\n\n  static isNullOrUndefined(remoteObject?: RemoteObject): boolean {\n    if (remoteObject === undefined) {\n      return true;\n    }\n    switch (remoteObject.type) {\n      case Protocol.Runtime.RemoteObjectType.Object:\n        return remoteObject.subtype === Protocol.Runtime.RemoteObjectSubtype.Null;\n      case Protocol.Runtime.RemoteObjectType.Undefined:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  static arrayNameFromDescription(description: string): string {\n    return description.replace(_descriptionLengthParenRegex, '').replace(_descriptionLengthSquareRegex, '');\n  }\n\n  static arrayLength(object: RemoteObject|Protocol.Runtime.RemoteObject|Protocol.Runtime.ObjectPreview): number {\n    if (object.subtype !== 'array' && object.subtype !== 'typedarray') {\n      return 0;\n    }\n    // Array lengths in V8-generated descriptions switched from square brackets to parentheses.\n    // Both formats are checked in case the front end is dealing with an old version of V8.\n    const parenMatches = object.description && object.description.match(_descriptionLengthParenRegex);\n    const squareMatches = object.description && object.description.match(_descriptionLengthSquareRegex);\n    return parenMatches ? parseInt(parenMatches[1], 10) : (squareMatches ? parseInt(squareMatches[1], 10) : 0);\n  }\n\n  static arrayBufferByteLength(object: RemoteObject|Protocol.Runtime.RemoteObject|\n                               Protocol.Runtime.ObjectPreview): number {\n    if (object.subtype !== 'arraybuffer') {\n      return 0;\n    }\n    const matches = object.description && object.description.match(_descriptionLengthParenRegex);\n    return matches ? parseInt(matches[1], 10) : 0;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static unserializableDescription(object: any): string|null {\n    const type = typeof object;\n    if (type === 'number') {\n      const description = String(object);\n      if (object === 0 && 1 / object < 0) {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        return UnserializableNumber.Negative0;\n      }\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      if (description === UnserializableNumber.NaN || description === UnserializableNumber.Infinity ||\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // @ts-expect-error\n          description === UnserializableNumber.NegativeInfinity) {\n        return description;\n      }\n    }\n    if (type === 'bigint') {\n      return object + 'n';\n    }\n    return null;\n  }\n\n  static toCallArgument(object: string|number|bigint|boolean|RemoteObject|Protocol.Runtime.RemoteObject|null|\n                        undefined): Protocol.Runtime.CallArgument {\n    const type = typeof object;\n    if (type === 'undefined') {\n      return {};\n    }\n    const unserializableDescription = RemoteObject.unserializableDescription(object);\n    if (type === 'number') {\n      if (unserializableDescription !== null) {\n        return {unserializableValue: unserializableDescription};\n      }\n      return {value: object};\n    }\n    if (type === 'bigint') {\n      return {unserializableValue: (unserializableDescription as string)};\n    }\n    if (type === 'string' || type === 'boolean') {\n      return {value: object};\n    }\n\n    if (!object) {\n      return {value: null};\n    }\n\n    // The unserializableValue is a function on RemoteObject's and a simple property on\n    // Protocol.Runtime.RemoteObject's.\n    const objectAsProtocolRemoteObject = (object as Protocol.Runtime.RemoteObject);\n    if (object instanceof RemoteObject) {\n      const unserializableValue = object.unserializableValue();\n      if (unserializableValue !== undefined) {\n        return {unserializableValue: unserializableValue};\n      }\n    } else if (objectAsProtocolRemoteObject.unserializableValue !== undefined) {\n      return {unserializableValue: objectAsProtocolRemoteObject.unserializableValue};\n    }\n\n    if (typeof objectAsProtocolRemoteObject.objectId !== 'undefined') {\n      return {objectId: objectAsProtocolRemoteObject.objectId};\n    }\n\n    return {value: objectAsProtocolRemoteObject.value};\n  }\n\n  static async loadFromObjectPerProto(\n      object: RemoteObject, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    const result = await Promise.all([\n      object.getAllProperties(true /* accessorPropertiesOnly */, generatePreview, nonIndexedPropertiesOnly),\n      object.getOwnProperties(generatePreview, nonIndexedPropertiesOnly),\n    ]);\n    const accessorProperties = result[0].properties;\n    const ownProperties = result[1].properties;\n    const internalProperties = result[1].internalProperties;\n    if (!ownProperties || !accessorProperties) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    const propertiesMap = new Map<string, RemoteObjectProperty>();\n    const propertySymbols = [];\n    for (let i = 0; i < accessorProperties.length; i++) {\n      const property = accessorProperties[i];\n      if (property.symbol) {\n        propertySymbols.push(property);\n      } else if (property.isOwn || property.name !== '__proto__') {\n        // TODO(crbug/1076820): Eventually we should move away from\n        // showing accessor #properties directly on the receiver.\n        propertiesMap.set(property.name, property);\n      }\n    }\n    for (let i = 0; i < ownProperties.length; i++) {\n      const property = ownProperties[i];\n      if (property.isAccessorProperty()) {\n        continue;\n      }\n      if (property.private || property.symbol) {\n        propertySymbols.push(property);\n      } else {\n        propertiesMap.set(property.name, property);\n      }\n    }\n    return {\n      properties: [...propertiesMap.values()].concat(propertySymbols),\n      internalProperties: internalProperties ? internalProperties : null,\n    };\n  }\n\n  customPreview(): Protocol.Runtime.CustomPreview|null {\n    return null;\n  }\n\n  get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    // TODO(crbug.com/1226471): Return undefined here.\n    return 'Not implemented' as Protocol.Runtime.RemoteObjectId;\n  }\n\n  get type(): string {\n    throw 'Not implemented';\n  }\n\n  get subtype(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get value(): any {\n    throw 'Not implemented';\n  }\n\n  unserializableValue(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  get description(): string|undefined {\n    throw 'Not implemented';\n  }\n\n  set description(description: string|undefined) {\n    throw 'Not implemented';\n  }\n\n  get hasChildren(): boolean {\n    throw 'Not implemented';\n  }\n\n  get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return undefined;\n  }\n\n  get className(): string|null {\n    return null;\n  }\n\n  arrayLength(): number {\n    throw 'Not implemented';\n  }\n\n  arrayBufferByteLength(): number {\n    throw 'Not implemented';\n  }\n\n  getOwnProperties(_generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean): Promise<GetPropertiesResult> {\n    throw 'Not implemented';\n  }\n\n  getAllProperties(_accessorPropertiesOnly: boolean, _generatePreview: boolean, _nonIndexedPropertiesOnly?: boolean):\n      Promise<GetPropertiesResult> {\n    throw 'Not implemented';\n  }\n\n  async deleteProperty(_name: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    throw 'Not implemented';\n  }\n\n  async setPropertyValue(_name: string|Protocol.Runtime.CallArgument, _value: string): Promise<string|undefined> {\n    throw 'Not implemented';\n  }\n\n  callFunction<T>(\n      _functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      _args?: Protocol.Runtime.CallArgument[]): Promise<CallFunctionResult> {\n    throw 'Not implemented';\n  }\n\n  callFunctionJSON<T>(\n      _functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      _args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    throw 'Not implemented';\n  }\n\n  release(): void {\n  }\n\n  debuggerModel(): DebuggerModel {\n    throw new Error('DebuggerModel-less object');\n  }\n\n  runtimeModel(): RuntimeModel {\n    throw new Error('RuntimeModel-less object');\n  }\n\n  isNode(): boolean {\n    return false;\n  }\n\n  webIdl?: RemoteObjectWebIdlTypeMetadata;\n}\n\nexport class RemoteObjectImpl extends RemoteObject {\n  runtimeModelInternal: RuntimeModel;\n  readonly #runtimeAgent: ProtocolProxyApi.RuntimeApi;\n  readonly #typeInternal: string;\n  readonly #subtypeInternal: string|undefined;\n  #objectIdInternal: Protocol.Runtime.RemoteObjectId|undefined;\n  #descriptionInternal: string|undefined;\n  hasChildrenInternal: boolean;\n  readonly #previewInternal: Protocol.Runtime.ObjectPreview|undefined;\n  readonly #unserializableValueInternal: string|undefined;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  readonly #valueInternal: any;\n  readonly #customPreviewInternal: Protocol.Runtime.CustomPreview|null;\n  readonly #classNameInternal: string|null;\n\n  constructor(\n      runtimeModel: RuntimeModel, objectId: Protocol.Runtime.RemoteObjectId|undefined, type: string,\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      subtype: string|undefined, value: any, unserializableValue?: string, description?: string,\n      preview?: Protocol.Runtime.ObjectPreview, customPreview?: Protocol.Runtime.CustomPreview, className?: string) {\n    super();\n\n    this.runtimeModelInternal = runtimeModel;\n    this.#runtimeAgent = runtimeModel.target().runtimeAgent();\n\n    this.#typeInternal = type;\n    this.#subtypeInternal = subtype;\n    if (objectId) {\n      // handle\n      this.#objectIdInternal = objectId;\n      this.#descriptionInternal = description;\n      this.hasChildrenInternal = (type !== 'symbol');\n      this.#previewInternal = preview;\n    } else {\n      this.#descriptionInternal = description;\n      if (!this.description && unserializableValue) {\n        this.#descriptionInternal = unserializableValue;\n      }\n      if (!this.#descriptionInternal && (typeof value !== 'object' || value === null)) {\n        this.#descriptionInternal = String(value);\n      }\n      this.hasChildrenInternal = false;\n      if (typeof unserializableValue === 'string') {\n        this.#unserializableValueInternal = unserializableValue;\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        if (unserializableValue === UnserializableNumber.Infinity ||\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            unserializableValue === UnserializableNumber.NegativeInfinity ||\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            unserializableValue === UnserializableNumber.Negative0 ||\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            unserializableValue === UnserializableNumber.NaN) {\n          this.#valueInternal = Number(unserializableValue);\n        } else if (type === 'bigint' && unserializableValue.endsWith('n')) {\n          this.#valueInternal = BigInt(unserializableValue.substring(0, unserializableValue.length - 1));\n        } else {\n          this.#valueInternal = unserializableValue;\n        }\n\n      } else {\n        this.#valueInternal = value;\n      }\n    }\n    this.#customPreviewInternal = customPreview || null;\n    this.#classNameInternal = typeof className === 'string' ? className : null;\n  }\n\n  customPreview(): Protocol.Runtime.CustomPreview|null {\n    return this.#customPreviewInternal;\n  }\n\n  get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return this.#objectIdInternal;\n  }\n\n  get type(): string {\n    return this.#typeInternal;\n  }\n\n  get subtype(): string|undefined {\n    return this.#subtypeInternal;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get value(): any {\n    return this.#valueInternal;\n  }\n\n  unserializableValue(): string|undefined {\n    return this.#unserializableValueInternal;\n  }\n\n  get description(): string|undefined {\n    return this.#descriptionInternal;\n  }\n\n  set description(description: string|undefined) {\n    this.#descriptionInternal = description;\n  }\n\n  get hasChildren(): boolean {\n    return this.hasChildrenInternal;\n  }\n\n  get preview(): Protocol.Runtime.ObjectPreview|undefined {\n    return this.#previewInternal;\n  }\n\n  get className(): string|null {\n    return this.#classNameInternal;\n  }\n\n  getOwnProperties(generatePreview: boolean, nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    return this.doGetProperties(true, false, nonIndexedPropertiesOnly, generatePreview);\n  }\n\n  getAllProperties(\n      accessorPropertiesOnly: boolean, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    return this.doGetProperties(false, accessorPropertiesOnly, nonIndexedPropertiesOnly, generatePreview);\n  }\n\n  async createRemoteObject(object: Protocol.Runtime.RemoteObject): Promise<RemoteObject> {\n    return this.runtimeModelInternal.createRemoteObject(object);\n  }\n\n  async doGetProperties(\n      ownProperties: boolean, accessorPropertiesOnly: boolean, nonIndexedPropertiesOnly: boolean,\n      generatePreview: boolean): Promise<GetPropertiesResult> {\n    if (!this.#objectIdInternal) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n\n    const response = await this.#runtimeAgent.invoke_getProperties({\n      objectId: this.#objectIdInternal,\n      ownProperties,\n      accessorPropertiesOnly,\n      nonIndexedPropertiesOnly,\n      generatePreview,\n    });\n    if (response.getError()) {\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    if (response.exceptionDetails) {\n      this.runtimeModelInternal.exceptionThrown(Date.now(), response.exceptionDetails);\n      return {properties: null, internalProperties: null} as GetPropertiesResult;\n    }\n    const {result: properties = [], internalProperties = [], privateProperties = []} = response;\n    const result = [];\n    for (const property of properties) {\n      const propertyValue = property.value ? await this.createRemoteObject(property.value) : null;\n      const propertySymbol = property.symbol ? this.runtimeModelInternal.createRemoteObject(property.symbol) : null;\n      const remoteProperty = new RemoteObjectProperty(\n          property.name, propertyValue, Boolean(property.enumerable), Boolean(property.writable),\n          Boolean(property.isOwn), Boolean(property.wasThrown), propertySymbol);\n\n      if (typeof property.value === 'undefined') {\n        if (property.get && property.get.type !== 'undefined') {\n          remoteProperty.getter = this.runtimeModelInternal.createRemoteObject(property.get);\n        }\n        if (property.set && property.set.type !== 'undefined') {\n          remoteProperty.setter = this.runtimeModelInternal.createRemoteObject(property.set);\n        }\n      }\n      result.push(remoteProperty);\n    }\n    for (const property of privateProperties) {\n      const propertyValue = property.value ? this.runtimeModelInternal.createRemoteObject(property.value) : null;\n      const remoteProperty = new RemoteObjectProperty(\n          property.name, propertyValue, true, true, true, false, undefined, false, undefined, true);\n\n      if (typeof property.value === 'undefined') {\n        if (property.get && property.get.type !== 'undefined') {\n          remoteProperty.getter = this.runtimeModelInternal.createRemoteObject(property.get);\n        }\n        if (property.set && property.set.type !== 'undefined') {\n          remoteProperty.setter = this.runtimeModelInternal.createRemoteObject(property.set);\n        }\n      }\n      result.push(remoteProperty);\n    }\n\n    const internalPropertiesResult = [];\n    for (const property of internalProperties) {\n      if (!property.value) {\n        continue;\n      }\n      if (property.name === '[[StableObjectId]]') {\n        continue;\n      }\n      const propertyValue = this.runtimeModelInternal.createRemoteObject(property.value);\n      internalPropertiesResult.push(\n          new RemoteObjectProperty(property.name, propertyValue, true, false, undefined, undefined, undefined, true));\n    }\n    return {properties: result, internalProperties: internalPropertiesResult};\n  }\n\n  async setPropertyValue(name: string|Protocol.Runtime.CallArgument, value: string): Promise<string|undefined> {\n    if (!this.#objectIdInternal) {\n      return 'Can\u2019t set a property of non-object.';\n    }\n\n    const response = await this.#runtimeAgent.invoke_evaluate({expression: value, silent: true});\n    if (response.getError() || response.exceptionDetails) {\n      return response.getError() ||\n          (response.result.type !== 'string' ? response.result.description : response.result.value as string);\n    }\n\n    if (typeof name === 'string') {\n      name = RemoteObject.toCallArgument(name);\n    }\n\n    const resultPromise = this.doSetObjectPropertyValue(response.result, name);\n\n    if (response.result.objectId) {\n      void this.#runtimeAgent.invoke_releaseObject({objectId: response.result.objectId});\n    }\n\n    return resultPromise;\n  }\n\n  async doSetObjectPropertyValue(result: Protocol.Runtime.RemoteObject, name: Protocol.Runtime.CallArgument):\n      Promise<string|undefined> {\n    // This assignment may be for a regular (data) property, and for an accessor property (with getter/setter).\n    // Note the sensitive matter about accessor property: the property may be physically defined in some proto object,\n    // but logically it is bound to the object in question. JavaScript passes this object to getters/setters, not the object\n    // where property was defined; so do we.\n    const setPropertyValueFunction = 'function(a, b) { this[a] = b; }';\n\n    const argv = [name, RemoteObject.toCallArgument(result)];\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: setPropertyValueFunction,\n      arguments: argv,\n      silent: true,\n    });\n    const error = response.getError();\n    return error || response.exceptionDetails ? error || response.result.description : undefined;\n  }\n\n  async deleteProperty(name: Protocol.Runtime.CallArgument): Promise<string|undefined> {\n    if (!this.#objectIdInternal) {\n      return 'Can\u2019t delete a property of non-object.';\n    }\n\n    const deletePropertyFunction = 'function(a) { delete this[a]; return !(a in this); }';\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: deletePropertyFunction,\n      arguments: [name],\n      silent: true,\n    });\n\n    if (response.getError() || response.exceptionDetails) {\n      return response.getError() || response.result.description;\n    }\n\n    if (!response.result.value) {\n      return 'Failed to delete property.';\n    }\n\n    return undefined;\n  }\n\n  async callFunction<T>(\n      functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      args?: Protocol.Runtime.CallArgument[]): Promise<CallFunctionResult> {\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: functionDeclaration.toString(),\n      arguments: args,\n      silent: true,\n    });\n    if (response.getError()) {\n      return {object: null, wasThrown: false};\n    }\n    // TODO: release exceptionDetails object\n    return {\n      object: this.runtimeModelInternal.createRemoteObject(response.result),\n      wasThrown: Boolean(response.exceptionDetails),\n    };\n  }\n\n  async callFunctionJSON<T>(\n      functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    const response = await this.#runtimeAgent.invoke_callFunctionOn({\n      objectId: this.#objectIdInternal,\n      functionDeclaration: functionDeclaration.toString(),\n      arguments: args,\n      silent: true,\n      returnByValue: true,\n    });\n\n    return response.getError() || response.exceptionDetails ? null : response.result.value;\n  }\n\n  release(): void {\n    if (!this.#objectIdInternal) {\n      return;\n    }\n    void this.#runtimeAgent.invoke_releaseObject({objectId: this.#objectIdInternal});\n  }\n\n  arrayLength(): number {\n    return RemoteObject.arrayLength(this);\n  }\n\n  arrayBufferByteLength(): number {\n    return RemoteObject.arrayBufferByteLength(this);\n  }\n\n  debuggerModel(): DebuggerModel {\n    return this.runtimeModelInternal.debuggerModel();\n  }\n\n  runtimeModel(): RuntimeModel {\n    return this.runtimeModelInternal;\n  }\n\n  isNode(): boolean {\n    return Boolean(this.#objectIdInternal) && this.type === 'object' && this.subtype === 'node';\n  }\n}\n\nexport class ScopeRemoteObject extends RemoteObjectImpl {\n  #scopeRef: ScopeRef;\n  #savedScopeProperties: RemoteObjectProperty[]|undefined;\n\n  constructor(\n      runtimeModel: RuntimeModel, objectId: Protocol.Runtime.RemoteObjectId|undefined, scopeRef: ScopeRef, type: string,\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      subtype: string|undefined, value: any, unserializableValue?: string, description?: string,\n      preview?: Protocol.Runtime.ObjectPreview) {\n    super(runtimeModel, objectId, type, subtype, value, unserializableValue, description, preview);\n    this.#scopeRef = scopeRef;\n    this.#savedScopeProperties = undefined;\n  }\n\n  async doGetProperties(ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []} as GetPropertiesResult;\n    }\n\n    if (this.#savedScopeProperties) {\n      // No need to reload scope variables, as the remote object never\n      // changes its #properties. If variable is updated, the #properties\n      // array is patched locally.\n      return {properties: this.#savedScopeProperties.slice(), internalProperties: null};\n    }\n\n    const allProperties = await super.doGetProperties(\n        ownProperties, accessorPropertiesOnly, false /* nonIndexedPropertiesOnly */, true /* generatePreview */);\n    if (this.#scopeRef && Array.isArray(allProperties.properties)) {\n      this.#savedScopeProperties = allProperties.properties.slice();\n      if (!this.#scopeRef.callFrameId) {\n        for (const property of this.#savedScopeProperties) {\n          property.writable = false;\n        }\n      }\n    }\n    return allProperties;\n  }\n\n  async doSetObjectPropertyValue(result: Protocol.Runtime.RemoteObject, argumentName: Protocol.Runtime.CallArgument):\n      Promise<string|undefined> {\n    const name = (argumentName.value as string);\n    const error = await this.debuggerModel().setVariableValue(\n        this.#scopeRef.number, name, RemoteObject.toCallArgument(result),\n        (this.#scopeRef.callFrameId as Protocol.Debugger.CallFrameId));\n    if (error) {\n      return error;\n    }\n    if (this.#savedScopeProperties) {\n      for (const property of this.#savedScopeProperties) {\n        if (property.name === name) {\n          property.value = this.runtimeModel().createRemoteObject(result);\n        }\n      }\n    }\n    return;\n  }\n}\n\nexport class ScopeRef {\n  number: number;\n  callFrameId: Protocol.Debugger.CallFrameId|undefined;\n  constructor(number: number, callFrameId?: Protocol.Debugger.CallFrameId) {\n    this.number = number;\n    this.callFrameId = callFrameId;\n  }\n}\n\nexport class RemoteObjectProperty {\n  name: string;\n  value?: RemoteObject;\n  enumerable: boolean;\n  writable: boolean;\n  isOwn: boolean;\n  wasThrown: boolean;\n  symbol: RemoteObject|undefined;\n  synthetic: boolean;\n  syntheticSetter: ((arg0: string) => Promise<RemoteObject|null>)|undefined;\n\n  private: boolean;\n  getter: RemoteObject|undefined;\n  setter: RemoteObject|undefined;\n\n  webIdl?: RemoteObjectWebIdlPropertyMetadata;\n\n  constructor(\n      name: string, value: RemoteObject|null, enumerable?: boolean, writable?: boolean, isOwn?: boolean,\n      wasThrown?: boolean, symbol?: RemoteObject|null, synthetic?: boolean,\n      syntheticSetter?: ((arg0: string) => Promise<RemoteObject|null>), isPrivate?: boolean) {\n    this.name = name;\n    this.value = value !== null ? value : undefined;\n    this.enumerable = typeof enumerable !== 'undefined' ? enumerable : true;\n    const isNonSyntheticOrSyntheticWritable = !synthetic || Boolean(syntheticSetter);\n    this.writable = typeof writable !== 'undefined' ? writable : isNonSyntheticOrSyntheticWritable;\n    this.isOwn = Boolean(isOwn);\n    this.wasThrown = Boolean(wasThrown);\n    if (symbol) {\n      this.symbol = symbol;\n    }\n    this.synthetic = Boolean(synthetic);\n    if (syntheticSetter) {\n      this.syntheticSetter = syntheticSetter;\n    }\n    this.private = Boolean(isPrivate);\n  }\n\n  async setSyntheticValue(expression: string): Promise<boolean> {\n    if (!this.syntheticSetter) {\n      return false;\n    }\n    const result = await this.syntheticSetter(expression);\n    if (result) {\n      this.value = result;\n    }\n    return Boolean(result);\n  }\n\n  isAccessorProperty(): boolean {\n    return Boolean(this.getter || this.setter);\n  }\n\n  match({includeNullOrUndefinedValues, regex}: {includeNullOrUndefinedValues: boolean, regex: RegExp|null}): boolean {\n    if (regex !== null) {\n      if (!regex.test(this.name) && !regex.test(this.value?.description ?? '')) {\n        return false;\n      }\n    }\n    if (!includeNullOrUndefinedValues) {\n      if (!this.isAccessorProperty() && RemoteObject.isNullOrUndefined(this.value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n// Below is a wrapper around a local object that implements the RemoteObject interface,\n// which can be used by the UI code (primarily ObjectPropertiesSection).\n// Note that only JSON-compliant objects are currently supported, as there's no provision\n// for traversing prototypes, extracting class names via constructor, handling #properties\n// or functions.\n\nexport class LocalJSONObject extends RemoteObject {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  valueInternal: any;\n  #cachedDescription!: string;\n  #cachedChildren!: RemoteObjectProperty[];\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(value: any) {\n    super();\n    this.valueInternal = value;\n  }\n\n  get objectId(): Protocol.Runtime.RemoteObjectId|undefined {\n    return undefined;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get value(): any {\n    return this.valueInternal;\n  }\n\n  unserializableValue(): string|undefined {\n    const unserializableDescription = RemoteObject.unserializableDescription(this.valueInternal);\n    return unserializableDescription || undefined;\n  }\n\n  get description(): string {\n    if (this.#cachedDescription) {\n      return this.#cachedDescription;\n    }\n\n    function formatArrayItem(this: LocalJSONObject, property: RemoteObjectProperty): string {\n      return this.formatValue(property.value || null);\n    }\n\n    function formatObjectItem(this: LocalJSONObject, property: RemoteObjectProperty): string {\n      let name: string = property.name;\n      if (/^\\s|\\s$|^$|\\n/.test(name)) {\n        name = '\"' + name.replace(/\\n/g, '\\u21B5') + '\"';\n      }\n      return name + ': ' + this.formatValue(property.value || null);\n    }\n\n    if (this.type === 'object') {\n      switch (this.subtype) {\n        case 'array':\n          this.#cachedDescription = this.concatenate('[', ']', formatArrayItem.bind(this));\n          break;\n        case 'date':\n          this.#cachedDescription = String(this.valueInternal);\n          break;\n        case 'null':\n          this.#cachedDescription = 'null';\n          break;\n        default:\n          this.#cachedDescription = this.concatenate('{', '}', formatObjectItem.bind(this));\n      }\n    } else {\n      this.#cachedDescription = String(this.valueInternal);\n    }\n\n    return this.#cachedDescription;\n  }\n\n  private formatValue(value: RemoteObject|null): string {\n    if (!value) {\n      return 'undefined';\n    }\n    const description = value.description || '';\n    if (value.type === 'string') {\n      return '\"' + description.replace(/\\n/g, '\\u21B5') + '\"';\n    }\n    return description;\n  }\n\n  private concatenate(prefix: string, suffix: string, formatProperty: (arg0: RemoteObjectProperty) => string): string {\n    const previewChars = 100;\n\n    let buffer = prefix;\n    const children = this.children();\n    for (let i = 0; i < children.length; ++i) {\n      const itemDescription = formatProperty(children[i]);\n      if (buffer.length + itemDescription.length > previewChars) {\n        buffer += ',\u2026';\n        break;\n      }\n      if (i) {\n        buffer += ', ';\n      }\n      buffer += itemDescription;\n    }\n    buffer += suffix;\n    return buffer;\n  }\n\n  get type(): string {\n    return typeof this.valueInternal;\n  }\n\n  get subtype(): string|undefined {\n    if (this.valueInternal === null) {\n      return 'null';\n    }\n\n    if (Array.isArray(this.valueInternal)) {\n      return 'array';\n    }\n\n    if (this.valueInternal instanceof Date) {\n      return 'date';\n    }\n\n    return undefined;\n  }\n\n  get hasChildren(): boolean {\n    if ((typeof this.valueInternal !== 'object') || (this.valueInternal === null)) {\n      return false;\n    }\n    return Boolean(Object.keys((this.valueInternal as Object)).length);\n  }\n\n  async getOwnProperties(_generatePreview: boolean, nonIndexedPropertiesOnly: boolean = false):\n      Promise<GetPropertiesResult> {\n    function isArrayIndex(name: string): boolean {\n      const index = Number(name) >>> 0;\n      return String(index) === name;\n    }\n\n    let properties = this.children();\n    if (nonIndexedPropertiesOnly) {\n      properties = properties.filter(property => !isArrayIndex(property.name));\n    }\n    return {properties, internalProperties: null};\n  }\n\n  async getAllProperties(\n      accessorPropertiesOnly: boolean, generatePreview: boolean,\n      nonIndexedPropertiesOnly: boolean = false): Promise<GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: null};\n    }\n    return await this.getOwnProperties(generatePreview, nonIndexedPropertiesOnly);\n  }\n\n  private children(): RemoteObjectProperty[] {\n    if (!this.hasChildren) {\n      return [];\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const value = (this.valueInternal as any);\n\n    function buildProperty(propName: string): RemoteObjectProperty {\n      let propValue = value[propName];\n      if (!(propValue instanceof RemoteObject)) {\n        propValue = RemoteObject.fromLocalObject(propValue);\n      }\n      return new RemoteObjectProperty(propName, propValue);\n    }\n    if (!this.#cachedChildren) {\n      this.#cachedChildren = Object.keys((value as Object)).map(buildProperty);\n    }\n    return this.#cachedChildren;\n  }\n\n  arrayLength(): number {\n    return Array.isArray(this.valueInternal) ? this.valueInternal.length : 0;\n  }\n\n  async callFunction<T>(\n      functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      args?: Protocol.Runtime.CallArgument[]): Promise<CallFunctionResult> {\n    const target = (this.valueInternal as Object);\n    const rawArgs = args ? args.map(arg => arg.value) : [];\n\n    let result;\n    let wasThrown = false;\n    try {\n      result = functionDeclaration.apply(target, rawArgs);\n    } catch (e) {\n      wasThrown = true;\n    }\n\n    const object = RemoteObject.fromLocalObject(result);\n\n    return {object, wasThrown} as CallFunctionResult;\n  }\n\n  async callFunctionJSON<T>(\n      functionDeclaration: (this: Object, ...arg1: unknown[]) => T,\n      args: Protocol.Runtime.CallArgument[]|undefined): Promise<T> {\n    const target = (this.valueInternal as Object);\n    const rawArgs = args ? args.map(arg => arg.value) : [];\n\n    let result;\n    try {\n      result = functionDeclaration.apply(target, rawArgs);\n    } catch (e) {\n      result = null;\n    }\n\n    return result as T;\n  }\n}\n\nexport class RemoteArrayBuffer {\n  readonly #objectInternal: RemoteObject;\n  constructor(object: RemoteObject) {\n    if (object.type !== 'object' || object.subtype !== 'arraybuffer') {\n      throw new Error('Object is not an arraybuffer');\n    }\n    this.#objectInternal = object;\n  }\n\n  byteLength(): number {\n    return this.#objectInternal.arrayBufferByteLength();\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async bytes(start: any = 0, end: any = this.byteLength()): Promise<number[]> {\n    if (start < 0 || start >= this.byteLength()) {\n      throw new RangeError('start is out of range');\n    }\n    if (end < start || end > this.byteLength()) {\n      throw new RangeError('end is out of range');\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    return await this.#objectInternal.callFunctionJSON(bytes, [{value: start}, {value: end - start}]);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function bytes(this: any, offset: number, length: number): number[] {\n      return [...new Uint8Array(this, offset, length)];\n    }\n  }\n\n  object(): RemoteObject {\n    return this.#objectInternal;\n  }\n}\n\nexport class RemoteArray {\n  readonly #objectInternal: RemoteObject;\n  constructor(object: RemoteObject) {\n    this.#objectInternal = object;\n  }\n\n  static objectAsArray(object: RemoteObject|null): RemoteArray {\n    if (!object || object.type !== 'object' || (object.subtype !== 'array' && object.subtype !== 'typedarray')) {\n      throw new Error('Object is empty or not an array');\n    }\n    return new RemoteArray(object);\n  }\n\n  static createFromRemoteObjects(objects: RemoteObject[]): Promise<RemoteArray> {\n    if (!objects.length) {\n      throw new Error('Input array is empty');\n    }\n    const objectArguments = [];\n    for (let i = 0; i < objects.length; ++i) {\n      objectArguments.push(RemoteObject.toCallArgument(objects[i]));\n    }\n    return objects[0].callFunction(createArray, objectArguments).then(returnRemoteArray);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function createArray(): any[] {\n      if (arguments.length > 1) {\n        return new Array(arguments);\n      }\n      return [arguments[0]];\n    }\n\n    function returnRemoteArray(result: CallFunctionResult): RemoteArray {\n      if (result.wasThrown || !result.object) {\n        throw new Error('Call function throws exceptions or returns empty value');\n      }\n      return RemoteArray.objectAsArray(result.object);\n    }\n  }\n\n  at(index: number): Promise<RemoteObject> {\n    if (index < 0 || index > this.#objectInternal.arrayLength()) {\n      throw new Error('Out of range');\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    return this.#objectInternal.callFunction(at, [RemoteObject.toCallArgument(index)]).then(assertCallFunctionResult);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function at(this: any, index: number): any {\n      return this[index];\n    }\n\n    function assertCallFunctionResult(result: CallFunctionResult): RemoteObject {\n      if (result.wasThrown || !result.object) {\n        throw new Error('Exception in callFunction or result value is empty');\n      }\n      return result.object;\n    }\n  }\n\n  length(): number {\n    return this.#objectInternal.arrayLength();\n  }\n\n  map<T>(func: (arg0: RemoteObject) => Promise<T>): Promise<T[]> {\n    const promises = [];\n    for (let i = 0; i < this.length(); ++i) {\n      promises.push(this.at(i).then(func));\n    }\n    return Promise.all(promises);\n  }\n\n  object(): RemoteObject {\n    return this.#objectInternal;\n  }\n}\n\nexport class RemoteFunction {\n  readonly #objectInternal: RemoteObject;\n\n  constructor(object: RemoteObject) {\n    this.#objectInternal = object;\n  }\n\n  static objectAsFunction(object: RemoteObject|null): RemoteFunction {\n    if (!object || object.type !== 'function') {\n      throw new Error('Object is empty or not a function');\n    }\n    return new RemoteFunction(object);\n  }\n\n  targetFunction(): Promise<RemoteObject> {\n    return this.#objectInternal.getOwnProperties(false /* generatePreview */).then(targetFunction.bind(this));\n\n    function targetFunction(this: RemoteFunction, ownProperties: GetPropertiesResult): RemoteObject {\n      if (!ownProperties.internalProperties) {\n        return this.#objectInternal;\n      }\n      const internalProperties = ownProperties.internalProperties;\n      for (const property of internalProperties) {\n        if (property.name === '[[TargetFunction]]') {\n          return property.value as RemoteObject;\n        }\n      }\n      return this.#objectInternal;\n    }\n  }\n\n  targetFunctionDetails(): Promise<FunctionDetails|null> {\n    return this.targetFunction().then(functionDetails.bind(this));\n\n    function functionDetails(this: RemoteFunction, targetFunction: RemoteObject): Promise<FunctionDetails|null> {\n      const boundReleaseFunctionDetails =\n          releaseTargetFunction.bind(null, this.#objectInternal !== targetFunction ? targetFunction : null);\n      return targetFunction.debuggerModel().functionDetailsPromise(targetFunction).then(boundReleaseFunctionDetails);\n    }\n\n    function releaseTargetFunction(\n        targetFunction: RemoteObject|null, functionDetails: FunctionDetails|null): FunctionDetails|null {\n      if (targetFunction) {\n        targetFunction.release();\n      }\n      return functionDetails;\n    }\n  }\n\n  object(): RemoteObject {\n    return this.#objectInternal;\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _descriptionLengthParenRegex: RegExp = /\\(([0-9]+)\\)/;\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _descriptionLengthSquareRegex: RegExp = /\\[([0-9]+)\\]/;\n\nconst enum UnserializableNumber {\n  Negative0 = ('-0'),\n  NaN = ('NaN'),\n  Infinity = ('Infinity'),\n  NegativeInfinity = ('-Infinity'),\n}\n\nexport interface CallFunctionResult {\n  object: RemoteObject|null;\n  wasThrown?: boolean;\n}\n\nexport interface GetPropertiesResult {\n  properties: RemoteObjectProperty[]|null;\n  internalProperties: RemoteObjectProperty[]|null;\n}\n\nexport interface RemoteObjectWebIdlTypeMetadata {\n  info: DOMPinnedWebIDLType;\n  state: Map<string, string>;\n}\n\nexport interface RemoteObjectWebIdlPropertyMetadata {\n  info: DOMPinnedWebIDLProp;\n  applicable?: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
