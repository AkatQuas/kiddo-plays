{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Linkifier.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport abstract class Linkifier {\n  abstract linkify(object: Object, options?: Options): Node;\n\n  static async linkify(object: Object|null, options?: Options): Promise<Node> {\n    if (!object) {\n      throw new Error('Can\\'t linkify ' + object);\n    }\n    const linkifierRegistration = getApplicableRegisteredlinkifiers(object)[0];\n    if (!linkifierRegistration) {\n      throw new Error('No linkifiers registered for object ' + object);\n    }\n    const linkifier = await linkifierRegistration.loadLinkifier();\n    return linkifier.linkify(object, options);\n  }\n}\nexport interface Options {\n  tooltip?: string;\n  preventKeyboardFocus?: boolean;\n}\n\nconst registeredLinkifiers: LinkifierRegistration[] = [];\n\nexport function registerLinkifier(registration: LinkifierRegistration): void {\n  registeredLinkifiers.push(registration);\n}\n\nexport function getApplicableRegisteredlinkifiers(object: Object): LinkifierRegistration[] {\n  return registeredLinkifiers.filter(isLinkifierApplicableToContextTypes);\n\n  function isLinkifierApplicableToContextTypes(linkifierRegistration: LinkifierRegistration): boolean {\n    if (!linkifierRegistration.contextTypes) {\n      return true;\n    }\n    for (const contextType of linkifierRegistration.contextTypes()) {\n      if (object instanceof contextType) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nexport interface LinkifierRegistration {\n  loadLinkifier: () => Promise<Linkifier>;\n  contextTypes?: (() => Array<Function>);\n}\n"],
  "mappings": "AAIO,uBAAyB;AAAA,eAGjB,QAAQ,QAAqB,SAAkC;AAC1E,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,mBAAoB;AAAA;AAEtC,UAAM,wBAAwB,kCAAkC,QAAQ;AACxE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,IAAI,MAAM,yCAAyC;AAAA;AAE3D,UAAM,YAAY,MAAM,sBAAsB;AAC9C,WAAO,UAAU,QAAQ,QAAQ;AAAA;AAAA;AAQrC,MAAM,uBAAgD;AAE/C,kCAA2B,cAA2C;AAC3E,uBAAqB,KAAK;AAAA;AAGrB,kDAA2C,QAAyC;AACzF,SAAO,qBAAqB,OAAO;AAEnC,+CAA6C,uBAAuD;AAClG,QAAI,CAAC,sBAAsB,cAAc;AACvC,aAAO;AAAA;AAET,eAAW,eAAe,sBAAsB,gBAAgB;AAC9D,UAAI,kBAAkB,aAAa;AACjC,eAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAAA;",
  "names": []
}
