{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Progress.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nexport class Progress {\n  setTotalWork(totalWork: number): void {\n  }\n  setTitle(title: string): void {\n  }\n  setWorked(worked: number, title?: string): void {\n  }\n  incrementWorked(worked?: number): void {\n  }\n  done(): void {\n  }\n  isCanceled(): boolean {\n    return false;\n  }\n}\n\nexport class CompositeProgress {\n  readonly parent: Progress;\n  readonly #children: SubProgress[];\n  #childrenDone: number;\n\n  constructor(parent: Progress) {\n    this.parent = parent;\n    this.#children = [];\n    this.#childrenDone = 0;\n    this.parent.setTotalWork(1);\n    this.parent.setWorked(0);\n  }\n\n  childDone(): void {\n    if (++this.#childrenDone !== this.#children.length) {\n      return;\n    }\n    this.parent.done();\n  }\n\n  createSubProgress(weight?: number): SubProgress {\n    const child = new SubProgress(this, weight);\n    this.#children.push(child);\n    return child;\n  }\n\n  update(): void {\n    let totalWeights = 0;\n    let done = 0;\n\n    for (let i = 0; i < this.#children.length; ++i) {\n      const child = this.#children[i];\n      if (child.getTotalWork()) {\n        done += child.getWeight() * child.getWorked() / child.getTotalWork();\n      }\n      totalWeights += child.getWeight();\n    }\n    this.parent.setWorked(done / totalWeights);\n  }\n}\n\nexport class SubProgress implements Progress {\n  readonly #composite: CompositeProgress;\n  #weight: number;\n  #worked: number;\n  #totalWork: number;\n  constructor(composite: CompositeProgress, weight?: number) {\n    this.#composite = composite;\n    this.#weight = weight || 1;\n    this.#worked = 0;\n\n    this.#totalWork = 0;\n  }\n\n  isCanceled(): boolean {\n    return this.#composite.parent.isCanceled();\n  }\n\n  setTitle(title: string): void {\n    this.#composite.parent.setTitle(title);\n  }\n\n  done(): void {\n    this.setWorked(this.#totalWork);\n    this.#composite.childDone();\n  }\n\n  setTotalWork(totalWork: number): void {\n    this.#totalWork = totalWork;\n    this.#composite.update();\n  }\n\n  setWorked(worked: number, title?: string): void {\n    this.#worked = worked;\n    if (typeof title !== 'undefined') {\n      this.setTitle(title);\n    }\n    this.#composite.update();\n  }\n\n  incrementWorked(worked?: number): void {\n    this.setWorked(this.#worked + (worked || 1));\n  }\n\n  getWeight(): number {\n    return this.#weight;\n  }\n\n  getWorked(): number {\n    return this.#worked;\n  }\n\n  getTotalWork(): number {\n    return this.#totalWork;\n  }\n}\n\nexport class ProgressProxy implements Progress {\n  readonly #delegate: Progress|null|undefined;\n  readonly #doneCallback: (() => void)|undefined;\n  constructor(delegate?: Progress|null, doneCallback?: (() => void)) {\n    this.#delegate = delegate;\n    this.#doneCallback = doneCallback;\n  }\n\n  isCanceled(): boolean {\n    return this.#delegate ? this.#delegate.isCanceled() : false;\n  }\n\n  setTitle(title: string): void {\n    if (this.#delegate) {\n      this.#delegate.setTitle(title);\n    }\n  }\n\n  done(): void {\n    if (this.#delegate) {\n      this.#delegate.done();\n    }\n    if (this.#doneCallback) {\n      this.#doneCallback();\n    }\n  }\n\n  setTotalWork(totalWork: number): void {\n    if (this.#delegate) {\n      this.#delegate.setTotalWork(totalWork);\n    }\n  }\n\n  setWorked(worked: number, title?: string): void {\n    if (this.#delegate) {\n      this.#delegate.setWorked(worked, title);\n    }\n  }\n\n  incrementWorked(worked?: number): void {\n    if (this.#delegate) {\n      this.#delegate.incrementWorked(worked);\n    }\n  }\n}\n"],
  "mappings": "AAgCO,sBAAe;AAAA,EACpB,aAAa,WAAyB;AAAA;AAAA,EAEtC,SAAS,OAAqB;AAAA;AAAA,EAE9B,UAAU,QAAgB,OAAsB;AAAA;AAAA,EAEhD,gBAAgB,QAAuB;AAAA;AAAA,EAEvC,OAAa;AAAA;AAAA,EAEb,aAAsB;AACpB,WAAO;AAAA;AAAA;AAIJ,+BAAwB;AAAA,EACpB;AAAA;AAAA;AAAA,EAIT,YAAY,QAAkB;AAC5B,SAAK,SAAS;AACd,qBAAiB;AACjB,yBAAqB;AACrB,SAAK,OAAO,aAAa;AACzB,SAAK,OAAO,UAAU;AAAA;AAAA,EAGxB,YAAkB;AAChB,QAAI,EAAE,uBAAuB,eAAe,QAAQ;AAClD;AAAA;AAEF,SAAK,OAAO;AAAA;AAAA,EAGd,kBAAkB,QAA8B;AAC9C,UAAM,QAAQ,IAAI,YAAY,MAAM;AACpC,mBAAe,KAAK;AACpB,WAAO;AAAA;AAAA,EAGT,SAAe;AACb,QAAI,eAAe;AACnB,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,EAAE,GAAG;AAC9C,YAAM,QAAQ,eAAe;AAC7B,UAAI,MAAM,gBAAgB;AACxB,gBAAQ,MAAM,cAAc,MAAM,cAAc,MAAM;AAAA;AAExD,sBAAgB,MAAM;AAAA;AAExB,SAAK,OAAO,UAAU,OAAO;AAAA;AAAA;AAI1B,yBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA,EAK3C,YAAY,WAA8B,QAAiB;AACzD,sBAAkB;AAClB,mBAAe,UAAU;AACzB,mBAAe;AAEf,sBAAkB;AAAA;AAAA,EAGpB,aAAsB;AACpB,WAAO,gBAAgB,OAAO;AAAA;AAAA,EAGhC,SAAS,OAAqB;AAC5B,oBAAgB,OAAO,SAAS;AAAA;AAAA,EAGlC,OAAa;AACX,SAAK,UAAU;AACf,oBAAgB;AAAA;AAAA,EAGlB,aAAa,WAAyB;AACpC,sBAAkB;AAClB,oBAAgB;AAAA;AAAA,EAGlB,UAAU,QAAgB,OAAsB;AAC9C,mBAAe;AACf,QAAI,OAAO,UAAU,aAAa;AAChC,WAAK,SAAS;AAAA;AAEhB,oBAAgB;AAAA;AAAA,EAGlB,gBAAgB,QAAuB;AACrC,SAAK,UAAU,eAAgB,WAAU;AAAA;AAAA,EAG3C,YAAoB;AAClB,WAAO;AAAA;AAAA,EAGT,YAAoB;AAClB,WAAO;AAAA;AAAA,EAGT,eAAuB;AACrB,WAAO;AAAA;AAAA;AAIJ,2BAAwC;AAAA;AAAA;AAAA,EAG7C,YAAY,UAA0B,cAA6B;AACjE,qBAAiB;AACjB,yBAAqB;AAAA;AAAA,EAGvB,aAAsB;AACpB,WAAO,iBAAiB,eAAe,eAAe;AAAA;AAAA,EAGxD,SAAS,OAAqB;AAC5B,QAAI,gBAAgB;AAClB,qBAAe,SAAS;AAAA;AAAA;AAAA,EAI5B,OAAa;AACX,QAAI,gBAAgB;AAClB,qBAAe;AAAA;AAEjB,QAAI,oBAAoB;AACtB;AAAA;AAAA;AAAA,EAIJ,aAAa,WAAyB;AACpC,QAAI,gBAAgB;AAClB,qBAAe,aAAa;AAAA;AAAA;AAAA,EAIhC,UAAU,QAAgB,OAAsB;AAC9C,QAAI,gBAAgB;AAClB,qBAAe,UAAU,QAAQ;AAAA;AAAA;AAAA,EAIrC,gBAAgB,QAAuB;AACrC,QAAI,gBAAgB;AAClB,qBAAe,gBAAgB;AAAA;AAAA;AAAA;",
  "names": []
}
