{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Object.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Platform from '../platform/platform.js';\nimport type {\n  EventDescriptor, EventListener, EventTarget, EventTargetEvent, EventPayloadToRestParameters} from './EventTarget.js';\n\nexport interface ListenerCallbackTuple<Events, T extends keyof Events> {\n  thisObject?: Object;\n  listener: EventListener<Events, T>;\n  disposed?: boolean;\n}\n\nexport class ObjectWrapper<Events> implements EventTarget<Events> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  listeners?: Map<keyof Events, Set<ListenerCallbackTuple<Events, any>>>;\n\n  addEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      EventDescriptor<Events, T> {\n    if (!this.listeners) {\n      this.listeners = new Map();\n    }\n\n    let listenersForEventType = this.listeners.get(eventType);\n    if (!listenersForEventType) {\n      listenersForEventType = new Set();\n      this.listeners.set(eventType, listenersForEventType);\n    }\n    listenersForEventType.add({thisObject, listener});\n    return {eventTarget: this, eventType, thisObject, listener};\n  }\n\n  once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n    return new Promise(resolve => {\n      const descriptor = this.addEventListener(eventType, event => {\n        this.removeEventListener(eventType, descriptor.listener);\n        resolve(event.data);\n      });\n    });\n  }\n\n  removeEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    for (const listenerTuple of listeners) {\n      if (listenerTuple.listener === listener && listenerTuple.thisObject === thisObject) {\n        listenerTuple.disposed = true;\n        listeners.delete(listenerTuple);\n      }\n    }\n\n    if (!listeners.size) {\n      this.listeners?.delete(eventType);\n    }\n  }\n\n  hasEventListeners(eventType: keyof Events): boolean {\n    return Boolean(this.listeners && this.listeners.has(eventType));\n  }\n\n  dispatchEventToListeners<T extends keyof Events>(\n      eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n      ...[eventData]: EventPayloadToRestParameters<Events, T>): void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    // `eventData` is typed as `Events[T] | undefined`:\n    //   - `undefined` when `Events[T]` is void.\n    //   - `Events[T]` otherwise.\n    // We cast it to `Events[T]` which is the correct type in all instances, as\n    // `void` will be cast and used as `undefined`.\n    const event = {data: eventData as Events[T]};\n    // Work on a snapshot of the current listeners, callbacks might remove/add\n    // new listeners.\n    for (const listener of [...listeners]) {\n      if (!listener.disposed) {\n        listener.listener.call(listener.thisObject, event);\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Constructor = new (...args: any[]) => {};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function eventMixin<Events, Base extends Constructor>(base: Base) {\n  return class EventHandling extends base implements EventTarget<Events> {\n    #events = new ObjectWrapper<Events>();\n\n    addEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void,\n        thisObject?: Object): EventDescriptor<Events, T> {\n      return this.#events.addEventListener(eventType, listener, thisObject);\n    }\n\n    once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n      return this.#events.once(eventType);\n    }\n\n    removeEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void, thisObject?: Object): void {\n      this.#events.removeEventListener(eventType, listener, thisObject);\n    }\n\n    hasEventListeners(eventType: keyof Events): boolean {\n      return this.#events.hasEventListeners(eventType);\n    }\n\n    dispatchEventToListeners<T extends keyof Events>(\n        eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n        ...eventData: EventPayloadToRestParameters<Events, T>): void {\n      this.#events.dispatchEventToListeners(eventType, ...eventData);\n    }\n  };\n}\n"],
  "mappings": "AAuCO,2BAA2D;AAAA,EAEhE;AAAA,EAEA,iBAAyC,WAAc,UAAoC,YAC5D;AAC7B,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,YAAY,oBAAI;AAAA;AAGvB,QAAI,wBAAwB,KAAK,UAAU,IAAI;AAC/C,QAAI,CAAC,uBAAuB;AAC1B,8BAAwB,oBAAI;AAC5B,WAAK,UAAU,IAAI,WAAW;AAAA;AAEhC,0BAAsB,IAAI,EAAC,YAAY;AACvC,WAAO,EAAC,aAAa,MAAM,WAAW,YAAY;AAAA;AAAA,EAGpD,KAA6B,WAAkC;AAC7D,WAAO,IAAI,QAAQ,aAAW;AAC5B,YAAM,aAAa,KAAK,iBAAiB,WAAW,WAAS;AAC3D,aAAK,oBAAoB,WAAW,WAAW;AAC/C,gBAAQ,MAAM;AAAA;AAAA;AAAA;AAAA,EAKpB,oBAA4C,WAAc,UAAoC,YACrF;AACP,UAAM,YAAY,KAAK,WAAW,IAAI;AACtC,QAAI,CAAC,WAAW;AACd;AAAA;AAEF,eAAW,iBAAiB,WAAW;AACrC,UAAI,cAAc,aAAa,YAAY,cAAc,eAAe,YAAY;AAClF,sBAAc,WAAW;AACzB,kBAAU,OAAO;AAAA;AAAA;AAIrB,QAAI,CAAC,UAAU,MAAM;AACnB,WAAK,WAAW,OAAO;AAAA;AAAA;AAAA,EAI3B,kBAAkB,WAAkC;AAClD,WAAO,QAAQ,KAAK,aAAa,KAAK,UAAU,IAAI;AAAA;AAAA,EAGtD,yBACI,cACG,CAAC,YAA2D;AACjE,UAAM,YAAY,KAAK,WAAW,IAAI;AACtC,QAAI,CAAC,WAAW;AACd;AAAA;AAOF,UAAM,QAAQ,EAAC,MAAM;AAGrB,eAAW,YAAY,CAAC,GAAG,YAAY;AACrC,UAAI,CAAC,SAAS,UAAU;AACtB,iBAAS,SAAS,KAAK,SAAS,YAAY;AAAA;AAAA;AAAA;AAAA;AAU7C,2BAAsD,MAAY;AACvE,SAAO,4BAA4B,KAAoC;AAAA,cAC3D,IAAI;AAAA,IAEd,iBACI,WAAc,UACd,YAAiD;AACnD,aAAO,aAAa,iBAAiB,WAAW,UAAU;AAAA;AAAA,IAG5D,KAA6B,WAAkC;AAC7D,aAAO,aAAa,KAAK;AAAA;AAAA,IAG3B,oBACI,WAAc,UAAuD,YAA2B;AAClG,mBAAa,oBAAoB,WAAW,UAAU;AAAA;AAAA,IAGxD,kBAAkB,WAAkC;AAClD,aAAO,aAAa,kBAAkB;AAAA;AAAA,IAGxC,yBACI,cACG,WAA0D;AAC/D,mBAAa,yBAAyB,WAAW,GAAG;AAAA;AAAA;AAAA;",
  "names": []
}
