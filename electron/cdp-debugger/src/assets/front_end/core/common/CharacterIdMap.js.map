{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/CharacterIdMap.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class CharacterIdMap<T> {\n  readonly #elementToCharacter: Map<T, string>;\n  readonly #characterToElement: Map<string, T>;\n  #charCode: number;\n\n  constructor() {\n    this.#elementToCharacter = new Map();\n    this.#characterToElement = new Map();\n    this.#charCode = 33;\n  }\n\n  toChar(object: T): string {\n    let character = this.#elementToCharacter.get(object);\n    if (!character) {\n      if (this.#charCode >= 0xFFFF) {\n        throw new Error('CharacterIdMap ran out of capacity!');\n      }\n      character = String.fromCharCode(this.#charCode++);\n      this.#elementToCharacter.set(object, character);\n      this.#characterToElement.set(character, object);\n    }\n    return character;\n  }\n\n  fromChar(character: string): T|null {\n    const object = this.#characterToElement.get(character);\n    if (object === undefined) {\n      return null;\n    }\n    return object;\n  }\n}\n"],
  "mappings": "AAIO,4BAAwB;AAAA;AAAA;AAAA;AAAA,EAK7B,cAAc;AACZ,+BAA2B,oBAAI;AAC/B,+BAA2B,oBAAI;AAC/B,qBAAiB;AAAA;AAAA,EAGnB,OAAO,QAAmB;AACxB,QAAI,YAAY,yBAAyB,IAAI;AAC7C,QAAI,CAAC,WAAW;AACd,UAAI,kBAAkB,OAAQ;AAC5B,cAAM,IAAI,MAAM;AAAA;AAElB,kBAAY,OAAO,aAAa;AAChC,+BAAyB,IAAI,QAAQ;AACrC,+BAAyB,IAAI,WAAW;AAAA;AAE1C,WAAO;AAAA;AAAA,EAGT,SAAS,WAA2B;AAClC,UAAM,SAAS,yBAAyB,IAAI;AAC5C,QAAI,WAAW,QAAW;AACxB,aAAO;AAAA;AAET,WAAO;AAAA;AAAA;",
  "names": []
}
