{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/ResourceType.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport {ParsedURL} from './ParsedURL.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that appears in a tooltip the xhr and fetch resource types filter.\n  */\n  xhrAndFetch: '`XHR` and `Fetch`',\n  /**\n  *@description Text that appears in a tooltip for the JavaScript types filter.\n  */\n  scripts: 'Scripts',\n  /**\n  *@description Text that appears on a button for the JavaScript resource type filter.\n  */\n  js: 'JS',\n  /**\n  *@description Text that appears in a tooltip for the css types filter.\n  */\n  stylesheets: 'Stylesheets',\n  /**\n  *@description Text that appears on a button for the css resource type filter.\n  */\n  css: 'CSS',\n  /**\n  *@description Text that appears in a tooltip for the image types filter.\n  */\n  images: 'Images',\n  /**\n  *@description Text that appears on a button for the image resource type filter.\n  */\n  img: 'Img',\n  /**\n  *@description Text that appears on a button for the media resource type filter.\n  */\n  media: 'Media',\n  /**\n  *@description Text that appears in a tooltip for the resource types filter.\n  */\n  fonts: 'Fonts',\n  /**\n  *@description Text that appears on a button for the font resource type filter.\n  */\n  font: 'Font',\n  /**\n  *@description Text for documents, a type of resources\n  */\n  documents: 'Documents',\n  /**\n  *@description Text that appears on a button for the document resource type filter.\n  */\n  doc: 'Doc',\n  /**\n  *@description Text that appears in a tooltip for the websocket types filter.\n  */\n  websockets: 'WebSockets',\n  /**\n  *@description Text that appears on a button for the websocket resource type filter.\n  */\n  ws: 'WS',\n  /**\n  *@description Text that appears in a tooltip for the WebAssembly types filter.\n  */\n  webassembly: 'WebAssembly',\n  /**\n  *@description Text that appears on a button for the WebAssembly resource type filter.\n  */\n  wasm: 'Wasm',\n  /**\n  *@description Text that appears on a button for the manifest resource type filter.\n  */\n  manifest: 'Manifest',\n  /**\n  *@description Text for other types of items\n  */\n  other: 'Other',\n  /**\n  *@description Name of a network resource type\n  */\n  document: 'Document',\n  /**\n  *@description Name of a network resource type\n  */\n  stylesheet: 'Stylesheet',\n  /**\n  *@description Text in Image View of the Sources panel\n  */\n  image: 'Image',\n  /**\n  *@description Label for a group of JavaScript files\n  */\n  script: 'Script',\n  /**\n  *@description Name of a network resource type\n  */\n  texttrack: 'TextTrack',\n  /**\n  *@description Name of a network resource type\n  */\n  fetch: 'Fetch',\n  /**\n  *@description Name of a network resource type\n  */\n  eventsource: 'EventSource',\n  /**\n  *@description Name of a network resource type\n  */\n  websocket: 'WebSocket',\n  /**\n  *@description Name of a network resource type\n  */\n  webtransport: 'WebTransport',\n  /**\n  *@description Name of a network resource type\n  */\n  signedexchange: 'SignedExchange',\n  /**\n  *@description Name of a network resource type\n  */\n  ping: 'Ping',\n  /**\n  *@description Name of a network resource type\n  */\n  cspviolationreport: 'CSPViolationReport',\n  /**\n  *@description Name of a network initiator type\n  */\n  preflight: 'Preflight',\n  /**\n  *@description Name of a network initiator type\n  */\n  webbundle: 'WebBundle',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/common/ResourceType.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ResourceType {\n  readonly #nameInternal: string;\n  readonly #titleInternal: () => Platform.UIString.LocalizedString;\n  readonly #categoryInternal: ResourceCategory;\n  readonly #isTextTypeInternal: boolean;\n\n  constructor(\n      name: string, title: () => Platform.UIString.LocalizedString, category: ResourceCategory, isTextType: boolean) {\n    this.#nameInternal = name;\n    this.#titleInternal = title;\n    this.#categoryInternal = category;\n    this.#isTextTypeInternal = isTextType;\n  }\n\n  static fromMimeType(mimeType: string|null): ResourceType {\n    if (!mimeType) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.startsWith('text/html')) {\n      return resourceTypes.Document;\n    }\n    if (mimeType.startsWith('text/css')) {\n      return resourceTypes.Stylesheet;\n    }\n    if (mimeType.startsWith('image/')) {\n      return resourceTypes.Image;\n    }\n    if (mimeType.startsWith('text/')) {\n      return resourceTypes.Script;\n    }\n\n    if (mimeType.includes('font')) {\n      return resourceTypes.Font;\n    }\n    if (mimeType.includes('script')) {\n      return resourceTypes.Script;\n    }\n    if (mimeType.includes('octet')) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.includes('application')) {\n      return resourceTypes.Script;\n    }\n\n    return resourceTypes.Other;\n  }\n\n  static fromMimeTypeOverride(mimeType: string|null): ResourceType|null {\n    if (mimeType === 'application/wasm') {\n      return resourceTypes.Wasm;\n    }\n    if (mimeType === 'application/webbundle') {\n      return resourceTypes.WebBundle;\n    }\n\n    return null;\n  }\n\n  static fromURL(url: string): ResourceType|null {\n    return resourceTypeByExtension.get(ParsedURL.extractExtension(url)) || null;\n  }\n\n  static fromName(name: string): ResourceType|null {\n    for (const resourceTypeId in resourceTypes) {\n      const resourceType = (resourceTypes as {\n        [x: string]: ResourceType,\n      })[resourceTypeId];\n      if (resourceType.name() === name) {\n        return resourceType;\n      }\n    }\n    return null;\n  }\n\n  static mimeFromURL(url: Platform.DevToolsPath.UrlString): string|undefined {\n    const name = ParsedURL.extractName(url);\n    if (mimeTypeByName.has(name)) {\n      return mimeTypeByName.get(name);\n    }\n\n    const ext = ParsedURL.extractExtension(url).toLowerCase();\n    return mimeTypeByExtension.get(ext);\n  }\n\n  static mimeFromExtension(ext: string): string|undefined {\n    return mimeTypeByExtension.get(ext);\n  }\n\n  name(): string {\n    return this.#nameInternal;\n  }\n\n  title(): string {\n    return this.#titleInternal();\n  }\n\n  category(): ResourceCategory {\n    return this.#categoryInternal;\n  }\n\n  isTextType(): boolean {\n    return this.#isTextTypeInternal;\n  }\n\n  isScript(): boolean {\n    return this.#nameInternal === 'script' || this.#nameInternal === 'sm-script';\n  }\n\n  hasScripts(): boolean {\n    return this.isScript() || this.isDocument();\n  }\n\n  isStyleSheet(): boolean {\n    return this.#nameInternal === 'stylesheet' || this.#nameInternal === 'sm-stylesheet';\n  }\n\n  isDocument(): boolean {\n    return this.#nameInternal === 'document';\n  }\n\n  isDocumentOrScriptOrStyleSheet(): boolean {\n    return this.isDocument() || this.isScript() || this.isStyleSheet();\n  }\n\n  isFont(): boolean {\n    return this.#nameInternal === 'font';\n  }\n\n  isImage(): boolean {\n    return this.#nameInternal === 'image';\n  }\n\n  isFromSourceMap(): boolean {\n    return this.#nameInternal.startsWith('sm-');\n  }\n\n  isWebbundle(): boolean {\n    return this.#nameInternal === 'webbundle';\n  }\n\n  toString(): string {\n    return this.#nameInternal;\n  }\n\n  canonicalMimeType(): string {\n    if (this.isDocument()) {\n      return 'text/html';\n    }\n    if (this.isScript()) {\n      return 'text/javascript';\n    }\n    if (this.isStyleSheet()) {\n      return 'text/css';\n    }\n    return '';\n  }\n}\n\nexport class ResourceCategory {\n  title: () => Platform.UIString.LocalizedString;\n  shortTitle: () => Platform.UIString.LocalizedString;\n  constructor(title: () => Platform.UIString.LocalizedString, shortTitle: () => Platform.UIString.LocalizedString) {\n    this.title = title;\n    this.shortTitle = shortTitle;\n  }\n}\n\nexport const resourceCategories = {\n  XHR: new ResourceCategory(i18nLazyString(UIStrings.xhrAndFetch), i18n.i18n.lockedLazyString('Fetch/XHR')),\n  Script: new ResourceCategory(i18nLazyString(UIStrings.scripts), i18nLazyString(UIStrings.js)),\n  Stylesheet: new ResourceCategory(i18nLazyString(UIStrings.stylesheets), i18nLazyString(UIStrings.css)),\n  Image: new ResourceCategory(i18nLazyString(UIStrings.images), i18nLazyString(UIStrings.img)),\n  Media: new ResourceCategory(i18nLazyString(UIStrings.media), i18nLazyString(UIStrings.media)),\n  Font: new ResourceCategory(i18nLazyString(UIStrings.fonts), i18nLazyString(UIStrings.font)),\n  Document: new ResourceCategory(i18nLazyString(UIStrings.documents), i18nLazyString(UIStrings.doc)),\n  WebSocket: new ResourceCategory(i18nLazyString(UIStrings.websockets), i18nLazyString(UIStrings.ws)),\n  Wasm: new ResourceCategory(i18nLazyString(UIStrings.webassembly), i18nLazyString(UIStrings.wasm)),\n  Manifest: new ResourceCategory(i18nLazyString(UIStrings.manifest), i18nLazyString(UIStrings.manifest)),\n  Other: new ResourceCategory(i18nLazyString(UIStrings.other), i18nLazyString(UIStrings.other)),\n};\n\n/**\n * This enum is a superset of all types defined in WebCore::InspectorPageAgent::resourceTypeJson\n * For DevTools-only types that are based on MIME-types that are backed by other request types\n * (for example Wasm that is based on Fetch), additional types are added here.\n * For these types, make sure to update `fromMimeTypeOverride` to implement the custom logic.\n */\nexport const resourceTypes = {\n  Document: new ResourceType('document', i18nLazyString(UIStrings.document), resourceCategories.Document, true),\n  Stylesheet: new ResourceType('stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  Image: new ResourceType('image', i18nLazyString(UIStrings.image), resourceCategories.Image, false),\n  Media: new ResourceType('media', i18nLazyString(UIStrings.media), resourceCategories.Media, false),\n  Font: new ResourceType('font', i18nLazyString(UIStrings.font), resourceCategories.Font, false),\n  Script: new ResourceType('script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  TextTrack: new ResourceType('texttrack', i18nLazyString(UIStrings.texttrack), resourceCategories.Other, true),\n  XHR: new ResourceType('xhr', i18n.i18n.lockedLazyString('XHR'), resourceCategories.XHR, true),\n  Fetch: new ResourceType('fetch', i18nLazyString(UIStrings.fetch), resourceCategories.XHR, true),\n  EventSource: new ResourceType('eventsource', i18nLazyString(UIStrings.eventsource), resourceCategories.XHR, true),\n  WebSocket: new ResourceType('websocket', i18nLazyString(UIStrings.websocket), resourceCategories.WebSocket, false),\n  // TODO(yoichio): Consider creating new category WT or WS/WT with WebSocket.\n  WebTransport:\n      new ResourceType('webtransport', i18nLazyString(UIStrings.webtransport), resourceCategories.WebSocket, false),\n  Wasm: new ResourceType('wasm', i18nLazyString(UIStrings.wasm), resourceCategories.Wasm, false),\n  Manifest: new ResourceType('manifest', i18nLazyString(UIStrings.manifest), resourceCategories.Manifest, true),\n  SignedExchange:\n      new ResourceType('signed-exchange', i18nLazyString(UIStrings.signedexchange), resourceCategories.Other, false),\n  Ping: new ResourceType('ping', i18nLazyString(UIStrings.ping), resourceCategories.Other, false),\n  CSPViolationReport: new ResourceType(\n      'csp-violation-report', i18nLazyString(UIStrings.cspviolationreport), resourceCategories.Other, false),\n  Other: new ResourceType('other', i18nLazyString(UIStrings.other), resourceCategories.Other, false),\n  Preflight: new ResourceType('preflight', i18nLazyString(UIStrings.preflight), resourceCategories.Other, true),\n  SourceMapScript: new ResourceType('sm-script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  SourceMapStyleSheet:\n      new ResourceType('sm-stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  WebBundle: new ResourceType('webbundle', i18nLazyString(UIStrings.webbundle), resourceCategories.Other, false),\n};\n\nconst mimeTypeByName = new Map([\n  // CoffeeScript\n  ['Cakefile', 'text/x-coffeescript'],\n]);\n\n// clang-format off\nexport const resourceTypeByExtension = new Map([\n  ['js', resourceTypes.Script],\n  ['mjs', resourceTypes.Script],\n\n  ['css', resourceTypes.Stylesheet],\n  ['xsl', resourceTypes.Stylesheet],\n\n  ['avif', resourceTypes.Image],\n  ['avifs', resourceTypes.Image],\n  ['bmp', resourceTypes.Image],\n  ['gif', resourceTypes.Image],\n  ['ico', resourceTypes.Image],\n  ['jpeg', resourceTypes.Image],\n  ['jpg', resourceTypes.Image],\n  ['jxl', resourceTypes.Image],\n  ['png', resourceTypes.Image],\n  ['svg', resourceTypes.Image],\n  ['tif', resourceTypes.Image],\n  ['tiff', resourceTypes.Image],\n\n  ['webp', resourceTypes.Media],\n\n  ['otf', resourceTypes.Font],\n  ['ttc', resourceTypes.Font],\n  ['ttf', resourceTypes.Font],\n  ['woff', resourceTypes.Font],\n  ['woff2', resourceTypes.Font],\n\n  ['wasm', resourceTypes.Wasm],\n]);\n// clang-format on\n\nexport const mimeTypeByExtension = new Map([\n  // Web extensions\n  ['js', 'text/javascript'],\n  ['mjs', 'text/javascript'],\n  ['css', 'text/css'],\n  ['html', 'text/html'],\n  ['htm', 'text/html'],\n  ['xml', 'application/xml'],\n  ['xsl', 'application/xml'],\n  ['wasm', 'application/wasm'],\n\n  // HTML Embedded Scripts, ASP], JSP\n  ['asp', 'application/x-aspx'],\n  ['aspx', 'application/x-aspx'],\n  ['jsp', 'application/x-jsp'],\n\n  // C/C++\n  ['c', 'text/x-c++src'],\n  ['cc', 'text/x-c++src'],\n  ['cpp', 'text/x-c++src'],\n  ['h', 'text/x-c++src'],\n  ['m', 'text/x-c++src'],\n  ['mm', 'text/x-c++src'],\n\n  // CoffeeScript\n  ['coffee', 'text/x-coffeescript'],\n\n  // Dart\n  ['dart', 'text/javascript'],\n\n  // TypeScript\n  ['ts', 'text/typescript'],\n  ['tsx', 'text/typescript-jsx'],\n\n  // JSON\n  ['json', 'application/json'],\n  ['gyp', 'application/json'],\n  ['gypi', 'application/json'],\n\n  // C#\n  ['cs', 'text/x-csharp'],\n\n  // Java\n  ['java', 'text/x-java'],\n\n  // Less\n  ['less', 'text/x-less'],\n\n  // PHP\n  ['php', 'text/x-php'],\n  ['phtml', 'application/x-httpd-php'],\n\n  // Python\n  ['py', 'text/x-python'],\n\n  // Shell\n  ['sh', 'text/x-sh'],\n\n  // SCSS\n  ['scss', 'text/x-scss'],\n\n  // Video Text Tracks.\n  ['vtt', 'text/vtt'],\n\n  // LiveScript\n  ['ls', 'text/x-livescript'],\n\n  // Markdown\n  ['md', 'text/markdown'],\n\n  // ClojureScript\n  ['cljs', 'text/x-clojure'],\n  ['cljc', 'text/x-clojure'],\n  ['cljx', 'text/x-clojure'],\n\n  // Stylus\n  ['styl', 'text/x-styl'],\n\n  // JSX\n  ['jsx', 'text/jsx'],\n\n  // Image\n  ['avif', 'image/avif'],\n  ['avifs', 'image/avif-sequence'],\n  ['bmp', 'image/bmp'],\n  ['gif', 'image/gif'],\n  ['ico', 'image/ico'],\n  ['jpeg', 'image/jpeg'],\n  ['jpg', 'image/jpeg'],\n  ['jxl', 'image/jxl'],\n  ['png', 'image/png'],\n  ['svg', 'image/svg+xml'],\n  ['tif', 'image/tif'],\n  ['tiff', 'image/tiff'],\n  ['webp', 'image/webp'],\n\n  // Font\n  ['otf', 'font/otf'],\n  ['ttc', 'font/collection'],\n  ['ttf', 'font/ttf'],\n  ['woff', 'font/woff'],\n  ['woff2', 'font/woff2'],\n]);\n"],
  "mappings": "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",
  "names": []
}
