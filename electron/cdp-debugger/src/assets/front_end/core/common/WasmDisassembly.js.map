{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/WasmDisassembly.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\n/**\n * Metadata to map between bytecode #offsets and line numbers in the\n * disassembly for WebAssembly modules.\n */\n\ninterface FunctionBodyOffset {\n  start: number;\n  end: number;\n}\nexport class WasmDisassembly {\n  readonly #offsets: number[];\n  #functionBodyOffsets: FunctionBodyOffset[];\n\n  constructor(offsets: number[], functionBodyOffsets: FunctionBodyOffset[]) {\n    this.#offsets = offsets;\n    this.#functionBodyOffsets = functionBodyOffsets;\n  }\n\n  get lineNumbers(): number {\n    return this.#offsets.length;\n  }\n\n  bytecodeOffsetToLineNumber(bytecodeOffset: number): number {\n    return Platform.ArrayUtilities.upperBound(\n               this.#offsets, bytecodeOffset, Platform.ArrayUtilities.DEFAULT_COMPARATOR) -\n        1;\n  }\n\n  lineNumberToBytecodeOffset(lineNumber: number): number {\n    return this.#offsets[lineNumber];\n  }\n\n  /**\n   * returns an iterable enumerating all the non-breakable line numbers in the disassembly\n   */\n  * nonBreakableLineNumbers(): Iterable<number> {\n    let lineNumber = 0;\n    let functionIndex = 0;\n    while (lineNumber < this.lineNumbers) {\n      if (functionIndex < this.#functionBodyOffsets.length) {\n        const offset = this.lineNumberToBytecodeOffset(lineNumber);\n        if (offset >= this.#functionBodyOffsets[functionIndex].start) {\n          lineNumber = this.bytecodeOffsetToLineNumber(this.#functionBodyOffsets[functionIndex++].end) + 1;\n          continue;\n        }\n      }\n      yield lineNumber++;\n    }\n  }\n}\n"],
  "mappings": "AAIA;AAWO,6BAAsB;AAAA;AAAA;AAAA,EAI3B,YAAY,SAAmB,qBAA2C;AACxE,oBAAgB;AAChB,gCAA4B;AAAA;AAAA,MAG1B,cAAsB;AACxB,WAAO,cAAc;AAAA;AAAA,EAGvB,2BAA2B,gBAAgC;AACzD,WAAO,SAAS,eAAe,WACpB,eAAe,gBAAgB,SAAS,eAAe,sBAC9D;AAAA;AAAA,EAGN,2BAA2B,YAA4B;AACrD,WAAO,cAAc;AAAA;AAAA,GAMrB,0BAA4C;AAC5C,QAAI,aAAa;AACjB,QAAI,gBAAgB;AACpB,WAAO,aAAa,KAAK,aAAa;AACpC,UAAI,gBAAgB,0BAA0B,QAAQ;AACpD,cAAM,SAAS,KAAK,2BAA2B;AAC/C,YAAI,UAAU,0BAA0B,eAAe,OAAO;AAC5D,uBAAa,KAAK,2BAA2B,0BAA0B,iBAAiB,OAAO;AAC/F;AAAA;AAAA;AAGJ,YAAM;AAAA;AAAA;AAAA;",
  "names": []
}
