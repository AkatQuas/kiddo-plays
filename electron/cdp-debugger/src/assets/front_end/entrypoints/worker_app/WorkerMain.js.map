{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/worker_app/WorkerMain.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as MobileThrottling from '../../panels/mobile_throttling/mobile_throttling.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that refers to the main target.\n  */\n  main: 'Main',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/worker_app/WorkerMain.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet workerMainImplInstance: WorkerMainImpl;\n\nexport class WorkerMainImpl implements Common.Runnable.Runnable {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): WorkerMainImpl {\n    const {forceNew} = opts;\n    if (!workerMainImplInstance || forceNew) {\n      workerMainImplInstance = new WorkerMainImpl();\n    }\n\n    return workerMainImplInstance;\n  }\n\n  async run(): Promise<void> {\n    void SDK.Connections.initMainConnection(async () => {\n      if (await SDK.TargetManager.TargetManager.instance().maybeAttachInitialTarget()) {\n        return;\n      }\n      SDK.TargetManager.TargetManager.instance().createTarget(\n          'main', i18nString(UIStrings.main), SDK.Target.Type.ServiceWorker, null);\n    }, Components.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost);\n    new MobileThrottling.NetworkPanelIndicator.NetworkPanelIndicator();\n  }\n}\n\nCommon.Runnable.registerEarlyInitializationRunnable(WorkerMainImpl.instance);\n\nSDK.ChildTargetManager.ChildTargetManager.install(async ({target, waitingForDebugger}) => {\n  // Only pause the new worker if debugging SW - we are going through the pause on start checkbox.\n  if (target.parentTarget() || target.type() !== SDK.Target.Type.ServiceWorker || !waitingForDebugger) {\n    return;\n  }\n  const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n  if (!debuggerModel) {\n    return;\n  }\n  if (!debuggerModel.isReadyToPause()) {\n    await debuggerModel.once(SDK.DebuggerModel.Events.DebuggerIsReadyToPause);\n  }\n  debuggerModel.pause();\n});\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,MAAM;AAAA;AAGR,MAAM,OAAO,KAAK,KAAK,kBAAkB,wCAAwC;AACjF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,IAAI;AAEG,4BAAyD;AAAA,SACvD,SAAS,OAEZ,EAAC,UAAU,QAAuB;AACpC,UAAM,EAAC,aAAY;AACnB,QAAI,CAAC,0BAA0B,UAAU;AACvC,+BAAyB,IAAI;AAAA;AAG/B,WAAO;AAAA;AAAA,QAGH,MAAqB;AACzB,SAAK,IAAI,YAAY,mBAAmB,YAAY;AAClD,UAAI,MAAM,IAAI,cAAc,cAAc,WAAW,4BAA4B;AAC/E;AAAA;AAEF,UAAI,cAAc,cAAc,WAAW,aACvC,QAAQ,WAAW,UAAU,OAAO,IAAI,OAAO,KAAK,eAAe;AAAA,OACtE,WAAW,qBAAqB,qBAAqB;AACxD,QAAI,iBAAiB,sBAAsB;AAAA;AAAA;AAI/C,OAAO,SAAS,oCAAoC,eAAe;AAEnE,IAAI,mBAAmB,mBAAmB,QAAQ,OAAO,EAAC,QAAQ,yBAAwB;AAExF,MAAI,OAAO,kBAAkB,OAAO,WAAW,IAAI,OAAO,KAAK,iBAAiB,CAAC,oBAAoB;AACnG;AAAA;AAEF,QAAM,gBAAgB,OAAO,MAAM,IAAI,cAAc;AACrD,MAAI,CAAC,eAAe;AAClB;AAAA;AAEF,MAAI,CAAC,cAAc,kBAAkB;AACnC,UAAM,cAAc,KAAK,IAAI,cAAc,OAAO;AAAA;AAEpD,gBAAc;AAAA;",
  "names": []
}
