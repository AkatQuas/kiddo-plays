{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/node_app/node_app.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../shell/shell.js';\nimport '../../panels/js_profiler/js_profiler-meta.js';\nimport type * as Sources from '../../panels/sources/sources.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Main from '../main/main.js';\n\nimport {NodeMainImpl} from './NodeMain.js';                      // eslint-disable-line rulesdir/es_modules_import\nimport {NodeConnectionsPanel} from './NodeConnectionsPanel.js';  // eslint-disable-line rulesdir/es_modules_import\n\nconst UIStrings = {\n  /**\n  *@description Text that refers to the network connection\n  */\n  connection: 'Connection',\n  /**\n *@description A tag of Node.js Connection Panel that can be searched in the command menu\n */\n  node: 'node',\n  /**\n   *@description Command for showing the Connection tool\n   */\n  showConnection: 'Show Connection',\n  /**\n   *@description Title of the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n  */\n  networkTitle: 'Node',\n  /**\n   *@description Command for showing the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n  */\n  showNode: 'Node',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_app/node_app.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSourcesModule: (typeof Sources|undefined);\n\nasync function loadSourcesModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    loadedSourcesModule = await import('../../panels/sources/sources.js');\n  }\n  return loadedSourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'node-connection',\n  title: i18nLazyString(UIStrings.connection),\n  commandPrompt: i18nLazyString(UIStrings.showConnection),\n  order: 0,\n  async loadView() {\n    return NodeConnectionsPanel.instance();\n  },\n  tags: [i18nLazyString(UIStrings.node)],\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-network',\n  title: i18nLazyString(UIStrings.networkTitle),\n  commandPrompt: i18nLazyString(UIStrings.showNode),\n  order: 2,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadSourcesModule();\n    return Sources.SourcesNavigator.NetworkNavigatorView.instance();\n  },\n});\n\n// @ts-ignore Exposed for legacy layout tests\nself.runtime = Root.Runtime.Runtime.instance({forceNew: true});\nCommon.Runnable.registerEarlyInitializationRunnable(NodeMainImpl.instance);\nnew Main.MainImpl.MainImpl();\n"],
  "mappings": "AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,YAAY;AAAA,EAIZ,MAAM;AAAA,EAIN,gBAAgB;AAAA,EAIhB,cAAc;AAAA,EAId,UAAU;AAAA;AAGZ,MAAM,OAAO,KAAK,KAAK,kBAAkB,oCAAoC;AAC7E,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,mCAA4D;AAC1D,MAAI,CAAC,qBAAqB;AACxB,0BAAsB,MAAM,OAAO;AAAA;AAErC,SAAO;AAAA;AAGT,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,QACD,WAAW;AACf,WAAO,qBAAqB;AAAA;AAAA,EAE9B,MAAM,CAAC,eAAe,UAAU;AAAA;AAGlC,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,EACP,aAAa,GAAG,YAAY,gBAAgB;AAAA,QACtC,WAAW;AACf,UAAM,UAAU,MAAM;AACtB,WAAO,QAAQ,iBAAiB,qBAAqB;AAAA;AAAA;AAKzD,KAAK,UAAU,KAAK,QAAQ,QAAQ,SAAS,EAAC,UAAU;AACxD,OAAO,SAAS,oCAAoC,aAAa;AACjE,IAAI,KAAK,SAAS;",
  "names": []
}
