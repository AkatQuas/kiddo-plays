{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/main/MainImpl.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2007 Matt Lilek (pewtermoose@gmail.com).\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as ProtocolClient from '../../core/protocol_client/protocol_client.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as Snippets from '../../panels/snippets/snippets.js';\nimport * as Timeline from '../../panels/timeline/timeline.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {ExecutionContextSelector} from './ExecutionContextSelector.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of item in main\n  */\n  customizeAndControlDevtools: 'Customize and control DevTools',\n  /**\n  *@description Title element text content in Main\n  */\n  dockSide: 'Dock side',\n  /**\n  *@description Title element title in Main\n  *@example {Ctrl+Shift+D} PH1\n  */\n  placementOfDevtoolsRelativeToThe: 'Placement of DevTools relative to the page. ({PH1} to restore last position)',\n  /**\n  *@description Text to undock the DevTools\n  */\n  undockIntoSeparateWindow: 'Undock into separate window',\n  /**\n  *@description Text to dock the DevTools to the bottom of the browser tab\n  */\n  dockToBottom: 'Dock to bottom',\n  /**\n  *@description Text to dock the DevTools to the right of the browser tab\n  */\n  dockToRight: 'Dock to right',\n  /**\n  *@description Text to dock the DevTools to the left of the browser tab\n  */\n  dockToLeft: 'Dock to left',\n  /**\n  *@description Text in Main\n  */\n  focusDebuggee: 'Focus debuggee',\n  /**\n  *@description Text in Main\n  */\n  hideConsoleDrawer: 'Hide console drawer',\n  /**\n  *@description Text in Main\n  */\n  showConsoleDrawer: 'Show console drawer',\n  /**\n  *@description A context menu item in the Main\n  */\n  moreTools: 'More tools',\n  /**\n  *@description Text for the viewing the help options\n  */\n  help: 'Help',\n};\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/main/MainImpl.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class MainImpl {\n  #lateInitDonePromise!: Promise<void>;\n  #readyForTestPromise: Promise<void>;\n  #resolveReadyForTestPromise!: () => void;\n\n  constructor() {\n    MainImpl.instanceForTest = this;\n    this.#readyForTestPromise = new Promise(resolve => {\n      this.#resolveReadyForTestPromise = resolve;\n    });\n    void this.#loaded();\n  }\n\n  static time(label: string): void {\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    console.time(label);\n  }\n\n  static timeEnd(label: string): void {\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      return;\n    }\n    console.timeEnd(label);\n  }\n\n  async #loaded(): Promise<void> {\n    console.timeStamp('Main._loaded');\n    Root.Runtime.Runtime.setPlatform(Host.Platform.platform());\n    const prefs = await new Promise<{[key: string]: string}>(resolve => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.getPreferences(resolve);\n    });\n\n    console.timeStamp('Main._gotPreferences');\n    this.#initializeGlobalsForLayoutTests();\n    this.createSettings(prefs);\n    await this.requestAndRegisterLocaleData();\n\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.SYNC_SETTINGS)) {\n      Host.userMetrics.syncSetting(\n          Common.Settings.Settings.instance().moduleSetting<boolean>('sync_preferences').get());\n    }\n\n    void this.#createAppUI();\n  }\n\n  #initializeGlobalsForLayoutTests(): void {\n    // @ts-ignore layout test global\n    self.Common = self.Common || {};\n    // @ts-ignore layout test global\n    self.UI = self.UI || {};\n    // @ts-ignore layout test global\n    self.UI.panels = self.UI.panels || {};\n    // @ts-ignore layout test global\n    self.SDK = self.SDK || {};\n    // @ts-ignore layout test global\n    self.Bindings = self.Bindings || {};\n    // @ts-ignore layout test global\n    self.Persistence = self.Persistence || {};\n    // @ts-ignore layout test global\n    self.Workspace = self.Workspace || {};\n    // @ts-ignore layout test global\n    self.Extensions = self.Extensions || {};\n    // @ts-ignore e2e test global\n    self.Host = self.Host || {};\n    // @ts-ignore e2e test global\n    self.Host.userMetrics = self.Host.userMetrics || Host.userMetrics;\n    // @ts-ignore e2e test global\n    self.Host.UserMetrics = self.Host.UserMetrics || Host.UserMetrics;\n  }\n\n  async requestAndRegisterLocaleData(): Promise<void> {\n    const settingLanguage = Common.Settings.Settings.instance().moduleSetting<string>('language').get();\n    const devToolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance({\n      create: true,\n      data: {\n        navigatorLanguage: navigator.language,\n        settingLanguage,\n        lookupClosestDevToolsLocale: i18n.i18n.lookupClosestSupportedDevToolsLocale,\n      },\n    });\n    // Record the intended locale, regardless whether we are able to fetch it or not.\n    Host.userMetrics.language(devToolsLocale.locale);\n\n    if (devToolsLocale.locale !== 'en-US') {\n      // Always load en-US locale data as a fallback. This is important, newly added\n      // strings won't have a translation. If fetching en-US.json fails, something\n      // is seriously wrong and the exception should bubble up.\n      await i18n.i18n.fetchAndRegisterLocaleData('en-US');\n    }\n\n    try {\n      await i18n.i18n.fetchAndRegisterLocaleData(devToolsLocale.locale);\n    } catch (error) {\n      console.error(error);\n      // Loading the actual locale data failed, tell DevTools to use 'en-US'.\n      devToolsLocale.forceFallbackLocale();\n    }\n  }\n\n  createSettings(prefs: {\n    [x: string]: string,\n  }): void {\n    this.#initializeExperiments();\n    let storagePrefix = '';\n    if (Host.Platform.isCustomDevtoolsFrontend()) {\n      storagePrefix = '__custom__';\n    } else if (\n        !Root.Runtime.Runtime.queryParam('can_dock') && Boolean(Root.Runtime.Runtime.queryParam('debugFrontend')) &&\n        !Host.InspectorFrontendHost.isUnderTest()) {\n      storagePrefix = '__bundled__';\n    }\n\n    let localStorage;\n    if (!Host.InspectorFrontendHost.isUnderTest() && window.localStorage) {\n      const localbackingStore: Common.Settings.SettingsBackingStore = {\n        ...Common.Settings.NOOP_STORAGE,\n        clear: () => window.localStorage.clear(),\n      };\n      localStorage = new Common.Settings.SettingsStorage(window.localStorage, localbackingStore, storagePrefix);\n    } else {\n      localStorage = new Common.Settings.SettingsStorage({}, Common.Settings.NOOP_STORAGE, storagePrefix);\n    }\n\n    const hostUnsyncedStorage: Common.Settings.SettingsBackingStore = {\n      register: (name: string) =>\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.registerPreference(name, {synced: false}),\n      set: Host.InspectorFrontendHost.InspectorFrontendHostInstance.setPreference,\n      get: (name: string) => {\n        return new Promise(resolve => {\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.getPreference(name, resolve);\n        });\n      },\n      remove: Host.InspectorFrontendHost.InspectorFrontendHostInstance.removePreference,\n      clear: Host.InspectorFrontendHost.InspectorFrontendHostInstance.clearPreferences,\n    };\n    const hostSyncedStorage: Common.Settings.SettingsBackingStore = {\n      ...hostUnsyncedStorage,\n      register: (name: string) =>\n          Host.InspectorFrontendHost.InspectorFrontendHostInstance.registerPreference(name, {synced: true}),\n    };\n    // `prefs` is retrieved via `getPreferences` host binding and contains both synced and unsynced settings.\n    // As such, we use `prefs` to initialize both the synced and the global storage. This is fine as an individual\n    // setting can't change storage buckets during a single DevTools session.\n    const syncedStorage = new Common.Settings.SettingsStorage(prefs, hostSyncedStorage, storagePrefix);\n    const globalStorage = new Common.Settings.SettingsStorage(prefs, hostUnsyncedStorage, storagePrefix);\n    Common.Settings.Settings.instance({forceNew: true, syncedStorage, globalStorage, localStorage});\n\n    // @ts-ignore layout test global\n    self.Common.settings = Common.Settings.Settings.instance();\n\n    if (!Host.InspectorFrontendHost.isUnderTest()) {\n      new Common.Settings.VersionController().updateVersion();\n    }\n  }\n\n  #initializeExperiments(): void {\n    Root.Runtime.experiments.register('applyCustomStylesheet', 'Allow extensions to load custom stylesheets');\n    Root.Runtime.experiments.register('captureNodeCreationStacks', 'Capture node creation stacks');\n    Root.Runtime.experiments.register('sourcesPrettyPrint', 'Automatically pretty print in the Sources Panel');\n    Root.Runtime.experiments.register('backgroundServices', 'Background web platform feature events', true);\n    Root.Runtime.experiments.register(\n        'backgroundServicesNotifications', 'Background services section for Notifications');\n    Root.Runtime.experiments.register(\n        'backgroundServicesPaymentHandler', 'Background services section for Payment Handler');\n    Root.Runtime.experiments.register(\n        'backgroundServicesPushMessaging', 'Background services section for Push Messaging');\n    Root.Runtime.experiments.register(\n        'ignoreListJSFramesOnTimeline', 'Ignore List for JavaScript frames on Timeline', true);\n    Root.Runtime.experiments.register('inputEventsOnTimelineOverview', 'Input events on Timeline overview', true);\n    Root.Runtime.experiments.register('liveHeapProfile', 'Live heap profile', true);\n    Root.Runtime.experiments.register(\n        'protocolMonitor', 'Protocol Monitor', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-92/#protocol-monitor');\n    Root.Runtime.experiments.register('developerResourcesView', 'Show developer resources view');\n    Root.Runtime.experiments.register(\n        'cspViolationsView', 'Show CSP Violations view', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-89/#csp');\n    Root.Runtime.experiments.register(\n        'recordCoverageWithPerformanceTracing', 'Record coverage while performance tracing');\n    Root.Runtime.experiments.register('samplingHeapProfilerTimeline', 'Sampling heap profiler timeline', true);\n    Root.Runtime.experiments.register(\n        'showOptionToExposeInternalsInHeapSnapshot', 'Show option to expose internals in heap snapshots');\n    Root.Runtime.experiments.register(\n        'sourceOrderViewer', 'Source order viewer', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-92/#source-order');\n    Root.Runtime.experiments.register('webauthnPane', 'WebAuthn Pane');\n    Root.Runtime.experiments.register(\n        'keyboardShortcutEditor', 'Enable keyboard shortcut editor', true,\n        'https://developer.chrome.com/blog/new-in-devtools-88/#keyboard-shortcuts');\n\n    // Back/forward cache\n    Root.Runtime.experiments.register(\n        'bfcacheDisplayTree', 'Show back/forward cache blocking reasons in the frame tree structure view');\n\n    // Timeline\n    Root.Runtime.experiments.register('timelineEventInitiators', 'Timeline: event initiators');\n    Root.Runtime.experiments.register('timelineInvalidationTracking', 'Timeline: invalidation tracking', true);\n    Root.Runtime.experiments.register('timelineShowAllEvents', 'Timeline: show all events', true);\n    Root.Runtime.experiments.register(\n        'timelineV8RuntimeCallStats', 'Timeline: V8 Runtime Call Stats on Timeline', true);\n    Root.Runtime.experiments.register('timelineWebGL', 'Timeline: WebGL-based flamechart');\n    Root.Runtime.experiments.register('timelineReplayEvent', 'Timeline: Replay input events', true);\n\n    // Debugging\n    Root.Runtime.experiments.register(\n        'wasmDWARFDebugging', 'WebAssembly Debugging: Enable DWARF support', undefined,\n        'https://developer.chrome.com/blog/wasm-debugging-2020/');\n    Root.Runtime.experiments.register(\n        'evaluateExpressionsWithSourceMaps', 'Console: Resolve variable names in expressions using source maps',\n        undefined);\n    Root.Runtime.experiments.register('instrumentationBreakpoints', 'Enable instrumentation breakpoints', true);\n\n    // Dual-screen\n    Root.Runtime.experiments.register(\n        'dualScreenSupport', 'Emulation: Support dual screen mode', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-89#dual-screen');\n    Root.Runtime.experiments.setEnabled('dualScreenSupport', true);\n\n    // Advanced Perceptual Contrast Algorithm.\n    Root.Runtime.experiments.register(\n        'APCA',\n        'Enable new Advanced Perceptual Contrast Algorithm (APCA) replacing previous contrast ratio and AA/AAA guidelines',\n        undefined, 'https://developer.chrome.com/blog/new-in-devtools-89/#apca');\n\n    // Full Accessibility Tree\n    Root.Runtime.experiments.register(\n        'fullAccessibilityTree', 'Enable full accessibility tree view in the Elements panel', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-90/#accesibility-tree');\n\n    // Font Editor\n    Root.Runtime.experiments.register(\n        'fontEditor', 'Enable new Font Editor tool within the Styles Pane.', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-89/#font');\n\n    // Contrast issues reported via the Issues panel.\n    Root.Runtime.experiments.register(\n        'contrastIssues', 'Enable automatic contrast issue reporting via the Issues panel', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-90/#low-contrast');\n\n    // New cookie features.\n    Root.Runtime.experiments.register('experimentalCookieFeatures', 'Enable experimental cookie features');\n\n    // Hide Issues Feature.\n    Root.Runtime.experiments.register(\n        'hideIssuesFeature', 'Enable experimental hide issues menu', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-94/#hide-issues');\n\n    // Hide Issues Feature.\n    Root.Runtime.experiments.register('groupAndHideIssuesByKind', 'Allow grouping and hiding of issues by IssueKind');\n\n    // Checkbox in the Settings UI to enable Chrome Sync is behind this experiment.\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.SYNC_SETTINGS, 'Sync DevTools settings with Chrome Sync');\n\n    // Debugging of Reporting API\n    Root.Runtime.experiments.register('reportingApiDebugging', 'Enable Reporting API panel in the Application panel');\n\n    // CSS <length> authoring tool.\n    Root.Runtime.experiments.register(\n        'cssTypeComponentLength',\n        'Enable CSS <length> authoring tool in the Styles pane (https://g.co/devtools/length-feedback)', undefined,\n        'https://developer.chrome.com/blog/new-in-devtools-96/#length');\n\n    // Display precise changes in the Changes tab.\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.PRECISE_CHANGES, 'Display more precise changes in the Changes tab');\n\n    // Integrate CSS changes in the Styles pane.\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES, 'Sync CSS changes in the Styles pane');\n\n    // Local overrides for response headers\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.HEADER_OVERRIDES, 'Local overrides for response headers');\n\n    // Enable CSS Authoring hints for inactive rules, deprecated properties, etc.\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.CSS_AUTHORING_HINTS,\n        'Enable CSS Authoring hints for inactive rules, deprecated properties, etc.');\n\n    // New Lighthouse panel with timespan and snapshot mode\n    Root.Runtime.experiments.register('lighthousePanelFR', 'Use Lighthouse panel with timespan and snapshot modes');\n\n    // Tooling for CSS layers in Styles sidebar pane.\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.CSS_LAYERS, 'Tooling for CSS layers in the Styles pane');\n\n    // Enable color picking outside the browser window (using Eyedropper API)\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.EYEDROPPER_COLOR_PICKER, 'Enable color picking outside the browser window');\n\n    // Change grouping of sources panel to use Authored/Deployed trees\n    Root.Runtime.experiments.register(\n        Root.Runtime.ExperimentName.AUTHORED_DEPLOYED_GROUPING, 'Group sources into Authored and Deployed trees');\n\n    Root.Runtime.experiments.enableExperimentsByDefault([\n      'sourceOrderViewer',\n      'hideIssuesFeature',\n      'cssTypeComponentLength',\n      Root.Runtime.ExperimentName.PRECISE_CHANGES,\n      'reportingApiDebugging',\n      Root.Runtime.ExperimentName.SYNC_SETTINGS,\n      Root.Runtime.ExperimentName.CSS_LAYERS,\n      Root.Runtime.ExperimentName.EYEDROPPER_COLOR_PICKER,\n      'lighthousePanelFR',\n    ]);\n\n    Root.Runtime.experiments.cleanUpStaleExperiments();\n    const enabledExperiments = Root.Runtime.Runtime.queryParam('enabledExperiments');\n    if (enabledExperiments) {\n      Root.Runtime.experiments.setServerEnabledExperiments(enabledExperiments.split(';'));\n    }\n    Root.Runtime.experiments.enableExperimentsTransiently([\n      'backgroundServices',\n      'backgroundServicesNotifications',\n      'backgroundServicesPushMessaging',\n      'backgroundServicesPaymentHandler',\n      'bfcacheDisplayTree',\n      'webauthnPane',\n      'developerResourcesView',\n    ]);\n\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      const testParam = Root.Runtime.Runtime.queryParam('test');\n      if (testParam && testParam.includes('live-line-level-heap-profile.js')) {\n        Root.Runtime.experiments.enableForTest('liveHeapProfile');\n      }\n    }\n\n    for (const experiment of Root.Runtime.experiments.enabledExperiments()) {\n      Host.userMetrics.experimentEnabledAtLaunch(experiment.name);\n    }\n  }\n  async #createAppUI(): Promise<void> {\n    MainImpl.time('Main._createAppUI');\n\n    // @ts-ignore layout test global\n    self.UI.viewManager = UI.ViewManager.ViewManager.instance();\n\n    // Request filesystems early, we won't create connections until callback is fired. Things will happen in parallel.\n    // @ts-ignore layout test global\n    self.Persistence.isolatedFileSystemManager =\n        Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance();\n\n    const defaultThemeSetting = 'systemPreferred';\n    const themeSetting = Common.Settings.Settings.instance().createSetting('uiTheme', defaultThemeSetting);\n    UI.UIUtils.initializeUIUtils(document);\n\n    // Initialize theme support and apply it.\n    if (!ThemeSupport.ThemeSupport.hasInstance()) {\n      ThemeSupport.ThemeSupport.instance({forceNew: true, setting: themeSetting});\n    }\n\n    ThemeSupport.ThemeSupport.instance().applyTheme(document);\n\n    const onThemeChange = (): void => {\n      ThemeSupport.ThemeSupport.instance().applyTheme(document);\n    };\n\n    // When the theme changes we instantiate a new theme support and reapply.\n    // Equally if the user has set to match the system and the OS preference changes\n    // we perform the same change.\n    const darkThemeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    darkThemeMediaQuery.addEventListener('change', onThemeChange);\n    themeSetting.addChangeListener(onThemeChange);\n\n    UI.UIUtils.installComponentRootStyles((document.body as Element));\n\n    this.#addMainEventListeners(document);\n\n    const canDock = Boolean(Root.Runtime.Runtime.queryParam('can_dock'));\n    // @ts-ignore layout test global\n    self.UI.zoomManager = UI.ZoomManager.ZoomManager.instance(\n        {forceNew: true, win: window, frontendHost: Host.InspectorFrontendHost.InspectorFrontendHostInstance});\n    // @ts-ignore layout test global\n    self.UI.inspectorView = UI.InspectorView.InspectorView.instance();\n    UI.ContextMenu.ContextMenu.initialize();\n    UI.ContextMenu.ContextMenu.installHandler(document);\n\n    // These instances need to be created early so they don't miss any events about requests/issues/etc.\n    Logs.NetworkLog.NetworkLog.instance();\n    SDK.FrameManager.FrameManager.instance();\n    Logs.LogManager.LogManager.instance();\n    IssuesManager.IssuesManager.IssuesManager.instance({\n      forceNew: true,\n      ensureFirst: true,\n      showThirdPartyIssuesSetting: IssuesManager.Issue.getShowThirdPartyIssuesSetting(),\n      hideIssueSetting: IssuesManager.IssuesManager.getHideIssueByCodeSetting(),\n    });\n    IssuesManager.ContrastCheckTrigger.ContrastCheckTrigger.instance();\n\n    // @ts-ignore layout test global\n    self.SDK.consoleModel = SDK.ConsoleModel.ConsoleModel.instance();\n    // @ts-ignore layout test global\n    self.UI.dockController = UI.DockController.DockController.instance({forceNew: true, canDock});\n    // @ts-ignore layout test global\n    self.SDK.multitargetNetworkManager = SDK.NetworkManager.MultitargetNetworkManager.instance({forceNew: true});\n    // @ts-ignore layout test global\n    self.SDK.domDebuggerManager = SDK.DOMDebuggerModel.DOMDebuggerManager.instance({forceNew: true});\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this.#onSuspendStateChanged.bind(this));\n\n    // @ts-ignore layout test global\n    self.Workspace.fileManager = Workspace.FileManager.FileManager.instance({forceNew: true});\n    // @ts-ignore layout test global\n    self.Workspace.workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n    // @ts-ignore layout test global\n    self.Bindings.networkProjectManager = Bindings.NetworkProject.NetworkProjectManager.instance();\n    // @ts-ignore layout test global\n    self.Bindings.resourceMapping = Bindings.ResourceMapping.ResourceMapping.instance({\n      forceNew: true,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n    });\n    new Bindings.PresentationConsoleMessageHelper.PresentationConsoleMessageManager();\n    // @ts-ignore layout test global\n    self.Bindings.cssWorkspaceBinding = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({\n      forceNew: true,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n    });\n    // @ts-ignore layout test global\n    self.Bindings.debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n    });\n    // @ts-ignore layout test global\n    self.Bindings.breakpointManager = Bindings.BreakpointManager.BreakpointManager.instance({\n      forceNew: true,\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n      targetManager: SDK.TargetManager.TargetManager.instance(),\n      debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(),\n    });\n    // @ts-ignore layout test global\n    self.Extensions.extensionServer = Extensions.ExtensionServer.ExtensionServer.instance({forceNew: true});\n\n    new Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding(\n        Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance(),\n        Workspace.Workspace.WorkspaceImpl.instance());\n    Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance().addPlatformFileSystem(\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/41397\n        'snippet://', new Snippets.ScriptSnippetFileSystem.SnippetFileSystem());\n\n    // @ts-ignore layout test global\n    self.Persistence.persistence = Persistence.Persistence.PersistenceImpl.instance({\n      forceNew: true,\n      workspace: Workspace.Workspace.WorkspaceImpl.instance(),\n      breakpointManager: Bindings.BreakpointManager.BreakpointManager.instance(),\n    });\n    // @ts-ignore layout test global\n    self.Persistence.networkPersistenceManager =\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance(\n            {forceNew: true, workspace: Workspace.Workspace.WorkspaceImpl.instance()});\n    // @ts-ignore layout test global\n    self.Host.Platform = Host.Platform;\n\n    new ExecutionContextSelector(SDK.TargetManager.TargetManager.instance(), UI.Context.Context.instance());\n    // @ts-ignore layout test global\n    self.Bindings.ignoreListManager = Bindings.IgnoreListManager.IgnoreListManager.instance({\n      forceNew: true,\n      debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(),\n    });\n\n    new PauseListener();\n\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    // Required for legacy a11y layout tests\n    // @ts-ignore layout test global\n    self.UI.actionRegistry = actionRegistryInstance;\n    // @ts-ignore layout test global\n    self.UI.shortcutRegistry =\n        UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    this.#registerMessageSinkListener();\n\n    MainImpl.timeEnd('Main._createAppUI');\n\n    const appProvider = Common.AppProvider.getRegisteredAppProviders()[0];\n    if (!appProvider) {\n      throw new Error('Unable to boot DevTools, as the appprovider is missing');\n    }\n    await this.#showAppUI(await appProvider.loadAppProvider());\n  }\n\n  async #showAppUI(appProvider: Object): Promise<void> {\n    MainImpl.time('Main._showAppUI');\n    const app = (appProvider as Common.AppProvider.AppProvider).createApp();\n    // It is important to kick controller lifetime after apps are instantiated.\n    UI.DockController.DockController.instance().initialize();\n    app.presentUI(document);\n\n    const toggleSearchNodeAction = UI.ActionRegistry.ActionRegistry.instance().action('elements.toggle-element-search');\n    // TODO: we should not access actions from other modules.\n    if (toggleSearchNodeAction) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.EnterInspectElementMode, () => {\n            void toggleSearchNodeAction.execute();\n          }, this);\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.RevealSourceLine, this.#revealSourceLine, this);\n\n    await UI.InspectorView.InspectorView.instance().createToolbars();\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.loadCompleted();\n\n    const value = Root.Runtime.Runtime.queryParam('loadTimelineFromURL');\n    if (value !== null) {\n      Timeline.TimelinePanel.LoadTimelineHandler.instance().handleQueryParam(value);\n    }\n\n    // Initialize ARIAUtils.alert Element\n    UI.ARIAUtils.alertElementInstance();\n\n    // Allow UI cycles to repaint prior to creating connection.\n    window.setTimeout(this.#initializeTarget.bind(this), 0);\n    MainImpl.timeEnd('Main._showAppUI');\n  }\n\n  async #initializeTarget(): Promise<void> {\n    MainImpl.time('Main._initializeTarget');\n\n    // We rely on having the early initialization runnables registered in Common when an app loads its\n    // modules, so that we don't have to exhaustively check the app DevTools is running as to\n    // start the applicable runnables.\n    for (const runnableInstanceFunction of Common.Runnable.earlyInitializationRunnables()) {\n      await runnableInstanceFunction().run();\n    }\n    // Used for browser tests.\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.readyForTest();\n    this.#resolveReadyForTestPromise();\n    // Asynchronously run the extensions.\n    window.setTimeout(this.#lateInitialization.bind(this), 100);\n    MainImpl.timeEnd('Main._initializeTarget');\n  }\n\n  #lateInitialization(): void {\n    MainImpl.time('Main._lateInitialization');\n    Extensions.ExtensionServer.ExtensionServer.instance().initializeExtensions();\n    const promises: Promise<void>[] =\n        Common.Runnable.lateInitializationRunnables().map(async lateInitializationLoader => {\n          const runnable = await lateInitializationLoader();\n          return runnable.run();\n        });\n    if (Root.Runtime.experiments.isEnabled('liveHeapProfile')) {\n      const setting = 'memoryLiveHeapProfile';\n      if (Common.Settings.Settings.instance().moduleSetting(setting).get()) {\n        promises.push(PerfUI.LiveHeapProfile.LiveHeapProfile.instance().run());\n      } else {\n        const changeListener = async(event: Common.EventTarget.EventTargetEvent<unknown>): Promise<void> => {\n          if (!event.data) {\n            return;\n          }\n          Common.Settings.Settings.instance().moduleSetting(setting).removeChangeListener(changeListener);\n          void PerfUI.LiveHeapProfile.LiveHeapProfile.instance().run();\n        };\n        Common.Settings.Settings.instance().moduleSetting(setting).addChangeListener(changeListener);\n      }\n    }\n    this.#lateInitDonePromise = Promise.all(promises).then(() => undefined);\n    MainImpl.timeEnd('Main._lateInitialization');\n  }\n\n  lateInitDonePromiseForTest(): Promise<void>|null {\n    return this.#lateInitDonePromise;\n  }\n\n  readyForTest(): Promise<void> {\n    return this.#readyForTestPromise;\n  }\n\n  #registerMessageSinkListener(): void {\n    Common.Console.Console.instance().addEventListener(Common.Console.Events.MessageAdded, messageAdded);\n\n    function messageAdded({data: message}: Common.EventTarget.EventTargetEvent<Common.Console.Message>): void {\n      if (message.show) {\n        Common.Console.Console.instance().show();\n      }\n    }\n  }\n\n  #revealSourceLine(event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.RevealSourceLineEvent>):\n      void {\n    const {url, lineNumber, columnNumber} = event.data;\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n    if (uiSourceCode) {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n      return;\n    }\n\n    function listener(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n      const uiSourceCode = event.data;\n      if (uiSourceCode.url() === url) {\n        void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n        Workspace.Workspace.WorkspaceImpl.instance().removeEventListener(\n            Workspace.Workspace.Events.UISourceCodeAdded, listener);\n      }\n    }\n\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, listener);\n  }\n\n  #postDocumentKeyDown(event: Event): void {\n    if (!event.handled) {\n      UI.ShortcutRegistry.ShortcutRegistry.instance().handleShortcut((event as KeyboardEvent));\n    }\n  }\n\n  #redispatchClipboardEvent(event: Event): void {\n    const eventCopy = new CustomEvent('clipboard-' + event.type, {bubbles: true});\n    // @ts-ignore Used in ElementsTreeOutline\n    eventCopy['original'] = event;\n    const document = event.target && (event.target as HTMLElement).ownerDocument;\n    const target = document ? Platform.DOMUtilities.deepActiveElement(document) : null;\n    if (target) {\n      target.dispatchEvent(eventCopy);\n    }\n    if (eventCopy.handled) {\n      event.preventDefault();\n    }\n  }\n\n  #contextMenuEventFired(event: Event): void {\n    if (event.handled || (event.target as HTMLElement).classList.contains('popup-glasspane')) {\n      event.preventDefault();\n    }\n  }\n\n  #addMainEventListeners(document: Document): void {\n    document.addEventListener('keydown', this.#postDocumentKeyDown.bind(this), false);\n    document.addEventListener('beforecopy', this.#redispatchClipboardEvent.bind(this), true);\n    document.addEventListener('copy', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('cut', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('paste', this.#redispatchClipboardEvent.bind(this), false);\n    document.addEventListener('contextmenu', this.#contextMenuEventFired.bind(this), true);\n  }\n\n  #onSuspendStateChanged(): void {\n    const suspended = SDK.TargetManager.TargetManager.instance().allTargetsSuspended();\n    UI.InspectorView.InspectorView.instance().onSuspendStateChanged(suspended);\n  }\n\n  static instanceForTest: MainImpl|null = null;\n}\n\n// @ts-ignore Exported for Tests.js\nglobalThis.Main = globalThis.Main || {};\n// @ts-ignore Exported for Tests.js\nglobalThis.Main.Main = MainImpl;\n\nlet zoomActionDelegateInstance: ZoomActionDelegate;\n\nexport class ZoomActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ZoomActionDelegate {\n    const {forceNew} = opts;\n    if (!zoomActionDelegateInstance || forceNew) {\n      zoomActionDelegateInstance = new ZoomActionDelegate();\n    }\n\n    return zoomActionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    if (Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      return false;\n    }\n\n    switch (actionId) {\n      case 'main.zoom-in':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.zoomIn();\n        return true;\n      case 'main.zoom-out':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.zoomOut();\n        return true;\n      case 'main.zoom-reset':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.resetZoom();\n        return true;\n    }\n    return false;\n  }\n}\n\nlet searchActionDelegateInstance: SearchActionDelegate;\n\nexport class SearchActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SearchActionDelegate {\n    const {forceNew} = opts;\n    if (!searchActionDelegateInstance || forceNew) {\n      searchActionDelegateInstance = new SearchActionDelegate();\n    }\n\n    return searchActionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    let searchableView = UI.SearchableView.SearchableView.fromElement(\n        Platform.DOMUtilities.deepActiveElement(document),\n    );\n    if (!searchableView) {\n      const currentPanel = (UI.InspectorView.InspectorView.instance().currentPanelDeprecated() as UI.Panel.Panel);\n      if (currentPanel && currentPanel.searchableView) {\n        searchableView = currentPanel.searchableView();\n      }\n      if (!searchableView) {\n        return false;\n      }\n    }\n    switch (actionId) {\n      case 'main.search-in-panel.find':\n        return searchableView.handleFindShortcut();\n      case 'main.search-in-panel.cancel':\n        return searchableView.handleCancelSearchShortcut();\n      case 'main.search-in-panel.find-next':\n        return searchableView.handleFindNextShortcut();\n      case 'main.search-in-panel.find-previous':\n        return searchableView.handleFindPreviousShortcut();\n    }\n    return false;\n  }\n}\nlet mainMenuItemInstance: MainMenuItem;\n\nexport class MainMenuItem implements UI.Toolbar.Provider {\n  readonly #itemInternal: UI.Toolbar.ToolbarMenuButton;\n  constructor() {\n    this.#itemInternal = new UI.Toolbar.ToolbarMenuButton(this.#handleContextMenu.bind(this), true);\n    this.#itemInternal.element.classList.add('main-menu');\n    this.#itemInternal.setTitle(i18nString(UIStrings.customizeAndControlDevtools));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): MainMenuItem {\n    const {forceNew} = opts;\n    if (!mainMenuItemInstance || forceNew) {\n      mainMenuItemInstance = new MainMenuItem();\n    }\n\n    return mainMenuItemInstance;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.#itemInternal;\n  }\n\n  #handleContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    if (UI.DockController.DockController.instance().canDock()) {\n      const dockItemElement = document.createElement('div');\n      dockItemElement.classList.add('flex-centered');\n      dockItemElement.classList.add('flex-auto');\n      dockItemElement.tabIndex = -1;\n      UI.ARIAUtils.setAccessibleName(dockItemElement, UIStrings.dockSide);\n      const titleElement = dockItemElement.createChild('span', 'dockside-title');\n      titleElement.textContent = i18nString(UIStrings.dockSide);\n      const toggleDockSideShorcuts =\n          UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('main.toggle-dock');\n      UI.Tooltip.Tooltip.install(\n          titleElement,\n          i18nString(UIStrings.placementOfDevtoolsRelativeToThe, {PH1: toggleDockSideShorcuts[0].title()}));\n      dockItemElement.appendChild(titleElement);\n      const dockItemToolbar = new UI.Toolbar.Toolbar('', dockItemElement);\n      dockItemToolbar.makeBlueOnHover();\n      const undock = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.undockIntoSeparateWindow), 'largeicon-undock');\n      const bottom = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.dockToBottom), 'largeicon-dock-to-bottom');\n      const right = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.dockToRight), 'largeicon-dock-to-right');\n      const left = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.dockToLeft), 'largeicon-dock-to-left');\n      undock.addEventListener(UI.Toolbar.ToolbarButton.Events.MouseDown, event => event.data.consume());\n      bottom.addEventListener(UI.Toolbar.ToolbarButton.Events.MouseDown, event => event.data.consume());\n      right.addEventListener(UI.Toolbar.ToolbarButton.Events.MouseDown, event => event.data.consume());\n      left.addEventListener(UI.Toolbar.ToolbarButton.Events.MouseDown, event => event.data.consume());\n      undock.addEventListener(\n          UI.Toolbar.ToolbarButton.Events.Click, setDockSide.bind(null, UI.DockController.DockState.UNDOCKED));\n      bottom.addEventListener(\n          UI.Toolbar.ToolbarButton.Events.Click, setDockSide.bind(null, UI.DockController.DockState.BOTTOM));\n      right.addEventListener(\n          UI.Toolbar.ToolbarButton.Events.Click, setDockSide.bind(null, UI.DockController.DockState.RIGHT));\n      left.addEventListener(\n          UI.Toolbar.ToolbarButton.Events.Click, setDockSide.bind(null, UI.DockController.DockState.LEFT));\n      undock.setToggled(\n          UI.DockController.DockController.instance().dockSide() === UI.DockController.DockState.UNDOCKED);\n      bottom.setToggled(UI.DockController.DockController.instance().dockSide() === UI.DockController.DockState.BOTTOM);\n      right.setToggled(UI.DockController.DockController.instance().dockSide() === UI.DockController.DockState.RIGHT);\n      left.setToggled(UI.DockController.DockController.instance().dockSide() === UI.DockController.DockState.LEFT);\n      dockItemToolbar.appendToolbarItem(undock);\n      dockItemToolbar.appendToolbarItem(left);\n      dockItemToolbar.appendToolbarItem(bottom);\n      dockItemToolbar.appendToolbarItem(right);\n      dockItemElement.addEventListener('keydown', event => {\n        let dir = 0;\n        if (event.key === 'ArrowLeft') {\n          dir = -1;\n        } else if (event.key === 'ArrowRight') {\n          dir = 1;\n        } else {\n          return;\n        }\n\n        const buttons = [undock, left, bottom, right];\n        let index = buttons.findIndex(button => button.element.hasFocus());\n        index = Platform.NumberUtilities.clamp(index + dir, 0, buttons.length - 1);\n\n        buttons[index].element.focus();\n        event.consume(true);\n      });\n      contextMenu.headerSection().appendCustomItem(dockItemElement);\n    }\n\n    const button = (this.#itemInternal.element as HTMLButtonElement);\n\n    function setDockSide(side: UI.DockController.DockState): void {\n      void UI.DockController.DockController.instance().once(UI.DockController.Events.AfterDockSideChanged).then(() => {\n        button.focus();\n      });\n      UI.DockController.DockController.instance().setDockSide(side);\n      contextMenu.discard();\n    }\n\n    if (UI.DockController.DockController.instance().dockSide() === UI.DockController.DockState.UNDOCKED) {\n      const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n      if (mainTarget && mainTarget.type() === SDK.Target.Type.Frame) {\n        contextMenu.defaultSection().appendAction('inspector_main.focus-debuggee', i18nString(UIStrings.focusDebuggee));\n      }\n    }\n\n    contextMenu.defaultSection().appendAction(\n        'main.toggle-drawer',\n        UI.InspectorView.InspectorView.instance().drawerVisible() ? i18nString(UIStrings.hideConsoleDrawer) :\n                                                                    i18nString(UIStrings.showConsoleDrawer));\n    contextMenu.appendItemsAtLocation('mainMenu');\n    const moreTools = contextMenu.defaultSection().appendSubMenuItem(i18nString(UIStrings.moreTools));\n    const viewExtensions = UI.ViewManager.getRegisteredViewExtensions();\n    viewExtensions.sort((extension1, extension2) => {\n      const title1 = extension1.title();\n      const title2 = extension2.title();\n      return title1.localeCompare(title2);\n    });\n\n    for (const viewExtension of viewExtensions) {\n      const location = viewExtension.location();\n      const persistence = viewExtension.persistence();\n      const title = viewExtension.title();\n      const id = viewExtension.viewId();\n\n      if (id === 'issues-pane') {\n        moreTools.defaultSection().appendItem(title, () => {\n          Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.HamburgerMenu);\n          void UI.ViewManager.ViewManager.instance().showView('issues-pane', /* userGesture */ true);\n        });\n        continue;\n      }\n\n      if (persistence !== 'closeable') {\n        continue;\n      }\n      if (location !== 'drawer-view' && location !== 'panel') {\n        continue;\n      }\n\n      if (viewExtension.isPreviewFeature()) {\n        const previewIcon = new IconButton.Icon.Icon();\n        previewIcon.data = {iconName: 'ic_preview_feature', color: 'var(--icon-color)', width: '14px', height: '14px'};\n        moreTools.defaultSection().appendItem(title, () => {\n          void UI.ViewManager.ViewManager.instance().showView(id, true, false);\n        }, /* disabled=*/ false, previewIcon);\n        continue;\n      }\n\n      moreTools.defaultSection().appendItem(title, () => {\n        void UI.ViewManager.ViewManager.instance().showView(id, true, false);\n      });\n    }\n\n    const helpSubMenu = contextMenu.footerSection().appendSubMenuItem(i18nString(UIStrings.help));\n    helpSubMenu.appendItemsAtLocation('mainMenuHelp');\n  }\n}\n\nlet settingsButtonProviderInstance: SettingsButtonProvider;\n\nexport class SettingsButtonProvider implements UI.Toolbar.Provider {\n  readonly #settingsButton: UI.Toolbar.ToolbarButton;\n  private constructor() {\n    const settingsActionId = 'settings.show';\n    this.#settingsButton =\n        UI.Toolbar.Toolbar.createActionButtonForId(settingsActionId, {showLabel: false, userActionCode: undefined});\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SettingsButtonProvider {\n    const {forceNew} = opts;\n    if (!settingsButtonProviderInstance || forceNew) {\n      settingsButtonProviderInstance = new SettingsButtonProvider();\n    }\n\n    return settingsButtonProviderInstance;\n  }\n\n  item(): UI.Toolbar.ToolbarItem|null {\n    return this.#settingsButton;\n  }\n}\n\nexport class PauseListener {\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.#debuggerPaused, this);\n  }\n\n  #debuggerPaused(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.#debuggerPaused, this);\n    const debuggerModel = event.data;\n    const debuggerPausedDetails = debuggerModel.debuggerPausedDetails();\n    UI.Context.Context.instance().setFlavor(SDK.Target.Target, debuggerModel.target());\n    void Common.Revealer.reveal(debuggerPausedDetails);\n  }\n}\n\nexport function sendOverProtocol(\n    method: ProtocolClient.InspectorBackend.QualifiedName, params: Object|null): Promise<unknown[]|null> {\n  return new Promise((resolve, reject) => {\n    const sendRawMessage = ProtocolClient.InspectorBackend.test.sendRawMessage;\n    if (!sendRawMessage) {\n      return reject('Unable to send message to test client');\n    }\n    sendRawMessage(method, params, (err, ...results) => {\n      if (err) {\n        return reject(err);\n      }\n      return resolve(results);\n    });\n  });\n}\n\nlet reloadActionDelegateInstance: ReloadActionDelegate;\n\nexport class ReloadActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ReloadActionDelegate {\n    const {forceNew} = opts;\n    if (!reloadActionDelegateInstance || forceNew) {\n      reloadActionDelegateInstance = new ReloadActionDelegate();\n    }\n\n    return reloadActionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'main.debug-reload':\n        Components.Reload.reload();\n        return true;\n    }\n    return false;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
