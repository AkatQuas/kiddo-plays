{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/formatter_worker/formatter_worker-entrypoint.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport * as FormatterWorker from './formatter_worker.js';\n\nimport {FormatterActions} from './FormatterActions.js';\n\nself.onmessage = function(event: MessageEvent): void {\n  const method: FormatterActions = event.data.method;\n  const params: {indentString: string, content: string, mimeType: string, mapping: [string, string][]} =\n      event.data.params;\n  if (!method) {\n    return;\n  }\n\n  switch (method) {\n    case FormatterActions.FORMAT:\n      self.postMessage(FormatterWorker.FormatterWorker.format(params.mimeType, params.content, params.indentString));\n      break;\n    case FormatterActions.PARSE_CSS:\n      FormatterWorker.CSSRuleParser.parseCSS(params.content, self.postMessage);\n      break;\n    case FormatterActions.HTML_OUTLINE:\n      FormatterWorker.HTMLOutline.htmlOutline(params.content, self.postMessage);\n      break;\n    case FormatterActions.JAVASCRIPT_OUTLINE:\n      FormatterWorker.JavaScriptOutline.javaScriptOutline(params.content, self.postMessage);\n      break;\n    case FormatterActions.JAVASCRIPT_IDENTIFIERS:\n      self.postMessage(FormatterWorker.FormatterWorker.javaScriptIdentifiers(params.content));\n      break;\n    case FormatterActions.JAVASCRIPT_SUBSTITUTE: {\n      const mapping = new Map<string, string>(params.mapping);\n      self.postMessage(FormatterWorker.Substitute.substituteExpression(params.content, mapping));\n      break;\n    }\n    case FormatterActions.JAVASCRIPT_SCOPE_TREE: {\n      self.postMessage(FormatterWorker.ScopeParser.parseScopes(params.content)?.export());\n      break;\n    }\n    case FormatterActions.EVALUATE_JAVASCRIPT_SUBSTRING:\n      self.postMessage(FormatterWorker.FormatterWorker.evaluatableJavaScriptSubstring(params.content));\n      break;\n    case FormatterActions.ARGUMENTS_LIST:\n      self.postMessage(FormatterWorker.FormatterWorker.argumentsList(params.content));\n      break;\n    default:\n      Platform.assertNever(method, `Unsupport method name: ${method}`);\n  }\n};\n\nself.postMessage('workerReady');\n"],
  "mappings": "AAIA;AAEA;AAEA;AAEA,KAAK,YAAY,SAAS,OAA2B;AACnD,QAAM,SAA2B,MAAM,KAAK;AAC5C,QAAM,SACF,MAAM,KAAK;AACf,MAAI,CAAC,QAAQ;AACX;AAAA;AAGF,UAAQ;AAAA,SACD,iBAAiB;AACpB,WAAK,YAAY,gBAAgB,gBAAgB,OAAO,OAAO,UAAU,OAAO,SAAS,OAAO;AAChG;AAAA,SACG,iBAAiB;AACpB,sBAAgB,cAAc,SAAS,OAAO,SAAS,KAAK;AAC5D;AAAA,SACG,iBAAiB;AACpB,sBAAgB,YAAY,YAAY,OAAO,SAAS,KAAK;AAC7D;AAAA,SACG,iBAAiB;AACpB,sBAAgB,kBAAkB,kBAAkB,OAAO,SAAS,KAAK;AACzE;AAAA,SACG,iBAAiB;AACpB,WAAK,YAAY,gBAAgB,gBAAgB,sBAAsB,OAAO;AAC9E;AAAA,SACG,iBAAiB,uBAAuB;AAC3C,YAAM,UAAU,IAAI,IAAoB,OAAO;AAC/C,WAAK,YAAY,gBAAgB,WAAW,qBAAqB,OAAO,SAAS;AACjF;AAAA;AAAA,SAEG,iBAAiB,uBAAuB;AAC3C,WAAK,YAAY,gBAAgB,YAAY,YAAY,OAAO,UAAU;AAC1E;AAAA;AAAA,SAEG,iBAAiB;AACpB,WAAK,YAAY,gBAAgB,gBAAgB,+BAA+B,OAAO;AACvF;AAAA,SACG,iBAAiB;AACpB,WAAK,YAAY,gBAAgB,gBAAgB,cAAc,OAAO;AACtE;AAAA;AAEA,eAAS,YAAY,QAAQ,0BAA0B;AAAA;AAAA;AAI7D,KAAK,YAAY;",
  "names": []
}
