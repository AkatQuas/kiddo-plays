{
  "version": 3,
  "sources": ["../../../../../../front_end/entrypoints/formatter_worker/CSSFormatter.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {createTokenizer} from './FormatterWorker.js';\n\nconst cssTrimEnd = (tokenValue: string): string => {\n  // https://drafts.csswg.org/css-syntax/#whitespace\n  const re = /(?:\\r?\\n|[\\t\\f\\r ])+$/g;\n  return tokenValue.replace(re, '');\n};\n\nexport class CSSFormatter {\n  readonly #builder: FormattedContentBuilder;\n  #toOffset!: number;\n  #fromOffset!: number;\n  #lineEndings!: number[];\n  #lastLine: number;\n  #state: {\n    eatWhitespace: (boolean|undefined),\n    seenProperty: (boolean|undefined),\n    inPropertyValue: (boolean|undefined),\n    afterClosingBrace: (boolean|undefined),\n  };\n  constructor(builder: FormattedContentBuilder) {\n    this.#builder = builder;\n    this.#lastLine = -1;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n  }\n\n  format(text: string, lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.#lineEndings = lineEndings;\n    this.#fromOffset = fromOffset;\n    this.#toOffset = toOffset;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n    this.#lastLine = -1;\n    const tokenize = createTokenizer('text/css');\n    const oldEnforce = this.#builder.setEnforceSpaceBetweenWords(false);\n    tokenize(text.substring(this.#fromOffset, this.#toOffset), this.#tokenCallback.bind(this));\n    this.#builder.setEnforceSpaceBetweenWords(oldEnforce);\n  }\n\n  #tokenCallback(token: string, type: string|null, startPosition: number): void {\n    startPosition += this.#fromOffset;\n    const startLine = Platform.ArrayUtilities.lowerBound(\n        this.#lineEndings, startPosition, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    if (startLine !== this.#lastLine) {\n      this.#state.eatWhitespace = true;\n    }\n    if (type && (/^property/.test(type) || /^variable-2/.test(type)) && !this.#state.inPropertyValue) {\n      this.#state.seenProperty = true;\n    }\n    this.#lastLine = startLine;\n    // https://drafts.csswg.org/css-syntax/#whitespace\n    const isWhitespace = /^(?:\\r?\\n|[\\t\\f\\r ])+$/.test(token);\n    if (isWhitespace) {\n      if (!this.#state.eatWhitespace) {\n        this.#builder.addSoftSpace();\n      }\n      return;\n    }\n    this.#state.eatWhitespace = false;\n    if (token === '\\n') {\n      return;\n    }\n\n    if (token !== '}') {\n      if (this.#state.afterClosingBrace) {\n        this.#builder.addNewLine(true);\n      }\n      this.#state.afterClosingBrace = false;\n    }\n    if (token === '}') {\n      if (this.#state.inPropertyValue) {\n        this.#builder.addNewLine();\n      }\n      this.#builder.decreaseNestingLevel();\n      this.#state.afterClosingBrace = true;\n      this.#state.inPropertyValue = false;\n    } else if (token === ':' && !this.#state.inPropertyValue && this.#state.seenProperty) {\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addSoftSpace();\n      this.#state.eatWhitespace = true;\n      this.#state.inPropertyValue = true;\n      this.#state.seenProperty = false;\n      return;\n    } else if (token === '{') {\n      this.#builder.addSoftSpace();\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addNewLine();\n      this.#builder.increaseNestingLevel();\n      return;\n    }\n\n    this.#builder.addToken(cssTrimEnd(token), startPosition);\n\n    if (type === 'comment' && !this.#state.inPropertyValue && !this.#state.seenProperty) {\n      this.#builder.addNewLine();\n    }\n    if (token === ';' && this.#state.inPropertyValue) {\n      this.#state.inPropertyValue = false;\n      this.#builder.addNewLine();\n    } else if (token === '}') {\n      this.#builder.addNewLine();\n    }\n  }\n}\n"],
  "mappings": "AA8BA;AAGA;AAEA,MAAM,aAAa,CAAC,eAA+B;AAEjD,QAAM,KAAK;AACX,SAAO,WAAW,QAAQ,IAAI;AAAA;AAGzB,0BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYxB,YAAY,SAAkC;AAC5C,oBAAgB;AAChB,qBAAiB;AACjB,kBAAc;AAAA,MACZ,eAAe;AAAA,MACf,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,mBAAmB;AAAA;AAAA;AAAA,EAIvB,OAAO,MAAc,aAAuB,YAAoB,UAAwB;AACtF,wBAAoB;AACpB,uBAAmB;AACnB,qBAAiB;AACjB,kBAAc;AAAA,MACZ,eAAe;AAAA,MACf,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,mBAAmB;AAAA;AAErB,qBAAiB;AACjB,UAAM,WAAW,gBAAgB;AACjC,UAAM,aAAa,cAAc,4BAA4B;AAC7D,aAAS,KAAK,UAAU,kBAAkB,iBAAiB,oBAAoB,KAAK;AACpF,kBAAc,4BAA4B;AAAA;AAAA,iBAG7B,OAAe,MAAmB,eAA6B;AAC5E,qBAAiB;AACjB,UAAM,YAAY,SAAS,eAAe,WACtC,mBAAmB,eAAe,SAAS,eAAe;AAC9D,QAAI,cAAc,gBAAgB;AAChC,kBAAY,gBAAgB;AAAA;AAE9B,QAAI,QAAS,aAAY,KAAK,SAAS,cAAc,KAAK,UAAU,CAAC,YAAY,iBAAiB;AAChG,kBAAY,eAAe;AAAA;AAE7B,qBAAiB;AAEjB,UAAM,eAAe,yBAAyB,KAAK;AACnD,QAAI,cAAc;AAChB,UAAI,CAAC,YAAY,eAAe;AAC9B,sBAAc;AAAA;AAEhB;AAAA;AAEF,gBAAY,gBAAgB;AAC5B,QAAI,UAAU,MAAM;AAClB;AAAA;AAGF,QAAI,UAAU,KAAK;AACjB,UAAI,YAAY,mBAAmB;AACjC,sBAAc,WAAW;AAAA;AAE3B,kBAAY,oBAAoB;AAAA;AAElC,QAAI,UAAU,KAAK;AACjB,UAAI,YAAY,iBAAiB;AAC/B,sBAAc;AAAA;AAEhB,oBAAc;AACd,kBAAY,oBAAoB;AAChC,kBAAY,kBAAkB;AAAA,eACrB,UAAU,OAAO,CAAC,YAAY,mBAAmB,YAAY,cAAc;AACpF,oBAAc,SAAS,OAAO;AAC9B,oBAAc;AACd,kBAAY,gBAAgB;AAC5B,kBAAY,kBAAkB;AAC9B,kBAAY,eAAe;AAC3B;AAAA,eACS,UAAU,KAAK;AACxB,oBAAc;AACd,oBAAc,SAAS,OAAO;AAC9B,oBAAc;AACd,oBAAc;AACd;AAAA;AAGF,kBAAc,SAAS,WAAW,QAAQ;AAE1C,QAAI,SAAS,aAAa,CAAC,YAAY,mBAAmB,CAAC,YAAY,cAAc;AACnF,oBAAc;AAAA;AAEhB,QAAI,UAAU,OAAO,YAAY,iBAAiB;AAChD,kBAAY,kBAAkB;AAC9B,oBAAc;AAAA,eACL,UAAU,KAAK;AACxB,oBAAc;AAAA;AAAA;AAAA;",
  "names": []
}
