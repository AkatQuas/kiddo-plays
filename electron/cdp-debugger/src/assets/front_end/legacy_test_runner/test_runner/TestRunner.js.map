{
  "version": 3,
  "sources": ["../../../../../../front_end/legacy_test_runner/test_runner/TestRunner.js"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// @ts-nocheck This file is not checked by TypeScript as it has a lot of legacy code.\n\nimport * as Common from '../../core/common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Platform from '../../core/platform/platform.js';\nimport * as ProtocolClientModule from '../../core/protocol_client/protocol_client.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n/**\n * @fileoverview using private properties isn't a Closure violation in tests.\n */\n\n/* eslint-disable no-console */\n\nself.Platform = self.Platform || {};\nself.Platform.StringUtilities = Platform.StringUtilities;\nself.Platform.MapUtilities = Platform.MapUtilities;\nself.Platform.ArrayUtilities = Platform.ArrayUtilities;\nself.Platform.DOMUtilities = Platform.DOMUtilities;\nself.createPlainTextSearchRegex = Platform.StringUtilities.createPlainTextSearchRegex;\nString.sprintf = Platform.StringUtilities.sprintf;\nString.regexSpecialCharacters = Platform.StringUtilities.regexSpecialCharacters;\nString.caseInsensetiveComparator = Platform.StringUtilities.caseInsensetiveComparator;\n\n/**\n * @return {boolean}\n */\nexport function isDebugTest() {\n  return !self.testRunner || Boolean(Root.Runtime.Runtime.queryParam('debugFrontend'));\n}\n\n/**\n * This monkey patches console functions in DevTools context so the console\n * messages are shown in the right places, instead of having all of the console\n * messages printed at the top of the test expectation file (default behavior).\n */\nexport function _printDevToolsConsole() {\n  if (isDebugTest()) {\n    return;\n  }\n  console.log = (...args) => {\n    addResult(`log: ${args}`);\n  };\n  console.error = (...args) => {\n    addResult(`error: ${args}`);\n  };\n  console.info = (...args) => {\n    addResult(`info: ${args}`);\n  };\n  console.assert = (assertionCondition, ...args) => {\n    if (!assertionCondition) {\n      addResult(`ASSERTION FAILURE: ${args.join(' ')}`);\n    }\n  };\n}\n\nself['onerror'] = (message, source, lineno, colno, error) => {\n  addResult('TEST ENDED IN ERROR: ' + error.stack);\n  completeTest();\n};\n(() => {\n  self.addEventListener('unhandledrejection', event => {\n    addResult(`PROMISE FAILURE: ${event.reason.stack}`);\n    completeTest();\n  });\n})();\n_printDevToolsConsole();\n\n// TODO(crbug.com/1032477): Re-enable once test timeouts are handled in Chromium\n// setTimeout(() => {\n//   addResult('TEST TIMED OUT!');\n//   completeTest();\n// }, 6000);\n\n/** @type {!Array<string>} */\nlet _results = [];\n\nlet _innerAddResult = text => {\n  _results.push(String(text));\n};\n\nexport function setInnerResult(updatedInnerResult) {\n  _innerAddResult = updatedInnerResult;\n}\n\n/**\n * @param {*} text\n */\nexport function addResult(text) {\n  _innerAddResult(text);\n}\n\nlet completed = false;\n\nlet _innerCompleteTest = () => {\n  if (completed) {\n    return;\n  }\n  completed = true;\n  flushResults();\n  self.testRunner.notifyDone();\n};\n\nexport function setInnerCompleteTest(updatedInnerCompleteTest) {\n  _innerCompleteTest = updatedInnerCompleteTest;\n}\n\nexport function completeTest() {\n  _innerCompleteTest();\n}\n\nself.TestRunner = self.TestRunner || {};\nfunction flushResults() {\n  Array.prototype.forEach.call(document.documentElement.childNodes, x => x.remove());\n  const outputElement = document.createElement('div');\n  // Support for svg - add to document, not body, check for style.\n  if (outputElement.style) {\n    outputElement.style.whiteSpace = 'pre';\n    outputElement.style.height = '10px';\n    outputElement.style.overflow = 'hidden';\n  }\n  document.documentElement.appendChild(outputElement);\n  for (let i = 0; i < _results.length; i++) {\n    outputElement.appendChild(document.createTextNode(_results[i]));\n    outputElement.appendChild(document.createElement('br'));\n  }\n  _results = [];\n}\n\n/**\n * @param {!Array<string>} textArray\n */\nexport function addResults(textArray) {\n  if (!textArray) {\n    return;\n  }\n  for (let i = 0, size = textArray.length; i < size; ++i) {\n    addResult(textArray[i]);\n  }\n}\n\n/**\n * @param {!Array<function()>} tests\n */\nexport function runTests(tests) {\n  nextTest();\n\n  function nextTest() {\n    const test = tests.shift();\n    if (!test) {\n      completeTest();\n      return;\n    }\n    addResult('\\ntest: ' + test.name);\n    let testPromise = test();\n    if (!(testPromise instanceof Promise)) {\n      testPromise = Promise.resolve();\n    }\n    testPromise.then(nextTest);\n  }\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @param {!Function} override\n * @param {boolean=} opt_sticky\n */\nexport function addSniffer(receiver, methodName, override, opt_sticky) {\n  override = safeWrap(override);\n\n  const original = receiver[methodName];\n  if (typeof original !== 'function') {\n    throw new Error('Cannot find method to override: ' + methodName);\n  }\n\n  receiver[methodName] = function(var_args) {\n    let result;\n    try {\n      result = original.apply(this, arguments);\n    } finally {\n      if (!opt_sticky) {\n        receiver[methodName] = original;\n      }\n    }\n    // In case of exception the override won't be called.\n    try {\n      Array.prototype.push.call(arguments, result);\n      override.apply(this, arguments);\n    } catch (e) {\n      throw new Error('Exception in overriden method \\'' + methodName + '\\': ' + e);\n    }\n    return result;\n  };\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @return {!Promise<*>}\n */\nexport function addSnifferPromise(receiver, methodName) {\n  return new Promise(function(resolve, reject) {\n    const original = receiver[methodName];\n    if (typeof original !== 'function') {\n      reject('Cannot find method to override: ' + methodName);\n      return;\n    }\n\n    receiver[methodName] = function(var_args) {\n      let result;\n      try {\n        result = original.apply(this, arguments);\n      } finally {\n        receiver[methodName] = original;\n      }\n      // In case of exception the override won't be called.\n      try {\n        Array.prototype.push.call(arguments, result);\n        resolve.apply(this, arguments);\n      } catch (e) {\n        reject('Exception in overridden method \\'' + methodName + '\\': ' + e);\n        completeTest();\n      }\n      return result;\n    };\n  });\n}\n\nconst mappingForLayoutTests = new Map([\n  ['panels/animation', 'animation'],\n  ['panels/browser_debugger', 'browser_debugger'],\n  ['panels/changes', 'changes'],\n  ['panels/console', 'console'],\n  ['panels/elements', 'elements'],\n  ['panels/emulation', 'emulation'],\n  ['panels/mobile_throttling', 'mobile_throttling'],\n  ['panels/network', 'network'],\n  ['panels/profiler', 'profiler'],\n  ['panels/application', 'resources'],\n  ['panels/search', 'search'],\n  ['panels/sources', 'sources'],\n  ['panels/snippets', 'snippets'],\n  ['panels/settings', 'settings'],\n  ['panels/timeline', 'timeline'],\n  ['panels/web_audio', 'web_audio'],\n  ['models/persistence', 'persistence'],\n  ['models/workspace_diff', 'workspace_diff'],\n  ['entrypoints/main', 'main'],\n  ['third_party/diff', 'diff'],\n  ['ui/legacy/components/inline_editor', 'inline_editor'],\n  ['ui/legacy/components/data_grid', 'data_grid'],\n  ['ui/legacy/components/perf_ui', 'perf_ui'],\n  ['ui/legacy/components/source_frame', 'source_frame'],\n  ['ui/legacy/components/color_picker', 'color_picker'],\n  ['ui/legacy/components/cookie_table', 'cookie_table'],\n  ['ui/legacy/components/quick_open', 'quick_open'],\n  ['ui/legacy/components/utils', 'components'],\n]);\n\n/**\n * @param {string} module\n * @return {!Promise<void>}\n */\nexport async function loadLegacyModule(module) {\n  let containingFolder = module;\n  for (const [remappedFolder, originalFolder] of mappingForLayoutTests.entries()) {\n    if (originalFolder === module) {\n      containingFolder = remappedFolder;\n    }\n  }\n  await import(`../../${containingFolder}/${containingFolder.split('/').reverse()[0]}-legacy.js`);\n}\n\n/**\n * @param {string} module\n * @return {!Promise<void>}\n */\nexport async function loadTestModule(module) {\n  await import(`../${module}/${module}.js`);\n}\n\n/**\n * @param {string} panel\n * @return {!Promise.<?UI.Panel.Panel>}\n */\nexport function showPanel(panel) {\n  return UI.ViewManager.ViewManager.instance().showView(panel);\n}\n\n/**\n * @param {string} key\n * @param {boolean=} ctrlKey\n * @param {boolean=} altKey\n * @param {boolean=} shiftKey\n * @param {boolean=} metaKey\n * @return {!KeyboardEvent}\n */\nexport function createKeyEvent(key, ctrlKey, altKey, shiftKey, metaKey) {\n  return new KeyboardEvent('keydown', {\n    key: key,\n    bubbles: true,\n    cancelable: true,\n    ctrlKey: Boolean(ctrlKey),\n    altKey: Boolean(altKey),\n    shiftKey: Boolean(shiftKey),\n    metaKey: Boolean(metaKey)\n  });\n}\n\n/**\n * Wraps a test function with an exception filter. Does not work\n * correctly for async functions; use safeAsyncWrap instead.\n * @param {!Function|undefined} func\n * @param {!Function=} onexception\n * @return {!Function}\n */\nexport function safeWrap(func, onexception) {\n  /**\n   * @this {*}\n   */\n  function result() {\n    if (!func) {\n      return;\n    }\n    const wrapThis = this;\n    try {\n      return func.apply(wrapThis, arguments);\n    } catch (e) {\n      addResult('Exception while running: ' + func + '\\n' + (e.stack || e));\n      if (onexception) {\n        safeWrap(onexception)();\n      } else {\n        completeTest();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Wraps a test function that returns a Promise with an exception\n * filter. Does not work correctly for functions which don't return\n * a Promise; use safeWrap instead.\n * @param {function(...):Promise<*>} func\n * @return {function(...):Promise<*>}\n */\nfunction safeAsyncWrap(func) {\n  /**\n   * @this {*}\n   */\n  async function result() {\n    if (!func) {\n      return;\n    }\n    const wrapThis = this;\n    try {\n      return await func.apply(wrapThis, arguments);\n    } catch (e) {\n      addResult('Exception while running: ' + func + '\\n' + (e.stack || e));\n      completeTest();\n    }\n  }\n  return result;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function textContentWithLineBreaks(node) {\n  function padding(currentNode) {\n    let result = 0;\n    while (currentNode && currentNode !== node) {\n      if (currentNode.nodeName === 'OL' &&\n          !(currentNode.classList && currentNode.classList.contains('object-properties-section'))) {\n        ++result;\n      }\n      currentNode = currentNode.parentNode;\n    }\n    return Array(result * 4 + 1).join(' ');\n  }\n\n  let buffer = '';\n  let currentNode = node;\n  let ignoreFirst = false;\n  while (currentNode.traverseNextNode(node)) {\n    currentNode = currentNode.traverseNextNode(node);\n    if (currentNode.nodeType === Node.TEXT_NODE) {\n      buffer += currentNode.nodeValue;\n    } else if (currentNode.nodeName === 'LI' || currentNode.nodeName === 'TR') {\n      if (!ignoreFirst) {\n        buffer += '\\n' + padding(currentNode);\n      } else {\n        ignoreFirst = false;\n      }\n    } else if (currentNode.nodeName === 'STYLE') {\n      currentNode = currentNode.traverseNextNode(node);\n      continue;\n    } else if (currentNode.classList && currentNode.classList.contains('object-properties-section')) {\n      ignoreFirst = true;\n    }\n  }\n  return buffer;\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function textContentWithLineBreaksTrimmed(node) {\n  // We want to allow single empty lines (2 white space characters), but\n  // compress occurences of 3 or more whitespaces.\n  return textContentWithLineBreaks(node).replace(/\\s{3,}/g, ' ');\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function textContentWithoutStyles(node) {\n  let buffer = '';\n  let currentNode = node;\n  while (currentNode.traverseNextNode(node)) {\n    currentNode = currentNode.traverseNextNode(node, currentNode.tagName === 'DEVTOOLS-CSS-LENGTH');\n    if (currentNode.nodeType === Node.TEXT_NODE) {\n      buffer += currentNode.nodeValue;\n    } else if (currentNode.nodeName === 'STYLE') {\n      currentNode = currentNode.traverseNextNode(node);\n    }\n  }\n  return buffer;\n}\n\n/**\n * @param {string} code\n * @return {!Promise<*>}\n */\nexport async function evaluateInPageRemoteObject(code) {\n  const response = await _evaluateInPage(code);\n  return TestRunner.runtimeModel.createRemoteObject(response.result);\n}\n\n/**\n * @param {string} code\n * @param {function(*, !Protocol.Runtime.ExceptionDetails=):void} callback\n */\nexport async function evaluateInPage(code, callback) {\n  const response = await _evaluateInPage(code);\n  safeWrap(callback)(response.result.value, response.exceptionDetails);\n}\n\n/** @type {number} */\nlet _evaluateInPageCounter = 0;\n\n/**\n * @param {string} code\n * @return {!Promise<undefined|{response: (!SDK.RemoteObject|undefined),\n *   exceptionDetails: (!Protocol.Runtime.ExceptionDetails|undefined)}>}\n */\nexport async function _evaluateInPage(code) {\n  const lines = new Error().stack.split('at ');\n\n  // Handles cases where the function is safe wrapped\n  const testScriptURL = /** @type {string} */ (Root.Runtime.Runtime.queryParam('test'));\n  const functionLine = lines.reduce((acc, line) => line.includes(testScriptURL) ? line : acc, lines[lines.length - 2]);\n\n  const components = functionLine.trim().split('/');\n  const source = components[components.length - 1].slice(0, -1).split(':');\n  const fileName = source[0];\n  const sourceURL = `test://evaluations/${_evaluateInPageCounter++}/` + fileName;\n  const lineOffset = parseInt(source[1], 10);\n  code = '\\n'.repeat(lineOffset - 1) + code;\n  if (code.indexOf('sourceURL=') === -1) {\n    code += `//# sourceURL=${sourceURL}`;\n  }\n  const response = await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console'});\n  const error = response[ProtocolClientModule.InspectorBackend.ProtocolError];\n  if (error) {\n    addResult('Error: ' + error);\n    completeTest();\n    return;\n  }\n  return response;\n}\n\n/**\n * Doesn't append sourceURL to snippets evaluated in inspected page\n * to avoid churning test expectations\n * @param {string} code\n * @param {boolean=} userGesture\n * @return {!Promise<*>}\n */\nexport async function evaluateInPageAnonymously(code, userGesture) {\n  const response =\n      await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console', userGesture});\n  if (!response[ProtocolClientModule.InspectorBackend.ProtocolError]) {\n    return response.result.value;\n  }\n  addResult(\n      'Error: ' +\n      (response.exceptionDetails && response.exceptionDetails.text || 'exception from evaluateInPageAnonymously.'));\n  completeTest();\n}\n\n/**\n * @param {string} code\n * @return {!Promise<*>}\n */\nexport function evaluateInPagePromise(code) {\n  return new Promise(success => evaluateInPage(code, success));\n}\n\n/**\n * @param {string} code\n * @return {!Promise<*>}\n */\nexport async function evaluateInPageAsync(code) {\n  const response = await TestRunner.RuntimeAgent.invoke_evaluate(\n      {expression: code, objectGroup: 'console', includeCommandLineAPI: false, awaitPromise: true});\n\n  const error = response[ProtocolClientModule.InspectorBackend.ProtocolError];\n  if (!error && !response.exceptionDetails) {\n    return response.result.value;\n  }\n  let errorMessage = 'Error: ';\n  if (error) {\n    errorMessage += error;\n  } else if (response.exceptionDetails) {\n    errorMessage += response.exceptionDetails.text;\n    if (response.exceptionDetails.exception) {\n      errorMessage += ' ' + response.exceptionDetails.exception.description;\n    }\n  }\n  addResult(errorMessage);\n  completeTest();\n}\n\n/**\n * @param {string} name\n * @param {!Array<*>} args\n * @return {!Promise<*>}\n */\nexport function callFunctionInPageAsync(name, args) {\n  args = args || [];\n  return evaluateInPageAsync(name + '(' + args.map(a => JSON.stringify(a)).join(',') + ')');\n}\n\n/**\n * @param {string} code\n * @param {boolean=} userGesture\n */\nexport function evaluateInPageWithTimeout(code, userGesture) {\n  // FIXME: we need a better way of waiting for chromium events to happen\n  evaluateInPageAnonymously('setTimeout(unescape(\\'' + escape(code) + '\\'), 1)', userGesture);\n}\n\n/**\n * @param {function():*} func\n * @param {function(*):void} callback\n */\nexport function evaluateFunctionInOverlay(func, callback) {\n  const expression = 'internals.evaluateInInspectorOverlay(\"(\" + ' + func + ' + \")()\")';\n  const mainContext = TestRunner.runtimeModel.executionContexts()[0];\n  mainContext\n      .evaluate(\n          {\n            expression: expression,\n            objectGroup: '',\n            includeCommandLineAPI: false,\n            silent: false,\n            returnByValue: true,\n            generatePreview: false\n          },\n          /* userGesture */ false, /* awaitPromise*/ false)\n      .then(result => void callback(result.object.value));\n}\n\n/**\n * @param {boolean} passCondition\n * @param {string} failureText\n */\nexport function check(passCondition, failureText) {\n  if (!passCondition) {\n    addResult('FAIL: ' + failureText);\n  }\n}\n\n/**\n * @param {!Function} callback\n */\nexport function deprecatedRunAfterPendingDispatches(callback) {\n  ProtocolClient.test.deprecatedRunAfterPendingDispatches(callback);\n}\n\n/**\n * This ensures a base tag is set so all DOM references\n * are relative to the test file and not the inspected page\n * (i.e. http/tests/devtools/resources/inspected-page.html).\n * @param {string} html\n * @return {!Promise<*>}\n */\nexport function loadHTML(html) {\n  if (!html.includes('<base')) {\n    // <!DOCTYPE...> tag needs to be first\n    const doctypeRegex = /(<!DOCTYPE.*?>)/i;\n    const baseTag = `<base href=\"${url()}\">`;\n    if (html.match(doctypeRegex)) {\n      html = html.replace(doctypeRegex, '$1' + baseTag);\n    } else {\n      html = baseTag + html;\n    }\n  }\n  html = html.replace(/'/g, '\\\\\\'').replace(/\\n/g, '\\\\n');\n  return evaluateInPageAnonymously(`document.write(\\`${html}\\`);document.close();`);\n}\n\n/**\n * @param {string} path\n * @return {!Promise<*>}\n */\nexport function addScriptTag(path) {\n  return evaluateInPageAsync(`\n    (function(){\n      let script = document.createElement('script');\n      script.src = '${path}';\n      document.head.append(script);\n      return new Promise(f => script.onload = f);\n    })();\n  `);\n}\n\n/**\n * @param {string} path\n * @return {!Promise<*>}\n */\nexport function addStylesheetTag(path) {\n  return evaluateInPageAsync(`\n    (function(){\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = '${path}';\n      link.onload = onload;\n      document.head.append(link);\n      let resolve;\n      const promise = new Promise(r => resolve = r);\n      function onload() {\n        // TODO(chenwilliam): It shouldn't be necessary to force\n        // style recalc here but some tests rely on it.\n        window.getComputedStyle(document.body).color;\n        resolve();\n      }\n      return promise;\n    })();\n  `);\n}\n\n/**\n * NOTE you should manually ensure the path is correct. There\n * is no error event triggered if it is incorrect, and this is\n * in line with the standard (crbug 365457).\n * @param {string} path\n * @param {!Object|undefined} options\n * @return {!Promise<*>}\n */\nexport function addIframe(path, options = {}) {\n  options.id = options.id || '';\n  options.name = options.name || '';\n  return evaluateInPageAsync(`\n    (function(){\n      const iframe = document.createElement('iframe');\n      iframe.src = '${path}';\n      iframe.id = '${options.id}';\n      iframe.name = '${options.name}';\n      document.body.appendChild(iframe);\n      return new Promise(f => iframe.onload = f);\n    })();\n  `);\n}\n\n/**\n * The old test framework executed certain snippets in the inspected page\n * context as part of loading a test helper file.\n *\n * This is deprecated because:\n * 1) it makes the testing API less intuitive (need to read the various *TestRunner.js\n * files to know which helper functions are available in the inspected page).\n * 2) it complicates the test framework's module loading process.\n *\n * In most cases, this is used to set up inspected page functions (e.g. makeSimpleXHR)\n * which should become a *TestRunner method (e.g. NetworkTestRunner.makeSimpleXHR)\n * that calls evaluateInPageAnonymously(...).\n * @param {string} code\n */\nexport async function deprecatedInitAsync(code) {\n  await TestRunner.RuntimeAgent.invoke_evaluate({expression: code, objectGroup: 'console'});\n}\n\n/**\n * @param {string} title\n */\nexport function markStep(title) {\n  addResult('\\nRunning: ' + title);\n}\n\nexport function startDumpingProtocolMessages() {\n  ProtocolClient.test.dumpProtocol = self.testRunner.logToStderr.bind(self.testRunner);\n}\n\n/**\n * @param {string} url\n * @param {string} content\n * @param {!SDK.ResourceTreeFrame} frame\n */\nexport function addScriptForFrame(url, content, frame) {\n  content += '\\n//# sourceURL=' + url;\n  const executionContext = TestRunner.runtimeModel.executionContexts().find(context => context.frameId === frame.id);\n  TestRunner.RuntimeAgent.evaluate(content, 'console', false, false, executionContext.id);\n}\n\nexport const formatters = {\n\n  /**\n * @param {*} value\n * @return {string}\n */\n  formatAsTypeName(value) {\n    return '<' + typeof value + '>';\n  },\n\n  /**\n * @param {*} value\n * @return {string}\n */\n  formatAsTypeNameOrNull(value) {\n    if (value === null) {\n      return 'null';\n    }\n    return formatters.formatAsTypeName(value);\n  },\n\n  /**\n * @param {*} value\n * @return {string|!Date}\n */\n  formatAsRecentTime(value) {\n    if (typeof value !== 'object' || !(value instanceof Date)) {\n      return formatters.formatAsTypeName(value);\n    }\n    const delta = Date.now() - value;\n    return 0 <= delta && delta < 30 * 60 * 1000 ? '<plausible>' : value;\n  },\n\n  /**\n * @param {string} value\n * @return {string}\n */\n  formatAsURL(value) {\n    if (!value) {\n      return value;\n    }\n    const lastIndex = value.lastIndexOf('devtools/');\n    if (lastIndex < 0) {\n      return value;\n    }\n    return '.../' + value.substr(lastIndex);\n  },\n\n  /**\n * @param {string} value\n * @return {string}\n */\n  formatAsDescription(value) {\n    if (!value) {\n      return value;\n    }\n    return '\"' + value.replace(/^function [gs]et /, 'function ') + '\"';\n  },\n};\n\n/**\n * @param {!Object} object\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} firstLinePrefix\n */\nexport function addObject(object, customFormatters, prefix, firstLinePrefix) {\n  prefix = prefix || '';\n  firstLinePrefix = firstLinePrefix || prefix;\n  addResult(firstLinePrefix + '{');\n  const propertyNames = Object.keys(object);\n  propertyNames.sort();\n  for (let i = 0; i < propertyNames.length; ++i) {\n    const prop = propertyNames[i];\n    if (!object.hasOwnProperty(prop)) {\n      continue;\n    }\n    const prefixWithName = '    ' + prefix + prop + ' : ';\n    const propValue = object[prop];\n    if (customFormatters && customFormatters[prop]) {\n      const formatterName = customFormatters[prop];\n      if (formatterName !== 'skip') {\n        const formatter = formatters[formatterName];\n        addResult(prefixWithName + formatter(propValue));\n      }\n    } else {\n      dump(propValue, customFormatters, '    ' + prefix, prefixWithName);\n    }\n  }\n  addResult(prefix + '}');\n}\n\n/**\n * @param {!Array} array\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} firstLinePrefix\n */\nexport function addArray(array, customFormatters, prefix, firstLinePrefix) {\n  prefix = prefix || '';\n  firstLinePrefix = firstLinePrefix || prefix;\n  addResult(firstLinePrefix + '[');\n  for (let i = 0; i < array.length; ++i) {\n    dump(array[i], customFormatters, prefix + '    ');\n  }\n  addResult(prefix + ']');\n}\n\n/**\n * @param {!Node} node\n */\nexport function dumpDeepInnerHTML(node) {\n  /**\n   * @param {string} prefix\n   * @param {!Node} node\n   */\n  function innerHTML(prefix, node) {\n    const openTag = [];\n    if (node.nodeType === Node.TEXT_NODE) {\n      if (!node.parentElement || node.parentElement.nodeName !== 'STYLE') {\n        addResult(node.nodeValue);\n      }\n      return;\n    }\n    openTag.push('<' + node.nodeName);\n    const attrs = node.attributes;\n    for (let i = 0; attrs && i < attrs.length; ++i) {\n      openTag.push(attrs[i].name + '=' + attrs[i].value);\n    }\n\n    openTag.push('>');\n    addResult(prefix + openTag.join(' '));\n    for (let child = node.firstChild; child; child = child.nextSibling) {\n      innerHTML(prefix + '    ', child);\n    }\n    if (node.shadowRoot) {\n      innerHTML(prefix + '    ', node.shadowRoot);\n    }\n    addResult(prefix + '</' + node.nodeName + '>');\n  }\n  innerHTML('', node);\n}\n\n/**\n * @param {!Node} node\n * @return {string}\n */\nexport function deepTextContent(node) {\n  if (!node) {\n    return '';\n  }\n  if (node.nodeType === Node.TEXT_NODE && node.nodeValue) {\n    return !node.parentElement || node.parentElement.nodeName !== 'STYLE' ? node.nodeValue : '';\n  }\n  let res = '';\n  const children = node.childNodes;\n  for (let i = 0; i < children.length; ++i) {\n    res += deepTextContent(children[i]);\n  }\n  if (node.shadowRoot) {\n    res += deepTextContent(node.shadowRoot);\n  }\n  return res;\n}\n\n/**\n * @param {*} value\n * @param {!TestRunner.CustomFormatters=} customFormatters\n * @param {string=} prefix\n * @param {string=} prefixWithName\n */\nexport function dump(value, customFormatters, prefix, prefixWithName) {\n  prefixWithName = prefixWithName || prefix;\n  if (prefixWithName && prefixWithName.length > 80) {\n    addResult(prefixWithName + 'was skipped due to prefix length limit');\n    return;\n  }\n  if (value === null) {\n    addResult(prefixWithName + 'null');\n  } else if (value && value.constructor && value.constructor.name === 'Array') {\n    addArray(/** @type {!Array} */ (value), customFormatters, prefix, prefixWithName);\n  } else if (typeof value === 'object') {\n    addObject(/** @type {!Object} */ (value), customFormatters, prefix, prefixWithName);\n  } else if (typeof value === 'string') {\n    addResult(prefixWithName + '\"' + value + '\"');\n  } else {\n    addResult(prefixWithName + value);\n  }\n}\n\n/**\n * @param {symbol} eventName\n * @param {!Common.ObjectWrapper.ObjectWrapper} obj\n * @param {function(?):boolean=} condition\n * @return {!Promise}\n */\nexport function waitForEvent(eventName, obj, condition) {\n  condition = condition || function() {\n    return true;\n  };\n  return new Promise(resolve => {\n    obj.addEventListener(eventName, onEventFired);\n\n    /**\n     * @param {!Common.EventTarget.EventTargetEvent} event\n     */\n    function onEventFired(event) {\n      if (!condition(event.data)) {\n        return;\n      }\n      obj.removeEventListener(eventName, onEventFired);\n      resolve(event.data);\n    }\n  });\n}\n\n/**\n * @param {function(!SDK.Target):boolean} filter\n * @return {!Promise<!SDK.Target>}\n */\nexport function waitForTarget(filter) {\n  filter = filter || (target => true);\n  for (const target of self.SDK.targetManager.targets()) {\n    if (filter(target)) {\n      return Promise.resolve(target);\n    }\n  }\n  return new Promise(fulfill => {\n    const observer = /** @type {!SDK.TargetManager.Observer} */ ({\n      targetAdded: function(target) {\n        if (filter(target)) {\n          self.SDK.targetManager.unobserveTargets(observer);\n          fulfill(target);\n        }\n      },\n      targetRemoved: function() {},\n    });\n    self.SDK.targetManager.observeTargets(observer);\n  });\n}\n\n/**\n * @param {!SDK.Target} targetToRemove\n * @return {!Promise<!SDK.Target>}\n */\nexport function waitForTargetRemoved(targetToRemove) {\n  return new Promise(fulfill => {\n    const observer = /** @type {!SDK.TargetManager.Observer} */ ({\n      targetRemoved: function(target) {\n        if (target === targetToRemove) {\n          self.SDK.targetManager.unobserveTargets(observer);\n          fulfill(target);\n        }\n      },\n      targetAdded: function() {},\n    });\n    self.SDK.targetManager.observeTargets(observer);\n  });\n}\n\n/**\n * @param {!SDK.RuntimeModel} runtimeModel\n * @return {!Promise}\n */\nexport function waitForExecutionContext(runtimeModel) {\n  if (runtimeModel.executionContexts().length) {\n    return Promise.resolve(runtimeModel.executionContexts()[0]);\n  }\n  return runtimeModel.once(SDK.RuntimeModel.Events.ExecutionContextCreated);\n}\n\n/**\n * @param {!SDK.ExecutionContext} context\n * @return {!Promise}\n */\nexport function waitForExecutionContextDestroyed(context) {\n  const runtimeModel = context.runtimeModel;\n  if (runtimeModel.executionContexts().indexOf(context) === -1) {\n    return Promise.resolve();\n  }\n  return waitForEvent(\n      SDK.RuntimeModel.Events.ExecutionContextDestroyed, runtimeModel,\n      destroyedContext => destroyedContext === context);\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @param {string=} message\n */\nexport function assertGreaterOrEqual(a, b, message) {\n  if (a < b) {\n    addResult('FAILED: ' + (message ? message + ': ' : '') + a + ' < ' + b);\n  }\n}\n\nlet _pageLoadedCallback;\n\n/**\n * @param {string} url\n * @param {function():void} callback\n */\nexport function navigate(url, callback) {\n  _pageLoadedCallback = safeWrap(callback);\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, _pageNavigated);\n  // Note: injected <base> means that url is relative to test\n  // and not the inspected page\n  evaluateInPageAnonymously('window.location.replace(\\'' + url + '\\')');\n}\n\n/**\n * @return {!Promise}\n */\nexport function navigatePromise(url) {\n  return new Promise(fulfill => navigate(url, fulfill));\n}\n\nexport function _pageNavigated() {\n  TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, _pageNavigated);\n  _handlePageLoaded();\n}\n\n/**\n * @param {function():void} callback\n */\nexport function hardReloadPage(callback) {\n  _innerReloadPage(true, undefined, callback);\n}\n\n/**\n * @param {function():void} callback\n */\nexport function reloadPage(callback) {\n  _innerReloadPage(false, undefined, callback);\n}\n\n/**\n * @param {(string|undefined)} injectedScript\n * @param {function():void} callback\n */\nexport function reloadPageWithInjectedScript(injectedScript, callback) {\n  _innerReloadPage(false, injectedScript, callback);\n}\n\n/**\n * @return {!Promise}\n */\nexport function reloadPagePromise() {\n  return new Promise(fulfill => reloadPage(fulfill));\n}\n\n/**\n * @param {boolean} hardReload\n * @param {(string|undefined)} injectedScript\n * @param {function():void} callback\n */\nexport function _innerReloadPage(hardReload, injectedScript, callback) {\n  _pageLoadedCallback = safeWrap(callback);\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, pageLoaded);\n  TestRunner.resourceTreeModel.reloadPage(hardReload, injectedScript);\n}\n\nexport function pageLoaded() {\n  TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, pageLoaded);\n  addResult('Page reloaded.');\n  _handlePageLoaded();\n}\n\nexport async function _handlePageLoaded() {\n  await waitForExecutionContext(/** @type {!SDK.RuntimeModel} */ (TestRunner.runtimeModel));\n  if (_pageLoadedCallback) {\n    const callback = _pageLoadedCallback;\n    _pageLoadedCallback = undefined;\n    callback();\n  }\n}\n\n/**\n * @param {function():void} callback\n */\nexport function waitForPageLoad(callback) {\n  TestRunner.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, onLoaded);\n\n  function onLoaded() {\n    TestRunner.resourceTreeModel.removeEventListener(SDK.ResourceTreeModel.Events.Load, onLoaded);\n    callback();\n  }\n}\n\n/**\n * @param {function():void} callback\n */\nexport function runWhenPageLoads(callback) {\n  const oldCallback = _pageLoadedCallback;\n  function chainedCallback() {\n    if (oldCallback) {\n      oldCallback();\n    }\n    callback();\n  }\n  _pageLoadedCallback = safeWrap(chainedCallback);\n}\n\n/**\n * @param {!Array<function(function():void)>} testSuite\n */\nexport function runTestSuite(testSuite) {\n  const testSuiteTests = testSuite.slice();\n\n  function runner() {\n    if (!testSuiteTests.length) {\n      completeTest();\n      return;\n    }\n    const nextTest = testSuiteTests.shift();\n    addResult('');\n    addResult(\n        'Running: ' +\n        /function\\s([^(]*)/.exec(nextTest)[1]);\n    safeWrap(nextTest)(runner);\n  }\n  runner();\n}\n\n/**\n * @param {!Array<function():Promise<*>>} testSuite\n */\nexport async function runAsyncTestSuite(testSuite) {\n  for (const nextTest of testSuite) {\n    addResult('');\n    addResult(\n        'Running: ' +\n        /function\\s([^(]*)/.exec(nextTest)[1]);\n    await safeAsyncWrap(nextTest)();\n  }\n\n  completeTest();\n}\n\n/**\n * @param {*} expected\n * @param {*} found\n * @param {string} message\n */\nexport function assertEquals(expected, found, message) {\n  if (expected === found) {\n    return;\n  }\n\n  let error;\n  if (message) {\n    error = 'Failure (' + message + '):';\n  } else {\n    error = 'Failure:';\n  }\n  throw new Error(error + ' expected <' + expected + '> found <' + found + '>');\n}\n\n/**\n * @param {*} found\n * @param {string} message\n */\nexport function assertTrue(found, message) {\n  assertEquals(true, Boolean(found), message);\n}\n\n/**\n * @param {!Object} receiver\n * @param {string} methodName\n * @param {!Function} override\n * @param {boolean=} opt_sticky\n * @return {!Function}\n */\nexport function override(receiver, methodName, override, opt_sticky) {\n  override = safeWrap(override);\n\n  const original = receiver[methodName];\n  if (typeof original !== 'function') {\n    throw new Error('Cannot find method to override: ' + methodName);\n  }\n\n  receiver[methodName] = function(var_args) {\n    try {\n      return override.apply(this, arguments);\n    } catch (e) {\n      throw new Error('Exception in overriden method \\'' + methodName + '\\': ' + e);\n    } finally {\n      if (!opt_sticky) {\n        receiver[methodName] = original;\n      }\n    }\n  };\n\n  return original;\n}\n\n/**\n * @param {string} text\n * @return {string}\n */\nexport function clearSpecificInfoFromStackFrames(text) {\n  let buffer = text.replace(/\\(file:\\/\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(http:\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(test:\\/\\/(?:[^)]+\\)|[\\w\\/:-]+)/g, '(...)');\n  buffer = buffer.replace(/\\(<anonymous>:[^)]+\\)/g, '(...)');\n  buffer = buffer.replace(/VM\\d+/g, 'VM');\n  return buffer.replace(/\\s*at[^()]+\\(native\\)/g, '');\n}\n\nexport function hideInspectorView() {\n  UI.InspectorView.InspectorView.instance().element.setAttribute('style', 'display:none !important');\n}\n\n/**\n * @return {?SDK.ResourceTreeFrame}\n */\nexport function mainFrame() {\n  return TestRunner.resourceTreeModel.mainFrame;\n}\n\nexport class StringOutputStream {\n  /**\n   * @param {function(string):void} callback\n   */\n  constructor(callback) {\n    this.callback = callback;\n    this.buffer = '';\n  }\n\n  /**\n   * @param {string} fileName\n   * @return {!Promise<boolean>}\n   */\n  async open(fileName) {\n    return true;\n  }\n\n  /**\n   * @param {string} chunk\n   */\n  async write(chunk) {\n    this.buffer += chunk;\n  }\n\n  async close() {\n    this.callback(this.buffer);\n  }\n}\n\n/**\n * @template V\n */\nexport class MockSetting {\n  /**\n   * @param {V} value\n   */\n  constructor(value) {\n    this.value = value;\n  }\n\n  /**\n   * @return {V}\n   */\n  get() {\n    return this.value;\n  }\n\n  /**\n   * @param {V} value\n   */\n  set(value) {\n    this.value = value;\n  }\n}\n\n/**\n * @param {string} urlSuffix\n * @param {!Workspace.Workspace.projectTypes=} projectType\n * @return {!Promise}\n */\nexport function waitForUISourceCode(urlSuffix, projectType) {\n  /**\n   * @param {!Workspace.UISourceCode.UISourceCode} uiSourceCode\n   * @return {boolean}\n   */\n  function matches(uiSourceCode) {\n    if (projectType && uiSourceCode.project().type() !== projectType) {\n      return false;\n    }\n    if (!projectType && uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Service) {\n      return false;\n    }\n    if (urlSuffix && !uiSourceCode.url().endsWith(urlSuffix)) {\n      return false;\n    }\n    return true;\n  }\n\n  for (const uiSourceCode of self.Workspace.workspace.uiSourceCodes()) {\n    if (urlSuffix && matches(uiSourceCode)) {\n      return Promise.resolve(uiSourceCode);\n    }\n  }\n\n  return waitForEvent(Workspace.Workspace.Events.UISourceCodeAdded, self.Workspace.workspace, matches);\n}\n\n/**\n * @param {!Function} callback\n */\nexport function waitForUISourceCodeRemoved(callback) {\n  self.Workspace.workspace.once(Workspace.Workspace.Events.UISourceCodeRemoved).then(callback);\n}\n\n/**\n * @param {string=} url\n * @return {string}\n */\nexport function url(url = '') {\n  const testScriptURL = /** @type {string} */ (Root.Runtime.Runtime.queryParam('test'));\n\n  // This handles relative (e.g. \"../file\"), root (e.g. \"/resource\"),\n  // absolute (e.g. \"http://\", \"data:\") and empty (e.g. \"\") paths\n  return new URL(url, testScriptURL + '/../').href;\n}\n\n/**\n * @param {string} str\n * @param {string} mimeType\n * @return {!Promise.<undefined>}\n */\nexport function dumpSyntaxHighlight(str, mimeType) {\n  const node = document.createElement('span');\n  node.textContent = str;\n  return CodeHighlighter.CodeHighlighter.highlightNode(node, mimeType).then(dumpSyntax);\n\n  function dumpSyntax() {\n    const node_parts = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n      if (node.childNodes[i].getAttribute) {\n        node_parts.push(node.childNodes[i].getAttribute('class'));\n      } else {\n        node_parts.push('*');\n      }\n    }\n\n    addResult(str + ': ' + node_parts.join(', '));\n  }\n}\n\n/* this code exists in Platform.StringUtilities but these layout tests\n* cannot import ES modules so we copy the required code in directly as\n* these layout tests are going to be removed in favour of e2e so it's\n* not worth adding ESM support here\n*/\n\n/**\n *\n * @param {string} inputString\n * @param {string} searchString\n * @return {!Array.<number>}\n */\nconst findIndexesOfSubString = function(inputString, searchString) {\n  const matches = [];\n  let i = inputString.indexOf(searchString);\n  while (i !== -1) {\n    matches.push(i);\n    i = inputString.indexOf(searchString, i + searchString.length);\n  }\n  return matches;\n};\n\n/**\n *\n * @param {string} inputString\n * @return {!Array.<number>}\n */\nexport const findLineEndingIndexes = function(inputString) {\n  const endings = findIndexesOfSubString(inputString, '\\n');\n  endings.push(inputString.length);\n  return endings;\n};\n\n/**\n * @param {string} querySelector\n */\nexport async function dumpInspectedPageElementText(querySelector) {\n  const value = await evaluateInPageAsync(`document.querySelector('${querySelector}').innerText`);\n  addResult(value);\n}\n\n/**\n * This method blocks until all currently queued live location update handlers are done.\n *\n * Creating and updating live locations causes the update handler of each live location\n * to run. These update handlers are potentially asynchronous and usually cause re-rendering or\n * UI updates. Web tests then check for these updates.\n * To give tests more control, waitForPendingLiveLocationUpdates returns a promise that resolves\n * once all currently-pending updates (at call time) are completed.\n */\nexport async function waitForPendingLiveLocationUpdates() {\n  await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().pendingLiveLocationChangesPromise();\n  await Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().pendingLiveLocationChangesPromise();\n}\n\n/** @type {!{logToStderr: function(), navigateSecondaryWindow: function(string), notifyDone: function()}|undefined} */\nself.testRunner;\n\nTestRunner.StringOutputStream = StringOutputStream;\nTestRunner.MockSetting = MockSetting;\n\nTestRunner.formatters = formatters;\n\nTestRunner.completeTest = completeTest;\nTestRunner.addResult = addResult;\nTestRunner.addResults = addResults;\nTestRunner.runTests = runTests;\nTestRunner.addSniffer = addSniffer;\nTestRunner.addSnifferPromise = addSnifferPromise;\nTestRunner.showPanel = showPanel;\nTestRunner.createKeyEvent = createKeyEvent;\nTestRunner.safeWrap = safeWrap;\nTestRunner.textContentWithLineBreaks = textContentWithLineBreaks;\nTestRunner.textContentWithLineBreaksTrimmed = textContentWithLineBreaksTrimmed;\nTestRunner.textContentWithoutStyles = textContentWithoutStyles;\nTestRunner.evaluateInPagePromise = evaluateInPagePromise;\nTestRunner.callFunctionInPageAsync = callFunctionInPageAsync;\nTestRunner.evaluateInPageWithTimeout = evaluateInPageWithTimeout;\nTestRunner.evaluateFunctionInOverlay = evaluateFunctionInOverlay;\nTestRunner.check = check;\nTestRunner.deprecatedRunAfterPendingDispatches = deprecatedRunAfterPendingDispatches;\nTestRunner.loadHTML = loadHTML;\nTestRunner.addScriptTag = addScriptTag;\nTestRunner.addStylesheetTag = addStylesheetTag;\nTestRunner.addIframe = addIframe;\nTestRunner.markStep = markStep;\nTestRunner.startDumpingProtocolMessages = startDumpingProtocolMessages;\nTestRunner.addScriptForFrame = addScriptForFrame;\nTestRunner.addObject = addObject;\nTestRunner.addArray = addArray;\nTestRunner.dumpDeepInnerHTML = dumpDeepInnerHTML;\nTestRunner.deepTextContent = deepTextContent;\nTestRunner.dump = dump;\nTestRunner.waitForEvent = waitForEvent;\nTestRunner.waitForTarget = waitForTarget;\nTestRunner.waitForTargetRemoved = waitForTargetRemoved;\nTestRunner.waitForExecutionContext = waitForExecutionContext;\nTestRunner.waitForExecutionContextDestroyed = waitForExecutionContextDestroyed;\nTestRunner.assertGreaterOrEqual = assertGreaterOrEqual;\nTestRunner.navigate = navigate;\nTestRunner.navigatePromise = navigatePromise;\nTestRunner.hardReloadPage = hardReloadPage;\nTestRunner.reloadPage = reloadPage;\nTestRunner.reloadPageWithInjectedScript = reloadPageWithInjectedScript;\nTestRunner.reloadPagePromise = reloadPagePromise;\nTestRunner.pageLoaded = pageLoaded;\nTestRunner.waitForPageLoad = waitForPageLoad;\nTestRunner.runWhenPageLoads = runWhenPageLoads;\nTestRunner.runTestSuite = runTestSuite;\nTestRunner.assertEquals = assertEquals;\nTestRunner.assertTrue = assertTrue;\nTestRunner.override = override;\nTestRunner.clearSpecificInfoFromStackFrames = clearSpecificInfoFromStackFrames;\nTestRunner.hideInspectorView = hideInspectorView;\nTestRunner.mainFrame = mainFrame;\nTestRunner.waitForUISourceCode = waitForUISourceCode;\nTestRunner.waitForUISourceCodeRemoved = waitForUISourceCodeRemoved;\nTestRunner.url = url;\nTestRunner.dumpSyntaxHighlight = dumpSyntaxHighlight;\nTestRunner.loadLegacyModule = loadLegacyModule;\nTestRunner.loadTestModule = loadTestModule;\nTestRunner.evaluateInPageRemoteObject = evaluateInPageRemoteObject;\nTestRunner.evaluateInPage = evaluateInPage;\nTestRunner.evaluateInPageAnonymously = evaluateInPageAnonymously;\nTestRunner.evaluateInPageAsync = evaluateInPageAsync;\nTestRunner.deprecatedInitAsync = deprecatedInitAsync;\nTestRunner.runAsyncTestSuite = runAsyncTestSuite;\nTestRunner.dumpInspectedPageElementText = dumpInspectedPageElementText;\nTestRunner.waitForPendingLiveLocationUpdates = waitForPendingLiveLocationUpdates;\nTestRunner.findLineEndingIndexes = findLineEndingIndexes;\n\nTestRunner.isScrolledToBottom = UI.UIUtils.isScrolledToBottom;\n"],
  "mappings": "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",
  "names": []
}
