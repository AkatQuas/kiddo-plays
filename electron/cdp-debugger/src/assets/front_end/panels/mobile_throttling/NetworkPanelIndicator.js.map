{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/mobile_throttling/NetworkPanelIndicator.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  networkThrottlingIsEnabled: 'Network throttling is enabled',\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  requestsMayBeRewrittenByLocal: 'Requests may be rewritten by local overrides',\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  requestsMayBeBlocked: 'Requests may be blocked',\n  /**\n   * @description Title of an icon in the Network panel that indicates that accepted content encodings have been overriden.\n   */\n  acceptedEncodingOverrideSet:\n      'The set of accepted `Content-Encoding` headers has been modified by DevTools. See the Network Conditions panel.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/NetworkPanelIndicator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkPanelIndicator {\n  constructor() {\n    // TODO: we should not access network from other modules.\n    if (!UI.InspectorView.InspectorView.instance().hasPanel('network')) {\n      return;\n    }\n    const manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n    manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, updateVisibility);\n    manager.addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.BlockedPatternsChanged, updateVisibility);\n    manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.InterceptorsChanged, updateVisibility);\n    manager.addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.AcceptedEncodingsChanged, updateVisibility);\n    updateVisibility();\n\n    function updateVisibility(): void {\n      let icon: UI.Icon.Icon|null = null;\n      if (manager.isThrottling()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.networkThrottlingIsEnabled));\n      } else if (SDK.NetworkManager.MultitargetNetworkManager.instance().isIntercepting()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.requestsMayBeRewrittenByLocal));\n      } else if (manager.isBlocking()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.requestsMayBeBlocked));\n      } else if (manager.isAcceptedEncodingOverrideSet()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.acceptedEncodingOverrideSet));\n      }\n      UI.InspectorView.InspectorView.instance().setPanelIcon('network', icon);\n    }\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,4BAA4B;AAAA,EAI5B,+BAA+B;AAAA,EAI/B,sBAAsB;AAAA,EAItB,6BACI;AAAA;AAEN,MAAM,OAAO,KAAK,KAAK,kBAAkB,qDAAqD;AAC9F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AACzD,mCAA4B;AAAA,EACjC,cAAc;AAEZ,QAAI,CAAC,GAAG,cAAc,cAAc,WAAW,SAAS,YAAY;AAClE;AAAA;AAEF,UAAM,UAAU,IAAI,eAAe,0BAA0B;AAC7D,YAAQ,iBAAiB,IAAI,eAAe,0BAA0B,OAAO,mBAAmB;AAChG,YAAQ,iBACJ,IAAI,eAAe,0BAA0B,OAAO,wBAAwB;AAChF,YAAQ,iBAAiB,IAAI,eAAe,0BAA0B,OAAO,qBAAqB;AAClG,YAAQ,iBACJ,IAAI,eAAe,0BAA0B,OAAO,0BAA0B;AAClF;AAEA,gCAAkC;AAChC,UAAI,OAA0B;AAC9B,UAAI,QAAQ,gBAAgB;AAC1B,eAAO,GAAG,KAAK,KAAK,OAAO;AAC3B,WAAG,QAAQ,QAAQ,QAAQ,MAAM,WAAW,UAAU;AAAA,iBAC7C,IAAI,eAAe,0BAA0B,WAAW,kBAAkB;AACnF,eAAO,GAAG,KAAK,KAAK,OAAO;AAC3B,WAAG,QAAQ,QAAQ,QAAQ,MAAM,WAAW,UAAU;AAAA,iBAC7C,QAAQ,cAAc;AAC/B,eAAO,GAAG,KAAK,KAAK,OAAO;AAC3B,WAAG,QAAQ,QAAQ,QAAQ,MAAM,WAAW,UAAU;AAAA,iBAC7C,QAAQ,iCAAiC;AAClD,eAAO,GAAG,KAAK,KAAK,OAAO;AAC3B,WAAG,QAAQ,QAAQ,QAAQ,MAAM,WAAW,UAAU;AAAA;AAExD,SAAG,cAAc,cAAc,WAAW,aAAa,WAAW;AAAA;AAAA;AAAA;",
  "names": []
}
