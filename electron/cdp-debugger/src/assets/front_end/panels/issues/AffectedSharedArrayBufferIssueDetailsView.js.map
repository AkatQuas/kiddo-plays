{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {AffectedResourcesView} from './AffectedResourcesView.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for number of affected resources indication in issue view\n  */\n  nViolations: '{n, plural, =1 {# violation} other {# violations}}',\n  /**\n  *@description Value for the status column in SharedArrayBuffer issues\n  */\n  warning: 'warning',\n  /**\n  *@description The kind of resolution for a mixed content issue\n  */\n  blocked: 'blocked',\n  /**\n  *@description Value for the 'Trigger' column in the SAB affected resources list\n  */\n  instantiation: 'Instantiation',\n  /**\n  *@description Tooltip for the 'Trigger' column in the SAB affected resources list\n  */\n  aSharedarraybufferWas: 'A `SharedArrayBuffer` was instantiated in a context that is not cross-origin isolated',\n  /**\n  *@description Value for the 'Trigger' column in the SAB affected resources list\n  */\n  transfer: 'Transfer',\n  /**\n  *@description Tooltip for the 'Trigger' column in the SAB affected resources list\n  */\n  sharedarraybufferWasTransferedTo: '`SharedArrayBuffer` was transfered to a context that is not cross-origin isolated',\n  /**\n  *@description Header for the source location column\n  */\n  sourceLocation: 'Source Location',\n  /**\n  *@description Title for the 'Trigger' column in the SAB affected resources list\n  */\n  trigger: 'Trigger',\n  /**\n  *@description Title for the status column in the SAB affected resources list\n  */\n  status: 'Status',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class AffectedSharedArrayBufferIssueDetailsView extends AffectedResourcesView {\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nViolations, {n: count});\n  }\n\n  #appendStatus(element: HTMLElement, isWarning: boolean): void {\n    const status = document.createElement('td');\n    if (isWarning) {\n      status.classList.add('affected-resource-report-only-status');\n      status.textContent = i18nString(UIStrings.warning);\n    } else {\n      status.classList.add('affected-resource-blocked-status');\n      status.textContent = i18nString(UIStrings.blocked);\n    }\n    element.appendChild(status);\n  }\n\n  #appendType(element: HTMLElement, type: Protocol.Audits.SharedArrayBufferIssueType): void {\n    const status = document.createElement('td');\n    switch (type) {\n      case Protocol.Audits.SharedArrayBufferIssueType.CreationIssue:\n        status.textContent = i18nString(UIStrings.instantiation);\n        status.title = i18nString(UIStrings.aSharedarraybufferWas);\n        break;\n      case Protocol.Audits.SharedArrayBufferIssueType.TransferIssue:\n        status.textContent = i18nString(UIStrings.transfer);\n        status.title = i18nString(UIStrings.sharedarraybufferWasTransferedTo);\n        break;\n    }\n    element.appendChild(status);\n  }\n\n  #appendDetails(sabIssues: Iterable<IssuesManager.SharedArrayBufferIssue.SharedArrayBufferIssue>): void {\n    const header = document.createElement('tr');\n    this.appendColumnTitle(header, i18nString(UIStrings.sourceLocation));\n    this.appendColumnTitle(header, i18nString(UIStrings.trigger));\n    this.appendColumnTitle(header, i18nString(UIStrings.status));\n\n    this.affectedResources.appendChild(header);\n    let count = 0;\n    for (const sabIssue of sabIssues) {\n      count++;\n      this.#appendDetail(sabIssue);\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  #appendDetail(sabIssue: IssuesManager.SharedArrayBufferIssue.SharedArrayBufferIssue): void {\n    const element = document.createElement('tr');\n    element.classList.add('affected-resource-directive');\n\n    const sabIssueDetails = sabIssue.details();\n    const location = IssuesManager.Issue.toZeroBasedLocation(sabIssueDetails.sourceCodeLocation);\n    this.appendSourceLocation(element, location, sabIssue.model()?.getTargetIfNotDisposed());\n    this.#appendType(element, sabIssueDetails.type);\n    this.#appendStatus(element, sabIssueDetails.isWarning);\n\n    this.affectedResources.appendChild(element);\n  }\n\n  update(): void {\n    this.clear();\n    this.#appendDetails(this.issue.getSharedArrayBufferIssues());\n  }\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,aAAa;AAAA,EAIb,SAAS;AAAA,EAIT,SAAS;AAAA,EAIT,eAAe;AAAA,EAIf,uBAAuB;AAAA,EAIvB,UAAU;AAAA,EAIV,kCAAkC;AAAA,EAIlC,gBAAgB;AAAA,EAIhB,SAAS;AAAA,EAIT,QAAQ;AAAA;AAEV,MAAM,OAAO,KAAK,KAAK,kBAAkB,8DAA8D;AACvG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AACzD,+DAAwD,sBAAsB;AAAA,EACzE,yBAAyB,OAAkD;AACnF,WAAO,WAAW,UAAU,aAAa,EAAC,GAAG;AAAA;AAAA,gBAGjC,SAAsB,WAA0B;AAC5D,UAAM,SAAS,SAAS,cAAc;AACtC,QAAI,WAAW;AACb,aAAO,UAAU,IAAI;AACrB,aAAO,cAAc,WAAW,UAAU;AAAA,WACrC;AACL,aAAO,UAAU,IAAI;AACrB,aAAO,cAAc,WAAW,UAAU;AAAA;AAE5C,YAAQ,YAAY;AAAA;AAAA,cAGV,SAAsB,MAAwD;AACxF,UAAM,SAAS,SAAS,cAAc;AACtC,YAAQ;AAAA,WACD,SAAS,OAAO,2BAA2B;AAC9C,eAAO,cAAc,WAAW,UAAU;AAC1C,eAAO,QAAQ,WAAW,UAAU;AACpC;AAAA,WACG,SAAS,OAAO,2BAA2B;AAC9C,eAAO,cAAc,WAAW,UAAU;AAC1C,eAAO,QAAQ,WAAW,UAAU;AACpC;AAAA;AAEJ,YAAQ,YAAY;AAAA;AAAA,iBAGP,WAAwF;AACrG,UAAM,SAAS,SAAS,cAAc;AACtC,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AACpD,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AACpD,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AAEpD,SAAK,kBAAkB,YAAY;AACnC,QAAI,QAAQ;AACZ,eAAW,YAAY,WAAW;AAChC;AACA,yBAAmB;AAAA;AAErB,SAAK,4BAA4B;AAAA;AAAA,gBAGrB,UAA6E;AACzF,UAAM,UAAU,SAAS,cAAc;AACvC,YAAQ,UAAU,IAAI;AAEtB,UAAM,kBAAkB,SAAS;AACjC,UAAM,WAAW,cAAc,MAAM,oBAAoB,gBAAgB;AACzE,SAAK,qBAAqB,SAAS,UAAU,SAAS,SAAS;AAC/D,qBAAiB,SAAS,gBAAgB;AAC1C,uBAAmB,SAAS,gBAAgB;AAE5C,SAAK,kBAAkB,YAAY;AAAA;AAAA,EAGrC,SAAe;AACb,SAAK;AACL,wBAAoB,KAAK,MAAM;AAAA;AAAA;",
  "names": []
}
