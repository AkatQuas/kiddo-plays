{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/IssueView.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as MarkdownView from '../../ui/components/markdown_view/markdown_view.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Components from './components/components.js';\n\nimport {AffectedDirectivesView} from './AffectedDirectivesView.js';\nimport {AffectedBlockedByResponseView} from './AffectedBlockedByResponseView.js';\nimport {AffectedCookiesView, AffectedRawCookieLinesView} from './AffectedCookiesView.js';\nimport {AffectedDocumentsInQuirksModeView} from './AffectedDocumentsInQuirksModeView.js';\nimport {AffectedElementsView} from './AffectedElementsView.js';\nimport {AffectedElementsWithLowContrastView} from './AffectedElementsWithLowContrastView.js';\nimport {AffectedHeavyAdView} from './AffectedHeavyAdView.js';\nimport {AffectedItem, AffectedResourcesView, extractShortPath} from './AffectedResourcesView.js';\nimport {AffectedSharedArrayBufferIssueDetailsView} from './AffectedSharedArrayBufferIssueDetailsView.js';\nimport {AffectedSourcesView} from './AffectedSourcesView.js';\nimport {AffectedTrustedWebActivityIssueDetailsView} from './AffectedTrustedWebActivityIssueDetailsView.js';\nimport {CorsIssueDetailsView} from './CorsIssueDetailsView.js';\nimport {GenericIssueDetailsView} from './GenericIssueDetailsView.js';\nimport {AttributionReportingIssueDetailsView} from './AttributionReportingIssueDetailsView.js';\n\nimport type {AggregatedIssue} from './IssueAggregator.js';\nimport type {HiddenIssuesMenuData} from './components/HideIssuesMenu.js';\n\nconst UIStrings = {\n  /**\n  *@description Noun, singular. Label for a column or field containing the name of an entity.\n  */\n  name: 'Name',\n  /**\n  *@description The kind of resolution for a mixed content issue\n  */\n  blocked: 'blocked',\n  /**\n  *@description Label for a type of issue that can appear in the Issues view. Noun for singular or plural number of network requests.\n  */\n  nRequests: '{n, plural, =1 {# request} other {# requests}}',\n  /**\n  *@description Label for singular or plural number of affected resources in issue view\n  */\n  nResources: '{n, plural, =1 {# resource} other {# resources}}',\n  /**\n  *@description Label for mixed content issue's restriction status\n  */\n  restrictionStatus: 'Restriction Status',\n  /**\n  * @description When there is a Heavy Ad, the browser can choose to deal with it in different ways.\n  * This string indicates that the ad was only warned, and not removed.\n  */\n  warned: 'Warned',\n  /**\n  *@description Header for the section listing affected resources\n  */\n  affectedResources: 'Affected Resources',\n  /**\n  *@description Title for a link to further information in issue view\n  *@example {SameSite Cookies Explained} PH1\n  */\n  learnMoreS: 'Learn more: {PH1}',\n  /**\n  *@description The kind of resolution for a mixed content issue\n  */\n  automaticallyUpgraded: 'automatically upgraded',\n  /**\n  *@description Menu entry for hiding a particular issue, in the Hide Issues context menu.\n  */\n  hideIssuesLikeThis: 'Hide issues like this',\n  /**\n  *@description Menu entry for unhiding a particular issue, in the Hide Issues context menu.\n  */\n  unhideIssuesLikeThis: 'Unhide issues like this',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/IssueView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass AffectedRequestsView extends AffectedResourcesView {\n  #appendAffectedRequests(affectedRequests: Iterable<Protocol.Audits.AffectedRequest>): void {\n    let count = 0;\n    for (const affectedRequest of affectedRequests) {\n      const element = document.createElement('tr');\n      element.classList.add('affected-resource-request');\n      const category = this.issue.getCategory();\n      const tab = issueTypeToNetworkHeaderMap.get(category) || NetworkForward.UIRequestLocation.UIRequestTabs.Headers;\n      element.appendChild(this.createRequestCell(affectedRequest, {\n        networkTab: tab,\n        additionalOnClickAction() {\n          Host.userMetrics.issuesPanelResourceOpened(category, AffectedItem.Request);\n        },\n      }));\n      this.affectedResources.appendChild(element);\n      count++;\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nRequests, {n: count});\n  }\n\n  update(): void {\n    this.clear();\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (const unused of this.issue.getBlockedByResponseDetails()) {\n      // If the issue has blockedByResponseDetails, the corresponding AffectedBlockedByResponseView\n      // will take care of displaying the request.\n      this.updateAffectedResourceCount(0);\n      return;\n    }\n    if (this.issue.getCategory() === IssuesManager.Issue.IssueCategory.MixedContent) {\n      // The AffectedMixedContentView takes care of displaying the resources.\n      this.updateAffectedResourceCount(0);\n      return;\n    }\n    this.#appendAffectedRequests(this.issue.requests());\n  }\n}\n\nconst issueTypeToNetworkHeaderMap =\n    new Map<IssuesManager.Issue.IssueCategory, NetworkForward.UIRequestLocation.UIRequestTabs>([\n      [\n        IssuesManager.Issue.IssueCategory.Cookie,\n        NetworkForward.UIRequestLocation.UIRequestTabs.Cookies,\n      ],\n      [\n        IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy,\n        NetworkForward.UIRequestLocation.UIRequestTabs.Headers,\n      ],\n      [\n        IssuesManager.Issue.IssueCategory.MixedContent,\n        NetworkForward.UIRequestLocation.UIRequestTabs.Headers,\n      ],\n    ]);\n\nclass AffectedMixedContentView extends AffectedResourcesView {\n  #appendAffectedMixedContentDetails(mixedContentIssues: Iterable<IssuesManager.MixedContentIssue.MixedContentIssue>):\n      void {\n    const header = document.createElement('tr');\n    this.appendColumnTitle(header, i18nString(UIStrings.name));\n    this.appendColumnTitle(header, i18nString(UIStrings.restrictionStatus));\n\n    this.affectedResources.appendChild(header);\n\n    let count = 0;\n    for (const issue of mixedContentIssues) {\n      const details = issue.getDetails();\n      this.appendAffectedMixedContent(details);\n      count++;\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nResources, {n: count});\n  }\n\n  appendAffectedMixedContent(mixedContent: Protocol.Audits.MixedContentIssueDetails): void {\n    const element = document.createElement('tr');\n    element.classList.add('affected-resource-mixed-content');\n\n    if (mixedContent.request) {\n      const networkTab = issueTypeToNetworkHeaderMap.get(this.issue.getCategory()) ||\n          NetworkForward.UIRequestLocation.UIRequestTabs.Headers;\n      element.appendChild(this.createRequestCell(mixedContent.request, {\n        networkTab,\n        additionalOnClickAction() {\n          Host.userMetrics.issuesPanelResourceOpened(\n              IssuesManager.Issue.IssueCategory.MixedContent, AffectedItem.Request);\n        },\n      }));\n    } else {\n      const filename = extractShortPath(mixedContent.insecureURL as Platform.DevToolsPath.UrlString);\n      const cell = this.appendIssueDetailCell(element, filename, 'affected-resource-mixed-content-info');\n      cell.title = mixedContent.insecureURL;\n    }\n\n    this.appendIssueDetailCell(\n        element, AffectedMixedContentView.translateStatus(mixedContent.resolutionStatus),\n        'affected-resource-mixed-content-info');\n    this.affectedResources.appendChild(element);\n  }\n\n  private static translateStatus(resolutionStatus: Protocol.Audits.MixedContentResolutionStatus):\n      Platform.UIString.LocalizedString {\n    switch (resolutionStatus) {\n      case Protocol.Audits.MixedContentResolutionStatus.MixedContentBlocked:\n        return i18nString(UIStrings.blocked);\n      case Protocol.Audits.MixedContentResolutionStatus.MixedContentAutomaticallyUpgraded:\n        return i18nString(UIStrings.automaticallyUpgraded);\n      case Protocol.Audits.MixedContentResolutionStatus.MixedContentWarning:\n        return i18nString(UIStrings.warned);\n    }\n  }\n\n  update(): void {\n    this.clear();\n    this.#appendAffectedMixedContentDetails(this.issue.getMixedContentIssues());\n  }\n}\n\nexport class IssueView extends UI.TreeOutline.TreeElement {\n  #issue: AggregatedIssue;\n  #description: IssuesManager.MarkdownIssueDescription.IssueDescription;\n  toggleOnClick: boolean;\n  affectedResources: UI.TreeOutline.TreeElement;\n  readonly #affectedResourceViews: AffectedResourcesView[];\n  #aggregatedIssuesCount: HTMLElement|null;\n  #issueKindIcon: IconButton.Icon.Icon|null = null;\n  #hasBeenExpandedBefore: boolean;\n  #throttle: Common.Throttler.Throttler;\n  #needsUpdateOnExpand = true;\n  #hiddenIssuesMenu?: Components.HideIssuesMenu.HideIssuesMenu;\n  #contentCreated: boolean = false;\n\n  constructor(issue: AggregatedIssue, description: IssuesManager.MarkdownIssueDescription.IssueDescription) {\n    super();\n    this.#issue = issue;\n    this.#description = description;\n    this.#throttle = new Common.Throttler.Throttler(250);\n\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue');\n    this.childrenListElement.classList.add('body');\n    this.childrenListElement.classList.add(IssueView.getBodyCSSClass(this.#issue.getKind()));\n\n    this.affectedResources = this.#createAffectedResources();\n    this.#affectedResourceViews = [\n      new AffectedCookiesView(this, this.#issue),\n      new AffectedElementsView(this, this.#issue),\n      new AffectedRequestsView(this, this.#issue),\n      new AffectedMixedContentView(this, this.#issue),\n      new AffectedSourcesView(this, this.#issue),\n      new AffectedHeavyAdView(this, this.#issue),\n      new AffectedDirectivesView(this, this.#issue),\n      new AffectedBlockedByResponseView(this, this.#issue),\n      new AffectedSharedArrayBufferIssueDetailsView(this, this.#issue),\n      new AffectedElementsWithLowContrastView(this, this.#issue),\n      new AffectedTrustedWebActivityIssueDetailsView(this, this.#issue),\n      new CorsIssueDetailsView(this, this.#issue),\n      new GenericIssueDetailsView(this, this.#issue),\n      new AffectedDocumentsInQuirksModeView(this, this.#issue),\n      new AttributionReportingIssueDetailsView(this, this.#issue),\n      new AffectedRawCookieLinesView(this, this.#issue),\n    ];\n    if (Root.Runtime.experiments.isEnabled('hideIssuesFeature')) {\n      this.#hiddenIssuesMenu = new Components.HideIssuesMenu.HideIssuesMenu();\n    }\n    this.#aggregatedIssuesCount = null;\n    this.#hasBeenExpandedBefore = false;\n  }\n\n  /**\n   * Sets the issue to take the resources from. Assumes that the description\n   * this IssueView was initialized with fits the new issue as well, i.e.\n   * title and issue description will not be updated.\n   */\n  setIssue(issue: AggregatedIssue): void {\n    if (this.#issue !== issue) {\n      this.#needsUpdateOnExpand = true;\n    }\n    this.#issue = issue;\n    this.#affectedResourceViews.forEach(view => view.setIssue(issue));\n  }\n\n  private static getBodyCSSClass(issueKind: IssuesManager.Issue.IssueKind): string {\n    switch (issueKind) {\n      case IssuesManager.Issue.IssueKind.BreakingChange:\n        return 'issue-kind-breaking-change';\n      case IssuesManager.Issue.IssueKind.PageError:\n        return 'issue-kind-page-error';\n      case IssuesManager.Issue.IssueKind.Improvement:\n        return 'issue-kind-improvement';\n    }\n  }\n\n  getIssueTitle(): string {\n    return this.#description.title;\n  }\n\n  onattach(): void {\n    if (!this.#contentCreated) {\n      this.createContent();\n      return;\n    }\n    this.update();\n  }\n\n  createContent(): void {\n    this.#appendHeader();\n    this.#createBody();\n    this.appendChild(this.affectedResources);\n    for (const view of this.#affectedResourceViews) {\n      this.appendAffectedResource(view);\n      view.update();\n    }\n\n    this.#createReadMoreLinks();\n    this.updateAffectedResourceVisibility();\n    this.#contentCreated = true;\n  }\n\n  appendAffectedResource(resource: UI.TreeOutline.TreeElement): void {\n    this.affectedResources.appendChild(resource);\n  }\n\n  #appendHeader(): void {\n    const header = document.createElement('div');\n    header.classList.add('header');\n    this.#issueKindIcon = new IconButton.Icon.Icon();\n    this.#issueKindIcon.classList.add('leading-issue-icon');\n    this.#aggregatedIssuesCount = document.createElement('span');\n    const countAdorner = new Adorners.Adorner.Adorner();\n    countAdorner.data = {\n      name: 'countWrapper',\n      content: this.#aggregatedIssuesCount,\n    };\n    countAdorner.classList.add('aggregated-issues-count');\n    header.appendChild(this.#issueKindIcon);\n    header.appendChild(countAdorner);\n\n    const title = document.createElement('div');\n    title.classList.add('title');\n    title.textContent = this.#description.title;\n    header.appendChild(title);\n    if (this.#hiddenIssuesMenu) {\n      header.appendChild(this.#hiddenIssuesMenu);\n    }\n    this.#updateFromIssue();\n    this.listItemElement.appendChild(header);\n  }\n\n  onexpand(): void {\n    Host.userMetrics.issuesPanelIssueExpanded(this.#issue.getCategory());\n\n    if (this.#needsUpdateOnExpand) {\n      this.#doUpdate();\n    }\n\n    if (!this.#hasBeenExpandedBefore) {\n      this.#hasBeenExpandedBefore = true;\n      for (const view of this.#affectedResourceViews) {\n        view.expandIfOneResource();\n      }\n    }\n  }\n\n  #updateFromIssue(): void {\n    if (this.#issueKindIcon) {\n      const kind = this.#issue.getKind();\n      this.#issueKindIcon.data = IssueCounter.IssueCounter.getIssueKindIconData(kind);\n      this.#issueKindIcon.title = IssuesManager.Issue.getIssueKindDescription(kind);\n    }\n    if (this.#aggregatedIssuesCount) {\n      this.#aggregatedIssuesCount.textContent = `${this.#issue.getAggregatedIssuesCount()}`;\n    }\n    this.listItemElement.classList.toggle('hidden-issue', this.#issue.isHidden());\n    if (this.#hiddenIssuesMenu) {\n      const data: HiddenIssuesMenuData = {\n        menuItemLabel: this.#issue.isHidden() ? i18nString(UIStrings.unhideIssuesLikeThis) :\n                                                i18nString(UIStrings.hideIssuesLikeThis),\n        menuItemAction: () => {\n          const setting = IssuesManager.IssuesManager.getHideIssueByCodeSetting();\n          const values = setting.get();\n          values[this.#issue.code()] = this.#issue.isHidden() ? IssuesManager.IssuesManager.IssueStatus.Unhidden :\n                                                                IssuesManager.IssuesManager.IssueStatus.Hidden;\n          setting.set(values);\n        },\n      };\n      this.#hiddenIssuesMenu.data = data;\n    }\n  }\n\n  updateAffectedResourceVisibility(): void {\n    const noResources = this.#affectedResourceViews.every(view => view.isEmpty());\n    this.affectedResources.hidden = noResources;\n  }\n\n  #createAffectedResources(): UI.TreeOutline.TreeElement {\n    const wrapper = new UI.TreeOutline.TreeElement();\n    wrapper.setCollapsible(false);\n    wrapper.setExpandable(true);\n    wrapper.expand();\n    wrapper.selectable = false;\n    wrapper.listItemElement.classList.add('affected-resources-label');\n    wrapper.listItemElement.textContent = i18nString(UIStrings.affectedResources);\n    wrapper.childrenListElement.classList.add('affected-resources');\n    return wrapper;\n  }\n\n  #createBody(): void {\n    const messageElement = new UI.TreeOutline.TreeElement();\n    messageElement.setCollapsible(false);\n    messageElement.selectable = false;\n    const markdownComponent = new MarkdownView.MarkdownView.MarkdownView();\n    markdownComponent.data = {tokens: this.#description.markdown};\n    messageElement.listItemElement.appendChild(markdownComponent);\n    this.appendChild(messageElement);\n  }\n\n  #createReadMoreLinks(): void {\n    if (this.#description.links.length === 0) {\n      return;\n    }\n\n    const linkWrapper = new UI.TreeOutline.TreeElement();\n    linkWrapper.setCollapsible(false);\n    linkWrapper.listItemElement.classList.add('link-wrapper');\n\n    const linkList = linkWrapper.listItemElement.createChild('ul', 'link-list');\n    for (const description of this.#description.links) {\n      const link = UI.Fragment.html`<x-link class=\"link devtools-link\" tabindex=\"0\" href=${description.link}>${\n                       i18nString(UIStrings.learnMoreS, {PH1: description.linkTitle})}</x-link>` as UI.XLink.XLink;\n      const linkIcon = new IconButton.Icon.Icon();\n      linkIcon.data = {iconName: 'link_icon', color: 'var(--color-link)', width: '16px', height: '16px'};\n      linkIcon.classList.add('link-icon');\n      link.prepend(linkIcon);\n      link.addEventListener('x-link-invoke', () => {\n        Host.userMetrics.issuesPanelResourceOpened(this.#issue.getCategory(), AffectedItem.LearnMore);\n      });\n\n      const linkListItem = linkList.createChild('li');\n      linkListItem.appendChild(link);\n    }\n    this.appendChild(linkWrapper);\n  }\n\n  #doUpdate(): void {\n    if (this.expanded) {\n      this.#affectedResourceViews.forEach(view => view.update());\n      this.updateAffectedResourceVisibility();\n    }\n    this.#needsUpdateOnExpand = !this.expanded;\n    this.#updateFromIssue();\n  }\n\n  update(): void {\n    void this.#throttle.schedule(async () => this.#doUpdate());\n  }\n\n  getIssueKind(): IssuesManager.Issue.IssueKind {\n    return this.#issue.getKind();\n  }\n\n  isForHiddenIssue(): boolean {\n    return this.#issue.isHidden();\n  }\n\n  toggle(expand?: boolean): void {\n    if (expand || (expand === undefined && !this.expanded)) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
