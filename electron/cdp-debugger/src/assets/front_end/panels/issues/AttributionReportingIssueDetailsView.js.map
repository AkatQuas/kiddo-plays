{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/AttributionReportingIssueDetailsView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\n\nimport {AffectedItem, AffectedResourcesView} from './AffectedResourcesView.js';\n\nconst UIStrings = {\n  /**\n   * @description Label for number of rows in the issue details table.\n   */\n  nViolations: '{n, plural, =1 {# violation} other {# violations}}',\n  /**\n   * @description Noun, label for the column showing the associated frame in the issue details table.\n   * The associated frame can either be the \"main frame\" (or main window), or an HTML iframe.\n   */\n  frame: 'Frame',\n  /**\n   * @description Noun, label for the column showing the associated HTML element in the issue details table.\n   */\n  element: 'Element',\n  /**\n   * @description Noun, label for the column showing the invalid header value in the issue details table.\n   */\n  invalidHeaderValue: 'Invalid Header Value',\n  /**\n   * @description Noun, label for the column showing the associated network request in the issue details table.\n   */\n  request: 'Request',\n  /**\n   * @description Label for the column showing the invalid URL used in an HTML anchor element (\"a link\").\n   * A origin is (roughly said) the front part of a URL.\n   */\n  untrustworthyOrigin: 'Untrustworthy origin',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AttributionReportingIssueDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class AttributionReportingIssueDetailsView extends AffectedResourcesView {\n  protected override getResourceNameWithCount(count: number): string {\n    return i18nString(UIStrings.nViolations, {n: count});\n  }\n\n  override update(): void {\n    this.clear();\n    const issues = this.issue.getAttributionReportingIssues();\n    if (issues.size > 0) {\n      this.#appendDetails(issues.values().next().value.code(), issues);\n    } else {\n      this.updateAffectedResourceCount(0);\n    }\n  }\n\n  #appendDetails(\n      issueCode: IssuesManager.AttributionReportingIssue.IssueCode,\n      issues: Iterable<IssuesManager.AttributionReportingIssue.AttributionReportingIssue>): void {\n    const header = document.createElement('tr');\n    switch (issueCode) {\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionUntrustworthyFrameOrigin:\n        this.appendColumnTitle(header, i18nString(UIStrings.frame));\n        this.appendColumnTitle(header, i18nString(UIStrings.request));\n        this.appendColumnTitle(header, i18nString(UIStrings.untrustworthyOrigin));\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionUntrustworthyOrigin:\n        this.appendColumnTitle(header, i18nString(UIStrings.request));\n        this.appendColumnTitle(header, i18nString(UIStrings.untrustworthyOrigin));\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionSourceUntrustworthyFrameOrigin:\n        this.appendColumnTitle(header, i18nString(UIStrings.frame));\n        this.appendColumnTitle(header, i18nString(UIStrings.element));\n        this.appendColumnTitle(header, i18nString(UIStrings.untrustworthyOrigin));\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionSourceUntrustworthyOrigin:\n        this.appendColumnTitle(header, i18nString(UIStrings.element));\n        this.appendColumnTitle(header, i18nString(UIStrings.untrustworthyOrigin));\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.InvalidHeader:\n        this.appendColumnTitle(header, i18nString(UIStrings.frame));\n        this.appendColumnTitle(header, i18nString(UIStrings.request));\n        this.appendColumnTitle(header, i18nString(UIStrings.invalidHeaderValue));\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.PermissionPolicyDisabled:\n        this.appendColumnTitle(header, i18nString(UIStrings.frame));\n        this.appendColumnTitle(header, i18nString(UIStrings.element));\n        this.appendColumnTitle(header, i18nString(UIStrings.request));\n        break;\n    }\n\n    this.affectedResources.appendChild(header);\n    let count = 0;\n    for (const issue of issues) {\n      count++;\n      void this.#appendDetail(issueCode, issue);\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  async #appendDetail(\n      issueCode: IssuesManager.AttributionReportingIssue.IssueCode,\n      issue: IssuesManager.AttributionReportingIssue.AttributionReportingIssue): Promise<void> {\n    const element = document.createElement('tr');\n    element.classList.add('affected-resource-directive');\n\n    const details = issue.issueDetails;\n\n    switch (issueCode) {\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionSourceUntrustworthyOrigin:\n        await this.#appendElementOrEmptyCell(element, issue);\n        this.appendIssueDetailCell(element, details.invalidParameter || '');\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.AttributionUntrustworthyOrigin:\n        this.#appendRequestOrEmptyCell(element, details.request);\n        this.appendIssueDetailCell(element, details.invalidParameter || '');\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.InvalidHeader:\n        this.#appendFrameOrEmptyCell(element, issue);\n        this.#appendRequestOrEmptyCell(element, details.request);\n        this.appendIssueDetailCell(element, details.invalidParameter || '');\n        break;\n      case IssuesManager.AttributionReportingIssue.IssueCode.PermissionPolicyDisabled:\n        this.#appendFrameOrEmptyCell(element, issue);\n        await this.#appendElementOrEmptyCell(element, issue);\n        this.#appendRequestOrEmptyCell(element, details.request);\n        break;\n    }\n\n    this.affectedResources.appendChild(element);\n  }\n\n  #appendFrameOrEmptyCell(\n      parent: HTMLElement, issue: IssuesManager.AttributionReportingIssue.AttributionReportingIssue): void {\n    const details = issue.issueDetails;\n    if (details.frame) {\n      parent.appendChild(this.createFrameCell(details.frame.frameId, issue.getCategory()));\n    } else {\n      this.appendIssueDetailCell(parent, '');\n    }\n  }\n\n  async #appendElementOrEmptyCell(\n      parent: HTMLElement, issue: IssuesManager.AttributionReportingIssue.AttributionReportingIssue): Promise<void> {\n    const details = issue.issueDetails;\n    if (details.violatingNodeId !== undefined) {\n      const target = issue.model()?.target() || null;\n      parent.appendChild(await this.createElementCell(\n          {backendNodeId: details.violatingNodeId, target, nodeName: 'Attribution source element'},\n          issue.getCategory()));\n    } else {\n      this.appendIssueDetailCell(parent, '');\n    }\n  }\n\n  #appendRequestOrEmptyCell(parent: HTMLElement, request?: Protocol.Audits.AffectedRequest): void {\n    if (!request) {\n      this.appendIssueDetailCell(parent, '');\n      return;\n    }\n\n    const opts = {\n      additionalOnClickAction(): void {\n        Host.userMetrics.issuesPanelResourceOpened(\n            IssuesManager.Issue.IssueCategory.AttributionReporting, AffectedItem.Request);\n      },\n    };\n    parent.appendChild(this.createRequestCell(request, opts));\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
