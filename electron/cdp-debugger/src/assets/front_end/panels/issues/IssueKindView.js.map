{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/IssueKindView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Components from './components/components.js';\n\nconst UIStrings = {\n  /**\n    * @description Menu entry for hiding all current Page Errors.\n    */\n  hideAllCurrentPageErrors: 'Hide all current Page Errors',\n  /**\n    * @description Menu entry for hiding all current Breaking Changes.\n    */\n  hideAllCurrentBreakingChanges: 'Hide all current Breaking Changes',\n  /**\n    * @description Menu entry for hiding all current Page Errors.\n    */\n  hideAllCurrentImprovements: 'Hide all current Improvements',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/IssueKindView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function getGroupIssuesByKindSetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('groupIssuesByKind', false);\n}\n\nexport function issueKindViewSortPriority(a: IssueKindView, b: IssueKindView): number {\n  if (a.getKind() === b.getKind()) {\n    return 0;\n  }\n  if (a.getKind() === IssuesManager.Issue.IssueKind.PageError) {\n    return -1;\n  }\n  if (a.getKind() === IssuesManager.Issue.IssueKind.BreakingChange &&\n      b.getKind() === IssuesManager.Issue.IssueKind.Improvement) {\n    return -1;\n  }\n  return 1;\n}\n\nexport function getClassNameFromKind(kind: IssuesManager.Issue.IssueKind): string {\n  switch (kind) {\n    case IssuesManager.Issue.IssueKind.BreakingChange:\n      return 'breaking-changes';\n    case IssuesManager.Issue.IssueKind.Improvement:\n      return 'improvements';\n    case IssuesManager.Issue.IssueKind.PageError:\n      return 'page-errors';\n  }\n}\n\nexport class IssueKindView extends UI.TreeOutline.TreeElement {\n  #kind: IssuesManager.Issue.IssueKind;\n  #issueCount: HTMLElement;\n\n  constructor(kind: IssuesManager.Issue.IssueKind) {\n    super(undefined, true);\n    this.#kind = kind;\n    this.#issueCount = document.createElement('span');\n\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue-kind');\n    this.listItemElement.classList.add(getClassNameFromKind(kind));\n    this.childrenListElement.classList.add('issue-kind-body');\n  }\n\n  getKind(): IssuesManager.Issue.IssueKind {\n    return this.#kind;\n  }\n\n  getHideAllCurrentKindString(): Common.UIString.LocalizedString {\n    switch (this.#kind) {\n      case IssuesManager.Issue.IssueKind.PageError:\n        return i18nString(UIStrings.hideAllCurrentPageErrors);\n      case IssuesManager.Issue.IssueKind.Improvement:\n        return i18nString(UIStrings.hideAllCurrentImprovements);\n      case IssuesManager.Issue.IssueKind.BreakingChange:\n        return i18nString(UIStrings.hideAllCurrentBreakingChanges);\n    }\n  }\n\n  #appendHeader(): void {\n    const header = document.createElement('div');\n    header.classList.add('header');\n\n    const issueKindIcon = new IconButton.Icon.Icon();\n    issueKindIcon.data = IssueCounter.IssueCounter.getIssueKindIconData(this.#kind);\n    issueKindIcon.classList.add('leading-issue-icon');\n\n    const countAdorner = new Adorners.Adorner.Adorner();\n    countAdorner.data = {\n      name: 'countWrapper',\n      content: this.#issueCount,\n    };\n    countAdorner.classList.add('aggregated-issues-count');\n    this.#issueCount.textContent = '0';\n\n    const title = document.createElement('div');\n    title.classList.add('title');\n    title.textContent = IssuesManager.Issue.getIssueKindName(this.#kind);\n\n    const hideAvailableIssuesBtn = new Components.HideIssuesMenu.HideIssuesMenu();\n    hideAvailableIssuesBtn.classList.add('hide-available-issues');\n    hideAvailableIssuesBtn.data = {\n      menuItemLabel: this.getHideAllCurrentKindString(),\n      menuItemAction: (): void => {\n        const setting = IssuesManager.IssuesManager.getHideIssueByCodeSetting();\n        const values = setting.get();\n        for (const issue of IssuesManager.IssuesManager.IssuesManager.instance().issues()) {\n          if (issue.getKind() === this.#kind) {\n            values[issue.code()] = IssuesManager.IssuesManager.IssueStatus.Hidden;\n          }\n        }\n        setting.set(values);\n      },\n    };\n\n    header.appendChild(issueKindIcon);\n    header.appendChild(countAdorner);\n    header.appendChild(title);\n    header.appendChild(hideAvailableIssuesBtn);\n\n    this.listItemElement.appendChild(header);\n  }\n\n  onattach(): void {\n    this.#appendHeader();\n    this.expand();\n  }\n\n  update(count: number): void {\n    this.#issueCount.textContent = `${count}`;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,0BAA0B;AAAA,EAI1B,+BAA+B;AAAA,EAI/B,4BAA4B;AAAA;AAE9B,MAAM,OAAO,KAAK,KAAK,kBAAkB,kCAAkC;AAC3E,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,8CAAyE;AAC9E,SAAO,OAAO,SAAS,SAAS,WAAW,cAAc,qBAAqB;AAAA;AAGzE,0CAAmC,GAAkB,GAA0B;AACpF,MAAI,EAAE,cAAc,EAAE,WAAW;AAC/B,WAAO;AAAA;AAET,MAAI,EAAE,cAAc,cAAc,MAAM,UAAU,WAAW;AAC3D,WAAO;AAAA;AAET,MAAI,EAAE,cAAc,cAAc,MAAM,UAAU,kBAC9C,EAAE,cAAc,cAAc,MAAM,UAAU,aAAa;AAC7D,WAAO;AAAA;AAET,SAAO;AAAA;AAGF,qCAA8B,MAA6C;AAChF,UAAQ;AAAA,SACD,cAAc,MAAM,UAAU;AACjC,aAAO;AAAA,SACJ,cAAc,MAAM,UAAU;AACjC,aAAO;AAAA,SACJ,cAAc,MAAM,UAAU;AACjC,aAAO;AAAA;AAAA;AAIN,mCAA4B,GAAG,YAAY,YAAY;AAAA;AAAA;AAAA,EAI5D,YAAY,MAAqC;AAC/C,UAAM,QAAW;AACjB,iBAAa;AACb,uBAAmB,SAAS,cAAc;AAE1C,SAAK,gBAAgB;AACrB,SAAK,gBAAgB,UAAU,IAAI;AACnC,SAAK,gBAAgB,UAAU,IAAI,qBAAqB;AACxD,SAAK,oBAAoB,UAAU,IAAI;AAAA;AAAA,EAGzC,UAAyC;AACvC,WAAO;AAAA;AAAA,EAGT,8BAA+D;AAC7D,YAAQ;AAAA,WACD,cAAc,MAAM,UAAU;AACjC,eAAO,WAAW,UAAU;AAAA,WACzB,cAAc,MAAM,UAAU;AACjC,eAAO,WAAW,UAAU;AAAA,WACzB,cAAc,MAAM,UAAU;AACjC,eAAO,WAAW,UAAU;AAAA;AAAA;AAAA,kBAIZ;AACpB,UAAM,SAAS,SAAS,cAAc;AACtC,WAAO,UAAU,IAAI;AAErB,UAAM,gBAAgB,IAAI,WAAW,KAAK;AAC1C,kBAAc,OAAO,aAAa,aAAa,qBAAqB;AACpE,kBAAc,UAAU,IAAI;AAE5B,UAAM,eAAe,IAAI,SAAS,QAAQ;AAC1C,iBAAa,OAAO;AAAA,MAClB,MAAM;AAAA,MACN,SAAS;AAAA;AAEX,iBAAa,UAAU,IAAI;AAC3B,qBAAiB,cAAc;AAE/B,UAAM,QAAQ,SAAS,cAAc;AACrC,UAAM,UAAU,IAAI;AACpB,UAAM,cAAc,cAAc,MAAM,iBAAiB;AAEzD,UAAM,yBAAyB,IAAI,WAAW,eAAe;AAC7D,2BAAuB,UAAU,IAAI;AACrC,2BAAuB,OAAO;AAAA,MAC5B,eAAe,KAAK;AAAA,MACpB,gBAAgB,MAAY;AAC1B,cAAM,UAAU,cAAc,cAAc;AAC5C,cAAM,SAAS,QAAQ;AACvB,mBAAW,SAAS,cAAc,cAAc,cAAc,WAAW,UAAU;AACjF,cAAI,MAAM,cAAc,YAAY;AAClC,mBAAO,MAAM,UAAU,cAAc,cAAc,YAAY;AAAA;AAAA;AAGnE,gBAAQ,IAAI;AAAA;AAAA;AAIhB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AAEnB,SAAK,gBAAgB,YAAY;AAAA;AAAA,EAGnC,WAAiB;AACf;AACA,SAAK;AAAA;AAAA,EAGP,OAAO,OAAqB;AAC1B,qBAAiB,cAAc,GAAG;AAAA;AAAA;",
  "names": []
}
