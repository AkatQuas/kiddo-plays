{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/AffectedDocumentsInQuirksModeView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\n\nimport {AffectedElementsView} from './AffectedElementsView.js';\n\nconst UIStrings = {\n  /**\n  *@description Noun for singular or plural number of affected document nodes indication in issue view.\n  */\n  nDocuments: '{n, plural, =1 { document} other { documents}}',\n  /**\n   *@description Column title for the Document in the DOM tree column in the quirks mode issue view\n   */\n  documentInTheDOMTree: 'Document in the DOM tree',\n  /**\n  *@description Column title for the url column in the quirks mode issue view\n  */\n  url: 'URL',\n  /**\n  *@description Column title for the Mode column in the quirks mode issue view\n  */\n  mode: 'Mode',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedDocumentsInQuirksModeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class AffectedDocumentsInQuirksModeView extends AffectedElementsView {\n  #runningUpdatePromise: Promise<void> = Promise.resolve();\n\n  update(): void {\n    // Ensure that doUpdate is invoked atomically by serializing the update calls\n    // because it's not re-entrace safe.\n    this.#runningUpdatePromise = this.#runningUpdatePromise.then(this.#doUpdate.bind(this));\n  }\n\n  protected getResourceName(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nDocuments, {n: count});\n  }\n\n  async #doUpdate(): Promise<void> {\n    this.clear();\n    await this.#appendQuirksModeDocuments(this.issue.getQuirksModeIssues());\n  }\n\n  async #appendQuirksModeDocument(issue: IssuesManager.QuirksModeIssue.QuirksModeIssue): Promise<void> {\n    const row = document.createElement('tr');\n    row.classList.add('affected-resource-quirks-mode');\n\n    const details = issue.details();\n\n    const target =\n        SDK.FrameManager.FrameManager.instance().getFrame(details.frameId)?.resourceTreeModel().target() || null;\n    row.appendChild(await this.createElementCell(\n        {nodeName: 'document', backendNodeId: details.documentNodeId, target}, issue.getCategory()));\n    this.appendIssueDetailCell(row, details.isLimitedQuirksMode ? 'Limited Quirks Mode' : 'Quirks Mode');\n    this.appendIssueDetailCell(row, details.url);\n\n    this.affectedResources.appendChild(row);\n  }\n\n  async #appendQuirksModeDocuments(issues: Iterable<IssuesManager.QuirksModeIssue.QuirksModeIssue>): Promise<void> {\n    const header = document.createElement('tr');\n    this.appendColumnTitle(header, i18nString(UIStrings.documentInTheDOMTree));\n    this.appendColumnTitle(header, i18nString(UIStrings.mode));\n    this.appendColumnTitle(header, i18nString(UIStrings.url));\n\n    this.affectedResources.appendChild(header);\n    let count = 0;\n    for (const issue of issues) {\n      count++;\n      await this.#appendQuirksModeDocument(issue);\n    }\n    this.updateAffectedResourceCount(count);\n  }\n}\n"],
  "mappings": "AAIA;AAEA;AAGA;AAEA,MAAM,YAAY;AAAA,EAIhB,YAAY;AAAA,EAIZ,sBAAsB;AAAA,EAItB,KAAK;AAAA,EAIL,MAAM;AAAA;AAER,MAAM,OAAO,KAAK,KAAK,kBAAkB,sDAAsD;AAC/F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,uDAAgD,qBAAqB;AAAA,0BACnC,QAAQ;AAAA,EAE/C,SAAe;AAGb,iCAA6B,2BAA2B,KAAK,eAAe,KAAK;AAAA;AAAA,EAGzE,gBAAgB,OAAkD;AAC1E,WAAO,WAAW,UAAU,YAAY,EAAC,GAAG;AAAA;AAAA,oBAGb;AAC/B,SAAK;AACL,UAAM,gCAAgC,KAAK,MAAM;AAAA;AAAA,kCAGnB,OAAqE;AACnG,UAAM,MAAM,SAAS,cAAc;AACnC,QAAI,UAAU,IAAI;AAElB,UAAM,UAAU,MAAM;AAEtB,UAAM,SACF,IAAI,aAAa,aAAa,WAAW,SAAS,QAAQ,UAAU,oBAAoB,YAAY;AACxG,QAAI,YAAY,MAAM,KAAK,kBACvB,EAAC,UAAU,YAAY,eAAe,QAAQ,gBAAgB,UAAS,MAAM;AACjF,SAAK,sBAAsB,KAAK,QAAQ,sBAAsB,wBAAwB;AACtF,SAAK,sBAAsB,KAAK,QAAQ;AAExC,SAAK,kBAAkB,YAAY;AAAA;AAAA,mCAGJ,QAAgF;AAC/G,UAAM,SAAS,SAAS,cAAc;AACtC,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AACpD,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AACpD,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AAEpD,SAAK,kBAAkB,YAAY;AACnC,QAAI,QAAQ;AACZ,eAAW,SAAS,QAAQ;AAC1B;AACA,YAAM,+BAA+B;AAAA;AAEvC,SAAK,4BAA4B;AAAA;AAAA;",
  "names": []
}
