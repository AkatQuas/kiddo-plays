{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/issues/CSPViolationsListView.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as DataGrid from '../../ui/components/data_grid/data_grid.js';\nimport * as Linkifier from '../../ui/components/linkifier/linkifier.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport cspViolationsListViewStyles from './cspViolationsListView.css.js';\n\nexport class CSPViolationsListView extends UI.Widget.VBox {\n  #table = new DataGrid.DataGridController.DataGridController();\n  #categoryFilter = new Set<string>();\n  #issueRows =\n      new Map<IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue, DataGrid.DataGridUtils.Row>();\n\n  constructor() {\n    super(true);\n\n    this.#table.data = {\n      columns: [\n        {id: 'sourceCode', title: 'Source Code', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n        {\n          id: 'violatedDirective',\n          title: 'Violated Directive',\n          sortable: false,\n          widthWeighting: 1,\n          visible: true,\n          hideable: false,\n        },\n        {id: 'category', title: 'Category', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n        {id: 'status', title: 'Status', sortable: false, widthWeighting: 1, visible: true, hideable: false},\n      ],\n      rows: [],\n    };\n    this.contentElement.appendChild(this.#table);\n  }\n\n  updateTextFilter(filter: string): void {\n    if (filter.length === 0) {\n      this.#table.data = {...this.#table.data, filters: []};\n    } else {\n      this.#table.data = {\n        ...this.#table.data,\n        filters: [{text: filter, key: undefined, regex: undefined, negative: false}],\n      };\n    }\n  }\n\n  updateCategoryFilter(categories: Set<string>): void {\n    this.#categoryFilter = categories;\n    const rows = [];\n    for (const [issue, row] of this.#issueRows.entries()) {\n      if (this.#isIssueInFilterCategories(issue)) {\n        rows.push(row);\n      }\n    }\n    this.#table.data = {...this.#table.data, rows: rows};\n  }\n\n  #isIssueInFilterCategories(issue: IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue): boolean {\n    return (this.#categoryFilter.has(issue.code()) || this.#categoryFilter.size === 0);\n  }\n\n  addIssue(issue: IssuesManager.ContentSecurityPolicyIssue.ContentSecurityPolicyIssue): void {\n    const location = IssuesManager.Issue.toZeroBasedLocation(issue.details().sourceCodeLocation);\n    if (!location) {\n      return;\n    }\n    const status = issue.details().isReportOnly ? 'report-only' : 'blocked';\n    const category = this.#issueViolationCodeToCategoryName(issue.code());\n    const newIssue = {\n      cells: [\n        {\n          columnId: 'sourceCode',\n          value: location.url,\n          renderer(): LitHtml.TemplateResult {\n            return LitHtml.html`<${Linkifier.Linkifier.Linkifier.litTagName} .data=${\n                location as Linkifier.Linkifier.LinkifierData}></${Linkifier.Linkifier.Linkifier.litTagName}>`;\n          },\n        },\n        {columnId: 'violatedDirective', value: issue.details().violatedDirective},\n        {columnId: 'category', value: category},\n        {columnId: 'status', value: status},\n      ],\n    };\n    this.#issueRows.set(issue, newIssue);\n\n    if (this.#isIssueInFilterCategories(issue)) {\n      this.#table.data.rows.push(newIssue);\n      this.#table.data = {...this.#table.data};\n    }\n  }\n\n  clearIssues(): void {\n    this.#issueRows.clear();\n    this.#table.data = {...this.#table.data, rows: []};\n  }\n\n  #issueViolationCodeToCategoryName(code: string): string {\n    if (code === IssuesManager.ContentSecurityPolicyIssue.inlineViolationCode) {\n      return 'Inline Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.urlViolationCode) {\n      return 'URL Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.evalViolationCode) {\n      return 'Eval Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.trustedTypesSinkViolationCode) {\n      return 'Sink Violation';\n    }\n    if (code === IssuesManager.ContentSecurityPolicyIssue.trustedTypesPolicyViolationCode) {\n      return 'Policy Violation';\n    }\n    return 'unknown';\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cspViolationsListViewStyles]);\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AAEA;AAEO,2CAAoC,GAAG,OAAO,KAAK;AAAA,WAC/C,IAAI,SAAS,mBAAmB;AAAA,oBACvB,oBAAI;AAAA,eAElB,oBAAI;AAAA,EAER,cAAc;AACZ,UAAM;AAEN,gBAAY,OAAO;AAAA,MACjB,SAAS;AAAA,QACP,EAAC,IAAI,cAAc,OAAO,eAAe,UAAU,OAAO,gBAAgB,GAAG,SAAS,MAAM,UAAU;AAAA,QACtG;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,UAAU;AAAA,UACV,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT,UAAU;AAAA;AAAA,QAEZ,EAAC,IAAI,YAAY,OAAO,YAAY,UAAU,OAAO,gBAAgB,GAAG,SAAS,MAAM,UAAU;AAAA,QACjG,EAAC,IAAI,UAAU,OAAO,UAAU,UAAU,OAAO,gBAAgB,GAAG,SAAS,MAAM,UAAU;AAAA;AAAA,MAE/F,MAAM;AAAA;AAER,SAAK,eAAe,YAAY;AAAA;AAAA,EAGlC,iBAAiB,QAAsB;AACrC,QAAI,OAAO,WAAW,GAAG;AACvB,kBAAY,OAAO,KAAI,YAAY,MAAM,SAAS;AAAA,WAC7C;AACL,kBAAY,OAAO;AAAA,WACd,YAAY;AAAA,QACf,SAAS,CAAC,EAAC,MAAM,QAAQ,KAAK,QAAW,OAAO,QAAW,UAAU;AAAA;AAAA;AAAA;AAAA,EAK3E,qBAAqB,YAA+B;AAClD,2BAAuB;AACvB,UAAM,OAAO;AACb,eAAW,CAAC,OAAO,QAAQ,gBAAgB,WAAW;AACpD,UAAI,gCAAgC,QAAQ;AAC1C,aAAK,KAAK;AAAA;AAAA;AAGd,gBAAY,OAAO,KAAI,YAAY,MAAM;AAAA;AAAA,6BAGhB,OAAqF;AAC9G,WAAQ,qBAAqB,IAAI,MAAM,WAAW,qBAAqB,SAAS;AAAA;AAAA,EAGlF,SAAS,OAAkF;AACzF,UAAM,WAAW,cAAc,MAAM,oBAAoB,MAAM,UAAU;AACzE,QAAI,CAAC,UAAU;AACb;AAAA;AAEF,UAAM,SAAS,MAAM,UAAU,eAAe,gBAAgB;AAC9D,UAAM,WAAW,uCAAuC,MAAM;AAC9D,UAAM,WAAW;AAAA,MACf,OAAO;AAAA,QACL;AAAA,UACE,UAAU;AAAA,UACV,OAAO,SAAS;AAAA,UAChB,WAAmC;AACjC,mBAAO,QAAQ,QAAQ,UAAU,UAAU,UAAU,oBACjD,cAAmD,UAAU,UAAU,UAAU;AAAA;AAAA;AAAA,QAGzF,EAAC,UAAU,qBAAqB,OAAO,MAAM,UAAU;AAAA,QACvD,EAAC,UAAU,YAAY,OAAO;AAAA,QAC9B,EAAC,UAAU,UAAU,OAAO;AAAA;AAAA;AAGhC,oBAAgB,IAAI,OAAO;AAE3B,QAAI,gCAAgC,QAAQ;AAC1C,kBAAY,KAAK,KAAK,KAAK;AAC3B,kBAAY,OAAO,KAAI,YAAY;AAAA;AAAA;AAAA,EAIvC,cAAoB;AAClB,oBAAgB;AAChB,gBAAY,OAAO,KAAI,YAAY,MAAM,MAAM;AAAA;AAAA,oCAGf,MAAsB;AACtD,QAAI,SAAS,cAAc,2BAA2B,qBAAqB;AACzE,aAAO;AAAA;AAET,QAAI,SAAS,cAAc,2BAA2B,kBAAkB;AACtE,aAAO;AAAA;AAET,QAAI,SAAS,cAAc,2BAA2B,mBAAmB;AACvE,aAAO;AAAA;AAET,QAAI,SAAS,cAAc,2BAA2B,+BAA+B;AACnF,aAAO;AAAA;AAET,QAAI,SAAS,cAAc,2BAA2B,iCAAiC;AACrF,aAAO;AAAA;AAET,WAAO;AAAA;AAAA,EAET,WAAiB;AACf,UAAM;AACN,SAAK,iBAAiB,CAAC;AAAA;AAAA;",
  "names": []
}
