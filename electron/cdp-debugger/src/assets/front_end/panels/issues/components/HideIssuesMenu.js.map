{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/issues/components/HideIssuesMenu.ts"],
  "sourcesContent": ["\n// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport hideIssuesMenuStyles from './hideIssuesMenu.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for the tooltip of the (3 dots) Hide Issues menu icon.\n  */\n  tooltipTitle: 'Hide issues',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/components/HideIssuesMenu.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface HiddenIssuesMenuData {\n  menuItemLabel: Common.UIString.LocalizedString;\n  menuItemAction: () => void;\n}\n\nexport class HideIssuesMenu extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-hide-issues-menu`;\n  readonly #shadow: ShadowRoot = this.attachShadow({mode: 'open'});\n  #menuItemLabel: Common.UIString.LocalizedString = Common.UIString.LocalizedEmptyString;\n  #menuItemAction: () => void = () => {};\n\n  set data(data: HiddenIssuesMenuData) {\n    this.#menuItemLabel = data.menuItemLabel;\n    this.#menuItemAction = data.menuItemAction;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [hideIssuesMenuStyles];\n  }\n\n  onMenuOpen(event: Event): void {\n    event.stopPropagation();\n    const contextMenu = new UI.ContextMenu.ContextMenu(event, {\n      useSoftMenu: true,\n      onSoftMenuClosed: (): void => {\n        this.classList.toggle('has-context-menu-opened', false);\n      },\n    });\n    contextMenu.headerSection().appendItem(this.#menuItemLabel, () => this.#menuItemAction());\n    void contextMenu.show();\n    this.classList.toggle('has-context-menu-opened', true);\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n      LitHtml.render(LitHtml.html`\n        <button class=\"hide-issues-menu-btn\" @click=${this.onMenuOpen.bind(this)} title=${i18nString(UIStrings.tooltipTitle)}>\n        <${IconButton.Icon.Icon.litTagName}\n          .data=${{ color: '', iconName: 'three_dots_menu_icon', height: '14px', width: '4px' } as IconButton.Icon.IconData}\n        >\n        </${IconButton.Icon.Icon.litTagName}>\n        </button>\n      `, this.#shadow, {host: this});\n    }\n  }\n\nComponentHelpers.CustomElements.defineComponent('devtools-hide-issues-menu', HideIssuesMenu);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-hide-issues-menu': HideIssuesMenu;\n  }\n}\n"],
  "mappings": "AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,cAAc;AAAA;AAGhB,MAAM,OAAO,KAAK,KAAK,kBAAkB,8CAA8C;AACvF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAOzD,oCAA6B,YAAY;AAAA,SAC9B,aAAa,QAAQ;AAAA,YACN,KAAK,aAAa,EAAC,MAAM;AAAA,mBACN,OAAO,SAAS;AAAA,oBACpC,MAAM;AAAA;AAAA,MAEhC,KAAK,MAA4B;AACnC,0BAAsB,KAAK;AAC3B,2BAAuB,KAAK;AAC5B;AAAA;AAAA,EAGF,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,EAGrC,WAAW,OAAoB;AAC7B,UAAM;AACN,UAAM,cAAc,IAAI,GAAG,YAAY,YAAY,OAAO;AAAA,MACxD,aAAa;AAAA,MACb,kBAAkB,MAAY;AAC5B,aAAK,UAAU,OAAO,2BAA2B;AAAA;AAAA;AAGrD,gBAAY,gBAAgB,WAAW,qBAAqB,MAAM;AAClE,SAAK,YAAY;AACjB,SAAK,UAAU,OAAO,2BAA2B;AAAA;AAAA,YAGnC;AAGZ,YAAQ,OAAO,QAAQ;AAAA,sDACyB,KAAK,WAAW,KAAK,eAAe,WAAW,UAAU;AAAA,WACpG,WAAW,KAAK,KAAK;AAAA,kBACd,EAAE,OAAO,IAAI,UAAU,wBAAwB,QAAQ,QAAQ,OAAO;AAAA;AAAA,YAE5E,WAAW,KAAK,KAAK;AAAA;AAAA,SAExB,cAAc,EAAC,MAAM;AAAA;AAAA;AAI9B,iBAAiB,eAAe,gBAAgB,6BAA6B;",
  "names": []
}
