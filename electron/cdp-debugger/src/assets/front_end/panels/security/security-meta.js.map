{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/security/security-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Security from './security.js';\n\nconst UIStrings = {\n  /**\n    *@description Title of the security panel\n    */\n  security: 'Security',\n  /**\n    *@description Command to open the security panel\n    */\n  showSecurity: 'Show Security',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/security/security-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSecurityModule: (typeof Security|undefined);\n\nasync function loadSecurityModule(): Promise<typeof Security> {\n  if (!loadedSecurityModule) {\n    loadedSecurityModule = await import('./security.js');\n  }\n  return loadedSecurityModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'security',\n  title: i18nLazyString(UIStrings.security),\n  commandPrompt: i18nLazyString(UIStrings.showSecurity),\n  order: 80,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Security = await loadSecurityModule();\n    return Security.SecurityPanel.SecurityPanel.instance();\n  },\n});\n"],
  "mappings": "AAIA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,UAAU;AAAA,EAIV,cAAc;AAAA;AAEhB,MAAM,OAAO,KAAK,KAAK,kBAAkB,oCAAoC;AAC7E,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,oCAA8D;AAC5D,MAAI,CAAC,sBAAsB;AACzB,2BAAuB,MAAM,OAAO;AAAA;AAEtC,SAAO;AAAA;AAGT,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,EACP,aAAa,GAAG,YAAY,gBAAgB;AAAA,QACtC,WAAW;AACf,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,cAAc,cAAc;AAAA;AAAA;",
  "names": []
}
