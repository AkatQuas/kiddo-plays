{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/layers/layers-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Layers from './layers.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the Layers tool\n  */\n  layers: 'Layers',\n  /**\n  *@description Command for showing the Layers tool\n  */\n  showLayers: 'Show Layers',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layers/layers-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLayersModule: (typeof Layers|undefined);\n\nasync function loadLayersModule(): Promise<typeof Layers> {\n  if (!loadedLayersModule) {\n    loadedLayersModule = await import('./layers.js');\n  }\n  return loadedLayersModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'layers',\n  title: i18nLazyString(UIStrings.layers),\n  commandPrompt: i18nLazyString(UIStrings.showLayers),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Layers = await loadLayersModule();\n    return Layers.LayersPanel.LayersPanel.instance();\n  },\n});\n"],
  "mappings": "AAIA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,QAAQ;AAAA,EAIR,YAAY;AAAA;AAEd,MAAM,OAAO,KAAK,KAAK,kBAAkB,gCAAgC;AACzE,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,kCAA0D;AACxD,MAAI,CAAC,oBAAoB;AACvB,yBAAqB,MAAM,OAAO;AAAA;AAEpC,SAAO;AAAA;AAGT,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,EACP,aAAa,GAAG,YAAY,gBAAgB;AAAA,QACtC,WAAW;AACf,UAAM,SAAS,MAAM;AACrB,WAAO,OAAO,YAAY,YAAY;AAAA;AAAA;",
  "names": []
}
