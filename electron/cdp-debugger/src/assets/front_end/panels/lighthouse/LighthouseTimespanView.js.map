{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/lighthouse/LighthouseTimespanView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {LighthouseController} from './LighthouseController.js';\nimport {Events} from './LighthouseController.js';\nimport lighthouseDialogStyles from './lighthouseDialog.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Header indicating that a Lighthouse timespan is starting. \"Timespan\" is a Lighthouse mode that analyzes user interactions over a period of time.\n   */\n  timespanStarting: 'Timespan starting\u2026',\n  /**\n   * @description Header indicating that a Lighthouse timespan has started. \"Timespan\" is a Lighthouse mode that analyzes user interactions over a period of time. \"interact with the page\" is a call to action for the user to interact with the web page.\n   */\n  timespanStarted: 'Timespan started, interact with the page',\n  /**\n   * @description Label for a button that ends a Lighthouse timespan. \"timespan\" is a Lighthouse mode that analyzes user interactions over a period of time.\n   */\n  endTimespan: 'End timespan',\n  /**\n   * @description Label for a button that cancels a Lighthouse timespan.\n   */\n  cancel: 'Cancel',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/LighthouseTimespanView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TimespanView extends UI.Dialog.Dialog {\n  private controller: LighthouseController;\n  private statusHeader: Element|null;\n  private endButton: HTMLButtonElement|null;\n\n  constructor(controller: LighthouseController) {\n    super();\n    this.controller = controller;\n    this.statusHeader = null;\n    this.endButton = null;\n    this.setDimmed(true);\n    this.setCloseOnEscape(false);\n    this.setOutsideClickCallback(event => event.consume(true));\n    this.render();\n  }\n\n  show(dialogRenderElement: Element): void {\n    this.reset();\n    super.show(dialogRenderElement);\n  }\n\n  reset(): void {\n    if (this.statusHeader && this.endButton) {\n      this.statusHeader.textContent = i18nString(UIStrings.timespanStarting);\n      this.endButton.disabled = true;\n    }\n  }\n\n  ready(): void {\n    if (this.statusHeader && this.endButton) {\n      this.statusHeader.textContent = i18nString(UIStrings.timespanStarted);\n      this.endButton.disabled = false;\n      this.endButton.focus();\n    }\n  }\n\n  render(): void {\n    const dialogRoot = UI.Utils.createShadowRootWithCoreStyles(\n        this.contentElement, {cssFile: [lighthouseDialogStyles], delegatesFocus: undefined});\n\n    this.endButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.endTimespan),\n        this.endTimespan.bind(this),\n        undefined,\n        true,\n    );\n    const cancelButton = UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), this.cancel.bind(this));\n    const fragment = UI.Fragment.Fragment.build`\n  <div class=\"lighthouse-view vbox\">\n  <h2 $=\"status-header\"></h2>\n  <div class=\"lighthouse-action-buttons hbox\">\n  ${cancelButton}\n  ${this.endButton}\n  </div>\n  </div>\n  `;\n\n    this.statusHeader = fragment.$('status-header');\n    dialogRoot.appendChild(fragment.element());\n\n    this.setSizeBehavior(UI.GlassPane.SizeBehavior.SetExactWidthMaxHeight);\n    this.setMaxContentSize(new UI.Geometry.Size(500, 400));\n    this.reset();\n  }\n\n  private endTimespan(): void {\n    this.controller.dispatchEventToListeners(Events.RequestLighthouseTimespanEnd, false);\n  }\n\n  private cancel(): void {\n    this.controller.dispatchEventToListeners(Events.RequestLighthouseCancel);\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAGA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,kBAAkB;AAAA,EAIlB,iBAAiB;AAAA,EAIjB,aAAa;AAAA,EAIb,QAAQ;AAAA;AAGV,MAAM,OAAO,KAAK,KAAK,kBAAkB,+CAA+C;AACxF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,kCAA2B,GAAG,OAAO,OAAO;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EAER,YAAY,YAAkC;AAC5C;AACA,SAAK,aAAa;AAClB,SAAK,eAAe;AACpB,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,iBAAiB;AACtB,SAAK,wBAAwB,WAAS,MAAM,QAAQ;AACpD,SAAK;AAAA;AAAA,EAGP,KAAK,qBAAoC;AACvC,SAAK;AACL,UAAM,KAAK;AAAA;AAAA,EAGb,QAAc;AACZ,QAAI,KAAK,gBAAgB,KAAK,WAAW;AACvC,WAAK,aAAa,cAAc,WAAW,UAAU;AACrD,WAAK,UAAU,WAAW;AAAA;AAAA;AAAA,EAI9B,QAAc;AACZ,QAAI,KAAK,gBAAgB,KAAK,WAAW;AACvC,WAAK,aAAa,cAAc,WAAW,UAAU;AACrD,WAAK,UAAU,WAAW;AAC1B,WAAK,UAAU;AAAA;AAAA;AAAA,EAInB,SAAe;AACb,UAAM,aAAa,GAAG,MAAM,+BACxB,KAAK,gBAAgB,EAAC,SAAS,CAAC,yBAAyB,gBAAgB;AAE7E,SAAK,YAAY,GAAG,QAAQ,iBACxB,WAAW,UAAU,cACrB,KAAK,YAAY,KAAK,OACtB,QACA;AAEJ,UAAM,eAAe,GAAG,QAAQ,iBAAiB,WAAW,UAAU,SAAS,KAAK,OAAO,KAAK;AAChG,UAAM,WAAW,GAAG,SAAS,SAAS;AAAA;AAAA;AAAA;AAAA,IAItC;AAAA,IACA,KAAK;AAAA;AAAA;AAAA;AAKL,SAAK,eAAe,SAAS,EAAE;AAC/B,eAAW,YAAY,SAAS;AAEhC,SAAK,gBAAgB,GAAG,UAAU,aAAa;AAC/C,SAAK,kBAAkB,IAAI,GAAG,SAAS,KAAK,KAAK;AACjD,SAAK;AAAA;AAAA,EAGC,cAAoB;AAC1B,SAAK,WAAW,yBAAyB,OAAO,8BAA8B;AAAA;AAAA,EAGxE,SAAe;AACrB,SAAK,WAAW,yBAAyB,OAAO;AAAA;AAAA;",
  "names": []
}
