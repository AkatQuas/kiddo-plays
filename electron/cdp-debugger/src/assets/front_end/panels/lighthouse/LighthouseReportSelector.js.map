{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/lighthouse/LighthouseReportSelector.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as ReportRenderer from './LighthouseReporterTypes.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of combo box in audits report selector\n  */\n  reports: 'Reports',\n  /**\n  *@description New report item label in Lighthouse Report Selector\n  */\n  newReport: '(new report)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/LighthouseReportSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ReportSelector {\n  private readonly renderNewLighthouseView: () => void;\n  private newLighthouseItem: HTMLOptionElement;\n  private readonly comboBoxInternal: UI.Toolbar.ToolbarComboBox;\n  private readonly itemByOptionElement: Map<Element, Item>;\n\n  constructor(renderNewLighthouseView: () => void) {\n    this.renderNewLighthouseView = renderNewLighthouseView;\n    this.newLighthouseItem = document.createElement('option');\n    this.comboBoxInternal = new UI.Toolbar.ToolbarComboBox(\n        this.handleChange.bind(this), i18nString(UIStrings.reports), 'lighthouse-report');\n    this.comboBoxInternal.setMaxWidth(180);\n    this.comboBoxInternal.setMinWidth(140);\n    this.itemByOptionElement = new Map();\n    this.setEmptyState();\n  }\n\n  private setEmptyState(): void {\n    this.comboBoxInternal.selectElement().removeChildren();\n\n    this.comboBoxInternal.setEnabled(false);\n    this.newLighthouseItem = document.createElement('option');\n    this.newLighthouseItem.label = i18nString(UIStrings.newReport);\n    this.comboBoxInternal.selectElement().appendChild(this.newLighthouseItem);\n    this.comboBoxInternal.select(this.newLighthouseItem);\n  }\n\n  private handleChange(_event: Event): void {\n    const item = this.selectedItem();\n    if (item) {\n      item.select();\n    } else {\n      this.renderNewLighthouseView();\n    }\n  }\n\n  private selectedItem(): Item {\n    const option = this.comboBoxInternal.selectedOption();\n    return this.itemByOptionElement.get(option as Element) as Item;\n  }\n\n  hasCurrentSelection(): boolean {\n    return Boolean(this.selectedItem());\n  }\n\n  hasItems(): boolean {\n    return this.itemByOptionElement.size > 0;\n  }\n\n  comboBox(): UI.Toolbar.ToolbarComboBox {\n    return this.comboBoxInternal;\n  }\n\n  prepend(item: Item): void {\n    const optionEl = item.optionElement();\n    const selectEl = this.comboBoxInternal.selectElement();\n\n    this.itemByOptionElement.set(optionEl, item);\n    selectEl.insertBefore(optionEl, selectEl.firstElementChild);\n    this.comboBoxInternal.setEnabled(true);\n    this.comboBoxInternal.select(optionEl);\n    item.select();\n  }\n\n  clearAll(): void {\n    for (const elem of this.comboBoxInternal.options()) {\n      if (elem === this.newLighthouseItem) {\n        continue;\n      }\n\n      this.itemByOptionElement.get(elem)?.delete();\n      this.itemByOptionElement.delete(elem);\n    }\n\n    this.setEmptyState();\n  }\n\n  selectNewReport(): void {\n    this.comboBoxInternal.select(this.newLighthouseItem);\n  }\n}\n\nexport class Item {\n  private readonly lighthouseResult: ReportRenderer.ReportJSON;\n  private readonly renderReport: () => void;\n  private readonly showLandingCallback: () => void;\n  private readonly element: HTMLOptionElement;\n\n  constructor(lighthouseResult: ReportRenderer.ReportJSON, renderReport: () => void, showLandingCallback: () => void) {\n    this.lighthouseResult = lighthouseResult;\n    this.renderReport = renderReport;\n    this.showLandingCallback = showLandingCallback;\n\n    const url = new Common.ParsedURL.ParsedURL(lighthouseResult.finalUrl);\n    const timestamp = lighthouseResult.fetchTime;\n    this.element = document.createElement('option');\n    this.element.label = `${new Date(timestamp).toLocaleTimeString()} - ${url.domain()}`;\n  }\n\n  select(): void {\n    this.renderReport();\n  }\n\n  optionElement(): Element {\n    return this.element;\n  }\n\n  delete(): void {\n    if (this.element) {\n      this.element.remove();\n    }\n    this.showLandingCallback();\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,SAAS;AAAA,EAIT,WAAW;AAAA;AAEb,MAAM,OAAO,KAAK,KAAK,kBAAkB,iDAAiD;AAC1F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AACzD,4BAAqB;AAAA,EACT;AAAA,EACT;AAAA,EACS;AAAA,EACA;AAAA,EAEjB,YAAY,yBAAqC;AAC/C,SAAK,0BAA0B;AAC/B,SAAK,oBAAoB,SAAS,cAAc;AAChD,SAAK,mBAAmB,IAAI,GAAG,QAAQ,gBACnC,KAAK,aAAa,KAAK,OAAO,WAAW,UAAU,UAAU;AACjE,SAAK,iBAAiB,YAAY;AAClC,SAAK,iBAAiB,YAAY;AAClC,SAAK,sBAAsB,oBAAI;AAC/B,SAAK;AAAA;AAAA,EAGC,gBAAsB;AAC5B,SAAK,iBAAiB,gBAAgB;AAEtC,SAAK,iBAAiB,WAAW;AACjC,SAAK,oBAAoB,SAAS,cAAc;AAChD,SAAK,kBAAkB,QAAQ,WAAW,UAAU;AACpD,SAAK,iBAAiB,gBAAgB,YAAY,KAAK;AACvD,SAAK,iBAAiB,OAAO,KAAK;AAAA;AAAA,EAG5B,aAAa,QAAqB;AACxC,UAAM,OAAO,KAAK;AAClB,QAAI,MAAM;AACR,WAAK;AAAA,WACA;AACL,WAAK;AAAA;AAAA;AAAA,EAID,eAAqB;AAC3B,UAAM,SAAS,KAAK,iBAAiB;AACrC,WAAO,KAAK,oBAAoB,IAAI;AAAA;AAAA,EAGtC,sBAA+B;AAC7B,WAAO,QAAQ,KAAK;AAAA;AAAA,EAGtB,WAAoB;AAClB,WAAO,KAAK,oBAAoB,OAAO;AAAA;AAAA,EAGzC,WAAuC;AACrC,WAAO,KAAK;AAAA;AAAA,EAGd,QAAQ,MAAkB;AACxB,UAAM,WAAW,KAAK;AACtB,UAAM,WAAW,KAAK,iBAAiB;AAEvC,SAAK,oBAAoB,IAAI,UAAU;AACvC,aAAS,aAAa,UAAU,SAAS;AACzC,SAAK,iBAAiB,WAAW;AACjC,SAAK,iBAAiB,OAAO;AAC7B,SAAK;AAAA;AAAA,EAGP,WAAiB;AACf,eAAW,QAAQ,KAAK,iBAAiB,WAAW;AAClD,UAAI,SAAS,KAAK,mBAAmB;AACnC;AAAA;AAGF,WAAK,oBAAoB,IAAI,OAAO;AACpC,WAAK,oBAAoB,OAAO;AAAA;AAGlC,SAAK;AAAA;AAAA,EAGP,kBAAwB;AACtB,SAAK,iBAAiB,OAAO,KAAK;AAAA;AAAA;AAI/B,kBAAW;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YAAY,kBAA6C,cAA0B,qBAAiC;AAClH,SAAK,mBAAmB;AACxB,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAE3B,UAAM,MAAM,IAAI,OAAO,UAAU,UAAU,iBAAiB;AAC5D,UAAM,YAAY,iBAAiB;AACnC,SAAK,UAAU,SAAS,cAAc;AACtC,SAAK,QAAQ,QAAQ,GAAG,IAAI,KAAK,WAAW,0BAA0B,IAAI;AAAA;AAAA,EAG5E,SAAe;AACb,SAAK;AAAA;AAAA,EAGP,gBAAyB;AACvB,WAAO,KAAK;AAAA;AAAA,EAGd,SAAe;AACb,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ;AAAA;AAEf,SAAK;AAAA;AAAA;",
  "names": []
}
