{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/ReportingApiView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ApplicationComponents from './components/components.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ReportingApiReportsView} from './ReportingApiReportsView.js';\n\nexport class ReportingApiView extends UI.SplitWidget.SplitWidget {\n  private readonly endpointsGrid = new ApplicationComponents.EndpointsGrid.EndpointsGrid();\n  private endpoints: Map<string, Protocol.Network.ReportingApiEndpoint[]>;\n\n  constructor() {\n    super(/* isVertical: */ false, /* secondIsSidebar: */ true);\n    this.endpoints = new Map();\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    const networkManager = mainTarget && mainTarget.model(SDK.NetworkManager.NetworkManager);\n    if (networkManager) {\n      networkManager.addEventListener(\n          SDK.NetworkManager.Events.ReportingApiEndpointsChangedForOrigin,\n          event => this.onEndpointsChangedForOrigin(event.data), this);\n\n      const reportingApiReportsView = new ReportingApiReportsView(networkManager);\n      const reportingApiEndpointsView = new UI.Widget.VBox();\n      reportingApiEndpointsView.setMinimumSize(0, 40);\n      reportingApiEndpointsView.contentElement.appendChild(this.endpointsGrid);\n      this.setMainWidget(reportingApiReportsView);\n      this.setSidebarWidget(reportingApiEndpointsView);\n      void networkManager.enableReportingApi();\n    }\n  }\n\n  private onEndpointsChangedForOrigin(data: Protocol.Network.ReportingApiEndpointsChangedForOriginEvent): void {\n    this.endpoints.set(data.origin, data.endpoints);\n    this.endpointsGrid.data = {endpoints: this.endpoints};\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAGA;AAEO,sCAA+B,GAAG,YAAY,YAAY;AAAA,EAC9C,gBAAgB,IAAI,sBAAsB,cAAc;AAAA,EACjE;AAAA,EAER,cAAc;AACZ,UAAwB,OAA8B;AACtD,SAAK,YAAY,oBAAI;AACrB,UAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,UAAM,iBAAiB,cAAc,WAAW,MAAM,IAAI,eAAe;AACzE,QAAI,gBAAgB;AAClB,qBAAe,iBACX,IAAI,eAAe,OAAO,uCAC1B,WAAS,KAAK,4BAA4B,MAAM,OAAO;AAE3D,YAAM,0BAA0B,IAAI,wBAAwB;AAC5D,YAAM,4BAA4B,IAAI,GAAG,OAAO;AAChD,gCAA0B,eAAe,GAAG;AAC5C,gCAA0B,eAAe,YAAY,KAAK;AAC1D,WAAK,cAAc;AACnB,WAAK,iBAAiB;AACtB,WAAK,eAAe;AAAA;AAAA;AAAA,EAIhB,4BAA4B,MAAyE;AAC3G,SAAK,UAAU,IAAI,KAAK,QAAQ,KAAK;AACrC,SAAK,cAAc,OAAO,EAAC,WAAW,KAAK;AAAA;AAAA;",
  "names": []
}
