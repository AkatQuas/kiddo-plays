{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/application-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Resources from './application.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  application: 'Application',\n  /**\n  *@description Command for showing the 'Application' tool\n  */\n  showApplication: 'Show Application',\n  /**\n  *@description A tag of Application Panel that can be searched in the command menu\n  */\n  pwa: 'pwa',\n  /**\n  *@description Text of button in Clear Storage View of the Application panel\n  */\n  clearSiteData: 'Clear site data',\n  /**\n  *@description Title of an action that clears all site data including 3rd party cookies\n  */\n  clearSiteDataIncludingThirdparty: 'Clear site data (including third-party cookies)',\n  /**\n  *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n  */\n  startRecordingEvents: 'Start recording events',\n  /**\n  *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n  */\n  stopRecordingEvents: 'Stop recording events',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/application-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedResourcesModule: (typeof Resources|undefined);\n\nasync function loadResourcesModule(): Promise<typeof Resources> {\n  if (!loadedResourcesModule) {\n    loadedResourcesModule = await import('./application.js');\n  }\n  return loadedResourcesModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (elementsModule: typeof Resources) => T[]): T[] {\n  if (loadedResourcesModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedResourcesModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'resources',\n  title: i18nLazyString(UIStrings.application),\n  commandPrompt: i18nLazyString(UIStrings.showApplication),\n  order: 70,\n  async loadView() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourcesPanel.instance();\n  },\n  tags: [i18nLazyString(UIStrings.pwa)],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear',\n  title: i18nLazyString(UIStrings.clearSiteData),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.StorageView.ActionDelegate.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear-incl-third-party-cookies',\n  title: i18nLazyString(UIStrings.clearSiteDataIncludingThirdparty),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.StorageView.ActionDelegate.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'background-service.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Resources => [Resources.BackgroundServiceView.BackgroundServiceView]);\n  },\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.BackgroundServiceView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.BACKGROUND_SERVICES,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingEvents),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingEvents),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.Resource.Resource,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourceRevealer.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.ResourceTreeModel.ResourceTreeFrame,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.FrameDetailsRevealer.instance();\n  },\n});\n"],
  "mappings": "AAIA;AACA;AACA;AAIA;AACA,MAAM,YAAY;AAAA,EAIhB,aAAa;AAAA,EAIb,iBAAiB;AAAA,EAIjB,KAAK;AAAA,EAIL,eAAe;AAAA,EAIf,kCAAkC;AAAA,EAIlC,sBAAsB;AAAA,EAItB,qBAAqB;AAAA;AAEvB,MAAM,OAAO,KAAK,KAAK,kBAAkB,0CAA0C;AACnF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAClF,IAAI;AAEJ,qCAAgE;AAC9D,MAAI,CAAC,uBAAuB;AAC1B,4BAAwB,MAAM,OAAO;AAAA;AAEvC,SAAO;AAAA;AAGT,mCAAgD,kBAAkE;AAChH,MAAI,0BAA0B,QAAW;AACvC,WAAO;AAAA;AAET,SAAO,iBAAiB;AAAA;AAG1B,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,QACD,WAAW;AACf,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,eAAe,eAAe;AAAA;AAAA,EAEjD,MAAM,CAAC,eAAe,UAAU;AAAA;AAGlC,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,UAAU;AAAA,EACV,OAAO,eAAe,UAAU;AAAA,QAC1B,qBAAqB;AACzB,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,YAAY,eAAe;AAAA;AAAA;AAIhD,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,UAAU;AAAA,EACV,OAAO,eAAe,UAAU;AAAA,QAC1B,qBAAqB;AACzB,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,YAAY,eAAe;AAAA;AAAA;AAIhD,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU;AAAA,EACV,WAAW,GAAG,mBAAmB,UAAU;AAAA,EAC3C,YAAY;AAAA,EACZ,kBAAkB,GAAG,mBAAmB,UAAU;AAAA,EAClD,oBAAoB;AAAA,EACpB,eAAe;AACb,WAAO,0BAA0B,eAAa,CAAC,UAAU,sBAAsB;AAAA;AAAA,QAE3E,qBAAqB;AACzB,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,sBAAsB,eAAe;AAAA;AAAA,EAExD,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,SAAS;AAAA,IACP;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA,IAElC;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA;AAAA,EAGpC,UAAU;AAAA,IACR;AAAA,MACE,UAAU,GAAG,mBAAmB,UAAU;AAAA,MAC1C,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,UAAU,GAAG,mBAAmB,UAAU;AAAA,MAC1C,UAAU;AAAA;AAAA;AAAA;AAKhB,OAAO,SAAS,iBAAiB;AAAA,EAC/B,eAAe;AACb,WAAO;AAAA,MACL,IAAI,SAAS;AAAA;AAAA;AAAA,EAGjB,aAAa,OAAO,SAAS,oBAAoB;AAAA,QAC3C,eAAe;AACnB,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,eAAe,iBAAiB;AAAA;AAAA;AAIrD,OAAO,SAAS,iBAAiB;AAAA,EAC/B,eAAe;AACb,WAAO;AAAA,MACL,IAAI,kBAAkB;AAAA;AAAA;AAAA,EAG1B,aAAa,OAAO,SAAS,oBAAoB;AAAA,QAC3C,eAAe;AACnB,UAAM,YAAY,MAAM;AACxB,WAAO,UAAU,eAAe,qBAAqB;AAAA;AAAA;",
  "names": []
}
