{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/OpenedWindowDetailsView.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport frameDetailsReportViewStyles from './frameDetailsReportView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Timeline indicating that input has happened recently\n  */\n  yes: 'Yes',\n  /**\n  *@description Text in Timeline indicating that input has not happened recently\n  */\n  no: 'No',\n  /**\n  *@description Title for a link to the Elements panel\n  */\n  clickToRevealInElementsPanel: 'Click to reveal in Elements panel',\n  /**\n  *@description Name of a network resource type\n  */\n  document: 'Document',\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n  /**\n  *@description Title of the 'Security' tool\n  */\n  security: 'Security',\n  /**\n  *@description Label for link to Opener Frame in Detail View for Opened Window\n  */\n  openerFrame: 'Opener Frame',\n  /**\n  *@description Label in opened window's details view whether window has access to its opener\n  */\n  accessToOpener: 'Access to opener',\n  /**\n  *@description Description for the 'Access to Opener' field\n  */\n  showsWhetherTheOpenedWindowIs: 'Shows whether the opened window is able to access its opener and vice versa',\n  /**\n  *@description Text in Frames View of the Application panel\n  */\n  windowWithoutTitle: 'Window without title',\n  /**\n  *@description Label suffix in the Application Panel Frames section for windows which are already closed\n  */\n  closed: 'closed',\n  /**\n  *@description Default name for worker\n  */\n  worker: 'worker',\n  /**\n  *@description Text that refers to some types\n  */\n  type: 'Type',\n  /**\n  *@description Section header in the Frame Details view\n  */\n  securityIsolation: 'Security & Isolation',\n  /**\n  *@description Row title in the Frame Details view\n  */\n  crossoriginEmbedderPolicy: 'Cross-Origin Embedder Policy',\n  /**\n  *@description Label for worker type: web worker\n  */\n  webWorker: 'Web Worker',\n  /**\n  *@description Text for an unspecified service worker response source\n  */\n  unknown: 'Unknown',\n  /**\n  *@description This label specifies the server endpoints to which the server is reporting errors\n  *and warnings through the Report-to API. Following this label will be the URL of the server.\n  */\n  reportingTo: 'reporting to',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/OpenedWindowDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst booleanToYesNo = (b: boolean): Common.UIString.LocalizedString =>\n    b ? i18nString(UIStrings.yes) : i18nString(UIStrings.no);\n\nfunction linkifyIcon(iconType: string, title: string, eventHandler: () => (void|Promise<void>)): Element {\n  const icon = UI.Icon.Icon.create(iconType, 'icon-link devtools-link');\n  const span = document.createElement('span');\n  UI.Tooltip.Tooltip.install(span, title);\n  span.classList.add('devtools-link');\n  span.tabIndex = 0;\n  span.appendChild(icon);\n  span.addEventListener('click', event => {\n    event.consume(true);\n    void eventHandler();\n  });\n  span.addEventListener('keydown', event => {\n    if (event.key === 'Enter') {\n      event.consume(true);\n      void eventHandler();\n    }\n  });\n  return span;\n}\n\nasync function maybeCreateLinkToElementsPanel(opener: Protocol.Page.FrameId|SDK.ResourceTreeModel.ResourceTreeFrame|\n                                              undefined): Promise<Element|null> {\n  let openerFrame: SDK.ResourceTreeModel.ResourceTreeFrame|(SDK.ResourceTreeModel.ResourceTreeFrame | null)|null = null;\n  if (opener instanceof SDK.ResourceTreeModel.ResourceTreeFrame) {\n    openerFrame = opener;\n  } else if (opener) {\n    openerFrame = SDK.FrameManager.FrameManager.instance().getFrame(opener);\n  }\n  if (!openerFrame) {\n    return null;\n  }\n  const linkTargetDOMNode = await openerFrame.getOwnerDOMNodeOrDocument();\n  if (!linkTargetDOMNode) {\n    return null;\n  }\n  const linkElement = linkifyIcon(\n      'mediumicon-elements-panel', i18nString(UIStrings.clickToRevealInElementsPanel),\n      () => Common.Revealer.reveal(linkTargetDOMNode));\n  const label = document.createElement('span');\n  label.textContent = `<${linkTargetDOMNode.nodeName().toLocaleLowerCase()}>`;\n  linkElement.insertBefore(label, linkElement.firstChild);\n  linkElement.addEventListener('mouseenter', () => {\n    if (openerFrame) {\n      void openerFrame.highlight();\n    }\n  });\n  linkElement.addEventListener('mouseleave', () => {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  });\n  return linkElement;\n}\n\nexport class OpenedWindowDetailsView extends UI.ThrottledWidget.ThrottledWidget {\n  private targetInfo: Protocol.Target.TargetInfo;\n  private isWindowClosed: boolean;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly documentSection: UI.ReportView.Section;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private URLFieldValue: HTMLElement;\n  private readonly securitySection: UI.ReportView.Section;\n  private readonly openerElementField: HTMLElement;\n  private hasDOMAccessValue: HTMLElement;\n\n  constructor(targetInfo: Protocol.Target.TargetInfo, isWindowClosed: boolean) {\n    super();\n    this.targetInfo = targetInfo;\n    this.isWindowClosed = isWindowClosed;\n\n    this.contentElement.classList.add('frame-details-container');\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(this.buildTitle());\n\n    this.reportView.show(this.contentElement);\n    this.reportView.element.classList.add('frame-details-report-container');\n\n    this.documentSection = this.reportView.appendSection(i18nString(UIStrings.document));\n    this.URLFieldValue = this.documentSection.appendField(i18nString(UIStrings.url));\n\n    this.securitySection = this.reportView.appendSection(i18nString(UIStrings.security));\n    this.openerElementField = this.securitySection.appendField(i18nString(UIStrings.openerFrame));\n    this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), false);\n    this.hasDOMAccessValue = this.securitySection.appendField(i18nString(UIStrings.accessToOpener));\n    UI.Tooltip.Tooltip.install(this.hasDOMAccessValue, i18nString(UIStrings.showsWhetherTheOpenedWindowIs));\n    this.update();\n  }\n\n  async doUpdate(): Promise<void> {\n    this.reportView.setTitle(this.buildTitle());\n    this.URLFieldValue.textContent = this.targetInfo.url;\n    this.hasDOMAccessValue.textContent = booleanToYesNo(this.targetInfo.canAccessOpener);\n    void this.maybeDisplayOpenerFrame();\n  }\n\n  async maybeDisplayOpenerFrame(): Promise<void> {\n    this.openerElementField.removeChildren();\n    const linkElement = await maybeCreateLinkToElementsPanel(this.targetInfo.openerFrameId);\n    if (linkElement) {\n      this.openerElementField.append(linkElement);\n      this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), true);\n      return;\n    }\n    this.securitySection.setFieldVisible(i18nString(UIStrings.openerFrame), false);\n  }\n\n  buildTitle(): string {\n    let title = this.targetInfo.title || i18nString(UIStrings.windowWithoutTitle);\n    if (this.isWindowClosed) {\n      title += ` (${i18nString(UIStrings.closed)})`;\n    }\n    return title;\n  }\n\n  setIsWindowClosed(isWindowClosed: boolean): void {\n    this.isWindowClosed = isWindowClosed;\n  }\n\n  setTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this.targetInfo = targetInfo;\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.reportView.registerCSSFiles([frameDetailsReportViewStyles]);\n    this.registerCSSFiles([frameDetailsReportViewStyles]);\n  }\n}\n\nexport class WorkerDetailsView extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly targetInfo: Protocol.Target.TargetInfo;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly documentSection: UI.ReportView.Section;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private readonly URLFieldValue: HTMLElement;\n  private readonly isolationSection: UI.ReportView.Section;\n  private readonly coepPolicy: HTMLElement;\n\n  constructor(targetInfo: Protocol.Target.TargetInfo) {\n    super();\n    this.targetInfo = targetInfo;\n\n    this.contentElement.classList.add('frame-details-container');\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView =\n        new UI.ReportView.ReportView(this.targetInfo.title || this.targetInfo.url || i18nString(UIStrings.worker));\n\n    this.reportView.show(this.contentElement);\n    this.reportView.element.classList.add('frame-details-report-container');\n\n    this.documentSection = this.reportView.appendSection(i18nString(UIStrings.document));\n    this.URLFieldValue = this.documentSection.appendField(i18nString(UIStrings.url));\n    this.URLFieldValue.textContent = this.targetInfo.url;\n    const workerType = this.documentSection.appendField(i18nString(UIStrings.type));\n    workerType.textContent = this.workerTypeToString(this.targetInfo.type);\n\n    this.isolationSection = this.reportView.appendSection(i18nString(UIStrings.securityIsolation));\n    this.coepPolicy = this.isolationSection.appendField(i18nString(UIStrings.crossoriginEmbedderPolicy));\n    this.update();\n  }\n\n  workerTypeToString(type: string): Common.UIString.LocalizedString {\n    if (type === 'worker') {\n      return i18nString(UIStrings.webWorker);\n    }\n    if (type === 'service_worker') {\n      return i18n.i18n.lockedString('Service Worker');\n    }\n    return i18nString(UIStrings.unknown);\n  }\n\n  private async updateCoopCoepStatus(): Promise<void> {\n    const target = SDK.TargetManager.TargetManager.instance().targetById(this.targetInfo.targetId);\n    if (!target) {\n      return;\n    }\n    const model = target.model(SDK.NetworkManager.NetworkManager);\n    const info = model && await model.getSecurityIsolationStatus(null);\n    if (!info) {\n      return;\n    }\n    const coepIsEnabled =\n        (value: Protocol.Network.CrossOriginEmbedderPolicyValue|Protocol.Network.CrossOriginOpenerPolicyValue):\n            boolean => value !== Protocol.Network.CrossOriginEmbedderPolicyValue.None;\n    this.fillCrossOriginPolicy(this.coepPolicy, coepIsEnabled, info.coep);\n  }\n\n  private fillCrossOriginPolicy(\n      field: HTMLElement,\n      isEnabled: (arg0: (Protocol.Network.CrossOriginEmbedderPolicyValue|\n                         Protocol.Network.CrossOriginOpenerPolicyValue)) => boolean,\n      info: Protocol.Network.CrossOriginEmbedderPolicyStatus|Protocol.Network.CrossOriginOpenerPolicyStatus|null|\n      undefined): void {\n    if (!info) {\n      field.textContent = '';\n      return;\n    }\n    const enabled = isEnabled(info.value);\n    field.textContent = enabled ? info.value : info.reportOnlyValue;\n    if (!enabled && isEnabled(info.reportOnlyValue)) {\n      const reportOnly = document.createElement('span');\n      reportOnly.classList.add('inline-comment');\n      reportOnly.textContent = 'report-only';\n      field.appendChild(reportOnly);\n    }\n    const endpoint = enabled ? info.reportingEndpoint : info.reportOnlyReportingEndpoint;\n    if (endpoint) {\n      const reportingEndpointPrefix = field.createChild('span', 'inline-name');\n      reportingEndpointPrefix.textContent = i18nString(UIStrings.reportingTo);\n      const reportingEndpointName = field.createChild('span');\n      reportingEndpointName.textContent = endpoint;\n    }\n  }\n\n  async doUpdate(): Promise<void> {\n    await this.updateCoopCoepStatus();\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.reportView.registerCSSFiles([frameDetailsReportViewStyles]);\n    this.registerCSSFiles([frameDetailsReportViewStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
