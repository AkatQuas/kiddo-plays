{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/StorageItemsView.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to refresh the page\n  */\n  refresh: 'Refresh',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear All',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n  */\n  deleteSelected: 'Delete Selected',\n  /**\n   *@description Text that informs screen reader users that the storage table has been refreshed\n   */\n  refreshedStatus: 'Table refreshed',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class StorageItemsView extends UI.Widget.VBox {\n  private filterRegex: RegExp|null;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly filterItem: UI.Toolbar.ToolbarInput;\n  private readonly deleteAllButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n\n  constructor(_title: string, _filterName: string) {\n    super(false);\n    this.filterRegex = null;\n\n    this.refreshButton = this.addButton(i18nString(UIStrings.refresh), 'largeicon-refresh', () => {\n      this.refreshItems();\n      UI.ARIAUtils.alert(i18nString(UIStrings.refreshedStatus));\n    });\n\n    this.mainToolbar = new UI.Toolbar.Toolbar('top-resources-toolbar', this.element);\n\n    this.filterItem = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.filter), '', 0.4);\n    this.filterItem.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.filterChanged, this);\n\n    const toolbarSeparator = new UI.Toolbar.ToolbarSeparator();\n    this.deleteAllButton = this.addButton(i18nString(UIStrings.clearAll), 'largeicon-clear', this.deleteAllItems);\n    this.deleteSelectedButton =\n        this.addButton(i18nString(UIStrings.deleteSelected), 'largeicon-delete', this.deleteSelectedItem);\n    this.deleteAllButton.element.id = 'storage-items-delete-all';\n\n    const toolbarItems =\n        [this.refreshButton, this.filterItem, toolbarSeparator, this.deleteAllButton, this.deleteSelectedButton];\n    for (const item of toolbarItems) {\n      this.mainToolbar.appendToolbarItem(item);\n    }\n  }\n\n  setDeleteAllTitle(title: string): void {\n    this.deleteAllButton.setTitle(title);\n  }\n\n  setDeleteAllGlyph(glyph: string): void {\n    this.deleteAllButton.setGlyph(glyph);\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.mainToolbar.appendToolbarItem(item);\n  }\n\n  private addButton(label: string, glyph: string, callback: (arg0: Common.EventTarget.EventTargetEvent<Event>) => void):\n      UI.Toolbar.ToolbarButton {\n    const button = new UI.Toolbar.ToolbarButton(label, glyph);\n    button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, callback, this);\n    return button;\n  }\n\n  private filterChanged({data: text}: Common.EventTarget.EventTargetEvent<string|null>): void {\n    this.filterRegex = text ? new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i') : null;\n    this.refreshItems();\n  }\n\n  filter<T>(items: T[], keyFunction: (arg0: T) => string): T[] {\n    if (this.filterRegex) {\n      const regExp = this.filterRegex;\n      return items.filter(item => regExp.test(keyFunction(item)));\n    }\n    return items;\n  }\n\n  hasFilter(): boolean {\n    return Boolean(this.filterRegex);\n  }\n\n  wasShown(): void {\n    this.refreshItems();\n  }\n\n  setCanDeleteAll(enabled: boolean): void {\n    this.deleteAllButton.setEnabled(enabled);\n  }\n\n  setCanDeleteSelected(enabled: boolean): void {\n    this.deleteSelectedButton.setEnabled(enabled);\n  }\n\n  setCanRefresh(enabled: boolean): void {\n    this.refreshButton.setEnabled(enabled);\n  }\n\n  setCanFilter(enabled: boolean): void {\n    this.filterItem.setEnabled(enabled);\n  }\n\n  deleteAllItems(): void {\n  }\n\n  deleteSelectedItem(): void {\n  }\n\n  refreshItems(): void {\n  }\n}\n"],
  "mappings": "AAKA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,SAAS;AAAA,EAIT,QAAQ;AAAA,EAIR,UAAU;AAAA,EAIV,gBAAgB;AAAA,EAIhB,iBAAiB;AAAA;AAEnB,MAAM,OAAO,KAAK,KAAK,kBAAkB,0CAA0C;AACnF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AACzD,sCAA+B,GAAG,OAAO,KAAK;AAAA,EAC3C;AAAA,EACS;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YAAY,QAAgB,aAAqB;AAC/C,UAAM;AACN,SAAK,cAAc;AAEnB,SAAK,gBAAgB,KAAK,UAAU,WAAW,UAAU,UAAU,qBAAqB,MAAM;AAC5F,WAAK;AACL,SAAG,UAAU,MAAM,WAAW,UAAU;AAAA;AAG1C,SAAK,cAAc,IAAI,GAAG,QAAQ,QAAQ,yBAAyB,KAAK;AAExE,SAAK,aAAa,IAAI,GAAG,QAAQ,aAAa,WAAW,UAAU,SAAS,IAAI;AAChF,SAAK,WAAW,iBAAiB,GAAG,QAAQ,aAAa,MAAM,aAAa,KAAK,eAAe;AAEhG,UAAM,mBAAmB,IAAI,GAAG,QAAQ;AACxC,SAAK,kBAAkB,KAAK,UAAU,WAAW,UAAU,WAAW,mBAAmB,KAAK;AAC9F,SAAK,uBACD,KAAK,UAAU,WAAW,UAAU,iBAAiB,oBAAoB,KAAK;AAClF,SAAK,gBAAgB,QAAQ,KAAK;AAElC,UAAM,eACF,CAAC,KAAK,eAAe,KAAK,YAAY,kBAAkB,KAAK,iBAAiB,KAAK;AACvF,eAAW,QAAQ,cAAc;AAC/B,WAAK,YAAY,kBAAkB;AAAA;AAAA;AAAA,EAIvC,kBAAkB,OAAqB;AACrC,SAAK,gBAAgB,SAAS;AAAA;AAAA,EAGhC,kBAAkB,OAAqB;AACrC,SAAK,gBAAgB,SAAS;AAAA;AAAA,EAGhC,kBAAkB,MAAoC;AACpD,SAAK,YAAY,kBAAkB;AAAA;AAAA,EAG7B,UAAU,OAAe,OAAe,UACnB;AAC3B,UAAM,SAAS,IAAI,GAAG,QAAQ,cAAc,OAAO;AACnD,WAAO,iBAAiB,GAAG,QAAQ,cAAc,OAAO,OAAO,UAAU;AACzE,WAAO;AAAA;AAAA,EAGD,cAAc,EAAC,MAAM,QAA+D;AAC1F,SAAK,cAAc,OAAO,IAAI,OAAO,SAAS,gBAAgB,gBAAgB,OAAO,OAAO;AAC5F,SAAK;AAAA;AAAA,EAGP,OAAU,OAAY,aAAuC;AAC3D,QAAI,KAAK,aAAa;AACpB,YAAM,SAAS,KAAK;AACpB,aAAO,MAAM,OAAO,UAAQ,OAAO,KAAK,YAAY;AAAA;AAEtD,WAAO;AAAA;AAAA,EAGT,YAAqB;AACnB,WAAO,QAAQ,KAAK;AAAA;AAAA,EAGtB,WAAiB;AACf,SAAK;AAAA;AAAA,EAGP,gBAAgB,SAAwB;AACtC,SAAK,gBAAgB,WAAW;AAAA;AAAA,EAGlC,qBAAqB,SAAwB;AAC3C,SAAK,qBAAqB,WAAW;AAAA;AAAA,EAGvC,cAAc,SAAwB;AACpC,SAAK,cAAc,WAAW;AAAA;AAAA,EAGhC,aAAa,SAAwB;AACnC,SAAK,WAAW,WAAW;AAAA;AAAA,EAG7B,iBAAuB;AAAA;AAAA,EAGvB,qBAA2B;AAAA;AAAA,EAG3B,eAAqB;AAAA;AAAA;",
  "names": []
}
