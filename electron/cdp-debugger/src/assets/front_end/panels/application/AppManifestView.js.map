{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/AppManifestView.ts"],
  "sourcesContent": ["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport appManifestViewStyles from './appManifestView.css.js';\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as ApplicationComponents from './components/components.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  noManifestDetected: 'No manifest detected',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  appManifest: 'App Manifest',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  errorsAndWarnings: 'Errors and warnings',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  installability: 'Installability',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  identity: 'Identity',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  presentation: 'Presentation',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  protocolHandlers: 'Protocol Handlers',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  icons: 'Icons',\n  /**\n  *@description Text for the name of something\n  */\n  name: 'Name',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  shortName: 'Short name',\n  /**\n  *@description Label in the App Manifest View for the Computed App Id\n  */\n  computedAppId: 'Computed App Id',\n  /**\n  *@description Popup-text explaining what the App Id is used for.\n  */\n  appIdExplainer:\n      'This is used by the browser to know whether the manifest should be updating an existing application, or whether it refers to a new web app that can be installed.',\n  /**\n  *@description Text which is a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Explanation why it is advisable to specify an 'id' field in the manifest.\n  *@example {Note:} PH1\n  *@example {id} PH2\n  *@example {start_url} PH3\n  *@example {id} PH4\n  *@example {/index.html} PH5\n  *@example {(button for copying suggested value into clipboard)} PH6\n  */\n  appIdNote:\n      '{PH1} {PH2} is not specified in the manifest, {PH3} is used instead. To specify an App Id that matches the current identity, set the {PH4} field to {PH5} {PH6}.',\n  /**\n  *@description Label for reminding the user of something important. Is shown in bold and followed by the actual note to show the user.\n  */\n  note: 'Note:',\n  /**\n  *@description Tooltip text that appears when hovering over a button which copies the previous text to the clipboard.\n  */\n  copyToClipboard: 'Copy to clipboard',\n  /**\n  *@description Text for the description of something\n  */\n  description: 'Description',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  startUrl: 'Start URL',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  themeColor: 'Theme color',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  backgroundColor: 'Background color',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  darkThemeColor: 'Dark theme color',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  darkBackgroundColor: 'Dark background color',\n  /**\n  *@description Text for the orientation of something\n  */\n  orientation: 'Orientation',\n  /**\n  *@description Title of the display attribute in App Manifest View of the Application panel\n  * The display attribute defines the preferred display mode for the app such fullscreen or\n  * standalone.\n  * For more details see https://www.w3.org/TR/appmanifest/#display-member.\n  */\n  display: 'Display',\n  /**\n  *@description Title of the new_note_url attribute in the Application panel\n  */\n  newNoteUrl: 'New note URL',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  descriptionMayBeTruncated: 'Description may be truncated.',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  showOnlyTheMinimumSafeAreaFor: 'Show only the minimum safe area for maskable icons',\n  /**\n  *@description Link text for more information on maskable icons in App Manifest view of the Application panel\n  */\n  documentationOnMaskableIcons: 'documentation on maskable icons',\n  /**\n  *@description Text wrapping a link pointing to more information on maskable icons in App Manifest view of the Application panel\n  *@example {https://web.dev/maskable-icon/} PH1\n  */\n  needHelpReadOurS: 'Need help? Read {PH1}.',\n  /**\n  *@description Label for the primary icon loaded from the manifest\n  *@example {https://example.com/} PH1\n  */\n  primaryManifestIconFromS: 'Primary manifest icon from {PH1}',\n  /**\n  *@description Label for the primary icon loaded from the manifest\n  */\n  primaryIconasUsedByChrome: 'Primary icon as used by `Chrome`',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  *@example {1} PH1\n  */\n  shortcutS: 'Shortcut #{PH1}',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  *@example {1} PH1\n  */\n  shortcutSShouldIncludeAXPixel: 'Shortcut #{PH1} should include a 96x96 pixel icon',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  *@example {1} PH1\n  */\n  screenshotS: 'Screenshot #{PH1}',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  pageIsNotLoadedInTheMainFrame: 'Page is not loaded in the main frame',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  pageIsNotServedFromASecureOrigin: 'Page is not served from a secure origin',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  pageHasNoManifestLinkUrl: 'Page has no manifest <link> `URL`',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestCouldNotBeFetchedIsEmpty: 'Manifest could not be fetched, is empty, or could not be parsed',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestStartUrlIsNotValid: 'Manifest start `URL` is not valid',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestDoesNotContainANameOr: 'Manifest does not contain a \\'`name`\\' or \\'`short_name`\\' field',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestDisplayPropertyMustBeOne:\n      'Manifest \\'`display`\\' property must be one of \\'`standalone`\\', \\'`fullscreen`\\', or \\'`minimal-ui`\\'',\n  /**\n  *@description Manifest installability error in the Application panel\n  *@example {100} PH1\n  */\n  manifestDoesNotContainASuitable:\n      'Manifest does not contain a suitable icon - PNG, SVG or WebP format of at least {PH1}px is required, the `sizes` attribute must be set, and the `purpose` attribute, if set, must include `\"any\"`.',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  avoidPurposeAnyAndMaskable:\n      'Declaring an icon with `purpose: \"any maskable\"` is discouraged. It is likely to look incorrect on some platforms due to too much or too little padding.',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  noMatchingServiceWorkerDetected:\n      'No matching `service worker` detected. You may need to reload the page, or check that the scope of the `service worker` for the current page encloses the scope and start URL from the manifest.',\n  /**\n  *@description Manifest installability error in the Application panel\n  *@example {100} PH1\n  */\n  noSuppliedIconIsAtLeastSpxSquare:\n      'No supplied icon is at least {PH1} pixels square in `PNG`, `SVG` or `WebP` format, with the purpose attribute unset or set to `\"any\"`.',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  couldNotDownloadARequiredIcon: 'Could not download a required icon from the manifest',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  downloadedIconWasEmptyOr: 'Downloaded icon was empty or corrupted',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  theSpecifiedApplicationPlatform: 'The specified application platform is not supported on `Android`',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  noPlayStoreIdProvided: 'No Play store ID provided',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  thePlayStoreAppUrlAndPlayStoreId: 'The Play Store app URL and Play Store ID do not match',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  theAppIsAlreadyInstalled: 'The app is already installed',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  aUrlInTheManifestContainsA: 'A URL in the manifest contains a username, password, or port',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  pageIsLoadedInAnIncognitoWindow: 'Page is loaded in an incognito window',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  pageDoesNotWorkOffline: 'Page does not work offline',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  couldNotCheckServiceWorker: 'Could not check `service worker` without a \\'`start_url`\\' field in the manifest',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestSpecifies: 'Manifest specifies `prefer_related_applications`: true',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  preferrelatedapplicationsIsOnly:\n      '`prefer_related_applications` is only supported on `Chrome` Beta and Stable channels on `Android`.',\n  /**\n  *@description Manifest installability error in the Application panel\n  */\n  manifestContainsDisplayoverride:\n      'Manifest contains \\'`display_override`\\' field, and the first supported display mode must be one of \\'`standalone`\\', \\'`fullscreen`\\', or \\'`minimal-ui`\\'',\n  /**\n  *@description Warning message for offline capability check\n  *@example {https://developer.chrome.com/blog/improved-pwa-offline-detection} PH1\n  */\n  pageDoesNotWorkOfflineThePage:\n      'Page does not work offline. Starting in Chrome 93, the installability criteria are changing, and this site will not be installable. See {PH1} for more information.',\n  /**\n  *@description Text to indicate the source of an image\n  *@example {example.com} PH1\n  */\n  imageFromS: 'Image from {PH1}',\n  /**\n  *@description Text for one or a group of screenshots\n  */\n  screenshot: 'Screenshot',\n  /**\n  *@description Text in App Manifest View of the Application panel\n  */\n  icon: 'Icon',\n  /**\n  * @description This is a warning message telling the user about a problem where the src attribute\n  * of an image has not be entered/provided correctly. 'src' is part of the DOM API and should not\n  * be translated.\n  * @example {ImageName} PH1\n  */\n  sSrcIsNotSet: '{PH1} `src` is not set',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Screenshot} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sUrlSFailedToParse: '{PH1} URL \\'\\'{PH2}\\'\\' failed to parse',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSFailedToLoad: '{PH1} {PH2} failed to load',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSDoesNotSpecifyItsSizeInThe: '{PH1} {PH2} does not specify its size in the manifest',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSShouldSpecifyItsSizeAs: '{PH1} {PH2} should specify its size as `[width]x[height]`',\n  /**\n  *@description Warning message for image resources from the manifest\n  */\n  sSShouldHaveSquareIcon:\n      'Most operating systems require square icons. Please include at least one square icon in the array.',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {100} PH1\n  *@example {100} PH2\n  *@example {Image} PH3\n  *@example {https://example.com/image.png} PH4\n  *@example {200} PH5\n  *@example {200} PH6\n  */\n  actualSizeSspxOfSSDoesNotMatch:\n      'Actual size ({PH1}\u00D7{PH2})px of {PH3} {PH4} does not match specified size ({PH5}\u00D7{PH6}px)',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {100} PH1\n  *@example {Image} PH2\n  *@example {https://example.com/image.png} PH3\n  *@example {200} PH4\n  */\n  actualWidthSpxOfSSDoesNotMatch: 'Actual width ({PH1}px) of {PH2} {PH3} does not match specified width ({PH4}px)',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {100} PH1\n  *@example {Image} PH2\n  *@example {https://example.com/image.png} PH3\n  *@example {100} PH4\n  */\n  actualHeightSpxOfSSDoesNotMatch: 'Actual height ({PH1}px) of {PH2} {PH3} does not match specified height ({PH4}px)',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSSizeShouldBeAtLeast320: '{PH1} {PH2} size should be at least 320\u00D7320',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSSizeShouldBeAtMost3840: '{PH1} {PH2} size should be at most 3840\u00D73840',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSWidthDoesNotComplyWithRatioRequirement: '{PH1} {PH2} width can\\'t be more than 2.3 times as long as the height',\n  /**\n  *@description Warning message for image resources from the manifest\n  *@example {Image} PH1\n  *@example {https://example.com/image.png} PH2\n  */\n  sSHeightDoesNotComplyWithRatioRequirement: '{PH1} {PH2} height can\\'t be more than 2.3 times as long as the width',\n  /**\n  *@description Manifest installability error in the Application panel\n  *@example {https://example.com/image.png} url\n  */\n  screenshotPixelSize:\n      'Screenshot {url} should specify a pixel size `[width]x[height]` instead of `\"any\"` as first size.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/AppManifestView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype ParsedSize = {\n  any: 'any',\n  formatted: string,\n}|{\n  width: number,\n  height: number,\n  formatted: string,\n};\n\nexport class AppManifestView extends UI.Widget.VBox implements SDK.TargetManager.Observer {\n  private readonly emptyView: UI.EmptyWidget.EmptyWidget;\n  private readonly reportView: UI.ReportView.ReportView;\n  private readonly errorsSection: UI.ReportView.Section;\n  private readonly installabilitySection: UI.ReportView.Section;\n  private readonly identitySection: UI.ReportView.Section;\n  private readonly presentationSection: UI.ReportView.Section;\n  private readonly iconsSection: UI.ReportView.Section;\n  private readonly shortcutSections: UI.ReportView.Section[];\n  private readonly screenshotsSections: UI.ReportView.Section[];\n  private nameField: HTMLElement;\n  private shortNameField: HTMLElement;\n  private descriptionField: Element;\n  private readonly startURLField: HTMLElement;\n  private readonly themeColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private readonly backgroundColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private readonly darkThemeColorField: HTMLElement;\n  private readonly darkThemeColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private readonly darkBackgroundColorField: HTMLElement;\n  private readonly darkBackgroundColorSwatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private orientationField: HTMLElement;\n  private displayField: HTMLElement;\n  private readonly newNoteUrlField: HTMLElement;\n  private readonly throttler: Common.Throttler.Throttler;\n  private registeredListeners: Common.EventTarget.EventDescriptor[];\n  private target?: SDK.Target.Target;\n  private resourceTreeModel?: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  private serviceWorkerManager?: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  private protocolHandlersView: ApplicationComponents.ProtocolHandlersView.ProtocolHandlersView;\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('manifest-container');\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('colorFormat')\n        .addChangeListener(this.updateManifest.bind(this, true));\n\n    this.emptyView = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.noManifestDetected));\n    this.emptyView.appendLink('https://web.dev/add-manifest/' as Platform.DevToolsPath.UrlString);\n\n    this.emptyView.show(this.contentElement);\n    this.emptyView.hideWidget();\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(i18nString(UIStrings.appManifest));\n\n    this.reportView.element.classList.add('manifest-view-header');\n    this.reportView.show(this.contentElement);\n    this.reportView.hideWidget();\n\n    this.errorsSection = this.reportView.appendSection(i18nString(UIStrings.errorsAndWarnings));\n    this.installabilitySection = this.reportView.appendSection(i18nString(UIStrings.installability));\n    this.identitySection = this.reportView.appendSection(i18nString(UIStrings.identity));\n    this.presentationSection = this.reportView.appendSection(i18nString(UIStrings.presentation));\n    const protocolHandlersSection = this.reportView.appendSection(i18nString(UIStrings.protocolHandlers));\n    this.protocolHandlersView = new ApplicationComponents.ProtocolHandlersView.ProtocolHandlersView();\n    protocolHandlersSection.contentElement.append(this.protocolHandlersView);\n    this.iconsSection = this.reportView.appendSection(i18nString(UIStrings.icons), 'report-section-icons');\n    this.shortcutSections = [];\n    this.screenshotsSections = [];\n\n    this.nameField = this.identitySection.appendField(i18nString(UIStrings.name));\n    this.shortNameField = this.identitySection.appendField(i18nString(UIStrings.shortName));\n    this.descriptionField = this.identitySection.appendFlexedField(i18nString(UIStrings.description));\n\n    this.startURLField = this.presentationSection.appendField(i18nString(UIStrings.startUrl));\n\n    const themeColorField = this.presentationSection.appendField(i18nString(UIStrings.themeColor));\n    this.themeColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    themeColorField.appendChild(this.themeColorSwatch);\n\n    const backgroundColorField = this.presentationSection.appendField(i18nString(UIStrings.backgroundColor));\n    this.backgroundColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    backgroundColorField.appendChild(this.backgroundColorSwatch);\n\n    this.darkThemeColorField = this.presentationSection.appendField(i18nString(UIStrings.darkThemeColor));\n    this.darkThemeColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    this.darkThemeColorField.appendChild(this.darkThemeColorSwatch);\n\n    this.darkBackgroundColorField = this.presentationSection.appendField(i18nString(UIStrings.darkBackgroundColor));\n    this.darkBackgroundColorSwatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    this.darkBackgroundColorField.appendChild(this.darkBackgroundColorSwatch);\n\n    this.orientationField = this.presentationSection.appendField(i18nString(UIStrings.orientation));\n    this.displayField = this.presentationSection.appendField(i18nString(UIStrings.display));\n\n    this.newNoteUrlField = this.presentationSection.appendField(i18nString(UIStrings.newNoteUrl));\n\n    this.throttler = new Common.Throttler.Throttler(1000);\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n    this.registeredListeners = [];\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (this.target) {\n      return;\n    }\n    this.target = target;\n    this.resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    this.serviceWorkerManager = target.model(SDK.ServiceWorkerManager.ServiceWorkerManager);\n    if (!this.resourceTreeModel || !this.serviceWorkerManager) {\n      return;\n    }\n\n    void this.updateManifest(true);\n\n    this.registeredListeners = [\n      this.resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.DOMContentLoaded,\n          () => {\n            void this.updateManifest(true);\n          }),\n      this.serviceWorkerManager.addEventListener(\n          SDK.ServiceWorkerManager.Events.RegistrationUpdated,\n          () => {\n            void this.updateManifest(false);\n          }),\n    ];\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (this.target !== target) {\n      return;\n    }\n    if (!this.resourceTreeModel || !this.serviceWorkerManager) {\n      return;\n    }\n    delete this.resourceTreeModel;\n    delete this.serviceWorkerManager;\n    Common.EventTarget.removeEventListeners(this.registeredListeners);\n  }\n\n  private async updateManifest(immediately: boolean): Promise<void> {\n    if (!this.resourceTreeModel) {\n      return;\n    }\n    const [{url, data, errors}, installabilityErrors, manifestIcons, appId] = await Promise.all([\n      this.resourceTreeModel.fetchAppManifest(),\n      this.resourceTreeModel.getInstallabilityErrors(),\n      this.resourceTreeModel.getManifestIcons(),\n      this.resourceTreeModel.getAppId(),\n    ]);\n\n    void this.throttler.schedule(\n        () => this.renderManifest(url, data, errors, installabilityErrors, manifestIcons, appId), immediately);\n  }\n\n  private async renderManifest(\n      url: Platform.DevToolsPath.UrlString, data: string|null, errors: Protocol.Page.AppManifestError[],\n      installabilityErrors: Protocol.Page.InstallabilityError[], manifestIcons: {\n        primaryIcon: string|null,\n      },\n      appIdResponse: Protocol.Page.GetAppIdResponse): Promise<void> {\n    const appId = appIdResponse?.appId || null;\n    const recommendedId = appIdResponse?.recommendedId || null;\n    if (!data && !errors.length) {\n      this.emptyView.showWidget();\n      this.reportView.hideWidget();\n      return;\n    }\n    this.emptyView.hideWidget();\n    this.reportView.showWidget();\n\n    const link = Components.Linkifier.Linkifier.linkifyURL(url);\n    link.tabIndex = 0;\n    this.reportView.setURL(link);\n    this.errorsSection.clearContent();\n    this.errorsSection.element.classList.toggle('hidden', !errors.length);\n    for (const error of errors) {\n      this.errorsSection.appendRow().appendChild(\n          UI.UIUtils.createIconLabel(error.message, error.critical ? 'smallicon-error' : 'smallicon-warning'));\n    }\n\n    if (!data) {\n      return;\n    }\n\n    if (data.charCodeAt(0) === 0xFEFF) {\n      data = data.slice(1);\n    }  // Trim the BOM as per https://tools.ietf.org/html/rfc7159#section-8.1.\n\n    const parsedManifest = JSON.parse(data);\n    this.nameField.textContent = stringProperty('name');\n    this.shortNameField.textContent = stringProperty('short_name');\n\n    const warnings = [];\n\n    const description = stringProperty('description');\n    this.descriptionField.textContent = description;\n    if (description.length > 324) {\n      warnings.push(i18nString(UIStrings.descriptionMayBeTruncated));\n    }\n\n    const startURL = stringProperty('start_url');\n    if (appId && recommendedId) {\n      const appIdField = this.identitySection.appendField(i18nString(UIStrings.computedAppId));\n      UI.ARIAUtils.setAccessibleName(appIdField, 'App Id');\n      appIdField.textContent = appId;\n\n      const helpIcon = new IconButton.Icon.Icon();\n      helpIcon.data = {iconName: 'help_outline', color: 'var(--color-text-secondary)', width: '16px', height: '16px'};\n      helpIcon.classList.add('inline-icon');\n      helpIcon.title = i18nString(UIStrings.appIdExplainer);\n      appIdField.appendChild(helpIcon);\n\n      appIdField.appendChild(UI.XLink.XLink.create(\n          'https://developer.chrome.com/blog/pwa-manifest-id/', i18nString(UIStrings.learnMore), 'learn-more'));\n\n      if (!stringProperty('id')) {\n        const suggestedIdNote = appIdField.createChild('div', 'multiline-value');\n        const noteSpan = document.createElement('b');\n        noteSpan.textContent = i18nString(UIStrings.note);\n        const idSpan = document.createElement('code');\n        idSpan.textContent = 'id';\n        const idSpan2 = document.createElement('code');\n        idSpan2.textContent = 'id';\n        const startUrlSpan = document.createElement('code');\n        startUrlSpan.textContent = 'start_url';\n        const suggestedIdSpan = document.createElement('code');\n        suggestedIdSpan.textContent = recommendedId;\n\n        const copyButton = new IconButton.IconButton.IconButton();\n        copyButton.title = i18nString(UIStrings.copyToClipboard);\n        copyButton.data = {\n          groups: [{\n            iconName: 'copy_icon',\n            iconHeight: '12px',\n            iconWidth: '12px',\n            text: '',\n            iconColor: 'var(--color-text-primary)',\n          }],\n          clickHandler: (): void => {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(recommendedId);\n          },\n          compact: true,\n        };\n\n        suggestedIdNote.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.appIdNote,\n            {PH1: noteSpan, PH2: idSpan, PH3: startUrlSpan, PH4: idSpan2, PH5: suggestedIdSpan, PH6: copyButton}));\n      }\n    } else {\n      this.identitySection.removeField(i18nString(UIStrings.computedAppId));\n    }\n\n    this.startURLField.removeChildren();\n    if (startURL) {\n      const completeURL = Common.ParsedURL.ParsedURL.completeURL(url, startURL);\n      if (completeURL) {\n        const link = Components.Linkifier.Linkifier.linkifyURL(\n            completeURL, ({text: startURL} as Components.Linkifier.LinkifyURLOptions));\n        link.tabIndex = 0;\n        this.startURLField.appendChild(link);\n      }\n    }\n\n    this.themeColorSwatch.classList.toggle('hidden', !stringProperty('theme_color'));\n    const themeColor =\n        Common.Color.Color.parse(stringProperty('theme_color') || 'white') || Common.Color.Color.parse('white');\n    if (themeColor) {\n      this.themeColorSwatch.renderColor(themeColor, true);\n    }\n    this.backgroundColorSwatch.classList.toggle('hidden', !stringProperty('background_color'));\n    const backgroundColor =\n        Common.Color.Color.parse(stringProperty('background_color') || 'white') || Common.Color.Color.parse('white');\n    if (backgroundColor) {\n      this.backgroundColorSwatch.renderColor(backgroundColor, true);\n    }\n\n    const userPreferences = parsedManifest['user_preferences'] || {};\n    const colorScheme = userPreferences['color_scheme'] || {};\n    const colorSchemeDark = colorScheme['dark'] || {};\n    const darkThemeColorString = colorSchemeDark['theme_color'];\n    const hasDarkThemeColor = typeof darkThemeColorString === 'string';\n    this.darkThemeColorField.parentElement?.classList.toggle('hidden', !hasDarkThemeColor);\n    if (hasDarkThemeColor) {\n      const darkThemeColor = Common.Color.Color.parse(darkThemeColorString);\n      if (darkThemeColor) {\n        this.darkThemeColorSwatch.renderColor(darkThemeColor, true);\n      }\n    }\n    const darkBackgroundColorString = colorSchemeDark['background_color'];\n    const hasDarkBackgroundColor = typeof darkBackgroundColorString === 'string';\n    this.darkBackgroundColorField.parentElement?.classList.toggle('hidden', !hasDarkBackgroundColor);\n    if (hasDarkBackgroundColor) {\n      const darkBackgroundColor = Common.Color.Color.parse(darkBackgroundColorString);\n      if (darkBackgroundColor) {\n        this.darkBackgroundColorSwatch.renderColor(darkBackgroundColor, true);\n      }\n    }\n\n    this.orientationField.textContent = stringProperty('orientation');\n    const displayType = stringProperty('display');\n    this.displayField.textContent = displayType;\n\n    const noteTaking = parsedManifest['note_taking'] || {};\n    const newNoteUrl = noteTaking['new_note_url'];\n    const hasNewNoteUrl = typeof newNoteUrl === 'string';\n    this.newNoteUrlField.parentElement?.classList.toggle('hidden', !hasNewNoteUrl);\n    this.newNoteUrlField.removeChildren();\n    if (hasNewNoteUrl) {\n      const completeURL = (Common.ParsedURL.ParsedURL.completeURL(url, newNoteUrl) as Platform.DevToolsPath.UrlString);\n      const link = Components.Linkifier.Linkifier.linkifyURL(\n          completeURL, ({text: newNoteUrl} as Components.Linkifier.LinkifyURLOptions));\n      link.tabIndex = 0;\n      this.newNoteUrlField.appendChild(link);\n    }\n\n    const protocolHandlers = parsedManifest['protocol_handlers'] || [];\n    this.protocolHandlersView.data = {protocolHandlers, manifestLink: url};\n\n    const icons = parsedManifest['icons'] || [];\n    this.iconsSection.clearContent();\n\n    const shortcuts = parsedManifest['shortcuts'] || [];\n    for (const shortcutsSection of this.shortcutSections) {\n      shortcutsSection.detach(/** overrideHideOnDetach= */ true);\n    }\n\n    const screenshots = parsedManifest['screenshots'] || [];\n    for (const screenshotSection of this.screenshotsSections) {\n      screenshotSection.detach(/** overrideHideOnDetach= */ true);\n    }\n\n    const imageErrors: Platform.UIString.LocalizedString[] = [];\n\n    const setIconMaskedCheckbox = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.showOnlyTheMinimumSafeAreaFor));\n    setIconMaskedCheckbox.classList.add('mask-checkbox');\n    setIconMaskedCheckbox.addEventListener('click', () => {\n      this.iconsSection.setIconMasked(setIconMaskedCheckbox.checkboxElement.checked);\n    });\n    this.iconsSection.appendRow().appendChild(setIconMaskedCheckbox);\n    const documentationLink =\n        UI.XLink.XLink.create('https://web.dev/maskable-icon/', i18nString(UIStrings.documentationOnMaskableIcons));\n    this.iconsSection.appendRow().appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.needHelpReadOurS, {PH1: documentationLink}));\n\n    if (manifestIcons && manifestIcons.primaryIcon) {\n      const wrapper = document.createElement('div');\n      wrapper.classList.add('image-wrapper');\n      const image = document.createElement('img');\n      image.style.maxWidth = '200px';\n      image.style.maxHeight = '200px';\n      image.src = 'data:image/png;base64,' + manifestIcons.primaryIcon;\n      image.alt = i18nString(UIStrings.primaryManifestIconFromS, {PH1: url});\n      const title = i18nString(UIStrings.primaryIconasUsedByChrome);\n      const field = this.iconsSection.appendFlexedField(title);\n      wrapper.appendChild(image);\n      field.appendChild(wrapper);\n    }\n\n    let squareSizedIconAvailable = false;\n    for (const icon of icons) {\n      const result = await this.appendImageResourceToSection(url, icon, this.iconsSection, /** isScreenshot= */ false);\n      imageErrors.push(...result.imageResourceErrors);\n      squareSizedIconAvailable = result.squareSizedIconAvailable || squareSizedIconAvailable;\n    }\n    if (!squareSizedIconAvailable) {\n      imageErrors.push(i18nString(UIStrings.sSShouldHaveSquareIcon));\n    }\n\n    let shortcutIndex = 1;\n    for (const shortcut of shortcuts) {\n      const shortcutSection = this.reportView.appendSection(i18nString(UIStrings.shortcutS, {PH1: shortcutIndex}));\n      this.shortcutSections.push(shortcutSection);\n\n      shortcutSection.appendFlexedField('Name', shortcut.name);\n      if (shortcut.short_name) {\n        shortcutSection.appendFlexedField('Short name', shortcut.short_name);\n      }\n      if (shortcut.description) {\n        shortcutSection.appendFlexedField('Description', shortcut.description);\n      }\n      const urlField = shortcutSection.appendFlexedField('URL');\n      const shortcutUrl = Common.ParsedURL.ParsedURL.completeURL(url, shortcut.url) as Platform.DevToolsPath.UrlString;\n      const link = Components.Linkifier.Linkifier.linkifyURL(\n          shortcutUrl, ({text: shortcut.url} as Components.Linkifier.LinkifyURLOptions));\n      link.tabIndex = 0;\n      urlField.appendChild(link);\n\n      const shortcutIcons = shortcut.icons || [];\n      let hasShorcutIconLargeEnough = false;\n      for (const shortcutIcon of shortcutIcons) {\n        const {imageResourceErrors: shortcutIconErrors} =\n            await this.appendImageResourceToSection(url, shortcutIcon, shortcutSection, /** isScreenshot= */ false);\n        imageErrors.push(...shortcutIconErrors);\n        if (!hasShorcutIconLargeEnough && shortcutIcon.sizes) {\n          const shortcutIconSize = shortcutIcon.sizes.match(/^(\\d+)x(\\d+)$/);\n          if (shortcutIconSize && shortcutIconSize[1] >= 96 && shortcutIconSize[2] >= 96) {\n            hasShorcutIconLargeEnough = true;\n          }\n        }\n      }\n      if (!hasShorcutIconLargeEnough) {\n        imageErrors.push(i18nString(UIStrings.shortcutSShouldIncludeAXPixel, {PH1: shortcutIndex}));\n      }\n      shortcutIndex++;\n    }\n\n    let screenshotIndex = 1;\n    for (const screenshot of screenshots) {\n      const screenshotSection =\n          this.reportView.appendSection(i18nString(UIStrings.screenshotS, {PH1: screenshotIndex}));\n      this.screenshotsSections.push(screenshotSection);\n      const {imageResourceErrors: screenshotErrors} =\n          await this.appendImageResourceToSection(url, screenshot, screenshotSection, /** isScreenshot= */ true);\n      imageErrors.push(...screenshotErrors);\n      screenshotIndex++;\n    }\n\n    this.installabilitySection.clearContent();\n    this.installabilitySection.element.classList.toggle('hidden', !installabilityErrors.length);\n    const errorMessages = this.getInstallabilityErrorMessages(installabilityErrors);\n    for (const error of errorMessages) {\n      this.installabilitySection.appendRow().appendChild(UI.UIUtils.createIconLabel(error, 'smallicon-warning'));\n    }\n\n    this.errorsSection.element.classList.toggle('hidden', !errors.length && !imageErrors.length && !warnings.length);\n    for (const warning of warnings) {\n      this.errorsSection.appendRow().appendChild(UI.UIUtils.createIconLabel(warning, 'smallicon-warning'));\n    }\n    for (const error of imageErrors) {\n      this.errorsSection.appendRow().appendChild(UI.UIUtils.createIconLabel(error, 'smallicon-warning'));\n    }\n\n    function stringProperty(name: string): string {\n      const value = parsedManifest[name];\n      if (typeof value !== 'string') {\n        return '';\n      }\n      return value;\n    }\n  }\n\n  getInstallabilityErrorMessages(installabilityErrors: Protocol.Page.InstallabilityError[]): string[] {\n    const errorMessages = [];\n    for (const installabilityError of installabilityErrors) {\n      let errorMessage;\n      switch (installabilityError.errorId) {\n        case 'not-in-main-frame':\n          errorMessage = i18nString(UIStrings.pageIsNotLoadedInTheMainFrame);\n          break;\n        case 'not-from-secure-origin':\n          errorMessage = i18nString(UIStrings.pageIsNotServedFromASecureOrigin);\n          break;\n        case 'no-manifest':\n          errorMessage = i18nString(UIStrings.pageHasNoManifestLinkUrl);\n          break;\n        case 'manifest-empty':\n          errorMessage = i18nString(UIStrings.manifestCouldNotBeFetchedIsEmpty);\n          break;\n        case 'start-url-not-valid':\n          errorMessage = i18nString(UIStrings.manifestStartUrlIsNotValid);\n          break;\n        case 'manifest-missing-name-or-short-name':\n          errorMessage = i18nString(UIStrings.manifestDoesNotContainANameOr);\n          break;\n        case 'manifest-display-not-supported':\n          errorMessage = i18nString(UIStrings.manifestDisplayPropertyMustBeOne);\n          break;\n        case 'manifest-missing-suitable-icon':\n          if (installabilityError.errorArguments.length !== 1 ||\n              installabilityError.errorArguments[0].name !== 'minimum-icon-size-in-pixels') {\n            console.error('Installability error does not have the correct errorArguments');\n            break;\n          }\n          errorMessage =\n              i18nString(UIStrings.manifestDoesNotContainASuitable, {PH1: installabilityError.errorArguments[0].value});\n          break;\n        case 'no-matching-service-worker':\n          errorMessage = i18nString(UIStrings.noMatchingServiceWorkerDetected);\n          break;\n        case 'no-acceptable-icon':\n          if (installabilityError.errorArguments.length !== 1 ||\n              installabilityError.errorArguments[0].name !== 'minimum-icon-size-in-pixels') {\n            console.error('Installability error does not have the correct errorArguments');\n            break;\n          }\n          errorMessage = i18nString(\n              UIStrings.noSuppliedIconIsAtLeastSpxSquare, {PH1: installabilityError.errorArguments[0].value});\n          break;\n        case 'cannot-download-icon':\n          errorMessage = i18nString(UIStrings.couldNotDownloadARequiredIcon);\n          break;\n        case 'no-icon-available':\n          errorMessage = i18nString(UIStrings.downloadedIconWasEmptyOr);\n          break;\n        case 'platform-not-supported-on-android':\n          errorMessage = i18nString(UIStrings.theSpecifiedApplicationPlatform);\n          break;\n        case 'no-id-specified':\n          errorMessage = i18nString(UIStrings.noPlayStoreIdProvided);\n          break;\n        case 'ids-do-not-match':\n          errorMessage = i18nString(UIStrings.thePlayStoreAppUrlAndPlayStoreId);\n          break;\n        case 'already-installed':\n          errorMessage = i18nString(UIStrings.theAppIsAlreadyInstalled);\n          break;\n        case 'url-not-supported-for-webapk':\n          errorMessage = i18nString(UIStrings.aUrlInTheManifestContainsA);\n          break;\n        case 'in-incognito':\n          errorMessage = i18nString(UIStrings.pageIsLoadedInAnIncognitoWindow);\n          break;\n        case 'not-offline-capable':\n          errorMessage = i18nString(UIStrings.pageDoesNotWorkOffline);\n          break;\n        case 'no-url-for-service-worker':\n          errorMessage = i18nString(UIStrings.couldNotCheckServiceWorker);\n          break;\n        case 'prefer-related-applications':\n          errorMessage = i18nString(UIStrings.manifestSpecifies);\n          break;\n        case 'prefer-related-applications-only-beta-stable':\n          errorMessage = i18nString(UIStrings.preferrelatedapplicationsIsOnly);\n          break;\n        case 'manifest-display-override-not-supported':\n          errorMessage = i18nString(UIStrings.manifestContainsDisplayoverride);\n          break;\n        case 'warn-not-offline-capable':\n          errorMessage = i18nString(\n              UIStrings.pageDoesNotWorkOfflineThePage,\n              {PH1: 'https://developer.chrome.com/blog/improved-pwa-offline-detection/'});\n          break;\n        default:\n          console.error(`Installability error id '${installabilityError.errorId}' is not recognized`);\n          break;\n      }\n      if (errorMessage) {\n        errorMessages.push(errorMessage);\n      }\n    }\n    return errorMessages;\n  }\n\n  private async loadImage(url: Platform.DevToolsPath.UrlString): Promise<{\n    image: HTMLImageElement,\n    wrapper: Element,\n  }|null> {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('image-wrapper');\n    const image = document.createElement('img');\n    const result = new Promise((resolve, reject) => {\n      image.onload = resolve;\n      image.onerror = reject;\n    });\n    image.src = url;\n    image.alt = i18nString(UIStrings.imageFromS, {PH1: url});\n    wrapper.appendChild(image);\n    try {\n      await result;\n      return {wrapper, image};\n    } catch (e) {\n    }\n    return null;\n  }\n\n  parseSizes(\n      sizes: string, resourceName: Platform.UIString.LocalizedString, imageUrl: string,\n      imageResourceErrors: Platform.UIString.LocalizedString[]): ParsedSize[] {\n    const rawSizeArray = sizes.split(/\\s+/);\n    const parsedSizes: ParsedSize[] = [];\n    for (const size of rawSizeArray) {\n      if (size === 'any') {\n        if (!parsedSizes.find(x => 'any' in x)) {\n          parsedSizes.push({any: 'any', formatted: 'any'});\n        }\n        continue;\n      }\n      const match = size.match(/^(?<width>\\d+)[xX](?<height>\\d+)$/);\n      if (match) {\n        const width = parseInt(match.groups?.width || '', 10);\n        const height = parseInt(match.groups?.height || '', 10);\n        const formatted = `${width}\u00D7${height}px`;\n        parsedSizes.push({width, height, formatted});\n      } else {\n        imageResourceErrors.push(i18nString(UIStrings.sSShouldSpecifyItsSizeAs, {PH1: resourceName, PH2: imageUrl}));\n      }\n    }\n    return parsedSizes;\n  }\n\n  checkSizeProblem(\n      size: ParsedSize, type: string|undefined, image: HTMLImageElement,\n      resourceName: Platform.UIString.LocalizedString,\n      imageUrl: string): {error?: Platform.UIString.LocalizedString, hasSquareSize: boolean} {\n    if ('any' in size) {\n      return {hasSquareSize: image.naturalWidth === image.naturalHeight};\n    }\n    const hasSquareSize = size.width === size.height;\n    if (image.naturalWidth !== size.width && image.naturalHeight !== size.height) {\n      return {\n        error: i18nString(UIStrings.actualSizeSspxOfSSDoesNotMatch, {\n          PH1: image.naturalWidth,\n          PH2: image.naturalHeight,\n          PH3: resourceName,\n          PH4: imageUrl,\n          PH5: size.width,\n          PH6: size.height,\n        }),\n        hasSquareSize,\n      };\n    }\n    if (image.naturalWidth !== size.width) {\n      return {\n        error: i18nString(\n            UIStrings.actualWidthSpxOfSSDoesNotMatch,\n            {PH1: image.naturalWidth, PH2: resourceName, PH3: imageUrl, PH4: size.width}),\n        hasSquareSize,\n      };\n    }\n    if (image.naturalHeight !== size.height) {\n      return {\n        error: i18nString(\n            UIStrings.actualHeightSpxOfSSDoesNotMatch,\n            {PH1: image.naturalHeight, PH2: resourceName, PH3: imageUrl, PH4: size.height}),\n        hasSquareSize,\n      };\n    }\n    return {hasSquareSize};\n  }\n\n  private async appendImageResourceToSection(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      baseUrl: Platform.DevToolsPath.UrlString, imageResource: any, section: UI.ReportView.Section,\n      isScreenshot: boolean):\n      Promise<{imageResourceErrors: Platform.UIString.LocalizedString[], squareSizedIconAvailable?: boolean}> {\n    const imageResourceErrors: Platform.UIString.LocalizedString[] = [];\n    const resourceName = isScreenshot ? i18nString(UIStrings.screenshot) : i18nString(UIStrings.icon);\n    if (!imageResource.src) {\n      imageResourceErrors.push(i18nString(UIStrings.sSrcIsNotSet, {PH1: resourceName}));\n      return {imageResourceErrors};\n    }\n    const imageUrl = Common.ParsedURL.ParsedURL.completeURL(baseUrl, imageResource['src']);\n    if (!imageUrl) {\n      imageResourceErrors.push(\n          i18nString(UIStrings.sUrlSFailedToParse, {PH1: resourceName, PH2: imageResource['src']}));\n      return {imageResourceErrors};\n    }\n    const result = await this.loadImage(imageUrl);\n    if (!result) {\n      imageResourceErrors.push(i18nString(UIStrings.sSFailedToLoad, {PH1: resourceName, PH2: imageUrl}));\n      return {imageResourceErrors};\n    }\n    const {wrapper, image} = result;\n    const sizes = this.parseSizes(imageResource['sizes'], resourceName, imageUrl, imageResourceErrors);\n    const title = sizes.map(x => x.formatted).join(' ') + '\\n' + (imageResource['type'] || '');\n    const field = section.appendFlexedField(title);\n    let squareSizedIconAvailable = false;\n    if (!imageResource.sizes) {\n      imageResourceErrors.push(i18nString(UIStrings.sSDoesNotSpecifyItsSizeInThe, {PH1: resourceName, PH2: imageUrl}));\n    } else {\n      if (isScreenshot && sizes.length > 0 && 'any' in sizes[0]) {\n        imageResourceErrors.push(i18nString(UIStrings.screenshotPixelSize, {url: imageUrl}));\n      }\n      for (const size of sizes) {\n        const {error, hasSquareSize} =\n            this.checkSizeProblem(size, imageResource['type'], image, resourceName, imageUrl);\n        squareSizedIconAvailable = squareSizedIconAvailable || hasSquareSize;\n        if (error) {\n          imageResourceErrors.push(error);\n        } else if (isScreenshot) {\n          const width = 'any' in size ? image.naturalWidth : size.width;\n          const height = 'any' in size ? image.naturalHeight : size.height;\n          if (width < 320 || height < 320) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSSizeShouldBeAtLeast320, {PH1: resourceName, PH2: imageUrl}));\n          } else if (width > 3840 || height > 3840) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSSizeShouldBeAtMost3840, {PH1: resourceName, PH2: imageUrl}));\n          } else if (width > (height * 2.3)) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSWidthDoesNotComplyWithRatioRequirement, {PH1: resourceName, PH2: imageUrl}));\n          } else if (height > (width * 2.3)) {\n            imageResourceErrors.push(\n                i18nString(UIStrings.sSHeightDoesNotComplyWithRatioRequirement, {PH1: resourceName, PH2: imageUrl}));\n          }\n        }\n      }\n    }\n\n    const purpose = typeof imageResource['purpose'] === 'string' ? imageResource['purpose'].toLowerCase() : '';\n    if (purpose.includes('any') && purpose.includes('maskable')) {\n      imageResourceErrors.push(i18nString(UIStrings.avoidPurposeAnyAndMaskable));\n    }\n\n    field.appendChild(wrapper);\n    return {imageResourceErrors, squareSizedIconAvailable};\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.reportView.registerCSSFiles([appManifestViewStyles]);\n    this.registerCSSFiles([appManifestViewStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
