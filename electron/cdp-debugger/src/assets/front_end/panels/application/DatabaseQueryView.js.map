{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/DatabaseQueryView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {Database} from './DatabaseModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Data grid name for Database Query data grids\n  */\n  databaseQuery: 'Database Query',\n  /**\n  *@description Aria text for table selected in WebSQL DatabaseQueryView in Application panel\n  *@example {\"SELECT * FROM LOGS\"} PH1\n  */\n  queryS: 'Query: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/DatabaseQueryView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DatabaseQueryView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(\n    UI.Widget.VBox) {\n  database: Database;\n  private queryWrapper: HTMLElement;\n  private readonly promptContainer: HTMLElement;\n  private readonly promptElement: HTMLElement;\n  private prompt: UI.TextPrompt.TextPrompt;\n  private readonly proxyElement: Element;\n  private queryResults: HTMLElement[];\n  private virtualSelectedIndex: number;\n  private lastSelectedElement!: Element|null;\n  private selectionTimeout: number;\n  constructor(database: Database) {\n    super();\n\n    this.database = database;\n\n    this.element.classList.add('storage-view', 'query', 'monospace');\n    this.element.addEventListener('selectstart', this.selectStart.bind(this), false);\n\n    this.queryWrapper = this.element.createChild('div', 'database-query-group-messages');\n    this.queryWrapper.addEventListener('focusin', (this.onFocusIn.bind(this) as EventListener));\n    this.queryWrapper.addEventListener('focusout', (this.onFocusOut.bind(this) as EventListener));\n    this.queryWrapper.addEventListener('keydown', (this.onKeyDown.bind(this) as EventListener));\n    this.queryWrapper.tabIndex = -1;\n\n    this.promptContainer = this.element.createChild('div', 'database-query-prompt-container');\n    this.promptContainer.appendChild(UI.Icon.Icon.create('smallicon-text-prompt', 'prompt-icon'));\n    this.promptElement = this.promptContainer.createChild('div');\n    this.promptElement.className = 'database-query-prompt';\n    this.promptElement.addEventListener('keydown', (this.promptKeyDown.bind(this) as EventListener));\n\n    this.prompt = new UI.TextPrompt.TextPrompt();\n    this.prompt.initialize(this.completions.bind(this), ' ');\n    this.proxyElement = this.prompt.attach(this.promptElement);\n\n    this.element.addEventListener('click', this.messagesClicked.bind(this), true);\n\n    this.queryResults = [];\n    this.virtualSelectedIndex = -1;\n    this.selectionTimeout = 0;\n  }\n\n  private messagesClicked(): void {\n    this.prompt.focus();\n    if (!this.prompt.isCaretInsidePrompt() && !this.element.hasSelection()) {\n      this.prompt.moveCaretToEndOfPrompt();\n    }\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (UI.UIUtils.isEditing() || !this.queryResults.length || event.shiftKey) {\n      return;\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n        if (this.virtualSelectedIndex > 0) {\n          this.virtualSelectedIndex--;\n        } else {\n          return;\n        }\n        break;\n      case 'ArrowDown':\n        if (this.virtualSelectedIndex < this.queryResults.length - 1) {\n          this.virtualSelectedIndex++;\n        } else {\n          return;\n        }\n        break;\n      case 'Home':\n        this.virtualSelectedIndex = 0;\n        break;\n      case 'End':\n        this.virtualSelectedIndex = this.queryResults.length - 1;\n        break;\n      default:\n        return;\n    }\n    event.consume(true);\n    this.updateFocusedItem();\n  }\n\n  private onFocusIn(event: FocusEvent): void {\n    // Make default selection when moving from external (e.g. prompt) to the container.\n    if (this.virtualSelectedIndex === -1 && this.isOutsideViewport((event.relatedTarget as Element | null)) &&\n        event.target === this.queryWrapper && this.queryResults.length) {\n      this.virtualSelectedIndex = this.queryResults.length - 1;\n    }\n    this.updateFocusedItem();\n  }\n\n  private onFocusOut(event: FocusEvent): void {\n    if (this.isOutsideViewport((event.relatedTarget as Element | null))) {\n      this.virtualSelectedIndex = -1;\n    }\n    this.updateFocusedItem();\n\n    this.queryWrapper.scrollTop = 10000000;\n  }\n\n  private isOutsideViewport(element: Element|null): boolean {\n    return element !== null && !element.isSelfOrDescendant(this.queryWrapper);\n  }\n\n  private updateFocusedItem(): void {\n    let index: number = this.virtualSelectedIndex;\n    if (this.queryResults.length && this.virtualSelectedIndex < 0) {\n      index = this.queryResults.length - 1;\n    }\n\n    const selectedElement = index >= 0 ? this.queryResults[index] : null;\n    const changed = this.lastSelectedElement !== selectedElement;\n    const containerHasFocus = this.queryWrapper === Platform.DOMUtilities.deepActiveElement(this.element.ownerDocument);\n\n    if (selectedElement && (changed || containerHasFocus) && this.element.hasFocus()) {\n      if (!selectedElement.hasFocus()) {\n        selectedElement.focus();\n      }\n    }\n\n    if (this.queryResults.length && !this.queryWrapper.hasFocus()) {\n      this.queryWrapper.tabIndex = 0;\n    } else {\n      this.queryWrapper.tabIndex = -1;\n    }\n    this.lastSelectedElement = selectedElement;\n  }\n\n  async completions(_expression: string, prefix: string, _force?: boolean): Promise<UI.SuggestBox.Suggestions> {\n    if (!prefix) {\n      return [];\n    }\n\n    prefix = prefix.toLowerCase();\n    const tableNames = await this.database.tableNames();\n    return tableNames.map(name => name + ' ')\n        .concat(SQL_BUILT_INS)\n        .filter(proposal => proposal.toLowerCase().startsWith(prefix))\n        .map(completion => ({text: completion} as UI.SuggestBox.Suggestion));\n  }\n\n  private selectStart(_event: Event): void {\n    if (this.selectionTimeout) {\n      clearTimeout(this.selectionTimeout);\n    }\n\n    this.prompt.clearAutocomplete();\n\n    function moveBackIfOutside(this: DatabaseQueryView): void {\n      this.selectionTimeout = 0;\n      if (!this.prompt.isCaretInsidePrompt() && !this.element.hasSelection()) {\n        this.prompt.moveCaretToEndOfPrompt();\n      }\n      this.prompt.autoCompleteSoon();\n    }\n\n    this.selectionTimeout = window.setTimeout(moveBackIfOutside.bind(this), 100);\n  }\n\n  private promptKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      void this.enterKeyPressed(event);\n      return;\n    }\n  }\n\n  private async enterKeyPressed(event: KeyboardEvent): Promise<void> {\n    event.consume(true);\n\n    const query = this.prompt.textWithCurrentSuggestion();\n    this.prompt.clearAutocomplete();\n\n    if (!query.length) {\n      return;\n    }\n\n    this.prompt.setEnabled(false);\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const result = await new Promise<{columnNames: string[], values: any[]}>((resolve, reject) => {\n        void this.database.executeSql(\n            query, (columnNames, values) => resolve({columnNames, values}), errorText => reject(errorText));\n      });\n      this.queryFinished(query, result.columnNames, result.values);\n    } catch (e) {\n      this.appendErrorQueryResult(query, e);\n    }\n    this.prompt.setEnabled(true);\n    this.prompt.setText('');\n    this.prompt.focus();\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private queryFinished(query: string, columnNames: string[], values: any[]): void {\n    const dataGrid =\n        DataGrid.SortableDataGrid.SortableDataGrid.create(columnNames, values, i18nString(UIStrings.databaseQuery));\n    const trimmedQuery = query.trim();\n\n    let view: DataGrid.DataGrid.DataGridWidget<unknown>|null = null;\n    if (dataGrid) {\n      dataGrid.setStriped(true);\n      dataGrid.renderInline();\n      dataGrid.autoSizeColumns(5);\n      view = dataGrid.asWidget();\n      dataGrid.setFocusable(false);\n    }\n    this.appendViewQueryResult(trimmedQuery, view);\n\n    if (trimmedQuery.match(/^create /i) || trimmedQuery.match(/^drop table /i)) {\n      this.dispatchEventToListeners(Events.SchemaUpdated, this.database);\n    }\n  }\n\n  private appendViewQueryResult(query: string, view: UI.Widget.Widget|null): void {\n    const resultElement = this.appendQueryResult(query);\n    if (view) {\n      view.show(resultElement);\n    } else {\n      resultElement.remove();\n    }\n\n    this.scrollResultIntoView();\n  }\n\n  private appendErrorQueryResult(query: string, errorText: string): void {\n    const resultElement = this.appendQueryResult(query);\n    resultElement.classList.add('error');\n    resultElement.appendChild(UI.Icon.Icon.create('smallicon-error', 'prompt-icon'));\n    UI.UIUtils.createTextChild(resultElement, errorText);\n\n    this.scrollResultIntoView();\n  }\n\n  private scrollResultIntoView(): void {\n    this.queryResults[this.queryResults.length - 1].scrollIntoView(false);\n    this.promptElement.scrollIntoView(false);\n  }\n\n  private appendQueryResult(query: string): HTMLDivElement {\n    const element = document.createElement('div');\n    element.className = 'database-user-query';\n    element.tabIndex = -1;\n\n    UI.ARIAUtils.setAccessibleName(element, i18nString(UIStrings.queryS, {PH1: query}));\n    this.queryResults.push(element);\n    this.updateFocusedItem();\n\n    element.appendChild(UI.Icon.Icon.create('smallicon-user-command', 'prompt-icon'));\n\n    const commandTextElement = document.createElement('span');\n    commandTextElement.className = 'database-query-text';\n    commandTextElement.textContent = query;\n    element.appendChild(commandTextElement);\n\n    const resultElement = document.createElement('div');\n    resultElement.className = 'database-query-result';\n    element.appendChild(resultElement);\n\n    this.queryWrapper.appendChild(element);\n    return resultElement;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  SchemaUpdated = 'SchemaUpdated',\n}\n\nexport type EventTypes = {\n  [Events.SchemaUpdated]: Database,\n};\n\nexport const SQL_BUILT_INS = [\n  'SELECT ',\n  'FROM ',\n  'WHERE ',\n  'LIMIT ',\n  'DELETE FROM ',\n  'CREATE ',\n  'DROP ',\n  'TABLE ',\n  'INDEX ',\n  'UPDATE ',\n  'INSERT INTO ',\n  'VALUES (',\n];\n"],
  "mappings": "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",
  "names": []
}
