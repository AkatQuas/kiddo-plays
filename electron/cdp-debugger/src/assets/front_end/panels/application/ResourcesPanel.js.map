{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/application/ResourcesPanel.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport resourcesPanelStyles from './resourcesPanel.css.js';\n\nimport {ApplicationPanelSidebar, StorageCategoryView} from './ApplicationPanelSidebar.js';\nimport {CookieItemsView} from './CookieItemsView.js';\nimport {DatabaseQueryView} from './DatabaseQueryView.js';\nimport {DatabaseTableView} from './DatabaseTableView.js';\nimport {DOMStorageItemsView} from './DOMStorageItemsView.js';\nimport type {DOMStorage} from './DOMStorageModel.js';\nimport {StorageItemsView} from './StorageItemsView.js';\n\nlet resourcesPanelInstance: ResourcesPanel;\n\nexport class ResourcesPanel extends UI.Panel.PanelWithSidebar {\n  private readonly resourcesLastSelectedItemSetting: Common.Settings.Setting<Platform.DevToolsPath.UrlString[]>;\n  visibleView: UI.Widget.Widget|null;\n  private pendingViewPromise: Promise<UI.Widget.Widget>|null;\n  private categoryView: StorageCategoryView|null;\n  storageViews: HTMLElement;\n  private readonly storageViewToolbar: UI.Toolbar.Toolbar;\n  private domStorageView: DOMStorageItemsView|null;\n  private cookieView: CookieItemsView|null;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget|null;\n  private readonly sidebar: ApplicationPanelSidebar;\n\n  private constructor() {\n    super('resources');\n\n    this.resourcesLastSelectedItemSetting =\n        Common.Settings.Settings.instance().createSetting('resourcesLastSelectedElementPath', []);\n\n    this.visibleView = null;\n\n    this.pendingViewPromise = null;\n\n    this.categoryView = null;\n\n    const mainContainer = new UI.Widget.VBox();\n    this.storageViews = mainContainer.element.createChild('div', 'vbox flex-auto');\n    this.storageViewToolbar = new UI.Toolbar.Toolbar('resources-toolbar', mainContainer.element);\n    this.splitWidget().setMainWidget(mainContainer);\n\n    this.domStorageView = null;\n\n    this.cookieView = null;\n\n    this.emptyWidget = null;\n\n    this.sidebar = new ApplicationPanelSidebar(this);\n    this.sidebar.show(this.panelSidebarElement());\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ResourcesPanel {\n    const {forceNew} = opts;\n    if (!resourcesPanelInstance || forceNew) {\n      resourcesPanelInstance = new ResourcesPanel();\n    }\n\n    return resourcesPanelInstance;\n  }\n\n  private static shouldCloseOnReset(view: UI.Widget.Widget): boolean {\n    const viewClassesToClose = [\n      SourceFrame.ResourceSourceFrame.ResourceSourceFrame,\n      SourceFrame.ImageView.ImageView,\n      SourceFrame.FontView.FontView,\n      StorageItemsView,\n      DatabaseQueryView,\n      DatabaseTableView,\n    ];\n    return viewClassesToClose.some(type => view instanceof type);\n  }\n\n  static async showAndGetSidebar(): Promise<ApplicationPanelSidebar> {\n    await UI.ViewManager.ViewManager.instance().showView('resources');\n    return ResourcesPanel.instance().sidebar;\n  }\n\n  focus(): void {\n    this.sidebar.focus();\n  }\n\n  lastSelectedItemPath(): Platform.DevToolsPath.UrlString[] {\n    return this.resourcesLastSelectedItemSetting.get();\n  }\n\n  setLastSelectedItemPath(path: Platform.DevToolsPath.UrlString[]): void {\n    this.resourcesLastSelectedItemSetting.set(path);\n  }\n\n  resetView(): void {\n    if (this.visibleView && ResourcesPanel.shouldCloseOnReset(this.visibleView)) {\n      this.showView(null);\n    }\n  }\n\n  showView(view: UI.Widget.Widget|null): void {\n    this.pendingViewPromise = null;\n    if (this.visibleView === view) {\n      return;\n    }\n\n    if (this.visibleView) {\n      this.visibleView.detach();\n    }\n\n    if (view) {\n      view.show(this.storageViews);\n    }\n    this.visibleView = view;\n\n    this.storageViewToolbar.removeToolbarItems();\n    this.storageViewToolbar.element.classList.toggle('hidden', true);\n    if (view instanceof UI.View.SimpleView) {\n      void view.toolbarItems().then(items => {\n        items.map(item => this.storageViewToolbar.appendToolbarItem(item));\n        this.storageViewToolbar.element.classList.toggle('hidden', !items.length);\n      });\n    }\n  }\n\n  async scheduleShowView(viewPromise: Promise<UI.Widget.Widget>): Promise<UI.Widget.Widget|null> {\n    this.pendingViewPromise = viewPromise;\n    const view = await viewPromise;\n    if (this.pendingViewPromise !== viewPromise) {\n      return null;\n    }\n    this.showView(view);\n    return view;\n  }\n\n  showCategoryView(categoryName: string, categoryLink: Platform.DevToolsPath.UrlString|null): void {\n    if (!this.categoryView) {\n      this.categoryView = new StorageCategoryView();\n    }\n    this.categoryView.setText(categoryName);\n    this.categoryView.setLink(categoryLink);\n    this.showView(this.categoryView);\n  }\n\n  showDOMStorage(domStorage: DOMStorage): void {\n    if (!domStorage) {\n      return;\n    }\n\n    if (!this.domStorageView) {\n      this.domStorageView = new DOMStorageItemsView(domStorage);\n    } else {\n      this.domStorageView.setStorage(domStorage);\n    }\n    this.showView(this.domStorageView);\n  }\n\n  showCookies(cookieFrameTarget: SDK.Target.Target, cookieDomain: string): void {\n    const model = cookieFrameTarget.model(SDK.CookieModel.CookieModel);\n    if (!model) {\n      return;\n    }\n    if (!this.cookieView) {\n      this.cookieView = new CookieItemsView(model, cookieDomain);\n    } else {\n      this.cookieView.setCookiesDomain(model, cookieDomain);\n    }\n    this.showView(this.cookieView);\n  }\n\n  clearCookies(target: SDK.Target.Target, cookieDomain: string): void {\n    const model = (target.model(SDK.CookieModel.CookieModel) as SDK.CookieModel.CookieModel | null);\n    if (!model) {\n      return;\n    }\n    void model.clear(cookieDomain).then(() => {\n      if (this.cookieView) {\n        this.cookieView.refreshItems();\n      }\n    });\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([resourcesPanelStyles]);\n  }\n}\n\nlet resourceRevealerInstance: ResourceRevealer;\n\nexport class ResourceRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ResourceRevealer {\n    const {forceNew} = opts;\n    if (!resourceRevealerInstance || forceNew) {\n      resourceRevealerInstance = new ResourceRevealer();\n    }\n\n    return resourceRevealerInstance;\n  }\n\n  async reveal(resource: Object): Promise<void> {\n    if (!(resource instanceof SDK.Resource.Resource)) {\n      throw new Error('Internal error: not a resource');\n    }\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    await sidebar.showResource(resource);\n  }\n}\n\nlet frameDetailsRevealerInstance: FrameDetailsRevealer;\n\nexport class FrameDetailsRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): FrameDetailsRevealer {\n    const {forceNew} = opts;\n    if (!frameDetailsRevealerInstance || forceNew) {\n      frameDetailsRevealerInstance = new FrameDetailsRevealer();\n    }\n\n    return frameDetailsRevealerInstance;\n  }\n\n  async reveal(frame: Object): Promise<void> {\n    if (!(frame instanceof SDK.ResourceTreeModel.ResourceTreeFrame)) {\n      throw new Error('Internal error: not a frame');\n    }\n    const sidebar = await ResourcesPanel.showAndGetSidebar();\n    sidebar.showFrame(frame);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
