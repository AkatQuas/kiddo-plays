{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/PermissionsPolicySection.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../../ui/components/report_view/report_view.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport permissionsPolicySectionStyles from './permissionsPolicySection.css.js';\n\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Common from '../../../core/common/common.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for a button. When clicked more details (for the content this button refers to) will be shown.\n  */\n  showDetails: 'Show details',\n  /**\n  *@description Label for a button. When clicked some details (for the content this button refers to) will be hidden.\n  */\n  hideDetails: 'Hide details',\n  /**\n  *@description Label for a list of features which are allowed according to the current Permissions policy\n  *(a mechanism that allows developers to enable/disable browser features and APIs (e.g. camera, geolocation, autoplay))\n  */\n  allowedFeatures: 'Allowed Features',\n  /**\n  *@description Label for a list of features which are disabled according to the current Permissions policy\n  *(a mechanism that allows developers to enable/disable browser features and APIs (e.g. camera, geolocation, autoplay))\n  */\n  disabledFeatures: 'Disabled Features',\n  /**\n  *@description Tooltip text for a link to a specific request's headers in the Network panel.\n  */\n  clickToShowHeader: 'Click to reveal the request whose \"`Permissions-Policy`\" HTTP header disables this feature.',\n  /**\n  *@description Tooltip text for a link to a specific iframe in the Elements panel (Iframes can be nested, the link goes\n  *  to the outer-most iframe which blocks a certain feature).\n  */\n  clickToShowIframe: 'Click to reveal the top-most iframe which does not allow this feature in the elements panel.',\n  /**\n  *@description Text describing that a specific feature is blocked by not being included in the iframe's \"allow\" attribute.\n  */\n  disabledByIframe: 'missing in iframe \"`allow`\" attribute',\n  /**\n  *@description Text describing that a specific feature is blocked by a Permissions Policy specified in a request header.\n  */\n  disabledByHeader: 'disabled by \"`Permissions-Policy`\" header',\n  /**\n   *@description Text describing that a specific feature is blocked by virtue of being inside a fenced frame tree.\n   */\n  disabledByFencedFrame: 'disabled inside a `fencedframe`',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/PermissionsPolicySection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport interface PermissionsPolicySectionData {\n  policies: Protocol.Page.PermissionsPolicyFeatureState[];\n  showDetails: boolean;\n}\n\nexport function renderIconLink(\n    iconName: string, title: Platform.UIString.LocalizedString,\n    clickHandler: (() => void)|(() => Promise<void>)): LitHtml.TemplateResult {\n  // Disabled until https://crbug.com/1079231 is fixed.\n  // clang-format off\n  return LitHtml.html`\n    <button class=\"link\" role=\"link\" tabindex=0 @click=${clickHandler} title=${title}>\n      <${IconButton.Icon.Icon.litTagName} .data=${{\n        iconName: iconName,\n        color: 'var(--color-primary)',\n        width: '16px',\n        height: '16px',\n      } as IconButton.Icon.IconData}>\n      </${IconButton.Icon.Icon.litTagName}>\n    </button>\n  `;\n  // clang-format on\n}\n\nexport class PermissionsPolicySection extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-resources-permissions-policy-section`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #permissionsPolicySectionData: PermissionsPolicySectionData = {policies: [], showDetails: false};\n\n  set data(data: PermissionsPolicySectionData) {\n    this.#permissionsPolicySectionData = data;\n    void this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [permissionsPolicySectionStyles];\n  }\n\n  #toggleShowPermissionsDisallowedDetails(): void {\n    this.#permissionsPolicySectionData.showDetails = !this.#permissionsPolicySectionData.showDetails;\n    void this.#render();\n  }\n\n  #renderAllowed(): LitHtml.LitTemplate {\n    const allowed = this.#permissionsPolicySectionData.policies.filter(p => p.allowed).map(p => p.feature).sort();\n    if (!allowed.length) {\n      return LitHtml.nothing;\n    }\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.allowedFeatures)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        ${allowed.join(', ')}\n      </${ReportView.ReportView.ReportValue.litTagName}>\n    `;\n  }\n\n  async #renderDisallowed(): Promise<LitHtml.LitTemplate> {\n    const disallowed = this.#permissionsPolicySectionData.policies.filter(p => !p.allowed)\n                           .sort((a, b) => a.feature.localeCompare(b.feature));\n    if (!disallowed.length) {\n      return LitHtml.nothing;\n    }\n    if (!this.#permissionsPolicySectionData.showDetails) {\n      return LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.disabledFeatures)}</${\n          ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName}>\n          ${disallowed.map(p => p.feature).join(', ')}\n          <button class=\"link\" @click=${(): void => this.#toggleShowPermissionsDisallowedDetails()}>\n            ${i18nString(UIStrings.showDetails)}\n          </button>\n        </${ReportView.ReportView.ReportValue.litTagName}>\n      `;\n    }\n\n    const frameManager = SDK.FrameManager.FrameManager.instance();\n    const featureRows = await Promise.all(disallowed.map(async policy => {\n      const frame = policy.locator ? frameManager.getFrame(policy.locator.frameId) : null;\n      const blockReason = policy.locator?.blockReason;\n      const linkTargetDOMNode = await (\n          blockReason === Protocol.Page.PermissionsPolicyBlockReason.IframeAttribute && frame &&\n          frame.getOwnerDOMNodeOrDocument());\n      const resource = frame && frame.resourceForURL(frame.url);\n      const linkTargetRequest =\n          blockReason === Protocol.Page.PermissionsPolicyBlockReason.Header && resource && resource.request;\n      const blockReasonText = ((): String => {\n        switch (blockReason) {\n          case Protocol.Page.PermissionsPolicyBlockReason.IframeAttribute:\n            return i18nString(UIStrings.disabledByIframe);\n          case Protocol.Page.PermissionsPolicyBlockReason.Header:\n            return i18nString(UIStrings.disabledByHeader);\n          case Protocol.Page.PermissionsPolicyBlockReason.InFencedFrameTree:\n            return i18nString(UIStrings.disabledByFencedFrame);\n          default:\n            return '';\n        }\n      })();\n      const revealHeader = async(): Promise<void> => {\n        if (!linkTargetRequest) {\n          return;\n        }\n        const headerName =\n            linkTargetRequest.responseHeaderValue('permissions-policy') ? 'permissions-policy' : 'feature-policy';\n        const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.responseHeaderMatch(\n            linkTargetRequest,\n            {name: headerName, value: ''},\n        );\n        await Common.Revealer.reveal(requestLocation);\n      };\n\n      return LitHtml.html`\n        <div class=\"permissions-row\">\n          <div>\n            <${IconButton.Icon.Icon.litTagName} class=\"allowed-icon\"\n              .data=${{color: '', iconName: 'error_icon', width: '14px'} as IconButton.Icon.IconData}>\n            </${IconButton.Icon.Icon.litTagName}>\n          </div>\n          <div class=\"feature-name text-ellipsis\">\n            ${policy.feature}\n          </div>\n          <div class=\"block-reason\">${blockReasonText}</div>\n          <div>\n            ${\n          linkTargetDOMNode ? renderIconLink(\n                                  'elements_panel_icon',\n                                  i18nString(UIStrings.clickToShowIframe),\n                                  (): Promise<void> => Common.Revealer.reveal(linkTargetDOMNode),\n                                  ) :\n                              LitHtml.nothing}\n            ${\n          linkTargetRequest ? renderIconLink(\n                                  'network_panel_icon',\n                                  i18nString(UIStrings.clickToShowHeader),\n                                  revealHeader,\n                                  ) :\n                              LitHtml.nothing}\n          </div>\n        </div>\n      `;\n    }));\n\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.disabledFeatures)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName} class=\"policies-list\">\n        ${featureRows}\n        <div class=\"permissions-row\">\n          <button class=\"link\" @click=${(): void => this.#toggleShowPermissionsDisallowedDetails()}>\n            ${i18nString(UIStrings.hideDetails)}\n          </button>\n        </div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n    `;\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('PermissionsPolicySection render', () => {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(\n        LitHtml.html`\n          <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18n.i18n.lockedString('Permissions Policy')}</${\n            ReportView.ReportView.ReportSectionHeader.litTagName}>\n          ${this.#renderAllowed()}\n          ${LitHtml.Directives.until(this.#renderDisallowed(), LitHtml.nothing)}\n          <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n            ReportView.ReportView.ReportSectionDivider.litTagName}>\n        `,\n        this.#shadow, {host: this},\n      );\n      // clang-format on\n    });\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-resources-permissions-policy-section', PermissionsPolicySection);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-resources-permissions-policy-section': PermissionsPolicySection;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
