{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/FrameDetailsView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {StackTraceData} from './StackTrace.js';\nimport {StackTrace} from './StackTrace.js';\nimport type {PermissionsPolicySectionData} from './PermissionsPolicySection.js';\nimport {PermissionsPolicySection, renderIconLink} from './PermissionsPolicySection.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as NetworkForward from '../../../panels/network/forward/forward.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as ExpandableList from '../../../ui/components/expandable_list/expandable_list.js';\nimport * as ReportView from '../../../ui/components/report_view/report_view.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Components from '../../../ui/legacy/components/utils/utils.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport type {OriginTrialTreeViewData} from './OriginTrialTreeView.js';\nimport {OriginTrialTreeView} from './OriginTrialTreeView.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport frameDetailsReportViewStyles from './frameDetailsReportView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Section header in the Frame Details view\n  */\n  additionalInformation: 'Additional Information',\n  /**\n  *@description Explanation for why the additional information section is being shown\n  */\n  thisAdditionalDebugging:\n      'This additional (debugging) information is shown because the \\'Protocol Monitor\\' experiment is enabled.',\n  /**\n  *@description Label for subtitle of frame details view\n  */\n  frameId: 'Frame ID',\n  /**\n  *@description Name of a network resource type\n  */\n  document: 'Document',\n  /**\n  *@description A web URL (for a lot of languages this does not need to be translated, please translate only where necessary)\n  */\n  url: 'URL',\n  /**\n  /**\n  *@description Title for a link to the Sources panel\n  */\n  clickToRevealInSourcesPanel: 'Click to reveal in Sources panel',\n  /**\n  *@description Title for a link to the Network panel\n  */\n  clickToRevealInNetworkPanel: 'Click to reveal in Network panel',\n  /**\n  *@description Title for unreachable URL field\n  */\n  unreachableUrl: 'Unreachable URL',\n  /**\n  *@description Title for a link that applies a filter to the network panel\n  */\n  clickToRevealInNetworkPanelMight: 'Click to reveal in Network panel (might require page reload)',\n  /**\n  *@description The origin of a URL (https://web.dev/same-site-same-origin/#origin)\n  *(for a lot of languages this does not need to be translated, please translate only where necessary)\n  */\n  origin: 'Origin',\n  /**\n  /**\n  *@description Related node label in Timeline UIUtils of the Performance panel\n  */\n  ownerElement: 'Owner Element',\n  /**\n  *@description Title for a link to the Elements panel\n  */\n  clickToRevealInElementsPanel: 'Click to reveal in Elements panel',\n  /**\n  *@description Title for ad frame type field\n  */\n  adStatus: 'Ad Status',\n  /**\n  *@description Description for ad frame type\n  */\n  rootDescription: 'This frame has been identified as the root frame of an ad',\n  /**\n  *@description Value for ad frame type\n  */\n  root: 'root',\n  /**\n  *@description Description for ad frame type\n  */\n  childDescription: 'This frame has been identified as a child frame of an ad',\n  /**\n  *@description Value for ad frame type\n  */\n  child: 'child',\n  /**\n  *@description Section header in the Frame Details view\n  */\n  securityIsolation: 'Security & Isolation',\n  /**\n  *@description Row title for in the Frame Details view\n  */\n  secureContext: 'Secure Context',\n  /**\n  *@description Text in Timeline indicating that input has happened recently\n  */\n  yes: 'Yes',\n  /**\n  *@description Text in Timeline indicating that input has not happened recently\n  */\n  no: 'No',\n  /**\n  *@description Label for whether a frame is cross-origin isolated\n  *(https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/)\n  *(for a lot of languages this does not need to be translated, please translate only where necessary)\n  */\n  crossoriginIsolated: 'Cross-Origin Isolated',\n  /**\n  *@description Explanatory text in the Frame Details view\n  */\n  localhostIsAlwaysASecureContext: '`Localhost` is always a secure context',\n  /**\n  *@description Explanatory text in the Frame Details view\n  */\n  aFrameAncestorIsAnInsecure: 'A frame ancestor is an insecure context',\n  /**\n  *@description Explanatory text in the Frame Details view\n  */\n  theFramesSchemeIsInsecure: 'The frame\\'s scheme is insecure',\n  /**\n  *@description This label specifies the server endpoints to which the server is reporting errors\n  *and warnings through the Report-to API. Following this label will be the URL of the server.\n  */\n  reportingTo: 'reporting to',\n  /**\n  *@description Section header in the Frame Details view\n  */\n  apiAvailability: 'API availability',\n  /**\n  *@description Explanation of why cross-origin isolation is important\n  *(https://web.dev/why-coop-coep/)\n  *(for a lot of languages 'cross-origin isolation' does not need to be translated, please translate only where necessary)\n  */\n  availabilityOfCertainApisDepends: 'Availability of certain APIs depends on the document being cross-origin isolated.',\n  /**\n  *@description Description of the SharedArrayBuffer status\n  */\n  availableTransferable: 'available, transferable',\n  /**\n  *@description Description of the SharedArrayBuffer status\n  */\n  availableNotTransferable: 'available, not transferable',\n  /**\n  *@description Explanation for the SharedArrayBuffer availability status\n  */\n  unavailable: 'unavailable',\n  /**\n  *@description Tooltip for the SharedArrayBuffer availability status\n  */\n  sharedarraybufferConstructorIs:\n      '`SharedArrayBuffer` constructor is available and `SABs` can be transferred via `postMessage`',\n  /**\n  *@description Tooltip for the SharedArrayBuffer availability status\n  */\n  sharedarraybufferConstructorIsAvailable:\n      '`SharedArrayBuffer` constructor is available but `SABs` cannot be transferred via `postMessage`',\n  /**\n  *@description Explanation why SharedArrayBuffer will not be available in the future\n  *(https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/)\n  *(for a lot of languages 'cross-origin isolation' does not need to be translated, please translate only where necessary)\n  */\n  willRequireCrossoriginIsolated: '\u26A0\uFE0F will require cross-origin isolated context in the future',\n  /**\n  *@description Explanation why SharedArrayBuffer is not available\n  *(https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/)\n  *(for a lot of languages 'cross-origin isolation' does not need to be translated, please translate only where necessary).\n  */\n  requiresCrossoriginIsolated: 'requires cross-origin isolated context',\n  /**\n   *@description Explanation for the SharedArrayBuffer availability status in case the transfer of a SAB requires the\n   * permission policy `cross-origin-isolated` to be enabled (e.g. because the message refers to the situation in an iframe).\n   */\n  transferRequiresCrossoriginIsolatedPermission:\n      '`SharedArrayBuffer` transfer requires enabling the permission policy:',\n  /**\n  *@description Explanation for the Measure Memory availability status\n  */\n  available: 'available',\n  /**\n  *@description Tooltip for the Measure Memory availability status\n  */\n  thePerformanceAPI: 'The `performance.measureUserAgentSpecificMemory()` API is available',\n  /**\n  *@description Tooltip for the Measure Memory availability status\n  */\n  thePerformancemeasureuseragentspecificmemory:\n      'The `performance.measureUserAgentSpecificMemory()` API is not available',\n  /**\n  *@description Entry in the API availability section of the frame details view\n  */\n  measureMemory: 'Measure Memory',\n  /**\n  *@description Text that is usually a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Label for a stack trace. If a frame is created programmatically (i.e. via JavaScript), there is a\n  * stack trace for the line of code which caused the creation of the iframe. This is the stack trace we are showing here.\n  */\n  creationStackTrace: 'Frame Creation `Stack Trace`',\n  /**\n  *@description Tooltip for 'Frame Creation Stack Trace' explaining that the stack\n  *trace shows where in the code the frame has been created programmatically\n  */\n  creationStackTraceExplanation:\n      'This frame was created programmatically. The `stack trace` shows where this happened.',\n  /**\n  *@description Text descripting why a frame has been indentified as an advertisement.\n  */\n  parentIsAdExplanation: 'This frame is considered an ad frame because its parent frame is an ad frame.',\n  /**\n  *@description Text descripting why a frame has been indentified as an advertisement.\n  */\n  matchedBlockingRuleExplanation:\n      'This frame is considered an ad frame because its current (or previous) main document is an ad resource.',\n  /**\n  *@description Text descripting why a frame has been indentified as an advertisement.\n  */\n  createdByAdScriptExplanation:\n      'There was an ad script in the `(async) stack` when this frame was created. Examining the creation `stack trace` of this frame might provide more insight.',\n  /**\n  *@description Label for a button which when clicked causes some information to be refreshed/updated.\n  */\n  refresh: 'Refresh',\n  /**\n  *@description Label for section of frame details view\n  */\n  prerendering: 'Prerendering',\n  /**\n  *@description Label for subtitle of frame details view\n  */\n  prerenderingStatus: 'Prerendering Status',\n  /**\n  *@description Label for a link to an ad script, which created the current iframe.\n  */\n  creatorAdScript: 'Creator Ad Script',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/FrameDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FrameDetailsView extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #reportView = new FrameDetailsReportView();\n  readonly #frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n\n  constructor(frame: SDK.ResourceTreeModel.ResourceTreeFrame) {\n    super();\n    this.#frame = frame;\n    this.contentElement.classList.add('overflow-auto');\n    this.contentElement.appendChild(this.#reportView);\n    this.update();\n    frame.resourceTreeModel().addEventListener(\n        SDK.ResourceTreeModel.Events.PrerenderingStatusUpdated, this.update, this);\n  }\n\n  async doUpdate(): Promise<void> {\n    const debuggerId = this.#frame?.getDebuggerId();\n    const debuggerModel = debuggerId ? await SDK.DebuggerModel.DebuggerModel.modelForDebuggerId(debuggerId) : null;\n    const target = debuggerModel?.target();\n    this.#reportView.data = {frame: this.#frame, target};\n  }\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport interface FrameDetailsReportViewData {\n  frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n  target?: SDK.Target.Target;\n}\n\nexport class FrameDetailsReportView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-resources-frame-details-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #frame?: SDK.ResourceTreeModel.ResourceTreeFrame;\n  #target?: SDK.Target.Target;\n  #protocolMonitorExperimentEnabled = false;\n  #permissionsPolicies: Promise<Protocol.Page.PermissionsPolicyFeatureState[]|null>|null = null;\n  #permissionsPolicySectionData: PermissionsPolicySectionData = {policies: [], showDetails: false};\n  #originTrialTreeView: OriginTrialTreeView = new OriginTrialTreeView();\n  #linkifier = new Components.Linkifier.Linkifier();\n\n  connectedCallback(): void {\n    this.#protocolMonitorExperimentEnabled = Root.Runtime.experiments.isEnabled('protocolMonitor');\n    this.#shadow.adoptedStyleSheets = [frameDetailsReportViewStyles];\n  }\n\n  set data(data: FrameDetailsReportViewData) {\n    this.#frame = data.frame;\n    this.#target = data.target;\n    if (!this.#permissionsPolicies && this.#frame) {\n      this.#permissionsPolicies = this.#frame.getPermissionsPolicyState();\n    }\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('FrameDetailsView render', () => {\n      if (!this.#frame) {\n        return;\n      }\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <${ReportView.ReportView.Report.litTagName} .data=${{reportTitle: this.#frame.displayName()} as ReportView.ReportView.ReportData}>\n          ${this.#renderDocumentSection()}\n          ${this.#renderIsolationSection()}\n          ${this.#renderApiAvailabilitySection()}\n          ${this.#renderOriginTrial()}\n          ${LitHtml.Directives.until(this.#permissionsPolicies?.then(policies => {\n            this.#permissionsPolicySectionData.policies = policies || [];\n            return LitHtml.html`\n              <${PermissionsPolicySection.litTagName}\n                .data=${this.#permissionsPolicySectionData as PermissionsPolicySectionData}\n              >\n              </${PermissionsPolicySection.litTagName}>\n            `;\n          }), LitHtml.nothing)}\n          ${this.#renderPrerenderingSection()}\n          ${this.#protocolMonitorExperimentEnabled ? this.#renderAdditionalInfoSection() : LitHtml.nothing}\n        </${ReportView.ReportView.Report.litTagName}>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #renderOriginTrial(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n\n    this.#originTrialTreeView.classList.add('span-cols');\n\n    const frame = this.#frame;\n    const refreshOriginTrials: () => void = () => {\n      void frame.getOriginTrials().then(trials => {\n        this.#originTrialTreeView.data = {trials} as OriginTrialTreeViewData;\n      });\n    };\n    refreshOriginTrials();\n\n    return LitHtml.html`\n    <${ReportView.ReportView.ReportSectionHeader.litTagName}>\n      ${i18n.i18n.lockedString('Origin Trials')}\n      <${IconButton.IconButton.IconButton.litTagName} class=\"inline-button\" .data=${{\n      clickHandler: refreshOriginTrials,\n      groups: [\n        {\n          iconName: 'refresh_12x12_icon',\n          text: i18nString(UIStrings.refresh),\n          iconColor: 'var(--color-text-primary)',\n        } as IconButton.IconButton.IconWithTextData,\n      ],\n    } as IconButton.IconButton.IconButtonData}>\n      </${IconButton.IconButton.IconButton.litTagName}>\n    </${ReportView.ReportView.ReportSectionHeader.litTagName}>\n    ${this.#originTrialTreeView}\n    <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n\n  #renderDocumentSection(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.document)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.url)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        <div class=\"inline-items\">\n          ${this.#maybeRenderSourcesLinkForURL()}\n          ${this.#maybeRenderNetworkLinkForURL()}\n          <div class=\"text-ellipsis\" title=${this.#frame.url}>${this.#frame.url}</div>\n        </div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n      ${this.#maybeRenderUnreachableURL()}\n      ${this.#maybeRenderOrigin()}\n      ${LitHtml.Directives.until(this.#renderOwnerElement(), LitHtml.nothing)}\n      ${this.#maybeRenderCreationStacktrace()}\n      ${this.#maybeRenderAdStatus()}\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n\n  #maybeRenderSourcesLinkForURL(): LitHtml.LitTemplate {\n    if (!this.#frame || this.#frame.unreachableUrl()) {\n      return LitHtml.nothing;\n    }\n    const sourceCode = this.#uiSourceCodeForFrame(this.#frame);\n    return renderIconLink(\n        'sources_panel_icon',\n        i18nString(UIStrings.clickToRevealInSourcesPanel),\n        (): Promise<void> => Common.Revealer.reveal(sourceCode),\n    );\n  }\n\n  #maybeRenderNetworkLinkForURL(): LitHtml.LitTemplate {\n    if (this.#frame) {\n      const resource = this.#frame.resourceForURL(this.#frame.url);\n      if (resource && resource.request) {\n        const request = resource.request;\n        return renderIconLink(\n            'network_panel_icon', i18nString(UIStrings.clickToRevealInNetworkPanel), (): Promise<void> => {\n              const requestLocation = NetworkForward.UIRequestLocation.UIRequestLocation.tab(\n                  request, NetworkForward.UIRequestLocation.UIRequestTabs.Headers);\n              return Common.Revealer.reveal(requestLocation);\n            });\n      }\n    }\n    return LitHtml.nothing;\n  }\n\n  #uiSourceCodeForFrame(frame: SDK.ResourceTreeModel.ResourceTreeFrame): Workspace.UISourceCode.UISourceCode|null {\n    for (const project of Workspace.Workspace.WorkspaceImpl.instance().projects()) {\n      const projectTarget = Bindings.NetworkProject.NetworkProject.getTargetForProject(project);\n      if (projectTarget && projectTarget === frame.resourceTreeModel().target()) {\n        const uiSourceCode = project.uiSourceCodeForURL(frame.url);\n        if (uiSourceCode) {\n          return uiSourceCode;\n        }\n      }\n    }\n    return null;\n  }\n\n  #maybeRenderUnreachableURL(): LitHtml.LitTemplate {\n    if (!this.#frame || !this.#frame.unreachableUrl()) {\n      return LitHtml.nothing;\n    }\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.unreachableUrl)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        <div class=\"inline-items\">\n          ${this.#renderNetworkLinkForUnreachableURL()}\n          <div class=\"text-ellipsis\" title=${this.#frame.unreachableUrl()}>${this.#frame.unreachableUrl()}</div>\n        </div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n    `;\n  }\n\n  #renderNetworkLinkForUnreachableURL(): LitHtml.LitTemplate {\n    if (this.#frame) {\n      const unreachableUrl = Common.ParsedURL.ParsedURL.fromString(this.#frame.unreachableUrl());\n      if (unreachableUrl) {\n        return renderIconLink(\n            'network_panel_icon',\n            i18nString(UIStrings.clickToRevealInNetworkPanelMight),\n            ():\n                void => {\n                  void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([\n                    {\n                      filterType: NetworkForward.UIFilter.FilterType.Domain,\n                      filterValue: unreachableUrl.domain(),\n                    },\n                    {\n                      filterType: null,\n                      filterValue: unreachableUrl.path,\n                    },\n                  ]));\n                },\n        );\n      }\n    }\n    return LitHtml.nothing;\n  }\n\n  #maybeRenderOrigin(): LitHtml.LitTemplate {\n    if (this.#frame && this.#frame.securityOrigin && this.#frame.securityOrigin !== '://') {\n      return LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.origin)}</${\n          ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName}>\n          <div class=\"text-ellipsis\" title=${this.#frame.securityOrigin}>${this.#frame.securityOrigin}</div>\n        </${ReportView.ReportView.ReportValue.litTagName}>\n      `;\n    }\n    return LitHtml.nothing;\n  }\n\n  async #renderOwnerElement(): Promise<LitHtml.LitTemplate> {\n    if (this.#frame) {\n      const linkTargetDOMNode = await this.#frame.getOwnerDOMNodeOrDocument();\n      if (linkTargetDOMNode) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return LitHtml.html`\n            <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.ownerElement)}</${ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName} class=\"without-min-width\">\n              <button class=\"link\" role=\"link\" tabindex=0 title=${i18nString(UIStrings.clickToRevealInElementsPanel)}\n              @mouseenter=${(): Promise<void>|undefined => this.#frame?.highlight()}\n              @mouseleave=${(): void => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight()}\n              @click=${(): Promise<void> => Common.Revealer.reveal(linkTargetDOMNode)}\n            >\n              <${IconButton.Icon.Icon.litTagName} class=\"button-icon-with-text\" .data=${{\n                iconName: 'elements_panel_icon',\n                color: 'var(--color-primary)',\n                width: '16px',\n                height: '16px',\n              } as IconButton.Icon.IconData}></${IconButton.Icon.Icon.litTagName}>\n              &lt;${linkTargetDOMNode.nodeName().toLocaleLowerCase()}&gt;\n            </button>\n          </${ReportView.ReportView.ReportValue.litTagName}>\n        `;\n        // clang-format on\n      }\n    }\n    return LitHtml.nothing;\n  }\n\n  #maybeRenderCreationStacktrace(): LitHtml.LitTemplate {\n    const creationStackTraceData = this.#frame?.getCreationStackTraceData();\n    if (creationStackTraceData && creationStackTraceData.creationStackTrace) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName} title=${i18nString(UIStrings.creationStackTraceExplanation)}>${\n          i18nString(UIStrings.creationStackTrace)}</${ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName}>\n          <${StackTrace.litTagName} .data=${{\n            frame: this.#frame,\n            buildStackTraceRows: Components.JSPresentationUtils.buildStackTraceRows,\n          } as StackTraceData}>\n          </${StackTrace.litTagName}>\n        </${ReportView.ReportView.ReportValue.litTagName}>\n      `;\n      // clang-format on\n    }\n    return LitHtml.nothing;\n  }\n\n  #getAdFrameTypeStrings(type: Protocol.Page.AdFrameType.Child|Protocol.Page.AdFrameType.Root):\n      {value: Platform.UIString.LocalizedString, description: Platform.UIString.LocalizedString} {\n    switch (type) {\n      case Protocol.Page.AdFrameType.Child:\n        return {value: i18nString(UIStrings.child), description: i18nString(UIStrings.childDescription)};\n      case Protocol.Page.AdFrameType.Root:\n        return {value: i18nString(UIStrings.root), description: i18nString(UIStrings.rootDescription)};\n    }\n  }\n\n  #getAdFrameExplanationString(explanation: Protocol.Page.AdFrameExplanation): Platform.UIString.LocalizedString {\n    switch (explanation) {\n      case Protocol.Page.AdFrameExplanation.CreatedByAdScript:\n        return i18nString(UIStrings.createdByAdScriptExplanation);\n      case Protocol.Page.AdFrameExplanation.MatchedBlockingRule:\n        return i18nString(UIStrings.matchedBlockingRuleExplanation);\n      case Protocol.Page.AdFrameExplanation.ParentIsAd:\n        return i18nString(UIStrings.parentIsAdExplanation);\n    }\n  }\n\n  #maybeRenderAdStatus(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n    const adFrameType = this.#frame.adFrameType();\n    if (adFrameType === Protocol.Page.AdFrameType.None) {\n      return LitHtml.nothing;\n    }\n    const typeStrings = this.#getAdFrameTypeStrings(adFrameType);\n    const rows = [LitHtml.html`<div title=${typeStrings.description}>${typeStrings.value}</div>`];\n    for (const explanation of this.#frame.adFrameStatus()?.explanations || []) {\n      rows.push(LitHtml.html`<div>${this.#getAdFrameExplanationString(explanation)}</div>`);\n    }\n\n    const adScriptLinkElement = this.#target ?\n        this.#linkifier.linkifyScriptLocation(\n            this.#target, this.#frame.getAdScriptId(), Platform.DevToolsPath.EmptyUrlString, undefined, undefined) :\n        null;\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.adStatus)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        <${ExpandableList.ExpandableList.ExpandableList.litTagName} .data=${\n          {rows} as ExpandableList.ExpandableList.ExpandableListData}></${\n        ExpandableList.ExpandableList.ExpandableList.litTagName}></${ReportView.ReportView.ReportValue.litTagName}>\n      ${this.#target ? LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.creatorAdScript)}</${\n          ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName} class=\"ad-script-link\">${adScriptLinkElement}</${\n          ReportView.ReportView.ReportValue.litTagName}>\n      ` : LitHtml.nothing}\n    `;\n    // clang-format on\n  }\n\n  #renderIsolationSection(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.securityIsolation)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.secureContext)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        ${this.#frame.isSecureContext() ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\\xA0${\n        this.#maybeRenderSecureContextExplanation()}\n      </${ReportView.ReportView.ReportValue.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.crossoriginIsolated)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        ${this.#frame.isCrossOriginIsolated() ? i18nString(UIStrings.yes) : i18nString(UIStrings.no)}\n      </${ReportView.ReportView.ReportValue.litTagName}>\n      ${LitHtml.Directives.until(this.#maybeRenderCoopCoepStatus(), LitHtml.nothing)}\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n\n  #maybeRenderSecureContextExplanation(): LitHtml.LitTemplate {\n    const explanation = this.#getSecureContextExplanation();\n    if (explanation) {\n      return LitHtml.html`<span class=\"inline-comment\">${explanation}</span>`;\n    }\n    return LitHtml.nothing;\n  }\n\n  #getSecureContextExplanation(): Platform.UIString.LocalizedString|null {\n    switch (this.#frame?.getSecureContextType()) {\n      case Protocol.Page.SecureContextType.Secure:\n        return null;\n      case Protocol.Page.SecureContextType.SecureLocalhost:\n        return i18nString(UIStrings.localhostIsAlwaysASecureContext);\n      case Protocol.Page.SecureContextType.InsecureAncestor:\n        return i18nString(UIStrings.aFrameAncestorIsAnInsecure);\n      case Protocol.Page.SecureContextType.InsecureScheme:\n        return i18nString(UIStrings.theFramesSchemeIsInsecure);\n    }\n    return null;\n  }\n\n  async #maybeRenderCoopCoepStatus(): Promise<LitHtml.LitTemplate> {\n    if (this.#frame) {\n      const model = this.#frame.resourceTreeModel().target().model(SDK.NetworkManager.NetworkManager);\n      const info = model && await model.getSecurityIsolationStatus(this.#frame.id);\n      if (info) {\n        return LitHtml.html`\n          ${\n            this.#maybeRenderCrossOriginStatus(\n                info.coep, i18n.i18n.lockedString('Cross-Origin Embedder Policy (COEP)'),\n                Protocol.Network.CrossOriginEmbedderPolicyValue.None)}\n          ${\n            this.#maybeRenderCrossOriginStatus(\n                info.coop, i18n.i18n.lockedString('Cross-Origin Opener Policy (COOP)'),\n                Protocol.Network.CrossOriginOpenerPolicyValue.UnsafeNone)}\n        `;\n      }\n    }\n    return LitHtml.nothing;\n  }\n\n  #maybeRenderCrossOriginStatus(\n      info: Protocol.Network.CrossOriginEmbedderPolicyStatus|Protocol.Network.CrossOriginOpenerPolicyStatus|undefined,\n      policyName: string,\n      noneValue: Protocol.Network.CrossOriginEmbedderPolicyValue|\n      Protocol.Network.CrossOriginOpenerPolicyValue): LitHtml.LitTemplate {\n    if (!info) {\n      return LitHtml.nothing;\n    }\n    const isEnabled = info.value !== noneValue;\n    const isReportOnly = (!isEnabled && info.reportOnlyValue !== noneValue);\n    const endpoint = isEnabled ? info.reportingEndpoint : info.reportOnlyReportingEndpoint;\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportKey.litTagName}>${policyName}</${ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        ${isEnabled ? info.value : info.reportOnlyValue}\n        ${isReportOnly ? LitHtml.html`<span class=\"inline-comment\">report-only</span>` : LitHtml.nothing}\n        ${\n        endpoint ? LitHtml.html`<span class=\"inline-name\">${i18nString(UIStrings.reportingTo)}</span>${endpoint}` :\n                   LitHtml.nothing}\n      </${ReportView.ReportView.ReportValue.litTagName}>\n    `;\n  }\n\n  #renderApiAvailabilitySection(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.apiAvailability)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <div class=\"span-cols\">\n        ${i18nString(UIStrings.availabilityOfCertainApisDepends)}\n        <x-link href=\"https://web.dev/why-coop-coep/\" class=\"link\">${i18nString(UIStrings.learnMore)}</x-link>\n      </div>\n      ${this.#renderSharedArrayBufferAvailability()}\n      ${this.#renderMeasureMemoryAvailability()}\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n\n  #renderSharedArrayBufferAvailability(): LitHtml.LitTemplate {\n    if (this.#frame) {\n      const features = this.#frame.getGatedAPIFeatures();\n      if (features) {\n        const sabAvailable = features.includes(Protocol.Page.GatedAPIFeatures.SharedArrayBuffers);\n        const sabTransferAvailable =\n            sabAvailable && features.includes(Protocol.Page.GatedAPIFeatures.SharedArrayBuffersTransferAllowed);\n        const availabilityText = sabTransferAvailable ?\n            i18nString(UIStrings.availableTransferable) :\n            (sabAvailable ? i18nString(UIStrings.availableNotTransferable) : i18nString(UIStrings.unavailable));\n        const tooltipText = sabTransferAvailable ?\n            i18nString(UIStrings.sharedarraybufferConstructorIs) :\n            (sabAvailable ? i18nString(UIStrings.sharedarraybufferConstructorIsAvailable) : '');\n\n        function renderHint(frame: SDK.ResourceTreeModel.ResourceTreeFrame): LitHtml.LitTemplate {\n          switch (frame.getCrossOriginIsolatedContextType()) {\n            case Protocol.Page.CrossOriginIsolatedContextType.Isolated:\n              return LitHtml.nothing;\n            case Protocol.Page.CrossOriginIsolatedContextType.NotIsolated:\n              if (sabAvailable) {\n                return LitHtml.html`<span class=\"inline-comment\">${\n                    i18nString(UIStrings.willRequireCrossoriginIsolated)}</span>`;\n              }\n              return LitHtml.html`<span class=\"inline-comment\">${\n                  i18nString(UIStrings.requiresCrossoriginIsolated)}</span>`;\n            case Protocol.Page.CrossOriginIsolatedContextType.NotIsolatedFeatureDisabled:\n              if (!sabTransferAvailable) {\n                return LitHtml.html`<span class=\"inline-comment\">${\n                    i18nString(\n                        UIStrings\n                            .transferRequiresCrossoriginIsolatedPermission)} <code>cross-origin-isolated</code></span>`;\n              }\n              break;\n          }\n          return LitHtml.nothing;\n        }\n\n        // SharedArrayBuffer is an API name, so we don't translate it.\n        return LitHtml.html`\n          <${ReportView.ReportView.ReportKey.litTagName}>SharedArrayBuffers</${\n            ReportView.ReportView.ReportKey.litTagName}>\n          <${ReportView.ReportView.ReportValue.litTagName} title=${tooltipText}>\n            ${availabilityText}\\xA0${renderHint(this.#frame)}\n          </${ReportView.ReportView.ReportValue.litTagName}>\n        `;\n      }\n    }\n    return LitHtml.nothing;\n  }\n\n  #renderMeasureMemoryAvailability(): LitHtml.LitTemplate {\n    if (this.#frame) {\n      const measureMemoryAvailable = this.#frame.isCrossOriginIsolated();\n      const availabilityText =\n          measureMemoryAvailable ? i18nString(UIStrings.available) : i18nString(UIStrings.unavailable);\n      const tooltipText = measureMemoryAvailable ? i18nString(UIStrings.thePerformanceAPI) :\n                                                   i18nString(UIStrings.thePerformancemeasureuseragentspecificmemory);\n      return LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.measureMemory)}</${\n          ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName}>\n          <span title=${tooltipText}>${\n          availabilityText}</span>\\xA0<x-link class=\"link\" href=\"https://web.dev/monitor-total-page-memory-usage/\">${\n          i18nString(UIStrings.learnMore)}</x-link>\n        </${ReportView.ReportView.ReportValue.litTagName}>\n      `;\n    }\n    return LitHtml.nothing;\n  }\n\n  #renderPrerenderingSection(): LitHtml.LitTemplate {\n    if (!this.#frame || !this.#frame.prerenderFinalStatus) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>\n      ${i18nString(UIStrings.prerendering)}</${ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.prerenderingStatus)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        <div class=\"text-ellipsis\" title=${this.#frame.prerenderFinalStatus}>${this.#frame.prerenderFinalStatus}</div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>`;\n  }\n\n  #renderAdditionalInfoSection(): LitHtml.LitTemplate {\n    if (!this.#frame) {\n      return LitHtml.nothing;\n    }\n\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}\n        title=${i18nString(UIStrings.thisAdditionalDebugging)}\n      >${i18nString(UIStrings.additionalInformation)}</${ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportKey.litTagName}>${i18nString(UIStrings.frameId)}</${\n        ReportView.ReportView.ReportKey.litTagName}>\n      <${ReportView.ReportView.ReportValue.litTagName}>\n        <div class=\"text-ellipsis\" title=${this.#frame.id}>${this.#frame.id}</div>\n      </${ReportView.ReportView.ReportValue.litTagName}>\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n        ReportView.ReportView.ReportSectionDivider.litTagName}>\n    `;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-resources-frame-details-view', FrameDetailsReportView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-resources-frame-details-view': FrameDetailsReportView;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
