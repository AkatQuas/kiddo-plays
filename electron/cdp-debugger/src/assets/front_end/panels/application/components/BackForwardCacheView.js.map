{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/BackForwardCacheView.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as ReportView from '../../../ui/components/report_view/report_view.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ChromeLink from '../../../ui/components/chrome_link/chrome_link.js';\nimport * as ExpandableList from '../../../ui/components/expandable_list/expandable_list.js';\n\nimport {NotRestoredReasonDescription} from './BackForwardCacheStrings.js';\nimport backForwardCacheViewStyles from './backForwardCacheView.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title text in back/forward cache view of the Application panel\n   */\n  mainFrame: 'Main Frame',\n  /**\n   * @description Title text in back/forward cache view of the Application panel\n   */\n  backForwardCacheTitle: 'Back/forward cache',\n  /**\n   * @description Status text for the status of the main frame\n   */\n  unavailable: 'unavailable',\n  /**\n   * @description Entry name text in the back/forward cache view of the Application panel\n   */\n  url: 'URL:',\n  /**\n   * @description Status text for the status of the back/forward cache status\n   */\n  unknown: 'Unknown Status',\n  /**\n   * @description Status text for the status of the back/forward cache status indicating that\n   * the back/forward cache was not used and a normal navigation occured instead.\n   */\n  normalNavigation:\n      'Not served from back/forward cache: to trigger back/forward cache, use Chrome\\'s back/forward buttons, or use the test button below to automatically navigate away and back.',\n  /**\n   * @description Status text for the status of the back/forward cache status indicating that\n   * the back/forward cache was used to restore the page instead of reloading it.\n   */\n  restoredFromBFCache: 'Successfully served from back/forward cache.',\n  /**\n   * @description Label for a list of reasons which prevent the page from being eligible for\n   * back/forward cache. These reasons are actionable i.e. they can be cleaned up to make the\n   * page eligible for back/forward cache.\n   */\n  pageSupportNeeded: 'Actionable',\n  /**\n   * @description Explanation for actionable items which prevent the page from being eligible\n   * for back/forward cache.\n   */\n  pageSupportNeededExplanation:\n      'These reasons are actionable i.e. they can be cleaned up to make the page eligible for back/forward cache.',\n  /**\n   * @description Label for a list of reasons which prevent the page from being eligible for\n   * back/forward cache. These reasons are circumstantial / not actionable i.e. they cannot be\n   * cleaned up by developers to make the page eligible for back/forward cache.\n   */\n  circumstantial: 'Not Actionable',\n  /**\n   * @description Explanation for circumstantial/non-actionable items which prevent the page from being eligible\n   * for back/forward cache.\n   */\n  circumstantialExplanation:\n      'These reasons are not actionable i.e. caching was prevented by something outside of the direct control of the page.',\n  /**\n   * @description Label for a list of reasons which prevent the page from being eligible for\n   * back/forward cache. These reasons are pending support by chrome i.e. in a future version\n   * of chrome they will not prevent back/forward cache usage anymore.\n   */\n  supportPending: 'Pending Support',\n  /**\n   * @description Label for the button to test whether BFCache is available for the page\n   */\n  runTest: 'Test back/forward cache',\n  /**\n   * @description Label for the disabled button while the test is running\n   */\n  runningTest: 'Running test',\n  /**\n   * @description Link Text about explanation of back/forward cache\n   */\n  learnMore: 'Learn more: back/forward cache eligibility',\n  /**\n   * @description Link Text about unload handler\n   */\n  neverUseUnload: 'Learn more: Never use unload handler',\n  /**\n   * @description Explanation for 'pending support' items which prevent the page from being eligible\n   * for back/forward cache.\n   */\n  supportPendingExplanation:\n      'Chrome support for these reasons is pending i.e. they will not prevent the page from being eligible for back/forward cache in a future version of Chrome.',\n  /**\n   * @description Text that precedes displaying a link to the extension which blocked the page from being eligible for back/forward cache.\n   */\n  blockingExtensionId: 'Extension id: ',\n  /**\n   * @description Label for the 'Frames' section of the back/forward cache view, which shows a frame tree of the\n   * page with reasons why the frames can't be cached.\n   */\n  framesTitle: 'Frames',\n  /**\n   * @description Top level summary of the total number of issues found in a single frame.\n   */\n  issuesInSingleFrame: '{n, plural, =1 {# issue found in 1 frame.} other {# issues found in 1 frame.}}',\n  /**\n   * @description Top level summary of the total number of issues found and the number of frames they were found in.\n   * 'm' is never less than 2.\n   * @example {3} m\n   */\n  issuesInMultipleFrames: '{n, plural, =1 {# issue found in {m} frames.} other {# issues found in {m} frames.}}',\n  /**\n   * @description Shows the number of frames with a particular issue.\n   */\n  framesPerIssue: '{n, plural, =1 {# frame} other {# frames}}',\n  /**\n  *@description Title for a frame in the frame tree that doesn't have a URL. Placeholder indicates which number frame with a blank URL it is.\n  *@example {3} PH1\n  */\n  blankURLTitle: 'Blank URL [{PH1}]',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/BackForwardCacheView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst enum ScreenStatusType {\n  Running = 'Running',\n  Result = 'Result',\n}\n\nexport class BackForwardCacheViewWrapper extends UI.ThrottledWidget.ThrottledWidget {\n  readonly #bfcacheView = new BackForwardCacheView();\n\n  constructor() {\n    super(true, 1000);\n    this.#getMainResourceTreeModel()?.addEventListener(\n        SDK.ResourceTreeModel.Events.MainFrameNavigated, this.update, this);\n    this.#getMainResourceTreeModel()?.addEventListener(\n        SDK.ResourceTreeModel.Events.BackForwardCacheDetailsUpdated, this.update, this);\n    this.contentElement.classList.add('overflow-auto');\n    this.contentElement.appendChild(this.#bfcacheView);\n    this.update();\n  }\n\n  async doUpdate(): Promise<void> {\n    this.#bfcacheView.data = {frame: this.#getMainFrame()};\n  }\n\n  #getMainResourceTreeModel(): SDK.ResourceTreeModel.ResourceTreeModel|null {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    return mainTarget?.model(SDK.ResourceTreeModel.ResourceTreeModel) || null;\n  }\n\n  #getMainFrame(): SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    return this.#getMainResourceTreeModel()?.mainFrame || null;\n  }\n}\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport interface BackForwardCacheViewData {\n  frame: SDK.ResourceTreeModel.ResourceTreeFrame|null;\n}\n\nexport class BackForwardCacheView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-resources-back-forward-cache-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #frame: SDK.ResourceTreeModel.ResourceTreeFrame|null = null;\n  #screenStatus = ScreenStatusType.Result;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [backForwardCacheViewStyles];\n  }\n\n  set data(data: BackForwardCacheViewData) {\n    this.#frame = data.frame;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('BackForwardCacheView render', () => {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <${ReportView.ReportView.Report.litTagName} .data=${\n            {reportTitle: i18nString(UIStrings.backForwardCacheTitle)} as ReportView.ReportView.ReportData\n        }>\n          ${this.#renderMainFrameInformation()}\n        </${ReportView.ReportView.Report.litTagName}>\n      `, this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n\n  #renderBackForwardCacheTestResult(): void {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated,\n        this.#renderBackForwardCacheTestResult, this);\n    this.#screenStatus = ScreenStatusType.Result;\n    void this.#render();\n  }\n\n  async #goBackOneHistoryEntry(): Promise<void> {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated,\n        this.#goBackOneHistoryEntry, this);\n    this.#screenStatus = ScreenStatusType.Running;\n    void this.#render();\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n    const historyResults = await resourceTreeModel.navigationHistory();\n    if (!historyResults) {\n      return;\n    }\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated,\n        this.#renderBackForwardCacheTestResult, this);\n    resourceTreeModel.navigateToHistoryEntry(historyResults.entries[historyResults.currentIndex - 1]);\n  }\n\n  async #navigateAwayAndBack(): Promise<void> {\n    // Checking BFCache Compatibility\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n\n    if (resourceTreeModel) {\n      // This event is removed by inside of goBackOneHistoryEntry().\n      SDK.TargetManager.TargetManager.instance().addModelListener(\n          SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated,\n          this.#goBackOneHistoryEntry, this);\n\n      // We can know whether the current page can use BFCache\n      // as the browser navigates to another unrelated page and goes back to the current page.\n      // We chose \"chrome://terms\" because it must be cross-site.\n      // Ideally, We want to have our own testing page like \"chrome: //bfcache-test\".\n      void resourceTreeModel.navigate('chrome://terms' as Platform.DevToolsPath.UrlString);\n    }\n  }\n\n  #renderMainFrameInformation(): LitHtml.TemplateResult {\n    if (!this.#frame) {\n      // clang-format off\n      return LitHtml.html`\n        <${ReportView.ReportView.ReportKey.litTagName}>\n          ${i18nString(UIStrings.mainFrame)}\n        </${ReportView.ReportView.ReportKey.litTagName}>\n        <${ReportView.ReportView.ReportValue.litTagName}>\n          ${i18nString(UIStrings.unavailable)}\n        </${ReportView.ReportView.ReportValue.litTagName}>\n      `;\n      // clang-format on\n    }\n    const isTestRunning = (this.#screenStatus === ScreenStatusType.Running);\n    // Prevent running BFCache test on the DevTools window itself via DevTools on DevTools\n    const isTestingForbidden = this.#frame.url.startsWith('devtools://');\n    // clang-format off\n    return LitHtml.html`\n      ${this.#renderBackForwardCacheStatus(this.#frame.backForwardCacheDetails.restoredFromCache)}\n      <div class='report-line'>\n        <div class='report-key'>\n          ${i18nString(UIStrings.url)}\n        </div>\n        <div class='report-value'>\n          ${this.#frame.url}\n        </div>\n      </div>\n      ${this.#maybeRenderFrameTree(this.#frame.backForwardCacheDetails.explanationsTree)}\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        <${Buttons.Button.Button.litTagName}\n          .disabled=${isTestRunning || isTestingForbidden}\n          .spinner=${isTestRunning}\n          .variant=${Buttons.Button.Variant.PRIMARY}\n          @click=${this.#navigateAwayAndBack}>\n          ${isTestRunning ? LitHtml.html`\n            ${i18nString(UIStrings.runningTest)}`:`\n            ${i18nString(UIStrings.runTest)}\n          `}\n        </${Buttons.Button.Button.litTagName}>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n      <${ReportView.ReportView.ReportSectionDivider.litTagName}>\n      </${ReportView.ReportView.ReportSectionDivider.litTagName}>\n      ${this.#maybeRenderExplanations(this.#frame.backForwardCacheDetails.explanations,\n          this.#frame.backForwardCacheDetails.explanationsTree)}\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        <x-link href=\"https://web.dev/bfcache/\" class=\"link\">\n          ${i18nString(UIStrings.learnMore)}\n        </x-link>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #maybeRenderFrameTree(explanationTree: Protocol.Page.BackForwardCacheNotRestoredExplanationTree|\n                        undefined): LitHtml.LitTemplate {\n    if (!explanationTree || (explanationTree.explanations.length === 0 && explanationTree.children.length === 0) ||\n        !Root.Runtime.experiments.isEnabled('bfcacheDisplayTree')) {\n      return LitHtml.nothing;\n    }\n    const treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    treeOutline.registerCSSFiles([backForwardCacheViewStyles]);\n    const urlTreeElement = new UI.TreeOutline.TreeElement();\n    treeOutline.appendChild(urlTreeElement);\n    const {frameCount, issueCount} = this.#maybeAddFrameSubTree(urlTreeElement, {blankCount: 1}, explanationTree);\n    // The translation pipeline does not support nested plurals. We avoid this\n    // here by pulling out the logic for one of the plurals into code instead.\n    if (frameCount === 1) {\n      urlTreeElement.title = i18nString(UIStrings.issuesInSingleFrame, {n: issueCount});\n    } else {\n      urlTreeElement.title = i18nString(UIStrings.issuesInMultipleFrames, {n: issueCount, m: frameCount});\n    }\n    // The first element is always the root, so expand it by default (and override its icon).\n    const topFrameElement = urlTreeElement.childAt(0);\n    if (topFrameElement) {\n      topFrameElement.expand();\n      topFrameElement.setLeadingIcons([UI.Icon.Icon.create('mediumicon-frame')]);\n    }\n    return LitHtml.html`\n    <div class='report-line'>\n    <div class='report-key'>\n      ${i18nString(UIStrings.framesTitle)}\n    </div>\n    <div class='report-value'>\n      ${treeOutline.element}\n    </div>\n  </div>`;\n  }\n\n  // Potentially adds a subtree of the frame tree, if there are any issues. Returns a tuple of how many frames were added,\n  // and how many issues there were in total over all those frames.\n  #maybeAddFrameSubTree(\n      root: UI.TreeOutline.TreeElement, nextBlankURLCount: {blankCount: number},\n      explanationTree: Protocol.Page.BackForwardCacheNotRestoredExplanationTree|\n      undefined): {frameCount: number, issueCount: number} {\n    if (!explanationTree || (explanationTree.explanations.length === 0 && explanationTree.children.length === 0)) {\n      return {frameCount: 0, issueCount: 0};\n    }\n    const icon = UI.Icon.Icon.create('mediumicon-frame-embedded');\n    let issuecount = explanationTree.explanations.length;\n    let framecount = 0;\n    let treeElementURL: string;\n    if (explanationTree.url.length > 0) {\n      treeElementURL = explanationTree.url;\n    } else {\n      treeElementURL = i18nString(UIStrings.blankURLTitle, {PH1: String(nextBlankURLCount.blankCount)});\n      nextBlankURLCount.blankCount += 1;\n    }\n    const urlTreeElement = new UI.TreeOutline.TreeElement();\n    root.appendChild(urlTreeElement);\n    urlTreeElement.setLeadingIcons([icon]);\n    explanationTree.explanations.forEach(explanation => {\n      urlTreeElement.appendChild(new UI.TreeOutline.TreeElement(explanation.reason));\n    });\n    explanationTree.children.forEach(child => {\n      const counts = this.#maybeAddFrameSubTree(urlTreeElement, nextBlankURLCount, child);\n      framecount += counts.frameCount;\n      issuecount += counts.issueCount;\n    });\n    if (issuecount > 0) {\n      urlTreeElement.title = '(' + String(issuecount) + ') ' + treeElementURL;\n      framecount += 1;\n    } else if (framecount === 0) {\n      root.removeChild(urlTreeElement);\n    }\n\n    return {frameCount: framecount, issueCount: issuecount};\n  }\n\n  #renderBackForwardCacheStatus(status: boolean|undefined): LitHtml.TemplateResult {\n    switch (status) {\n      case true:\n        // clang-format off\n        return LitHtml.html`\n          <${ReportView.ReportView.ReportSection.litTagName}>\n            <div class='status'>\n              <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n                iconName: 'ic_checkmark_16x16',\n                color: 'green',\n                width: '16px',\n                height: '16px',\n                } as IconButton.Icon.IconData}>\n              </${IconButton.Icon.Icon.litTagName}>\n            </div>\n            ${i18nString(UIStrings.restoredFromBFCache)}\n          </${ReportView.ReportView.ReportSection.litTagName}>\n        `;\n        // clang-format on\n      case false:\n        // clang-format off\n        return LitHtml.html`\n          <${ReportView.ReportView.ReportSection.litTagName}>\n            <div class='status'>\n              <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n                  iconName: 'circled_backslash_icon',\n                  color: 'var(--color-text-secondary)',\n                  width: '16px',\n                  height: '16px',\n                  } as IconButton.Icon.IconData}>\n              </${IconButton.Icon.Icon.litTagName}>\n            </div>\n            ${i18nString(UIStrings.normalNavigation)}\n          </${ReportView.ReportView.ReportSection.litTagName}>\n        `;\n        // clang-format on\n    }\n    // clang-format off\n    return LitHtml.html`\n    <${ReportView.ReportView.ReportSection.litTagName}>\n      ${i18nString(UIStrings.unknown)}\n    </${ReportView.ReportView.ReportSection.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #buildReasonToFramesMap(\n      explanationTree: Protocol.Page.BackForwardCacheNotRestoredExplanationTree,\n      nextBlankURLCount: {blankCount: number},\n      outputMap: Map<Protocol.Page.BackForwardCacheNotRestoredReason, string[]>): void {\n    let url = explanationTree.url;\n    if (url.length === 0) {\n      url = i18nString(UIStrings.blankURLTitle, {PH1: String(nextBlankURLCount.blankCount)});\n      nextBlankURLCount.blankCount += 1;\n    }\n    explanationTree.explanations.forEach(explanation => {\n      let frames: string[]|undefined = outputMap.get(explanation.reason);\n      if (frames === undefined) {\n        frames = [url];\n        outputMap.set(explanation.reason, frames);\n      } else {\n        frames.push(url);\n      }\n    });\n    explanationTree.children.map(child => {\n      this.#buildReasonToFramesMap(child, nextBlankURLCount, outputMap);\n    });\n  }\n\n  #maybeRenderExplanations(\n      explanations: Protocol.Page.BackForwardCacheNotRestoredExplanation[],\n      explanationTree: Protocol.Page.BackForwardCacheNotRestoredExplanationTree|undefined): LitHtml.LitTemplate {\n    if (explanations.length === 0) {\n      return LitHtml.nothing;\n    }\n\n    const pageSupportNeeded = explanations.filter(\n        explanation => explanation.type === Protocol.Page.BackForwardCacheNotRestoredReasonType.PageSupportNeeded);\n    const supportPending = explanations.filter(\n        explanation => explanation.type === Protocol.Page.BackForwardCacheNotRestoredReasonType.SupportPending);\n    const circumstantial = explanations.filter(\n        explanation => explanation.type === Protocol.Page.BackForwardCacheNotRestoredReasonType.Circumstantial);\n\n    const reasonToFramesMap: Map<Protocol.Page.BackForwardCacheNotRestoredReason, string[]> = new Map();\n    if (explanationTree) {\n      this.#buildReasonToFramesMap(explanationTree, {blankCount: 1}, reasonToFramesMap);\n    }\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      ${this.#renderExplanations(i18nString(UIStrings.pageSupportNeeded), i18nString(UIStrings.pageSupportNeededExplanation), pageSupportNeeded, reasonToFramesMap)}\n      ${this.#renderExplanations(i18nString(UIStrings.supportPending), i18nString(UIStrings.supportPendingExplanation), supportPending, reasonToFramesMap)}\n      ${this.#renderExplanations(i18nString(UIStrings.circumstantial), i18nString(UIStrings.circumstantialExplanation), circumstantial, reasonToFramesMap)}\n    `;\n    // clang-format on\n  }\n\n  #renderExplanations(\n      category: Platform.UIString.LocalizedString, explainerText: Platform.UIString.LocalizedString,\n      explanations: Protocol.Page.BackForwardCacheNotRestoredExplanation[],\n      reasonToFramesMap: Map<Protocol.Page.BackForwardCacheNotRestoredReason, string[]>): LitHtml.TemplateResult {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      ${explanations.length > 0 ? LitHtml.html`\n        <${ReportView.ReportView.ReportSectionHeader.litTagName}>\n          ${category}\n          <div class='help-outline-icon'>\n            <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n              iconName: 'help_outline',\n              color: 'var(--color-text-secondary)',\n              width: '16px',\n              height: '16px',\n              } as IconButton.Icon.IconData} title=${explainerText}>\n            </${IconButton.Icon.Icon.litTagName}>\n          </div>\n        </${ReportView.ReportView.ReportSectionHeader.litTagName}>\n        ${explanations.map(explanation => this.#renderReason(explanation, reasonToFramesMap.get(explanation.reason)))}\n      ` : LitHtml.nothing}\n    `;\n    // clang-format on\n  }\n\n  #maybeRenderReasonContext(explanation: Protocol.Page.BackForwardCacheNotRestoredExplanation): LitHtml.LitTemplate {\n    if (explanation.reason ===\n            Protocol.Page.BackForwardCacheNotRestoredReason.EmbedderExtensionSentMessageToCachedFrame &&\n        explanation.context) {\n      const link = 'chrome://extensions/?id=' + explanation.context;\n      // clang-format off\n    return LitHtml.html`${i18nString(UIStrings.blockingExtensionId)}\n      <${ChromeLink.ChromeLink.ChromeLink.litTagName} .href=${link}>${explanation.context}</${ChromeLink.ChromeLink.ChromeLink.litTagName}>`;\n      // clang-format on\n    }\n    return LitHtml.nothing;\n  }\n\n  #renderFramesPerReason(frames: string[]|undefined): LitHtml.LitTemplate {\n    if (frames === undefined || frames.length === 0 || !Root.Runtime.experiments.isEnabled('bfcacheDisplayTree')) {\n      return LitHtml.nothing;\n    }\n    const rows = [LitHtml.html`<div>${i18nString(UIStrings.framesPerIssue, {n: frames.length})}</div>`];\n    rows.push(...frames.map(url => LitHtml.html`<div class='text-ellipsis' title=${url}>${url}</div>`));\n    return LitHtml.html`\n      <div class='explanation-frames'>\n        <${ExpandableList.ExpandableList.ExpandableList.litTagName} .data=${\n        {rows} as\n        ExpandableList.ExpandableList.ExpandableListData}></${ExpandableList.ExpandableList.ExpandableList.litTagName}>\n      </div>\n    `;\n  }\n\n  #maybeRenderDeepLinkToUnload(explanation: Protocol.Page.BackForwardCacheNotRestoredExplanation): LitHtml.LitTemplate {\n    if (explanation.reason === Protocol.Page.BackForwardCacheNotRestoredReason.UnloadHandlerExistsInMainFrame ||\n        explanation.reason === Protocol.Page.BackForwardCacheNotRestoredReason.UnloadHandlerExistsInSubFrame) {\n      return LitHtml.html`\n        <x-link href=\"https://web.dev/bfcache/#never-use-the-unload-event\" class=\"link\">\n          ${i18nString(UIStrings.neverUseUnload)}\n        </x-link>`;\n    }\n    return LitHtml.nothing;\n  }\n\n  #renderReason(explanation: Protocol.Page.BackForwardCacheNotRestoredExplanation, frames: string[]|undefined):\n      LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        ${(explanation.reason in NotRestoredReasonDescription) ?\n          LitHtml.html`\n            <div class='circled-exclamation-icon'>\n              <${IconButton.Icon.Icon.litTagName} class=\"inline-icon\" .data=${{\n                iconName: 'circled_exclamation_icon',\n                color: 'orange',\n                width: '16px',\n                height: '16px',\n              } as IconButton.Icon.IconData}>\n              </${IconButton.Icon.Icon.litTagName}>\n            </div>\n            <div>\n              ${NotRestoredReasonDescription[explanation.reason].name()}\n              ${this.#maybeRenderDeepLinkToUnload(explanation)}\n             ${this.#maybeRenderReasonContext(explanation)}\n           </div>` :\n            LitHtml.nothing}\n      </${ReportView.ReportView.ReportSection.litTagName}>\n      <div class='gray-text'>\n        ${explanation.reason}\n      </div>\n      ${this.#renderFramesPerReason(frames)}\n    `;\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-resources-back-forward-cache-view', BackForwardCacheView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-resources-back-forward-cache-view': BackForwardCacheView;\n  }\n}\n"],
  "mappings": "AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,WAAW;AAAA,EAIX,uBAAuB;AAAA,EAIvB,aAAa;AAAA,EAIb,KAAK;AAAA,EAIL,SAAS;AAAA,EAKT,kBACI;AAAA,EAKJ,qBAAqB;AAAA,EAMrB,mBAAmB;AAAA,EAKnB,8BACI;AAAA,EAMJ,gBAAgB;AAAA,EAKhB,2BACI;AAAA,EAMJ,gBAAgB;AAAA,EAIhB,SAAS;AAAA,EAIT,aAAa;AAAA,EAIb,WAAW;AAAA,EAIX,gBAAgB;AAAA,EAKhB,2BACI;AAAA,EAIJ,qBAAqB;AAAA,EAKrB,aAAa;AAAA,EAIb,qBAAqB;AAAA,EAMrB,wBAAwB;AAAA,EAIxB,gBAAgB;AAAA,EAKhB,eAAe;AAAA;AAGjB,MAAM,OAAO,KAAK,KAAK,kBAAkB,yDAAyD;AAClG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,IAAW,mBAAX,kBAAW,sBAAX;AACE,iCAAU;AACV,gCAAS;AAFA;AAAA;AAKJ,iDAA0C,GAAG,gBAAgB,gBAAgB;AAAA,iBAC1D,IAAI;AAAA,EAE5B,cAAc;AACZ,UAAM,MAAM;AACZ,sCAAkC,iBAC9B,IAAI,kBAAkB,OAAO,oBAAoB,KAAK,QAAQ;AAClE,sCAAkC,iBAC9B,IAAI,kBAAkB,OAAO,gCAAgC,KAAK,QAAQ;AAC9E,SAAK,eAAe,UAAU,IAAI;AAClC,SAAK,eAAe,YAAY;AAChC,SAAK;AAAA;AAAA,QAGD,WAA0B;AAC9B,sBAAkB,OAAO,EAAC,OAAO;AAAA;AAAA,8BAGuC;AACxE,UAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,WAAO,YAAY,MAAM,IAAI,kBAAkB,sBAAsB;AAAA;AAAA,kBAGT;AAC5D,WAAO,kCAAkC,aAAa;AAAA;AAAA;AAI1D,MAAM,cAAc,YAAY,kBAAkB,kBAAkB;AAM7D,0CAAmC,YAAY;AAAA,SACpC,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,WACW;AAAA,kBACvC;AAAA,EAEhB,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAgC;AACvC,kBAAc,KAAK;AACnB,SAAK;AAAA;AAAA,kBAGwB;AAC7B,UAAM,YAAY,MAAM,+BAA+B,MAAM;AAG3D,cAAQ,OAAO,QAAQ;AAAA,WAClB,WAAW,WAAW,OAAO,oBAC5B,EAAC,aAAa,WAAW,UAAU;AAAA,YAEnC;AAAA,YACA,WAAW,WAAW,OAAO;AAAA,SAChC,cAAc,EAAC,MAAM;AAAA;AAAA;AAAA,sCAKc;AACxC,QAAI,cAAc,cAAc,WAAW,oBACvC,IAAI,kBAAkB,mBAAmB,IAAI,kBAAkB,OAAO,gBACtE,wCAAwC;AAC5C,yBAAqB;AACrB,SAAK;AAAA;AAAA,iCAGuC;AAC5C,QAAI,cAAc,cAAc,WAAW,oBACvC,IAAI,kBAAkB,mBAAmB,IAAI,kBAAkB,OAAO,gBACtE,6BAA6B;AACjC,yBAAqB;AACrB,SAAK;AACL,UAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,QAAI,CAAC,YAAY;AACf;AAAA;AAEF,UAAM,oBAAoB,WAAW,MAAM,IAAI,kBAAkB;AACjE,QAAI,CAAC,mBAAmB;AACtB;AAAA;AAEF,UAAM,iBAAiB,MAAM,kBAAkB;AAC/C,QAAI,CAAC,gBAAgB;AACnB;AAAA;AAEF,QAAI,cAAc,cAAc,WAAW,iBACvC,IAAI,kBAAkB,mBAAmB,IAAI,kBAAkB,OAAO,gBACtE,wCAAwC;AAC5C,sBAAkB,uBAAuB,eAAe,QAAQ,eAAe,eAAe;AAAA;AAAA,+BAGpD;AAG1C,UAAM,aAAa,IAAI,cAAc,cAAc,WAAW;AAC9D,QAAI,CAAC,YAAY;AACf;AAAA;AAEF,UAAM,oBAAoB,WAAW,MAAM,IAAI,kBAAkB;AAEjE,QAAI,mBAAmB;AAErB,UAAI,cAAc,cAAc,WAAW,iBACvC,IAAI,kBAAkB,mBAAmB,IAAI,kBAAkB,OAAO,gBACtE,6BAA6B;AAMjC,WAAK,kBAAkB,SAAS;AAAA;AAAA;AAAA,gCAIkB;AACpD,QAAI,CAAC,aAAa;AAEhB,aAAO,QAAQ;AAAA,WACV,WAAW,WAAW,UAAU;AAAA,YAC/B,WAAW,UAAU;AAAA,YACrB,WAAW,WAAW,UAAU;AAAA,WACjC,WAAW,WAAW,YAAY;AAAA,YACjC,WAAW,UAAU;AAAA,YACrB,WAAW,WAAW,YAAY;AAAA;AAAA;AAI1C,UAAM,gBAAiB,uBAAuB;AAE9C,UAAM,qBAAqB,YAAY,IAAI,WAAW;AAEtD,WAAO,QAAQ;AAAA,QACX,mCAAmC,YAAY,wBAAwB;AAAA;AAAA;AAAA,YAGnE,WAAW,UAAU;AAAA;AAAA;AAAA,YAGrB,YAAY;AAAA;AAAA;AAAA,QAGhB,2BAA2B,YAAY,wBAAwB;AAAA,SAC9D,WAAW,WAAW,cAAc;AAAA,WAClC,QAAQ,OAAO,OAAO;AAAA,sBACX,iBAAiB;AAAA,qBAClB;AAAA,qBACA,QAAQ,OAAO,QAAQ;AAAA,mBACzB;AAAA,YACP,gBAAgB,QAAQ;AAAA,cACtB,WAAW,UAAU,iBAAe;AAAA,cACpC,WAAW,UAAU;AAAA;AAAA,YAEvB,QAAQ,OAAO,OAAO;AAAA,UACxB,WAAW,WAAW,cAAc;AAAA,SACrC,WAAW,WAAW,qBAAqB;AAAA,UAC1C,WAAW,WAAW,qBAAqB;AAAA,QAC7C,8BAA8B,YAAY,wBAAwB,cAChE,YAAY,wBAAwB;AAAA,SACrC,WAAW,WAAW,cAAc;AAAA;AAAA,YAEjC,WAAW,UAAU;AAAA;AAAA,UAEvB,WAAW,WAAW,cAAc;AAAA;AAAA;AAAA,wBAKtB,iBACgC;AACpD,QAAI,CAAC,mBAAoB,gBAAgB,aAAa,WAAW,KAAK,gBAAgB,SAAS,WAAW,KACtG,CAAC,KAAK,QAAQ,YAAY,UAAU,uBAAuB;AAC7D,aAAO,QAAQ;AAAA;AAEjB,UAAM,cAAc,IAAI,GAAG,YAAY;AACvC,gBAAY,iBAAiB,CAAC;AAC9B,UAAM,iBAAiB,IAAI,GAAG,YAAY;AAC1C,gBAAY,YAAY;AACxB,UAAM,EAAC,YAAY,eAAc,2BAA2B,gBAAgB,EAAC,YAAY,KAAI;AAG7F,QAAI,eAAe,GAAG;AACpB,qBAAe,QAAQ,WAAW,UAAU,qBAAqB,EAAC,GAAG;AAAA,WAChE;AACL,qBAAe,QAAQ,WAAW,UAAU,wBAAwB,EAAC,GAAG,YAAY,GAAG;AAAA;AAGzF,UAAM,kBAAkB,eAAe,QAAQ;AAC/C,QAAI,iBAAiB;AACnB,sBAAgB;AAChB,sBAAgB,gBAAgB,CAAC,GAAG,KAAK,KAAK,OAAO;AAAA;AAEvD,WAAO,QAAQ;AAAA;AAAA;AAAA,QAGX,WAAW,UAAU;AAAA;AAAA;AAAA,QAGrB,YAAY;AAAA;AAAA;AAAA;AAAA,wBAQd,MAAkC,mBAClC,iBACqD;AACvD,QAAI,CAAC,mBAAoB,gBAAgB,aAAa,WAAW,KAAK,gBAAgB,SAAS,WAAW,GAAI;AAC5G,aAAO,EAAC,YAAY,GAAG,YAAY;AAAA;AAErC,UAAM,OAAO,GAAG,KAAK,KAAK,OAAO;AACjC,QAAI,aAAa,gBAAgB,aAAa;AAC9C,QAAI,aAAa;AACjB,QAAI;AACJ,QAAI,gBAAgB,IAAI,SAAS,GAAG;AAClC,uBAAiB,gBAAgB;AAAA,WAC5B;AACL,uBAAiB,WAAW,UAAU,eAAe,EAAC,KAAK,OAAO,kBAAkB;AACpF,wBAAkB,cAAc;AAAA;AAElC,UAAM,iBAAiB,IAAI,GAAG,YAAY;AAC1C,SAAK,YAAY;AACjB,mBAAe,gBAAgB,CAAC;AAChC,oBAAgB,aAAa,QAAQ,iBAAe;AAClD,qBAAe,YAAY,IAAI,GAAG,YAAY,YAAY,YAAY;AAAA;AAExE,oBAAgB,SAAS,QAAQ,WAAS;AACxC,YAAM,SAAS,2BAA2B,gBAAgB,mBAAmB;AAC7E,oBAAc,OAAO;AACrB,oBAAc,OAAO;AAAA;AAEvB,QAAI,aAAa,GAAG;AAClB,qBAAe,QAAQ,MAAM,OAAO,cAAc,OAAO;AACzD,oBAAc;AAAA,eACL,eAAe,GAAG;AAC3B,WAAK,YAAY;AAAA;AAGnB,WAAO,EAAC,YAAY,YAAY,YAAY;AAAA;AAAA,gCAGhB,QAAmD;AAC/E,YAAQ;AAAA,WACD;AAEH,eAAO,QAAQ;AAAA,aACV,WAAW,WAAW,cAAc;AAAA;AAAA,iBAEhC,WAAW,KAAK,KAAK,wCAAwC;AAAA,UAC9D,UAAU;AAAA,UACV,OAAO;AAAA,UACP,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA,kBAEN,WAAW,KAAK,KAAK;AAAA;AAAA,cAEzB,WAAW,UAAU;AAAA,cACrB,WAAW,WAAW,cAAc;AAAA;AAAA,WAGvC;AAEH,eAAO,QAAQ;AAAA,aACV,WAAW,WAAW,cAAc;AAAA;AAAA,iBAEhC,WAAW,KAAK,KAAK,wCAAwC;AAAA,UAC5D,UAAU;AAAA,UACV,OAAO;AAAA,UACP,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA,kBAER,WAAW,KAAK,KAAK;AAAA;AAAA,cAEzB,WAAW,UAAU;AAAA,cACrB,WAAW,WAAW,cAAc;AAAA;AAAA;AAK9C,WAAO,QAAQ;AAAA,OACZ,WAAW,WAAW,cAAc;AAAA,QACnC,WAAW,UAAU;AAAA,QACrB,WAAW,WAAW,cAAc;AAAA;AAAA;AAAA,0BAMtC,iBACA,mBACA,WAAiF;AACnF,QAAI,MAAM,gBAAgB;AAC1B,QAAI,IAAI,WAAW,GAAG;AACpB,YAAM,WAAW,UAAU,eAAe,EAAC,KAAK,OAAO,kBAAkB;AACzE,wBAAkB,cAAc;AAAA;AAElC,oBAAgB,aAAa,QAAQ,iBAAe;AAClD,UAAI,SAA6B,UAAU,IAAI,YAAY;AAC3D,UAAI,WAAW,QAAW;AACxB,iBAAS,CAAC;AACV,kBAAU,IAAI,YAAY,QAAQ;AAAA,aAC7B;AACL,eAAO,KAAK;AAAA;AAAA;AAGhB,oBAAgB,SAAS,IAAI,WAAS;AACpC,mCAA6B,OAAO,mBAAmB;AAAA;AAAA;AAAA,2BAKvD,cACA,iBAA0G;AAC5G,QAAI,aAAa,WAAW,GAAG;AAC7B,aAAO,QAAQ;AAAA;AAGjB,UAAM,oBAAoB,aAAa,OACnC,iBAAe,YAAY,SAAS,SAAS,KAAK,sCAAsC;AAC5F,UAAM,iBAAiB,aAAa,OAChC,iBAAe,YAAY,SAAS,SAAS,KAAK,sCAAsC;AAC5F,UAAM,iBAAiB,aAAa,OAChC,iBAAe,YAAY,SAAS,SAAS,KAAK,sCAAsC;AAE5F,UAAM,oBAAoF,oBAAI;AAC9F,QAAI,iBAAiB;AACnB,mCAA6B,iBAAiB,EAAC,YAAY,KAAI;AAAA;AAIjE,WAAO,QAAQ;AAAA,QACX,yBAAyB,WAAW,UAAU,oBAAoB,WAAW,UAAU,+BAA+B,mBAAmB;AAAA,QACzI,yBAAyB,WAAW,UAAU,iBAAiB,WAAW,UAAU,4BAA4B,gBAAgB;AAAA,QAChI,yBAAyB,WAAW,UAAU,iBAAiB,WAAW,UAAU,4BAA4B,gBAAgB;AAAA;AAAA;AAAA,sBAMlI,UAA6C,eAC7C,cACA,mBAA2G;AAG7G,WAAO,QAAQ;AAAA,QACX,aAAa,SAAS,IAAI,QAAQ;AAAA,WAC/B,WAAW,WAAW,oBAAoB;AAAA,YACzC;AAAA;AAAA,eAEG,WAAW,KAAK,KAAK,wCAAwC;AAAA,MAC9D,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,eAC+B;AAAA,gBACrC,WAAW,KAAK,KAAK;AAAA;AAAA,YAEzB,WAAW,WAAW,oBAAoB;AAAA,UAC5C,aAAa,IAAI,iBAAe,mBAAmB,aAAa,kBAAkB,IAAI,YAAY;AAAA,UAClG,QAAQ;AAAA;AAAA;AAAA,4BAKU,aAAwF;AAChH,QAAI,YAAY,WACR,SAAS,KAAK,kCAAkC,6CACpD,YAAY,SAAS;AACvB,YAAM,OAAO,6BAA6B,YAAY;AAExD,aAAO,QAAQ,OAAO,WAAW,UAAU;AAAA,SACtC,WAAW,WAAW,WAAW,oBAAoB,QAAQ,YAAY,YAAY,WAAW,WAAW,WAAW;AAAA;AAG3H,WAAO,QAAQ;AAAA;AAAA,yBAGM,QAAiD;AACtE,QAAI,WAAW,UAAa,OAAO,WAAW,KAAK,CAAC,KAAK,QAAQ,YAAY,UAAU,uBAAuB;AAC5G,aAAO,QAAQ;AAAA;AAEjB,UAAM,OAAO,CAAC,QAAQ,YAAY,WAAW,UAAU,gBAAgB,EAAC,GAAG,OAAO;AAClF,SAAK,KAAK,GAAG,OAAO,IAAI,SAAO,QAAQ,wCAAwC,OAAO;AACtF,WAAO,QAAQ;AAAA;AAAA,WAER,eAAe,eAAe,eAAe,oBAChD,EAAC,YACqD,eAAe,eAAe,eAAe;AAAA;AAAA;AAAA;AAAA,+BAK5E,aAAwF;AACnH,QAAI,YAAY,WAAW,SAAS,KAAK,kCAAkC,kCACvE,YAAY,WAAW,SAAS,KAAK,kCAAkC,+BAA+B;AACxG,aAAO,QAAQ;AAAA;AAAA,YAET,WAAW,UAAU;AAAA;AAAA;AAG7B,WAAO,QAAQ;AAAA;AAAA,gBAGH,aAAmE,QACtD;AAEzB,WAAO,QAAQ;AAAA,SACV,WAAW,WAAW,cAAc;AAAA,UAClC,YAAY,UAAU,+BACvB,QAAQ;AAAA;AAAA,iBAED,WAAW,KAAK,KAAK,wCAAwC;AAAA,MAC9D,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA;AAAA,kBAEN,WAAW,KAAK,KAAK;AAAA;AAAA;AAAA,gBAGvB,6BAA6B,YAAY,QAAQ;AAAA,gBACjD,kCAAkC;AAAA,eACnC,+BAA+B;AAAA,qBAElC,QAAQ;AAAA,UACV,WAAW,WAAW,cAAc;AAAA;AAAA,UAEpC,YAAY;AAAA;AAAA,QAEd,4BAA4B;AAAA;AAAA;AAAA;AAMpC,iBAAiB,eAAe,gBAAgB,8CAA8C;",
  "names": []
}
