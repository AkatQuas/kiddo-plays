{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/InterestGroupAccessGrid.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as DataGrid from '../../../ui/components/data_grid/data_grid.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport type * as Protocol from '../../../generated/protocol.js';\n\nimport interestGroupAccessGridStyles from './interestGroupAccessGrid.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Hover text for an info icon in the Interest Group Event panel\n  * An interest group is an ad targeting group stored on the browser that can\n  * be used to show a certain set of advertisements in the future as the\n  * outcome of a FLEDGE auction.\n  */\n  allInterestGroupStorageEvents: 'All interest group storage events.',\n  /**\n    *@description Text in InterestGroupStorage Items View of the Application panel\n    * Date and time of an Interest Group storage event in a locale-\n    * dependent format.\n    */\n  eventTime: 'Event Time',\n  /**\n  *@description Text in InterestGroupStorage Items View of the Application panel\n  * Type of interest group event such as 'join', 'bid', 'win', or 'leave'.\n  */\n  eventType: 'Access Type',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Owner of the interest group. The origin that controls the\n   * content of information associated with the interest group such as which\n   * ads get displayed.\n  */\n  groupOwner: 'Owner',\n  /**\n   *@description Text in InterestGroupStorage Items View of the Application panel\n   * Name of the interest group. The name is unique per-owner and identifies the\n   * interest group.\n  */\n  groupName: 'Name',\n  /**\n   *@description Text shown instead of a table when the table would be empty.\n  */\n  noEvents: 'No interest group events recorded.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/InterestGroupAccessGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class InterestGroupAccessGrid extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-interest-group-access-grid`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #datastores: Array<Protocol.Storage.InterestGroupAccessedEvent> = [];\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [interestGroupAccessGridStyles];\n    this.#render();\n  }\n\n  set data(data: Array<Protocol.Storage.InterestGroupAccessedEvent>) {\n    this.#datastores = data;\n    this.#render();\n  }\n\n  #render(): void {\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <div>\n        <span class=\"heading\">Interest Groups</span>\n        <${IconButton.Icon.Icon.litTagName} class=\"info-icon\" title=${\n            i18nString(UIStrings.allInterestGroupStorageEvents)}\n          .data=${\n            {iconName: 'ic_info_black_18dp', color: 'var(--color-link)', width: '14px'} as\n            IconButton.Icon.IconWithName}>\n        </${IconButton.Icon.Icon.litTagName}>\n        ${this.#renderGridOrNoDataMessage()}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderGridOrNoDataMessage(): LitHtml.TemplateResult {\n    if (this.#datastores.length === 0) {\n      return LitHtml.html`<div class=\"no-events-message\">${i18nString(UIStrings.noEvents)}</div>`;\n    }\n\n    const gridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'event-time',\n          title: i18nString(UIStrings.eventTime),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'event-type',\n          title: i18nString(UIStrings.eventType),\n          widthWeighting: 5,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'event-group-owner',\n          title: i18nString(UIStrings.groupOwner),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'event-group-name',\n          title: i18nString(UIStrings.groupName),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n      ],\n      rows: this.#buildRows(),\n      initialSort: {\n        columnId: 'event-time',\n        direction: DataGrid.DataGridUtils.SortDirection.ASC,\n      },\n    };\n\n    return LitHtml.html`\n      <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n        gridData as DataGrid.DataGridController.DataGridControllerData}></${\n        DataGrid.DataGridController.DataGridController.litTagName}>\n    `;\n  }\n\n  #buildRows(): DataGrid.DataGridUtils.Row[] {\n    return this.#datastores.map(event => ({\n                                  cells: [\n                                    {\n                                      columnId: 'event-time',\n                                      value: event.accessTime,\n                                      renderer: this.#renderDateForDataGridCell.bind(this),\n                                    },\n                                    {columnId: 'event-type', value: event.type},\n                                    {columnId: 'event-group-owner', value: event.ownerOrigin},\n                                    {columnId: 'event-group-name', value: event.name},\n                                  ],\n                                }));\n  }\n\n  #renderDateForDataGridCell(value: DataGrid.DataGridUtils.CellValue): LitHtml.TemplateResult {\n    const date = new Date(1e3 * (value as number));\n    return LitHtml.html`${date.toLocaleString()}`;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-interest-group-access-grid', InterestGroupAccessGrid);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-interest-group-access-grid': InterestGroupAccessGrid;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA,MAAM,YAAY;AAAA,EAOhB,+BAA+B;AAAA,EAM/B,WAAW;AAAA,EAKX,WAAW;AAAA,EAOX,YAAY;AAAA,EAMZ,WAAW;AAAA,EAIX,UAAU;AAAA;AAEZ,MAAM,OAAO,KAAK,KAAK,kBAAkB,4DAA4D;AAC9F,aAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,6CAAsC,YAAY;AAAA,SACvC,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,gBACsB;AAAA,EAElE,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AACnC;AAAA;AAAA,MAGE,KAAK,MAA0D;AACjE,uBAAmB;AACnB;AAAA;AAAA,YAGc;AAEd,YAAQ,OAAO,QAAQ;AAAA;AAAA;AAAA,WAGhB,WAAW,KAAK,KAAK,sCACpB,WAAW,UAAU;AAAA,kBAErB,EAAC,UAAU,sBAAsB,OAAO,qBAAqB,OAAO;AAAA,YAEpE,WAAW,KAAK,KAAK;AAAA,UACvB;AAAA;AAAA,OAEH,cAAc,EAAC,MAAM;AAAA;AAAA,+BAI2B;AACnD,QAAI,iBAAiB,WAAW,GAAG;AACjC,aAAO,QAAQ,sCAAsC,WAAW,UAAU;AAAA;AAG5E,UAAM,WAA+D;AAAA,MACnE,SAAS;AAAA,QACP;AAAA,UACE,IAAI;AAAA,UACJ,OAAO,WAAW,UAAU;AAAA,UAC5B,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA;AAAA,QAEZ;AAAA,UACE,IAAI;AAAA,UACJ,OAAO,WAAW,UAAU;AAAA,UAC5B,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA;AAAA,QAEZ;AAAA,UACE,IAAI;AAAA,UACJ,OAAO,WAAW,UAAU;AAAA,UAC5B,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA;AAAA,QAEZ;AAAA,UACE,IAAI;AAAA,UACJ,OAAO,WAAW,UAAU;AAAA,UAC5B,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA;AAAA;AAAA,MAGd,MAAM;AAAA,MACN,aAAa;AAAA,QACX,UAAU;AAAA,QACV,WAAW,SAAS,cAAc,cAAc;AAAA;AAAA;AAIpD,WAAO,QAAQ;AAAA,SACV,SAAS,mBAAmB,mBAAmB,oBAChD,cACA,SAAS,mBAAmB,mBAAmB;AAAA;AAAA;AAAA,eAIV;AACzC,WAAO,iBAAiB,IAAI,WAAU;AAAA,MACR,OAAO;AAAA,QACL;AAAA,UACE,UAAU;AAAA,UACV,OAAO,MAAM;AAAA,UACb,UAAU,gCAAgC,KAAK;AAAA;AAAA,QAEjD,EAAC,UAAU,cAAc,OAAO,MAAM;AAAA,QACtC,EAAC,UAAU,qBAAqB,OAAO,MAAM;AAAA,QAC7C,EAAC,UAAU,oBAAoB,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA,6BAKnD,OAAiE;AAC1F,UAAM,OAAO,IAAI,KAAK,MAAO;AAC7B,WAAO,QAAQ,OAAO,KAAK;AAAA;AAAA;AAI/B,iBAAiB,eAAe,gBAAgB,uCAAuC;",
  "names": []
}
