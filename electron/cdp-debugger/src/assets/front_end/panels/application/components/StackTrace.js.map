{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/application/components/StackTrace.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as ExpandableList from '../../../ui/components/expandable_list/expandable_list.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Components from '../../../ui/legacy/components/utils/utils.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport type * as Protocol from '../../../generated/protocol.js';\n\nimport stackTraceRowStyles from './stackTraceRow.css.js';\nimport stackTraceLinkButtonStyles from './stackTraceLinkButton.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Error message stating that something went wrong when tring to render stack trace\n  */\n  cannotRenderStackTrace: 'Cannot render stack trace',\n  /**\n  *@description A link to show more frames in the stack trace if more are available. Never 0.\n  */\n  showSMoreFrames: '{n, plural, =1 {Show # more frame} other {Show # more frames}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/StackTrace.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface StackTraceData {\n  frame: SDK.ResourceTreeModel.ResourceTreeFrame;\n  buildStackTraceRows: (\n      stackTrace: Protocol.Runtime.StackTrace,\n      target: SDK.Target.Target|null,\n      linkifier: Components.Linkifier.Linkifier,\n      tabStops: boolean|undefined,\n      updateCallback?: (arg0: (Components.JSPresentationUtils.StackTraceRegularRow|\n                               Components.JSPresentationUtils.StackTraceAsyncRow)[]) => void,\n      ) => (Components.JSPresentationUtils.StackTraceRegularRow | Components.JSPresentationUtils.StackTraceAsyncRow)[];\n}\n\ninterface StackTraceRowData {\n  stackTraceRowItem: Components.JSPresentationUtils.StackTraceRegularRow;\n}\n\nexport class StackTraceRow extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-stack-trace-row`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #stackTraceRowItem: Components.JSPresentationUtils.StackTraceRegularRow|null = null;\n\n  set data(data: StackTraceRowData) {\n    this.#stackTraceRowItem = data.stackTraceRowItem;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [stackTraceRowStyles];\n  }\n\n  #render(): void {\n    if (!this.#stackTraceRowItem) {\n      return;\n    }\n    LitHtml.render(\n        LitHtml.html`\n      <div class=\"stack-trace-row\">\n              <div class=\"stack-trace-function-name text-ellipsis\" title=${this.#stackTraceRowItem.functionName}>\n                ${this.#stackTraceRowItem.functionName}\n              </div>\n              <div class=\"stack-trace-source-location\">\n                ${\n            this.#stackTraceRowItem.link ?\n                LitHtml.html`<div class=\"text-ellipsis\">\\xA0@\\xA0${this.#stackTraceRowItem.link}</div>` :\n                LitHtml.nothing}\n              </div>\n            </div>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\ninterface StackTraceLinkButtonData {\n  onShowAllClick: () => void;\n  hiddenCallFramesCount: number;\n}\n\nexport class StackTraceLinkButton extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-stack-trace-link-button`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #onShowAllClick: () => void = () => {};\n  #hiddenCallFramesCount: number|null = null;\n\n  set data(data: StackTraceLinkButtonData) {\n    this.#onShowAllClick = data.onShowAllClick;\n    this.#hiddenCallFramesCount = data.hiddenCallFramesCount;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [stackTraceLinkButtonStyles];\n  }\n\n  #render(): void {\n    if (!this.#hiddenCallFramesCount) {\n      return;\n    }\n\n    LitHtml.render(\n        LitHtml.html`\n      <div class=\"stack-trace-row\">\n          <button class=\"link\" @click=${(): void => this.#onShowAllClick()}>\n            ${i18nString(UIStrings.showSMoreFrames, {\n          n: this.#hiddenCallFramesCount,\n        })}\n          </button>\n        </div>\n    `,\n        this.#shadow, {host: this});\n  }\n}\n\nexport class StackTrace extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-resources-stack-trace`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #linkifier = new Components.Linkifier.Linkifier();\n  #stackTraceRows: (Components.JSPresentationUtils.StackTraceRegularRow|\n                    Components.JSPresentationUtils.StackTraceAsyncRow)[] = [];\n  #showHidden = false;\n\n  set data(data: StackTraceData) {\n    const frame = data.frame;\n    const {creationStackTrace, creationStackTraceTarget} = frame.getCreationStackTraceData();\n    if (creationStackTrace) {\n      this.#stackTraceRows = data.buildStackTraceRows(\n          creationStackTrace, creationStackTraceTarget, this.#linkifier, true,\n          this.#onStackTraceRowsUpdated.bind(this));\n    }\n    this.#render();\n  }\n\n  #onStackTraceRowsUpdated(stackTraceRows: (Components.JSPresentationUtils.StackTraceRegularRow|\n                                            Components.JSPresentationUtils.StackTraceAsyncRow)[]): void {\n    this.#stackTraceRows = stackTraceRows;\n    this.#render();\n  }\n\n  #onShowAllClick(): void {\n    this.#showHidden = true;\n    this.#render();\n  }\n\n  createRowTemplates(): LitHtml.TemplateResult[] {\n    const expandableRows = [];\n    let hiddenCallFramesCount = 0;\n    for (const item of this.#stackTraceRows) {\n      if (this.#showHidden || (!item.ignoreListHide && !item.rowCountHide)) {\n        if ('functionName' in item) {\n          expandableRows.push(LitHtml.html`\n          <${StackTraceRow.litTagName} data-stack-trace-row .data=${{\n            stackTraceRowItem: item,\n          } as StackTraceRowData}></${StackTraceRow.litTagName}>`);\n        }\n        if ('asyncDescription' in item) {\n          expandableRows.push(LitHtml.html`\n            <div>${item.asyncDescription}</div>\n          `);\n        }\n      }\n      if (!this.#showHidden && 'functionName' in item && (item.ignoreListHide || item.rowCountHide)) {\n        hiddenCallFramesCount++;\n      }\n    }\n    if (hiddenCallFramesCount) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      expandableRows.push(LitHtml.html`\n      <${StackTraceLinkButton.litTagName} data-stack-trace-row .data=${{onShowAllClick: this.#onShowAllClick.bind(this), hiddenCallFramesCount: hiddenCallFramesCount} as StackTraceLinkButtonData}></${StackTraceLinkButton.litTagName}>\n      `);\n      // clang-format on\n    }\n\n    return expandableRows;\n  }\n\n  #render(): void {\n    if (!this.#stackTraceRows.length) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      LitHtml.render(\n        LitHtml.html`\n          <span>${i18nString(UIStrings.cannotRenderStackTrace)}</span>\n        `,\n        this.#shadow, {host: this});\n      return;\n    }\n    const expandableRows = this.createRowTemplates();\n    LitHtml.render(\n      LitHtml.html`\n        <${ExpandableList.ExpandableList.ExpandableList.litTagName} .data=${{\n          rows: expandableRows,\n        } as ExpandableList.ExpandableList.ExpandableListData}>\n        </${ExpandableList.ExpandableList.ExpandableList.litTagName}>\n      `,\n      this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-stack-trace-row', StackTraceRow);\nComponentHelpers.CustomElements.defineComponent('devtools-stack-trace-link-button', StackTraceLinkButton);\nComponentHelpers.CustomElements.defineComponent('devtools-resources-stack-trace', StackTrace);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-stack-trace-row': StackTraceRow;\n    'devtools-stack-trace-link-button': StackTraceLinkButton;\n    'devtools-resources-stack-trace': StackTrace;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
