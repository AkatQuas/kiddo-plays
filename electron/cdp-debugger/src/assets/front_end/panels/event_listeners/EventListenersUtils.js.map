{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/event_listeners/EventListenersUtils.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport async function frameworkEventListeners(object: SDK.RemoteObject.RemoteObject):\n    Promise<FrameworkEventListenersObject> {\n  const domDebuggerModel = object.runtimeModel().target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n  if (!domDebuggerModel) {\n    return {eventListeners: [], internalHandlers: null} as FrameworkEventListenersObject;\n  }\n\n  const listenersResult = {internalHandlers: null, eventListeners: []} as FrameworkEventListenersObject;\n  return object.callFunction(frameworkEventListenersImpl, undefined)\n      .then(assertCallFunctionResult)\n      .then(getOwnProperties)\n      .then(createEventListeners)\n      .then(returnResult)\n      .catch(error => {\n        console.error(error);\n        return listenersResult;\n      });\n\n  function getOwnProperties(object: SDK.RemoteObject.RemoteObject): Promise<SDK.RemoteObject.GetPropertiesResult> {\n    return object.getOwnProperties(false /* generatePreview */);\n  }\n\n  async function createEventListeners(result: SDK.RemoteObject.GetPropertiesResult): Promise<void> {\n    if (!result.properties) {\n      throw new Error('Object properties is empty');\n    }\n    const promises = [];\n    for (const property of result.properties) {\n      if (property.name === 'eventListeners' && property.value) {\n        promises.push(convertToEventListeners(property.value).then(storeEventListeners));\n      }\n      if (property.name === 'internalHandlers' && property.value) {\n        promises.push(convertToInternalHandlers(property.value).then(storeInternalHandlers));\n      }\n      if (property.name === 'errorString' && property.value) {\n        printErrorString(property.value);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  function convertToEventListeners(pageEventListenersObject: SDK.RemoteObject.RemoteObject):\n      Promise<SDK.DOMDebuggerModel.EventListener[]> {\n    return SDK.RemoteObject.RemoteArray.objectAsArray(pageEventListenersObject)\n        .map(toEventListener)\n        .then(filterOutEmptyObjects);\n\n    function toEventListener(listenerObject: SDK.RemoteObject.RemoteObject):\n        Promise<SDK.DOMDebuggerModel.EventListener|null> {\n      let type: string;\n      let useCapture: boolean;\n      let passive: boolean;\n      let once: boolean;\n      let handler: SDK.RemoteObject.RemoteObject|null = null;\n      let originalHandler: SDK.RemoteObject.RemoteObject|null = null;\n      let location: (SDK.DebuggerModel.Location|null)|null = null;\n      let removeFunctionObject: SDK.RemoteObject.RemoteObject|null = null;\n\n      const promises = [];\n      promises.push(\n          listenerObject\n              .callFunctionJSON(\n                  truncatePageEventListener as (this: Object) => TruncatedEventListenerObjectInInspectedPage, undefined)\n              .then(storeTruncatedListener));\n\n      function truncatePageEventListener(this: EventListenerObjectInInspectedPage):\n          TruncatedEventListenerObjectInInspectedPage {\n        return {type: this.type, useCapture: this.useCapture, passive: this.passive, once: this.once};\n      }\n\n      function storeTruncatedListener(truncatedListener: TruncatedEventListenerObjectInInspectedPage): void {\n        if (truncatedListener.type !== undefined) {\n          type = truncatedListener.type;\n        }\n        if (truncatedListener.useCapture !== undefined) {\n          useCapture = truncatedListener.useCapture;\n        }\n        if (truncatedListener.passive !== undefined) {\n          passive = truncatedListener.passive;\n        }\n        if (truncatedListener.once !== undefined) {\n          once = truncatedListener.once;\n        }\n      }\n\n      promises.push(\n          listenerObject.callFunction(handlerFunction as (this: Object) => SDK.RemoteObject.RemoteObject | null)\n              .then(assertCallFunctionResult)\n              .then(storeOriginalHandler)\n              .then(toTargetFunction)\n              .then(storeFunctionWithDetails));\n\n      function handlerFunction(this: EventListenerObjectInInspectedPage): SDK.RemoteObject.RemoteObject|null {\n        return this.handler || null;\n      }\n\n      function storeOriginalHandler(functionObject: SDK.RemoteObject.RemoteObject): SDK.RemoteObject.RemoteObject {\n        originalHandler = functionObject;\n        return originalHandler;\n      }\n\n      function storeFunctionWithDetails(functionObject: SDK.RemoteObject.RemoteObject): Promise<void> {\n        handler = functionObject;\n        return functionObject.debuggerModel().functionDetailsPromise(functionObject).then(storeFunctionDetails);\n      }\n\n      function storeFunctionDetails(functionDetails: SDK.DebuggerModel.FunctionDetails|null): void {\n        location = functionDetails ? functionDetails.location : null;\n      }\n\n      promises.push(\n          listenerObject.callFunction(getRemoveFunction as (this: Object) => SDK.RemoteObject.RemoteObject | null)\n              .then(assertCallFunctionResult)\n              .then(storeRemoveFunction));\n\n      function getRemoveFunction(this: EventListenerObjectInInspectedPage): SDK.RemoteObject.RemoteObject|null {\n        return this.remove || null;\n      }\n\n      function storeRemoveFunction(functionObject: SDK.RemoteObject.RemoteObject): void {\n        if (functionObject.type !== 'function') {\n          return;\n        }\n        removeFunctionObject = functionObject;\n      }\n\n      return Promise.all(promises).then(createEventListener).catch(error => {\n        console.error(error);\n        return null;\n      });\n\n      function createEventListener(): SDK.DOMDebuggerModel.EventListener {\n        if (!location) {\n          throw new Error('Empty event listener\\'s location');\n        }\n        return new SDK.DOMDebuggerModel.EventListener(\n            domDebuggerModel as SDK.DOMDebuggerModel.DOMDebuggerModel, object, type, useCapture, passive, once, handler,\n            originalHandler, location, removeFunctionObject, SDK.DOMDebuggerModel.EventListener.Origin.FrameworkUser);\n      }\n    }\n  }\n\n  function convertToInternalHandlers(pageInternalHandlersObject: SDK.RemoteObject.RemoteObject):\n      Promise<SDK.RemoteObject.RemoteArray> {\n    return SDK.RemoteObject.RemoteArray.objectAsArray(pageInternalHandlersObject)\n        .map(toTargetFunction)\n        .then(SDK.RemoteObject.RemoteArray.createFromRemoteObjects.bind(null));\n  }\n\n  function toTargetFunction(functionObject: SDK.RemoteObject.RemoteObject): Promise<SDK.RemoteObject.RemoteObject> {\n    return SDK.RemoteObject.RemoteFunction.objectAsFunction(functionObject).targetFunction();\n  }\n\n  function storeEventListeners(eventListeners: SDK.DOMDebuggerModel.EventListener[]): void {\n    listenersResult.eventListeners = eventListeners;\n  }\n\n  function storeInternalHandlers(internalHandlers: SDK.RemoteObject.RemoteArray): void {\n    listenersResult.internalHandlers = internalHandlers;\n  }\n\n  function printErrorString(errorString: SDK.RemoteObject.RemoteObject): void {\n    Common.Console.Console.instance().error(String(errorString.value));\n  }\n\n  function returnResult(): FrameworkEventListenersObject {\n    return listenersResult;\n  }\n\n  function assertCallFunctionResult(result: SDK.RemoteObject.CallFunctionResult): SDK.RemoteObject.RemoteObject {\n    if (result.wasThrown || !result.object) {\n      throw new Error('Exception in callFunction or empty result');\n    }\n    return result.object;\n  }\n\n  function filterOutEmptyObjects<T>(objects: (T|null)[]): T[] {\n    return objects.filter(filterOutEmpty) as T[];\n\n    function filterOutEmpty(object: T|null): boolean {\n      return Boolean(object);\n    }\n  }\n\n  /*\n    frameworkEventListeners fetcher functions should produce following output:\n        {\n          // framework event listeners\n          \"eventListeners\": [\n            {\n              \"handler\": function(),\n              \"useCapture\": true,\n              \"passive\": false,\n              \"once\": false,\n              \"type\": \"change\",\n              \"remove\": function(type, handler, useCapture, passive)\n            },\n            ...\n          ],\n          // internal framework event handlers\n          \"internalHandlers\": [\n            function(),\n            function(),\n            ...\n          ]\n        }\n    */\n  function frameworkEventListenersImpl(this: Object): {eventListeners: Array<EventListenerObjectInInspectedPage>} {\n    const errorLines = [];\n    let eventListeners: EventListenerObjectInInspectedPage[] = [];\n    let internalHandlers: (() => void)[] = [];\n    let fetchers = [jQueryFetcher];\n    try {\n      // @ts-ignore Here because of layout tests.\n      if (self.devtoolsFrameworkEventListeners && isArrayLike(self.devtoolsFrameworkEventListeners)) {\n        // @ts-ignore Here because of layout tests.\n        fetchers = fetchers.concat(self.devtoolsFrameworkEventListeners);\n      }\n    } catch (e) {\n      errorLines.push('devtoolsFrameworkEventListeners call produced error: ' + toString(e));\n    }\n\n    for (let i = 0; i < fetchers.length; ++i) {\n      try {\n        const fetcherResult = fetchers[i](this);\n        if (fetcherResult.eventListeners && isArrayLike(fetcherResult.eventListeners)) {\n          const fetcherResultEventListeners = fetcherResult.eventListeners;\n          const nonEmptyEventListeners = fetcherResultEventListeners\n                                             .map(eventListener => {\n                                               return checkEventListener(eventListener);\n                                             })\n                                             .filter(nonEmptyObject);\n          eventListeners = eventListeners.concat(nonEmptyEventListeners as EventListenerObjectInInspectedPage[]);\n        }\n        if (fetcherResult.internalHandlers && isArrayLike(fetcherResult.internalHandlers)) {\n          const fetcherResultInternalHandlers = fetcherResult.internalHandlers as (() => void)[];\n          const nonEmptyInternalHandlers = fetcherResultInternalHandlers\n                                               .map(handler => {\n                                                 return checkInternalHandler(handler);\n                                               })\n                                               .filter(nonEmptyObject);\n          internalHandlers = internalHandlers.concat(nonEmptyInternalHandlers as (() => void)[]);\n        }\n      } catch (e) {\n        errorLines.push('fetcher call produced error: ' + toString(e));\n      }\n    }\n    const result: {\n      eventListeners: EventListenerObjectInInspectedPage[],\n      internalHandlers?: (() => void)[],\n      errorString?: string,\n    } = {\n      eventListeners: eventListeners,\n      internalHandlers: internalHandlers.length ? internalHandlers : undefined,\n      errorString: undefined,\n    };\n\n    // The logic further up seems to expect that if the internalHandlers is set,\n    // that it should have a non-empty Array, but TS / Closure also expect the\n    // property to exist, so we always add it above, but then remove it again\n    // here if there's no value set.\n    if (!result.internalHandlers) {\n      delete result.internalHandlers;\n    }\n\n    if (errorLines.length) {\n      let errorString: string = 'Framework Event Listeners API Errors:\\n\\t' + errorLines.join('\\n\\t');\n      errorString = errorString.substr(0, errorString.length - 1);\n      result.errorString = errorString;\n    }\n\n    // Remove the errorString if it's not set.\n    if (result.errorString === '' || result.errorString === undefined) {\n      delete result.errorString;\n    }\n\n    return result;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function isArrayLike(obj: any): boolean {\n      if (!obj || typeof obj !== 'object') {\n        return false;\n      }\n      try {\n        if (typeof obj.splice === 'function') {\n          const len = obj.length;\n          return typeof len === 'number' && (len >>> 0 === len && (len > 0 || 1 / len > 0));\n        }\n      } catch (e) {\n      }\n      return false;\n    }\n\n    function checkEventListener(eventListener: PossibleEventListenerObjectInInspectedPage|\n                                null): EventListenerObjectInInspectedPage|null {\n      try {\n        let errorString = '';\n        if (!eventListener) {\n          errorString += 'empty event listener, ';\n        } else {\n          const type = eventListener.type;\n          if (!type || (typeof type !== 'string')) {\n            errorString += 'event listener\\'s type isn\\'t string or empty, ';\n          }\n          const useCapture = eventListener.useCapture;\n          if (typeof useCapture !== 'boolean') {\n            errorString += 'event listener\\'s useCapture isn\\'t boolean or undefined, ';\n          }\n          const passive = eventListener.passive;\n          if (typeof passive !== 'boolean') {\n            errorString += 'event listener\\'s passive isn\\'t boolean or undefined, ';\n          }\n          const once = eventListener.once;\n          if (typeof once !== 'boolean') {\n            errorString += 'event listener\\'s once isn\\'t boolean or undefined, ';\n          }\n          const handler = eventListener.handler;\n          if (!handler || (typeof handler !== 'function')) {\n            errorString += 'event listener\\'s handler isn\\'t a function or empty, ';\n          }\n          const remove = eventListener.remove;\n          if (remove && (typeof remove !== 'function')) {\n            errorString += 'event listener\\'s remove isn\\'t a function, ';\n          }\n          if (!errorString) {\n            return {\n              type: type,\n              useCapture: useCapture,\n              passive: passive,\n              once: once,\n              handler: handler,\n              remove: remove,\n            } as EventListenerObjectInInspectedPage;\n          }\n        }\n        errorLines.push(errorString.substr(0, errorString.length - 2));\n        return null;\n      } catch (error) {\n        errorLines.push(toString(error));\n        return null;\n      }\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function checkInternalHandler(handler: any): (() => void)|null {\n      if (handler && (typeof handler === 'function')) {\n        return handler;\n      }\n      errorLines.push('internal handler isn\\'t a function or empty');\n      return null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function toString(obj: any): string {\n      try {\n        return String(obj);\n      } catch (e) {\n        return '<error>';\n      }\n    }\n\n    function nonEmptyObject<T>(obj: T|null): boolean {\n      return Boolean(obj);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function jQueryFetcher(node: any): {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      eventListeners: {handler: any, useCapture: boolean, passive: boolean, once: boolean, type: string}[],\n      internalHandlers?: (() => void)[],\n    } {\n      if (!node || !(node instanceof Node)) {\n        return {eventListeners: []};\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const jQuery = (window as any)['jQuery'];\n      if (!jQuery || !jQuery.fn) {\n        return {eventListeners: []};\n      }\n      const jQueryFunction = jQuery;\n      const data = jQuery._data || jQuery.data;\n\n      const eventListeners = [];\n      const internalHandlers = [];\n\n      if (typeof data === 'function') {\n        const events = data(node, 'events');\n        for (const type in events) {\n          for (const key in events[type]) {\n            const frameworkListener = events[type][key];\n            if (typeof frameworkListener === 'object' || typeof frameworkListener === 'function') {\n              const listener = {\n                handler: frameworkListener.handler || frameworkListener,\n                useCapture: true,\n                passive: false,\n                once: false,\n                type: type,\n                remove: jQueryRemove.bind(node, frameworkListener.selector),\n              };\n              eventListeners.push(listener);\n            }\n          }\n        }\n        const nodeData = data(node);\n        if (nodeData && typeof nodeData.handle === 'function') {\n          internalHandlers.push(nodeData.handle);\n        }\n      }\n      const entry = jQueryFunction(node)[0];\n      if (entry) {\n        const entryEvents = entry['$events'];\n        for (const type in entryEvents) {\n          const events = entryEvents[type];\n          for (const key in events) {\n            if (typeof events[key] === 'function') {\n              const listener = {handler: events[key], useCapture: true, passive: false, once: false, type: type};\n              // We don't support removing for old version < 1.4 of jQuery because it doesn't provide API for getting \"selector\".\n              eventListeners.push(listener);\n            }\n          }\n        }\n        if (entry && entry['$handle']) {\n          internalHandlers.push(entry['$handle']);\n        }\n      }\n      return {eventListeners: eventListeners, internalHandlers: internalHandlers};\n    }\n\n    function jQueryRemove(this: Object|null, selector: string, type: string, handler: () => void): void {\n      if (!this || !(this instanceof Node)) {\n        return;\n      }\n      const node = this as Node;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const jQuery = (window as any)['jQuery'];\n      if (!jQuery || !jQuery.fn) {\n        return;\n      }\n      const jQueryFunction = jQuery as (arg0: Node) => {\n        off: Function,\n      };\n      jQueryFunction(node).off(type, selector, handler);\n    }\n  }\n}\nexport interface FrameworkEventListenersObject {\n  eventListeners: SDK.DOMDebuggerModel.EventListener[];\n  internalHandlers: SDK.RemoteObject.RemoteArray|null;\n}\nexport interface PossibleEventListenerObjectInInspectedPage {\n  type?: string;\n  useCapture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n  handler?: SDK.RemoteObject.RemoteObject|null;\n  remove?: SDK.RemoteObject.RemoteObject|null;\n}\nexport interface EventListenerObjectInInspectedPage {\n  type: string;\n  useCapture: boolean;\n  passive: boolean;\n  once: boolean;\n  handler: SDK.RemoteObject.RemoteObject|null;\n  remove: SDK.RemoteObject.RemoteObject|null;\n}\nexport interface TruncatedEventListenerObjectInInspectedPage {\n  type?: string;\n  useCapture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n"],
  "mappings": "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",
  "names": []
}
