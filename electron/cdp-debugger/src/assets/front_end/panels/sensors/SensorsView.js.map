{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sensors/SensorsView.ts"],
  "sourcesContent": ["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport sensorsStyles from './sensors.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for a group of cities\n  */\n  location: 'Location',\n  /**\n  *@description An option that appears in a drop-down to prevent the GPS location of the user from being overridden.\n  */\n  noOverride: 'No override',\n  /**\n  *@description Title of a section that contains overrides for the user's GPS location.\n  */\n  overrides: 'Overrides',\n  /**\n  *@description Text of button in Sensors View, takes the user to the custom location setting screen\n  *where they can enter/edit custom locations.\n  */\n  manage: 'Manage',\n  /**\n  *@description Aria-label for location manage button in Sensors View\n  */\n  manageTheListOfLocations: 'Manage the list of locations',\n  /**\n  *@description Option in a drop-down input for selecting the GPS location of the user. As an\n  *alternative to selecting a location from the list, the user can select this option and they are\n  *prompted to enter the details for a new custom location.\n  */\n  other: 'Other\u2026',\n  /**\n  *@description Title of a section in a drop-down input that contains error locations, e.g. to select\n  *a location override that says 'the location is not available'. A noun.\n  */\n  error: 'Error',\n  /**\n  *@description A type of override where the geographic location of the user is not available.\n  */\n  locationUnavailable: 'Location unavailable',\n  /**\n  *@description Tooltip text telling the user how to change the value of a latitude/longitude input\n  *text box. several shortcuts are provided for convenience. The placeholder can be different\n  *keyboard keys, depending on the user's settings.\n  *@example {Ctrl} PH1\n  */\n  adjustWithMousewheelOrUpdownKeys: 'Adjust with mousewheel or up/down keys. {PH1}: \u00B110, Shift: \u00B11, Alt: \u00B10.01',\n  /**\n  *@description Label for latitude of a GPS location.\n  */\n  latitude: 'Latitude',\n  /**\n  *@description Label for Longitude of a GPS location.\n  */\n  longitude: 'Longitude',\n  /**\n  *@description Label for the ID of a timezone for a particular location.\n  */\n  timezoneId: 'Timezone ID',\n  /**\n  *@description Label for the locale relevant to a custom location.\n  */\n  locale: 'Locale',\n  /**\n  *@description Label the orientation of a user's device e.g. tilt in 3D-space.\n  */\n  orientation: 'Orientation',\n  /**\n  *@description Option that when chosen, turns off device orientation override.\n  */\n  off: 'Off',\n  /**\n  *@description Option that when chosen, allows the user to enter a custom orientation for the device e.g. tilt in 3D-space.\n  */\n  customOrientation: 'Custom orientation',\n  /**\n  *@description Warning to the user they should enable the device orientation override, in order to\n  *enable this input which allows them to interactively select orientation by dragging a 3D phone\n  *model.\n  */\n  enableOrientationToRotate: 'Enable orientation to rotate',\n  /**\n  *@description Text telling the user how to use an input which allows them to interactively select\n  *orientation by dragging a 3D phone model.\n  */\n  shiftdragHorizontallyToRotate: 'Shift+drag horizontally to rotate around the y-axis',\n  /**\n  *@description Message in the Sensors tool that is alerted (for screen readers) when the device orientation setting is changed\n  *@example {180} PH1\n  *@example {-90} PH2\n  *@example {0} PH3\n  */\n  deviceOrientationSetToAlphaSBeta: 'Device orientation set to alpha: {PH1}, beta: {PH2}, gamma: {PH3}',\n  /**\n  *@description Text of orientation reset button in Sensors View of the Device Toolbar\n  */\n  reset: 'Reset',\n  /**\n  *@description Aria-label for orientation reset button in Sensors View. Command.\n  */\n  resetDeviceOrientation: 'Reset device orientation',\n  /**\n  *@description Description of the Touch select in Sensors tab\n  */\n  forcesTouchInsteadOfClick: 'Forces touch instead of click',\n  /**\n  *@description Description of the Emulate Idle State select in Sensors tab\n  */\n  forcesSelectedIdleStateEmulation: 'Forces selected idle state emulation',\n  /**\n  *@description Title for a group of configuration options in a drop-down input.\n  */\n  presets: 'Presets',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space.\n  */\n  portrait: 'Portrait',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space.\n  */\n  portraitUpsideDown: 'Portrait upside down',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space.\n  */\n  landscapeLeft: 'Landscape left',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space.\n  */\n  landscapeRight: 'Landscape right',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space. Noun indicating\n  *the display of the device is pointing up.\n  */\n  displayUp: 'Display up',\n  /**\n  *@description Drop-down input option for the orientation of a device in 3D space. Noun indicating\n  *the display of the device is pointing down.\n  */\n  displayDown: 'Display down',\n  /**\n   *@description Label for one dimension of device orientation that the user can override.\n   */\n  alpha: '\\u03B1 (alpha)',\n  /**\n   *@description Label for one dimension of device orientation that the user can override.\n   */\n  beta: '\\u03B2 (beta)',\n  /**\n   *@description Label for one dimension of device orientation that the user can override.\n   */\n  gamma: '\\u03B3 (gamma)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sensors/SensorsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _instanceObject: SensorsView|null = null;\n\nexport class SensorsView extends UI.Widget.VBox {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private readonly LocationSetting: Common.Settings.Setting<string>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private Location: SDK.EmulationModel.Location;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private LocationOverrideEnabled: boolean;\n  private fieldsetElement!: HTMLFieldSetElement;\n  private timezoneError!: HTMLElement;\n  private locationSelectElement!: HTMLSelectElement;\n  private latitudeInput!: HTMLInputElement;\n  private longitudeInput!: HTMLInputElement;\n  private timezoneInput!: HTMLInputElement;\n  private localeInput!: HTMLInputElement;\n  private latitudeSetter!: (arg0: string) => void;\n  private longitudeSetter!: (arg0: string) => void;\n  private timezoneSetter!: (arg0: string) => void;\n  private localeSetter!: (arg0: string) => void;\n  private localeError!: HTMLElement;\n  private customLocationsGroup!: HTMLOptGroupElement;\n  private readonly deviceOrientationSetting: Common.Settings.Setting<string>;\n  private deviceOrientation: SDK.EmulationModel.DeviceOrientation;\n  private deviceOrientationOverrideEnabled: boolean;\n  private deviceOrientationFieldset!: HTMLFieldSetElement;\n  private stageElement!: HTMLElement;\n  private orientationSelectElement!: HTMLSelectElement;\n  private alphaElement!: HTMLInputElement;\n  private betaElement!: HTMLInputElement;\n  private gammaElement!: HTMLInputElement;\n  private alphaSetter!: (arg0: string) => void;\n  private betaSetter!: (arg0: string) => void;\n  private gammaSetter!: (arg0: string) => void;\n  private orientationLayer!: HTMLDivElement;\n  private boxElement?: HTMLElement;\n  private boxMatrix?: DOMMatrix;\n  private mouseDownVector?: UI.Geometry.Vector|null;\n  private originalBoxMatrix?: DOMMatrix;\n\n  constructor() {\n    super(true);\n    this.contentElement.classList.add('sensors-view');\n\n    this.LocationSetting = Common.Settings.Settings.instance().createSetting('emulation.locationOverride', '');\n    this.Location = SDK.EmulationModel.Location.parseSetting(this.LocationSetting.get());\n    this.LocationOverrideEnabled = false;\n\n    this.createLocationSection(this.Location);\n\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n\n    this.deviceOrientationSetting =\n        Common.Settings.Settings.instance().createSetting('emulation.deviceOrientationOverride', '');\n    this.deviceOrientation = SDK.EmulationModel.DeviceOrientation.parseSetting(this.deviceOrientationSetting.get());\n    this.deviceOrientationOverrideEnabled = false;\n\n    this.createDeviceOrientationSection();\n\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n\n    this.appendTouchControl();\n\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n\n    this.appendIdleEmulator();\n\n    this.contentElement.createChild('div').classList.add('panel-section-separator');\n  }\n\n  static instance(): SensorsView {\n    if (!_instanceObject) {\n      _instanceObject = new SensorsView();\n    }\n    return _instanceObject;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([sensorsStyles]);\n  }\n\n  private createLocationSection(location: SDK.EmulationModel.Location): void {\n    const geogroup = this.contentElement.createChild('section', 'sensors-group');\n    const geogroupTitle = UI.UIUtils.createLabel(i18nString(UIStrings.location), 'sensors-group-title');\n    geogroup.appendChild(geogroupTitle);\n    const fields = geogroup.createChild('div', 'geo-fields');\n    let selectedIndex = 0;\n\n    const noOverrideOption = {title: i18nString(UIStrings.noOverride), location: NonPresetOptions.NoOverride};\n    this.locationSelectElement = (fields.createChild('select', 'chrome-select') as HTMLSelectElement);\n    UI.ARIAUtils.bindLabelToControl(geogroupTitle, this.locationSelectElement);\n\n    // No override\n    this.locationSelectElement.appendChild(new Option(noOverrideOption.title, noOverrideOption.location));\n    this.customLocationsGroup = (this.locationSelectElement.createChild('optgroup') as HTMLOptGroupElement);\n    this.customLocationsGroup.label = i18nString(UIStrings.overrides);\n    const customLocations = Common.Settings.Settings.instance().moduleSetting('emulation.locations');\n    const manageButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.manage), () => Common.Revealer.reveal(customLocations));\n    UI.ARIAUtils.setAccessibleName(manageButton, i18nString(UIStrings.manageTheListOfLocations));\n    fields.appendChild(manageButton);\n    const fillCustomSettings = (): void => {\n      if (!this.customLocationsGroup) {\n        return;\n      }\n      this.customLocationsGroup.removeChildren();\n      for (const [i, customLocation] of customLocations.get().entries()) {\n        this.customLocationsGroup.appendChild(new Option(customLocation.title, JSON.stringify(customLocation)));\n        if (location.latitude === customLocation.lat && location.longitude === customLocation.long) {\n          // If the location coming from settings matches the custom location, use its index to select the option\n          selectedIndex = i + 1;\n        }\n      }\n    };\n    customLocations.addChangeListener(fillCustomSettings);\n    fillCustomSettings();\n\n    // Other location\n    const customLocationOption = {title: i18nString(UIStrings.other), location: NonPresetOptions.Custom};\n    this.locationSelectElement.appendChild(new Option(customLocationOption.title, customLocationOption.location));\n\n    // Error location.\n    const group = (this.locationSelectElement.createChild('optgroup') as HTMLOptGroupElement);\n    group.label = i18nString(UIStrings.error);\n    group.appendChild(new Option(i18nString(UIStrings.locationUnavailable), NonPresetOptions.Unavailable));\n\n    this.locationSelectElement.selectedIndex = selectedIndex;\n    this.locationSelectElement.addEventListener('change', this.LocationSelectChanged.bind(this));\n    this.fieldsetElement = (fields.createChild('fieldset') as HTMLFieldSetElement);\n    this.fieldsetElement.disabled = !this.LocationOverrideEnabled;\n    this.fieldsetElement.id = 'location-override-section';\n\n    const latitudeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const longitudeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const timezoneGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n    const localeGroup = this.fieldsetElement.createChild('div', 'latlong-group');\n\n    const cmdOrCtrl = Host.Platform.isMac() ? '\\u2318' : 'Ctrl';\n    const modifierKeyMessage = i18nString(UIStrings.adjustWithMousewheelOrUpdownKeys, {PH1: cmdOrCtrl});\n\n    this.latitudeInput = UI.UIUtils.createInput('', 'number');\n    latitudeGroup.appendChild(this.latitudeInput);\n    this.latitudeInput.setAttribute('step', 'any');\n    this.latitudeInput.value = '0';\n    this.latitudeSetter = UI.UIUtils.bindInput(\n        this.latitudeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.latitudeValidator, true,\n        0.1);\n    this.latitudeSetter(String(location.latitude));\n    UI.Tooltip.Tooltip.install(this.latitudeInput, modifierKeyMessage);\n    latitudeGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.latitude), 'latlong-title', this.latitudeInput));\n\n    this.longitudeInput = UI.UIUtils.createInput('', 'number');\n    longitudeGroup.appendChild(this.longitudeInput);\n    this.longitudeInput.setAttribute('step', 'any');\n    this.longitudeInput.value = '0';\n    this.longitudeSetter = UI.UIUtils.bindInput(\n        this.longitudeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.longitudeValidator,\n        true, 0.1);\n    this.longitudeSetter(String(location.longitude));\n    UI.Tooltip.Tooltip.install(this.longitudeInput, modifierKeyMessage);\n    longitudeGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.longitude), 'latlong-title', this.longitudeInput));\n\n    this.timezoneInput = UI.UIUtils.createInput('', 'text');\n    timezoneGroup.appendChild(this.timezoneInput);\n    this.timezoneInput.value = 'Europe/Berlin';\n    this.timezoneSetter = UI.UIUtils.bindInput(\n        this.timezoneInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.timezoneIdValidator,\n        false);\n    this.timezoneSetter(location.timezoneId);\n    timezoneGroup.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.timezoneId), 'timezone-title', this.timezoneInput));\n    this.timezoneError = (timezoneGroup.createChild('div', 'timezone-error') as HTMLElement);\n\n    this.localeInput = UI.UIUtils.createInput('', 'text');\n    localeGroup.appendChild(this.localeInput);\n    this.localeInput.value = 'en-US';\n    this.localeSetter = UI.UIUtils.bindInput(\n        this.localeInput, this.applyLocationUserInput.bind(this), SDK.EmulationModel.Location.localeValidator, false);\n    this.localeSetter(location.locale);\n    localeGroup.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.locale), 'locale-title', this.localeInput));\n    this.localeError = (localeGroup.createChild('div', 'locale-error') as HTMLElement);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private LocationSelectChanged(): void {\n    this.fieldsetElement.disabled = false;\n    this.timezoneError.textContent = '';\n    const value = this.locationSelectElement.options[this.locationSelectElement.selectedIndex].value;\n    if (value === NonPresetOptions.NoOverride) {\n      this.LocationOverrideEnabled = false;\n      this.clearFieldsetElementInputs();\n      this.fieldsetElement.disabled = true;\n    } else if (value === NonPresetOptions.Custom) {\n      this.LocationOverrideEnabled = true;\n      const location = SDK.EmulationModel.Location.parseUserInput(\n          this.latitudeInput.value.trim(), this.longitudeInput.value.trim(), this.timezoneInput.value.trim(),\n          this.localeInput.value.trim());\n      if (!location) {\n        return;\n      }\n      this.Location = location;\n    } else if (value === NonPresetOptions.Unavailable) {\n      this.LocationOverrideEnabled = true;\n      this.Location = new SDK.EmulationModel.Location(0, 0, '', '', true);\n    } else {\n      this.LocationOverrideEnabled = true;\n      const coordinates = JSON.parse(value);\n      this.Location = new SDK.EmulationModel.Location(\n          coordinates.lat, coordinates.long, coordinates.timezoneId, coordinates.locale, false);\n      this.latitudeSetter(coordinates.lat);\n      this.longitudeSetter(coordinates.long);\n      this.timezoneSetter(coordinates.timezoneId);\n      this.localeSetter(coordinates.locale);\n    }\n\n    this.applyLocation();\n    if (value === NonPresetOptions.Custom) {\n      this.latitudeInput.focus();\n    }\n  }\n\n  private applyLocationUserInput(): void {\n    const location = SDK.EmulationModel.Location.parseUserInput(\n        this.latitudeInput.value.trim(), this.longitudeInput.value.trim(), this.timezoneInput.value.trim(),\n        this.localeInput.value.trim());\n    if (!location) {\n      return;\n    }\n\n    this.timezoneError.textContent = '';\n\n    this.setSelectElementLabel(this.locationSelectElement, NonPresetOptions.Custom);\n    this.Location = location;\n    this.applyLocation();\n  }\n\n  private applyLocation(): void {\n    if (this.LocationOverrideEnabled) {\n      this.LocationSetting.set(this.Location.toSetting());\n    } else {\n      this.LocationSetting.set('');\n    }\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      emulationModel.emulateLocation(this.LocationOverrideEnabled ? this.Location : null).catch(err => {\n        switch (err.type) {\n          case 'emulation-set-timezone': {\n            this.timezoneError.textContent = err.message;\n            break;\n          }\n          case 'emulation-set-locale': {\n            this.localeError.textContent = err.message;\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  private clearFieldsetElementInputs(): void {\n    this.latitudeSetter('0');\n    this.longitudeSetter('0');\n    this.timezoneSetter('');\n    this.localeSetter('');\n  }\n\n  private createDeviceOrientationSection(): void {\n    const orientationGroup = this.contentElement.createChild('section', 'sensors-group');\n    const orientationTitle = UI.UIUtils.createLabel(i18nString(UIStrings.orientation), 'sensors-group-title');\n    orientationGroup.appendChild(orientationTitle);\n    const orientationContent = orientationGroup.createChild('div', 'orientation-content');\n    const fields = orientationContent.createChild('div', 'orientation-fields');\n\n    const orientationOffOption = {title: i18nString(UIStrings.off), orientation: NonPresetOptions.NoOverride};\n    const customOrientationOption = {\n      title: i18nString(UIStrings.customOrientation),\n      orientation: NonPresetOptions.Custom,\n    };\n    const orientationGroups = [{\n      title: i18nString(UIStrings.presets),\n      value: [\n        {title: i18nString(UIStrings.portrait), orientation: '[0, 90, 0]'},\n        {title: i18nString(UIStrings.portraitUpsideDown), orientation: '[-180, -90, 0]'},\n        {title: i18nString(UIStrings.landscapeLeft), orientation: '[90, 0, -90]'},\n        {title: i18nString(UIStrings.landscapeRight), orientation: '[90, -180, -90]'},\n        {title: i18nString(UIStrings.displayUp), orientation: '[0, 0, 0]'},\n        {title: i18nString(UIStrings.displayDown), orientation: '[0, -180, 0]'},\n      ],\n    }];\n    this.orientationSelectElement = (this.contentElement.createChild('select', 'chrome-select') as HTMLSelectElement);\n    UI.ARIAUtils.bindLabelToControl(orientationTitle, this.orientationSelectElement);\n    this.orientationSelectElement.appendChild(new Option(orientationOffOption.title, orientationOffOption.orientation));\n    this.orientationSelectElement.appendChild(\n        new Option(customOrientationOption.title, customOrientationOption.orientation));\n\n    for (let i = 0; i < orientationGroups.length; ++i) {\n      const groupElement = (this.orientationSelectElement.createChild('optgroup') as HTMLOptGroupElement);\n      groupElement.label = orientationGroups[i].title;\n      const group = orientationGroups[i].value;\n      for (let j = 0; j < group.length; ++j) {\n        groupElement.appendChild(new Option(group[j].title, group[j].orientation));\n      }\n    }\n    this.orientationSelectElement.selectedIndex = 0;\n    fields.appendChild(this.orientationSelectElement);\n    this.orientationSelectElement.addEventListener('change', this.orientationSelectChanged.bind(this));\n\n    this.deviceOrientationFieldset = this.createDeviceOrientationOverrideElement(this.deviceOrientation);\n    this.stageElement = (orientationContent.createChild('div', 'orientation-stage') as HTMLElement);\n    this.orientationLayer = (this.stageElement.createChild('div', 'orientation-layer') as HTMLDivElement);\n    this.boxElement = this.orientationLayer.createChild('section', 'orientation-box orientation-element');\n\n    this.boxElement.createChild('section', 'orientation-front orientation-element');\n    this.boxElement.createChild('section', 'orientation-top orientation-element');\n    this.boxElement.createChild('section', 'orientation-back orientation-element');\n    this.boxElement.createChild('section', 'orientation-left orientation-element');\n    this.boxElement.createChild('section', 'orientation-right orientation-element');\n    this.boxElement.createChild('section', 'orientation-bottom orientation-element');\n\n    UI.UIUtils.installDragHandle(this.stageElement, this.onBoxDragStart.bind(this), event => {\n      this.onBoxDrag(event);\n    }, null, '-webkit-grabbing', '-webkit-grab');\n\n    fields.appendChild(this.deviceOrientationFieldset);\n    this.enableOrientationFields(true);\n    this.setBoxOrientation(this.deviceOrientation, false);\n  }\n\n  private enableOrientationFields(disable: boolean|null): void {\n    if (disable) {\n      this.deviceOrientationFieldset.disabled = true;\n      this.stageElement.classList.add('disabled');\n      UI.Tooltip.Tooltip.install(this.stageElement, i18nString(UIStrings.enableOrientationToRotate));\n    } else {\n      this.deviceOrientationFieldset.disabled = false;\n      this.stageElement.classList.remove('disabled');\n      UI.Tooltip.Tooltip.install(this.stageElement, i18nString(UIStrings.shiftdragHorizontallyToRotate));\n    }\n  }\n\n  private orientationSelectChanged(): void {\n    const value = this.orientationSelectElement.options[this.orientationSelectElement.selectedIndex].value;\n    this.enableOrientationFields(false);\n\n    if (value === NonPresetOptions.NoOverride) {\n      this.deviceOrientationOverrideEnabled = false;\n      this.enableOrientationFields(true);\n    } else if (value === NonPresetOptions.Custom) {\n      this.deviceOrientationOverrideEnabled = true;\n      this.resetDeviceOrientation();\n      this.alphaElement.focus();\n    } else {\n      const parsedValue = JSON.parse(value);\n      this.deviceOrientationOverrideEnabled = true;\n      this.deviceOrientation = new SDK.EmulationModel.DeviceOrientation(parsedValue[0], parsedValue[1], parsedValue[2]);\n      this.setDeviceOrientation(this.deviceOrientation, DeviceOrientationModificationSource.SelectPreset);\n    }\n  }\n\n  private applyDeviceOrientation(): void {\n    if (this.deviceOrientationOverrideEnabled) {\n      this.deviceOrientationSetting.set(this.deviceOrientation.toSetting());\n    }\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      void emulationModel.emulateDeviceOrientation(\n          this.deviceOrientationOverrideEnabled ? this.deviceOrientation : null);\n    }\n  }\n\n  private setSelectElementLabel(selectElement: HTMLSelectElement, labelValue: string): void {\n    const optionValues = Array.prototype.map.call(selectElement.options, x => x.value);\n    selectElement.selectedIndex = optionValues.indexOf(labelValue);\n  }\n\n  private applyDeviceOrientationUserInput(): void {\n    this.setDeviceOrientation(\n        SDK.EmulationModel.DeviceOrientation.parseUserInput(\n            this.alphaElement.value.trim(), this.betaElement.value.trim(), this.gammaElement.value.trim()),\n        DeviceOrientationModificationSource.UserInput);\n    this.setSelectElementLabel(this.orientationSelectElement, NonPresetOptions.Custom);\n  }\n\n  private resetDeviceOrientation(): void {\n    this.setDeviceOrientation(\n        new SDK.EmulationModel.DeviceOrientation(0, 90, 0), DeviceOrientationModificationSource.ResetButton);\n    this.setSelectElementLabel(this.orientationSelectElement, '[0, 90, 0]');\n  }\n\n  private setDeviceOrientation(\n      deviceOrientation: SDK.EmulationModel.DeviceOrientation|null,\n      modificationSource: DeviceOrientationModificationSource): void {\n    if (!deviceOrientation) {\n      return;\n    }\n\n    function roundAngle(angle: number): number {\n      return Math.round(angle * 10000) / 10000;\n    }\n\n    if (modificationSource !== DeviceOrientationModificationSource.UserInput) {\n      // Even though the angles in |deviceOrientation| will not be rounded\n      // here, their precision will be rounded by CSS when we change\n      // |this.orientationLayer.style| in setBoxOrientation().\n      this.alphaSetter(String(roundAngle(deviceOrientation.alpha)));\n      this.betaSetter(String(roundAngle(deviceOrientation.beta)));\n      this.gammaSetter(String(roundAngle(deviceOrientation.gamma)));\n    }\n\n    const animate = modificationSource !== DeviceOrientationModificationSource.UserDrag;\n    this.setBoxOrientation(deviceOrientation, animate);\n\n    this.deviceOrientation = deviceOrientation;\n    this.applyDeviceOrientation();\n\n    UI.ARIAUtils.alert(i18nString(\n        UIStrings.deviceOrientationSetToAlphaSBeta,\n        {PH1: deviceOrientation.alpha, PH2: deviceOrientation.beta, PH3: deviceOrientation.gamma}));\n  }\n\n  private createAxisInput(parentElement: Element, input: HTMLInputElement, label: string, validator: (arg0: string) => {\n    valid: boolean,\n    errorMessage: (string|undefined),\n  }): (arg0: string) => void {\n    const div = parentElement.createChild('div', 'orientation-axis-input-container');\n    div.appendChild(input);\n    div.appendChild(UI.UIUtils.createLabel(label, /* className */ '', input));\n    return UI.UIUtils.bindInput(input, this.applyDeviceOrientationUserInput.bind(this), validator, true);\n  }\n\n  private createDeviceOrientationOverrideElement(deviceOrientation: SDK.EmulationModel.DeviceOrientation):\n      HTMLFieldSetElement {\n    const fieldsetElement = document.createElement('fieldset');\n    fieldsetElement.classList.add('device-orientation-override-section');\n    const cellElement = fieldsetElement.createChild('td', 'orientation-inputs-cell');\n\n    this.alphaElement = UI.UIUtils.createInput('', 'number');\n    this.alphaElement.setAttribute('step', 'any');\n    this.alphaSetter = this.createAxisInput(\n        cellElement, this.alphaElement, i18nString(UIStrings.alpha),\n        SDK.EmulationModel.DeviceOrientation.alphaAngleValidator);\n    this.alphaSetter(String(deviceOrientation.alpha));\n\n    this.betaElement = UI.UIUtils.createInput('', 'number');\n    this.betaElement.setAttribute('step', 'any');\n    this.betaSetter = this.createAxisInput(\n        cellElement, this.betaElement, i18nString(UIStrings.beta),\n        SDK.EmulationModel.DeviceOrientation.betaAngleValidator);\n    this.betaSetter(String(deviceOrientation.beta));\n\n    this.gammaElement = UI.UIUtils.createInput('', 'number');\n    this.gammaElement.setAttribute('step', 'any');\n    this.gammaSetter = this.createAxisInput(\n        cellElement, this.gammaElement, i18nString(UIStrings.gamma),\n        SDK.EmulationModel.DeviceOrientation.gammaAngleValidator);\n    this.gammaSetter(String(deviceOrientation.gamma));\n\n    const resetButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.reset), this.resetDeviceOrientation.bind(this), 'orientation-reset-button');\n    UI.ARIAUtils.setAccessibleName(resetButton, i18nString(UIStrings.resetDeviceOrientation));\n    resetButton.setAttribute('type', 'reset');\n    cellElement.appendChild(resetButton);\n    return fieldsetElement;\n  }\n\n  private setBoxOrientation(deviceOrientation: SDK.EmulationModel.DeviceOrientation, animate: boolean): void {\n    if (animate) {\n      this.stageElement.classList.add('is-animating');\n    } else {\n      this.stageElement.classList.remove('is-animating');\n    }\n\n    // It is important to explain the multiple conversions happening here. A\n    // few notes on coordinate spaces first:\n    // 1. The CSS coordinate space is left-handed. X and Y are parallel to the\n    //    screen, and Z is perpendicular to the screen. X is positive to the\n    //    right, Y is positive downwards and Z increases towards the viewer.\n    //    See https://drafts.csswg.org/css-transforms-2/#transform-rendering\n    //    for more information.\n    // 2. The Device Orientation coordinate space is right-handed. X and Y are\n    //    parallel to the screen, and Z is perpenticular to the screen. X is\n    //    positive to the right, Y is positive upwards and Z increases towards\n    //    the viewer. See\n    //    https://w3c.github.io/deviceorientation/#deviceorientation for more\n    //    information.\n    // 3. Additionally, the phone model we display is rotated +90 degrees in\n    //    the X axis in the CSS coordinate space (i.e. when all angles are 0 we\n    //    cannot see its screen in DevTools).\n    //\n    // |this.boxMatrix| is set in the Device Orientation coordinate space\n    // because it represents the phone model we show users and also because the\n    // calculations in UI.Geometry.EulerAngles assume this coordinate space (so\n    // we apply the rotations in the Z-X'-Y'' order).\n    // The CSS transforms, on the other hand, are done in the CSS coordinate\n    // space, so we need to convert 2) to 1) while keeping 3) in mind. We can\n    // cover 3) by swapping the Y and Z axes, and 2) by inverting the X axis.\n    const {alpha, beta, gamma} = deviceOrientation;\n    this.boxMatrix = new DOMMatrixReadOnly().rotate(0, 0, alpha).rotate(beta, 0, 0).rotate(0, gamma, 0);\n    this.orientationLayer.style.transform = `rotateY(${alpha}deg) rotateX(${- beta}deg) rotateZ(${gamma}deg)`;\n  }\n\n  private onBoxDrag(event: MouseEvent): boolean {\n    const mouseMoveVector = this.calculateRadiusVector(event.x, event.y);\n    if (!mouseMoveVector) {\n      return true;\n    }\n\n    if (!this.mouseDownVector) {\n      return true;\n    }\n\n    event.consume(true);\n    let axis, angle;\n    if (event.shiftKey) {\n      axis = new UI.Geometry.Vector(0, 0, 1);\n      angle = (mouseMoveVector.x - this.mouseDownVector.x) * ShiftDragOrientationSpeed;\n    } else {\n      axis = UI.Geometry.crossProduct(this.mouseDownVector, mouseMoveVector);\n      angle = UI.Geometry.calculateAngle(this.mouseDownVector, mouseMoveVector);\n    }\n\n    // See the comment in setBoxOrientation() for a longer explanation about\n    // the CSS coordinate space, the Device Orientation coordinate space and\n    // the conversions we make. |axis| and |angle| are in the CSS coordinate\n    // space, while |this.originalBoxMatrix| is rotated and in the Device\n    // Orientation coordinate space, which is why we swap Y and Z and invert X.\n    const currentMatrix =\n        new DOMMatrixReadOnly().rotateAxisAngle(-axis.x, axis.z, axis.y, angle).multiply(this.originalBoxMatrix);\n\n    const eulerAngles = UI.Geometry.EulerAngles.fromDeviceOrientationRotationMatrix(currentMatrix);\n    const newOrientation =\n        new SDK.EmulationModel.DeviceOrientation(eulerAngles.alpha, eulerAngles.beta, eulerAngles.gamma);\n    this.setDeviceOrientation(newOrientation, DeviceOrientationModificationSource.UserDrag);\n    this.setSelectElementLabel(this.orientationSelectElement, NonPresetOptions.Custom);\n    return false;\n  }\n\n  private onBoxDragStart(event: MouseEvent): boolean {\n    if (!this.deviceOrientationOverrideEnabled) {\n      return false;\n    }\n\n    this.mouseDownVector = this.calculateRadiusVector(event.x, event.y);\n    this.originalBoxMatrix = this.boxMatrix;\n\n    if (!this.mouseDownVector) {\n      return false;\n    }\n\n    event.consume(true);\n    return true;\n  }\n\n  private calculateRadiusVector(x: number, y: number): UI.Geometry.Vector|null {\n    const rect = this.stageElement.getBoundingClientRect();\n    const radius = Math.max(rect.width, rect.height) / 2;\n    const sphereX = (x - rect.left - rect.width / 2) / radius;\n    const sphereY = (y - rect.top - rect.height / 2) / radius;\n    const sqrSum = sphereX * sphereX + sphereY * sphereY;\n    if (sqrSum > 0.5) {\n      return new UI.Geometry.Vector(sphereX, sphereY, 0.5 / Math.sqrt(sqrSum));\n    }\n\n    return new UI.Geometry.Vector(sphereX, sphereY, Math.sqrt(1 - sqrSum));\n  }\n\n  private appendTouchControl(): void {\n    const container = this.contentElement.createChild('div', 'touch-section');\n    const control = UI.SettingsUI.createControlForSetting(\n        Common.Settings.Settings.instance().moduleSetting('emulation.touch'),\n        i18nString(UIStrings.forcesTouchInsteadOfClick));\n\n    if (control) {\n      container.appendChild(control);\n    }\n  }\n\n  private appendIdleEmulator(): void {\n    const container = this.contentElement.createChild('div', 'idle-section');\n    const control = UI.SettingsUI.createControlForSetting(\n        Common.Settings.Settings.instance().moduleSetting('emulation.idleDetection'),\n        i18nString(UIStrings.forcesSelectedIdleStateEmulation));\n\n    if (control) {\n      container.appendChild(control);\n    }\n  }\n}\n\nexport const enum DeviceOrientationModificationSource {\n  UserInput = 'userInput',\n  UserDrag = 'userDrag',\n  ResetButton = 'resetButton',\n  SelectPreset = 'selectPreset',\n}\n\n/** {string} */\nexport const NonPresetOptions = {\n  NoOverride: 'noOverride',\n  Custom: 'custom',\n  Unavailable: 'unavailable',\n};\n\nexport class PresetOrientations {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get Orientations(): {title: string, value: {title: string, orientation: string}[]}[] {\n    return [{\n      title: i18nString(UIStrings.presets),\n      value: [\n        {title: i18nString(UIStrings.portrait), orientation: '[0, 90, 0]'},\n        {title: i18nString(UIStrings.portraitUpsideDown), orientation: '[-180, -90, 0]'},\n        {title: i18nString(UIStrings.landscapeLeft), orientation: '[90, 0, -90]'},\n        {title: i18nString(UIStrings.landscapeRight), orientation: '[90, -180, -90]'},\n        {title: i18nString(UIStrings.displayUp), orientation: '[0, 0, 0]'},\n        {title: i18nString(UIStrings.displayDown), orientation: '[0, -180, 0]'},\n      ],\n    }];\n  }\n}\n\nlet showActionDelegateInstance: ShowActionDelegate;\n\nexport class ShowActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    void UI.ViewManager.ViewManager.instance().showView('sensors');\n    return true;\n  }\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ShowActionDelegate {\n    const {forceNew} = opts;\n    if (!showActionDelegateInstance || forceNew) {\n      showActionDelegateInstance = new ShowActionDelegate();\n    }\n\n    return showActionDelegateInstance;\n  }\n}\n\nexport const ShiftDragOrientationSpeed = 16;\n"],
  "mappings": "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",
  "names": []
}
