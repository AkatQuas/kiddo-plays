{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/MetricsSidebarPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsSidebarPane} from './ElementsSidebarPane.js';\nimport metricsSidebarPaneStyles from './metricsSidebarPane.css.js';\n\nexport class MetricsSidebarPane extends ElementsSidebarPane {\n  originalPropertyData: SDK.CSSProperty.CSSProperty|null;\n  previousPropertyDataCandidate: SDK.CSSProperty.CSSProperty|null;\n  private inlineStyle: SDK.CSSStyleDeclaration.CSSStyleDeclaration|null;\n  private highlightMode: string;\n  private boxElements: {\n    element: HTMLElement,\n    name: string,\n    backgroundColor: string,\n  }[];\n  private isEditingMetrics?: boolean;\n\n  constructor() {\n    super();\n\n    this.originalPropertyData = null;\n    this.previousPropertyDataCandidate = null;\n    this.inlineStyle = null;\n    this.highlightMode = '';\n    this.boxElements = [];\n  }\n\n  doUpdate(): Promise<void> {\n    // \"style\" attribute might have changed. Update metrics unless they are being edited\n    // (if a CSS property is added, a StyleSheetChanged event is dispatched).\n    if (this.isEditingMetrics) {\n      return Promise.resolve();\n    }\n\n    // FIXME: avoid updates of a collapsed pane.\n    const node = this.node();\n    const cssModel = this.cssModel();\n    if (!node || node.nodeType() !== Node.ELEMENT_NODE || !cssModel) {\n      this.contentElement.removeChildren();\n      this.element.classList.add('collapsed');\n      return Promise.resolve();\n    }\n\n    function callback(this: MetricsSidebarPane, style: Map<string, string>|null): void {\n      if (!style || this.node() !== node) {\n        return;\n      }\n      this.updateMetrics(style);\n    }\n\n    if (!node.id) {\n      return Promise.resolve();\n    }\n\n    const promises = [\n      cssModel.getComputedStyle(node.id).then(callback.bind(this)),\n      cssModel.getInlineStyles(node.id).then(inlineStyleResult => {\n        if (inlineStyleResult && this.node() === node) {\n          this.inlineStyle = inlineStyleResult.inlineStyle;\n        }\n      }),\n    ];\n    return Promise.all(promises) as unknown as Promise<void>;\n  }\n\n  override onCSSModelChanged(): void {\n    this.update();\n  }\n\n  /**\n   * Toggle the visibility of the Metrics pane. This toggle allows external\n   * callers to control the visibility of this pane, but toggling this on does\n   * not guarantee the pane will always show up, because the pane's visibility\n   * is also controlled by the internal condition that style cannot be empty.\n   */\n  toggleVisibility(isVisible: boolean): void {\n    this.element.classList.toggle('invisible', !isVisible);\n  }\n\n  private getPropertyValueAsPx(style: Map<string, string>, propertyName: string): number {\n    const propertyValue = style.get(propertyName);\n    if (!propertyValue) {\n      return 0;\n    }\n    return Number(propertyValue.replace(/px$/, '') || 0);\n  }\n\n  private getBox(computedStyle: Map<string, string>, componentName: string): {\n    left: number,\n    top: number,\n    right: number,\n    bottom: number,\n  } {\n    const suffix = componentName === 'border' ? '-width' : '';\n    const left = this.getPropertyValueAsPx(computedStyle, componentName + '-left' + suffix);\n    const top = this.getPropertyValueAsPx(computedStyle, componentName + '-top' + suffix);\n    const right = this.getPropertyValueAsPx(computedStyle, componentName + '-right' + suffix);\n    const bottom = this.getPropertyValueAsPx(computedStyle, componentName + '-bottom' + suffix);\n    return {left, top, right, bottom};\n  }\n\n  private highlightDOMNode(showHighlight: boolean, mode: string, event: Event): void {\n    event.consume();\n    const node = this.node();\n    if (showHighlight && node) {\n      if (this.highlightMode === mode) {\n        return;\n      }\n      this.highlightMode = mode;\n      node.highlight(mode);\n    } else {\n      this.highlightMode = '';\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n\n    for (const {element, name, backgroundColor} of this.boxElements) {\n      const shouldHighlight = !node || mode === 'all' || name === mode;\n      element.style.backgroundColor = shouldHighlight ? backgroundColor : '';\n      element.classList.toggle('highlighted', shouldHighlight);\n    }\n  }\n\n  private updateMetrics(style: Map<string, string>): void {\n    // Updating with computed style.\n    const metricsElement = document.createElement('div');\n    metricsElement.className = 'metrics';\n    const self = this;\n\n    function createBoxPartElement(\n        this: MetricsSidebarPane, style: Map<string, string>, name: string, side: string,\n        suffix: string): HTMLDivElement {\n      const element = document.createElement('div');\n      element.className = side;\n\n      const propertyName = (name !== 'position' ? name + '-' : '') + side + suffix;\n      let value = style.get(propertyName);\n      if (value === undefined) {\n        return element;\n      }\n\n      if (value === '' || (name !== 'position' && value === '0px')) {\n        value = '\\u2012';\n      } else if (name === 'position' && value === 'auto') {\n        value = '\\u2012';\n      }\n      value = value.replace(/px$/, '');\n      value = Platform.NumberUtilities.toFixedIfFloating(value);\n\n      element.textContent = value;\n      element.addEventListener('dblclick', this.startEditing.bind(this, element, name, propertyName, style), false);\n      return element;\n    }\n\n    function getContentAreaWidthPx(style: Map<string, string>): string {\n      let width = style.get('width');\n      if (!width) {\n        return '';\n      }\n      width = width.replace(/px$/, '');\n      const widthValue = Number(width);\n      if (!isNaN(widthValue) && style.get('box-sizing') === 'border-box') {\n        const borderBox = self.getBox(style, 'border');\n        const paddingBox = self.getBox(style, 'padding');\n\n        width = (widthValue - borderBox.left - borderBox.right - paddingBox.left - paddingBox.right).toString();\n      }\n\n      return Platform.NumberUtilities.toFixedIfFloating(width);\n    }\n\n    function getContentAreaHeightPx(style: Map<string, string>): string {\n      let height = style.get('height');\n      if (!height) {\n        return '';\n      }\n      height = height.replace(/px$/, '');\n      const heightValue = Number(height);\n      if (!isNaN(heightValue) && style.get('box-sizing') === 'border-box') {\n        const borderBox = self.getBox(style, 'border');\n        const paddingBox = self.getBox(style, 'padding');\n\n        height = (heightValue - borderBox.top - borderBox.bottom - paddingBox.top - paddingBox.bottom).toString();\n      }\n\n      return Platform.NumberUtilities.toFixedIfFloating(height);\n    }\n\n    // Display types for which margin is ignored.\n    const noMarginDisplayType = new Set<string>([\n      'table-cell',\n      'table-column',\n      'table-column-group',\n      'table-footer-group',\n      'table-header-group',\n      'table-row',\n      'table-row-group',\n    ]);\n\n    // Display types for which padding is ignored.\n    const noPaddingDisplayType = new Set<string>([\n      'table-column',\n      'table-column-group',\n      'table-footer-group',\n      'table-header-group',\n      'table-row',\n      'table-row-group',\n    ]);\n\n    // Position types for which top, left, bottom and right are ignored.\n    const noPositionType = new Set<string>(['static']);\n\n    const boxes = ['content', 'padding', 'border', 'margin', 'position'];\n    const boxColors = [\n      Common.Color.PageHighlight.Content,\n      Common.Color.PageHighlight.Padding,\n      Common.Color.PageHighlight.Border,\n      Common.Color.PageHighlight.Margin,\n      Common.Color.Color.fromRGBA([0, 0, 0, 0]),\n    ];\n    const boxLabels = ['content', 'padding', 'border', 'margin', 'position'];\n    let previousBox: HTMLDivElement|null = null;\n    this.boxElements = [];\n    for (let i = 0; i < boxes.length; ++i) {\n      const name = boxes[i];\n      const display = style.get('display');\n      const position = style.get('position');\n      if (!display || !position) {\n        continue;\n      }\n      if (name === 'margin' && noMarginDisplayType.has(display)) {\n        continue;\n      }\n      if (name === 'padding' && noPaddingDisplayType.has(display)) {\n        continue;\n      }\n      if (name === 'position' && noPositionType.has(position)) {\n        continue;\n      }\n\n      const boxElement = document.createElement('div');\n      boxElement.className = `${name} highlighted`;\n      const backgroundColor = boxColors[i].asString(Common.Color.Format.RGBA) || '';\n      boxElement.style.backgroundColor = backgroundColor;\n      boxElement.addEventListener(\n          'mouseover', this.highlightDOMNode.bind(this, true, name === 'position' ? 'all' : name), false);\n      this.boxElements.push({element: boxElement, name, backgroundColor});\n\n      if (name === 'content') {\n        const widthElement = document.createElement('span');\n        widthElement.textContent = getContentAreaWidthPx(style);\n        widthElement.addEventListener(\n            'dblclick', this.startEditing.bind(this, widthElement, 'width', 'width', style), false);\n\n        const heightElement = document.createElement('span');\n        heightElement.textContent = getContentAreaHeightPx(style);\n        heightElement.addEventListener(\n            'dblclick', this.startEditing.bind(this, heightElement, 'height', 'height', style), false);\n\n        const timesElement = document.createElement('span');\n        timesElement.textContent = ' \u00D7 ';\n\n        boxElement.appendChild(widthElement);\n        boxElement.appendChild(timesElement);\n        boxElement.appendChild(heightElement);\n      } else {\n        const suffix = (name === 'border' ? '-width' : '');\n\n        const labelElement = document.createElement('div');\n        labelElement.className = 'label';\n        labelElement.textContent = boxLabels[i];\n        boxElement.appendChild(labelElement);\n\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'top', suffix));\n        boxElement.appendChild(document.createElement('br'));\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'left', suffix));\n\n        if (previousBox) {\n          boxElement.appendChild(previousBox);\n        }\n\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'right', suffix));\n        boxElement.appendChild(document.createElement('br'));\n        boxElement.appendChild(createBoxPartElement.call(this, style, name, 'bottom', suffix));\n      }\n\n      previousBox = boxElement;\n    }\n    metricsElement.appendChild((previousBox as HTMLDivElement));\n    metricsElement.addEventListener('mouseover', this.highlightDOMNode.bind(this, false, 'all'), false);\n    metricsElement.addEventListener('mouseleave', this.highlightDOMNode.bind(this, false, 'all'), false);\n    this.contentElement.removeChildren();\n    this.contentElement.appendChild(metricsElement);\n    this.element.classList.remove('collapsed');\n  }\n\n  startEditing(targetElement: Element, box: string, styleProperty: string, computedStyle: Map<string, string>): void {\n    if (UI.UIUtils.isBeingEdited(targetElement)) {\n      return;\n    }\n\n    const context: {\n      box: string,\n      styleProperty: string,\n      computedStyle: Map<string, string>,\n      keyDownHandler: (arg0: Event) => void,\n    } = {box, styleProperty, computedStyle, keyDownHandler: (): void => {}};\n    const boundKeyDown = this.handleKeyDown.bind(this, context);\n    context.keyDownHandler = boundKeyDown;\n    targetElement.addEventListener('keydown', boundKeyDown, false);\n\n    this.isEditingMetrics = true;\n\n    const config =\n        new UI.InplaceEditor.Config(this.editingCommitted.bind(this), this.editingCancelled.bind(this), context);\n    UI.InplaceEditor.InplaceEditor.startEditing(targetElement, config);\n\n    const selection = targetElement.getComponentSelection();\n    selection && selection.selectAllChildren(targetElement);\n  }\n\n  private handleKeyDown(\n      context: {\n        box: string,\n        styleProperty: string,\n        computedStyle: Map<string, string>,\n        keyDownHandler: (arg0: Event) => void,\n      },\n      event: Event): void {\n    const element = (event.currentTarget as Element);\n\n    function finishHandler(this: MetricsSidebarPane, originalValue: string, replacementString: string): void {\n      this.applyUserInput(element, replacementString, originalValue, context, false);\n    }\n\n    function customNumberHandler(prefix: string, number: number, suffix: string): string {\n      if (context.styleProperty !== 'margin' && number < 0) {\n        number = 0;\n      }\n      return prefix + number + suffix;\n    }\n\n    UI.UIUtils.handleElementValueModifications(\n        event, element, finishHandler.bind(this), undefined, customNumberHandler);\n  }\n\n  editingEnded(element: Element, context: {\n    keyDownHandler: (arg0: Event) => void,\n  }): void {\n    this.originalPropertyData = null;\n    this.previousPropertyDataCandidate = null;\n    element.removeEventListener('keydown', context.keyDownHandler, false);\n    delete this.isEditingMetrics;\n  }\n\n  editingCancelled(element: Element, context: {\n    box: string,\n    styleProperty: string,\n    computedStyle: Map<string, string>,\n    keyDownHandler: (arg0: Event) => void,\n  }): void {\n    if (this.inlineStyle) {\n      if (!this.originalPropertyData) {\n        // An added property, remove the last property in the style.\n        const pastLastSourcePropertyIndex = this.inlineStyle.pastLastSourcePropertyIndex();\n        if (pastLastSourcePropertyIndex) {\n          void this.inlineStyle.allProperties()[pastLastSourcePropertyIndex - 1].setText('', false);\n        }\n      } else {\n        void this.inlineStyle.allProperties()[this.originalPropertyData.index].setText(\n            this.originalPropertyData.propertyText || '', false);\n      }\n    }\n    this.editingEnded(element, context);\n    this.update();\n  }\n\n  private applyUserInput(\n      element: Element, userInput: string, previousContent: string, context: {\n        box: string,\n        styleProperty: string,\n        computedStyle: Map<string, string>,\n        keyDownHandler: (arg0: Event) => void,\n      },\n      commitEditor: boolean): void {\n    if (!this.inlineStyle) {\n      // Element has no renderer.\n      return this.editingCancelled(element, context);  // nothing changed, so cancel\n    }\n\n    if (commitEditor && userInput === previousContent) {\n      return this.editingCancelled(element, context);\n    }  // nothing changed, so cancel\n\n    if (context.box !== 'position' && (!userInput || userInput === '\\u2012')) {\n      userInput = '0px';\n    } else if (context.box === 'position' && (!userInput || userInput === '\\u2012')) {\n      userInput = 'auto';\n    }\n\n    userInput = userInput.toLowerCase();\n    // Append a \"px\" unit if the user input was just a number.\n    if (/^\\d+$/.test(userInput)) {\n      userInput += 'px';\n    }\n\n    const styleProperty = context.styleProperty;\n    const computedStyle = context.computedStyle;\n\n    if (computedStyle.get('box-sizing') === 'border-box' && (styleProperty === 'width' || styleProperty === 'height')) {\n      if (!userInput.match(/px$/)) {\n        Common.Console.Console.instance().error(\n            'For elements with box-sizing: border-box, only absolute content area dimensions can be applied');\n        return;\n      }\n\n      const borderBox = this.getBox(computedStyle, 'border');\n      const paddingBox = this.getBox(computedStyle, 'padding');\n      let userValuePx = Number(userInput.replace(/px$/, ''));\n      if (isNaN(userValuePx)) {\n        return;\n      }\n      if (styleProperty === 'width') {\n        userValuePx += borderBox.left + borderBox.right + paddingBox.left + paddingBox.right;\n      } else {\n        userValuePx += borderBox.top + borderBox.bottom + paddingBox.top + paddingBox.bottom;\n      }\n\n      userInput = userValuePx + 'px';\n    }\n\n    this.previousPropertyDataCandidate = null;\n\n    const allProperties = this.inlineStyle.allProperties();\n    for (let i = 0; i < allProperties.length; ++i) {\n      const property = allProperties[i];\n      if (property.name !== context.styleProperty || !property.activeInStyle()) {\n        continue;\n      }\n\n      this.previousPropertyDataCandidate = property;\n      property.setValue(userInput, commitEditor, true, callback.bind(this));\n      return;\n    }\n\n    this.inlineStyle.appendProperty(context.styleProperty, userInput, callback.bind(this));\n\n    function callback(this: MetricsSidebarPane, success: boolean): void {\n      if (!success) {\n        return;\n      }\n      if (!this.originalPropertyData) {\n        this.originalPropertyData = this.previousPropertyDataCandidate;\n      }\n\n      if (this.highlightMode) {\n        const node = this.node();\n        if (!node) {\n          return;\n        }\n        node.highlight(this.highlightMode);\n      }\n\n      if (commitEditor) {\n        this.update();\n      }\n    }\n  }\n\n  private editingCommitted(element: Element, userInput: string, previousContent: string, context: {\n    box: string,\n    styleProperty: string,\n    computedStyle: Map<string, string>,\n    keyDownHandler: (arg0: Event) => void,\n  }): void {\n    this.editingEnded(element, context);\n    this.applyUserInput(element, userInput, previousContent, context, true);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([metricsSidebarPaneStyles]);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
