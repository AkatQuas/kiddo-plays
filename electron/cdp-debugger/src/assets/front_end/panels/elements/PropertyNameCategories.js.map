{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/PropertyNameCategories.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport const enum Category {\n  Layout = 'Layout',\n  Text = 'Text',\n  Appearance = 'Appearance',\n  Animation = 'Animation',\n  Grid = 'Grid',\n  Flex = 'Flex',\n  Table = 'Table',\n  CSSVariables = 'CSS Variables',\n  GeneratedContent = 'Generated Content',\n  Other = 'Other',\n}\n\nexport const DefaultCategoryOrder = [\n  Category.Layout,\n  Category.Text,\n  Category.Appearance,\n  Category.Animation,\n  Category.CSSVariables,\n  Category.Grid,\n  Category.Flex,\n  Category.Table,\n  Category.GeneratedContent,\n  Category.Other,\n];\n\n// These categories are manually updated for now. In the future\n// we can try to find a way to automatically categorize them\n// or find an authoritative source for the categorization:\n// https://crbug.com/1117405\nconst CategorizedProperties = new Map([\n  [\n    Category.Layout,\n    [\n      'display',       'margin',      'padding',         'height',         'width',           'position',\n      'top',           'right',       'bottom',          'left',           'z-index',         'float',\n      'clear',         'overflow',    'resize',          'clip',           'visibility',      'box-sizing',\n      'align-content', 'align-items', 'align-self',      'flex',           'flex-basis',      'flex-direction',\n      'flex-flow',     'flex-grow',   'flex-shrink',     'flex-wrap',      'justify-content', 'order',\n      'inline-size',   'block-size',  'min-inline-size', 'min-block-size', 'max-inline-size', 'max-block-size',\n      'min-width',     'max-width',   'min-height',      'max-height',\n    ],\n  ],\n  [\n    Category.Text,\n    [\n      'font',\n      'font-family',\n      'font-size',\n      'font-size-adjust',\n      'font-stretch',\n      'font-style',\n      'font-variant',\n      'font-weight',\n      'font-smoothing',\n      'direction',\n      'tab-size',\n      'text-align',\n      'text-align-last',\n      'text-decoration',\n      'text-decoration-color',\n      'text-decoration-line',\n      'text-decoration-style',\n      'text-indent',\n      'text-justify',\n      'text-overflow',\n      'text-shadow',\n      'text-transform',\n      'text-size-adjust',\n      'line-height',\n      'vertical-align',\n      'letter-spacing',\n      'word-spacing',\n      'white-space',\n      'word-break',\n      'word-wrap',\n    ],\n  ],\n  [\n    Category.Appearance,\n    [\n      'color',\n      'outline',\n      'outline-color',\n      'outline-offset',\n      'outline-style',\n      'Outline-width',\n      'border',\n      'border-image',\n      'background',\n      'cursor',\n      'box-shadow',\n      '\u2248',\n      'tap-highlight-color',\n    ],\n  ],\n  [\n    Category.Animation,\n    [\n      'animation',\n      'animation-delay',\n      'animation-direction',\n      'animation-duration',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-name',\n      'animation-play-state',\n      'animation-timing-function',\n      'transition',\n      'transition-delay',\n      'transition-duration',\n      'transition-property',\n      'transition-timing-function',\n    ],\n  ],\n  [\n    Category.Grid,\n    [\n      'grid',\n      'grid-column',\n      'grid-row',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.Flex,\n    [\n      'flex',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.Table,\n    [\n      'border-collapse',\n      'border-spacing',\n      'caption-side',\n      'empty-cells',\n      'table-layout',\n    ],\n  ],\n  [\n    Category.GeneratedContent,\n    [\n      'content',\n      'quotes',\n      'counter-reset',\n      'counter-increment',\n    ],\n  ],\n]);\n\nconst CategoriesByPropertyName = new Map<string, never[]>();\n\nfor (const [category, styleNames] of CategorizedProperties) {\n  for (const styleName of styleNames) {\n    if (!CategoriesByPropertyName.has(styleName)) {\n      CategoriesByPropertyName.set(styleName, []);\n    }\n    const categories = (CategoriesByPropertyName.get(styleName) as Category[]);\n    categories.push(category);\n  }\n}\n\nconst matchCategoriesByPropertyName = (propertyName: string): Category[] => {\n  if (CategoriesByPropertyName.has(propertyName)) {\n    return CategoriesByPropertyName.get(propertyName) as Category[];\n  }\n  if (propertyName.startsWith('--')) {\n    return [Category.CSSVariables];\n  }\n  return [];\n};\n\n/**\n * Categorize a given property name to one or more categories.\n *\n * It matches against the static CategoriesByPropertyName first. It then\n * matches against several dynamic rules. It then tries to use the canonical\n * name's shorthands for matching. If nothing matches, it returns the \"Other\"\n * category.\n */\nexport const categorizePropertyName = (propertyName: string): Category[] => {\n  const cssMetadata = SDK.CSSMetadata.cssMetadata();\n  const canonicalName = cssMetadata.canonicalPropertyName(propertyName);\n  const categories = matchCategoriesByPropertyName(canonicalName);\n  if (categories.length > 0) {\n    return categories;\n  }\n\n  const shorthands = cssMetadata.getShorthands(canonicalName);\n  if (shorthands) {\n    for (const shorthand of shorthands) {\n      const shorthandCategories = matchCategoriesByPropertyName(shorthand);\n      if (shorthandCategories.length > 0) {\n        return shorthandCategories;\n      }\n    }\n  }\n\n  return [Category.Other];\n};\n"],
  "mappings": "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",
  "names": []
}
