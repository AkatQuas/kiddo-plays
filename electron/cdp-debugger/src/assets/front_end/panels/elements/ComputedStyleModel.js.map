{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/ComputedStyleModel.ts"],
  "sourcesContent": ["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nexport class ComputedStyleModel extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private nodeInternal: SDK.DOMModel.DOMNode|null;\n  private cssModelInternal: SDK.CSSModel.CSSModel|null;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n  private frameResizedTimer?: number;\n  private computedStylePromise?: Promise<ComputedStyle|null>;\n  constructor() {\n    super();\n    this.nodeInternal = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    this.cssModelInternal = null;\n    this.eventListeners = [];\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.onNodeChanged, this);\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.nodeInternal;\n  }\n\n  cssModel(): SDK.CSSModel.CSSModel|null {\n    return this.cssModelInternal && this.cssModelInternal.isEnabled() ? this.cssModelInternal : null;\n  }\n\n  private onNodeChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode|null>): void {\n    this.nodeInternal = event.data;\n    this.updateModel(this.nodeInternal ? this.nodeInternal.domModel().cssModel() : null);\n    this.onComputedStyleChanged(null);\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.cssModelInternal === cssModel) {\n      return;\n    }\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n    this.cssModelInternal = cssModel;\n    const domModel = cssModel ? cssModel.domModel() : null;\n    const resourceTreeModel = cssModel ? cssModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel) : null;\n    if (cssModel && domModel && resourceTreeModel) {\n      this.eventListeners = [\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.FontsUpdated, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.onComputedStyleChanged, this),\n        cssModel.addEventListener(SDK.CSSModel.Events.ModelWasEnabled, this.onComputedStyleChanged, this),\n        domModel.addEventListener(SDK.DOMModel.Events.DOMMutated, this.onDOMModelChanged, this),\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameResized, this.onFrameResized, this),\n      ];\n    }\n  }\n\n  private onComputedStyleChanged(event: Common.EventTarget.EventTargetEvent<ComputedStyleChangedEvent>|null): void {\n    delete this.computedStylePromise;\n    this.dispatchEventToListeners(Events.ComputedStyleChanged, event?.data ?? null);\n  }\n\n  private onDOMModelChanged(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    // Any attribute removal or modification can affect the styles of \"related\" nodes.\n    const node = event.data;\n    if (!this.nodeInternal ||\n        this.nodeInternal !== node && node.parentNode !== this.nodeInternal.parentNode &&\n            !node.isAncestor(this.nodeInternal)) {\n      return;\n    }\n    this.onComputedStyleChanged(null);\n  }\n\n  private onFrameResized(): void {\n    function refreshContents(this: ComputedStyleModel): void {\n      this.onComputedStyleChanged(null);\n      delete this.frameResizedTimer;\n    }\n\n    if (this.frameResizedTimer) {\n      clearTimeout(this.frameResizedTimer);\n    }\n\n    this.frameResizedTimer = window.setTimeout(refreshContents.bind(this), 100);\n  }\n\n  private elementNode(): SDK.DOMModel.DOMNode|null {\n    const node = this.node();\n    if (!node) {\n      return null;\n    }\n    return node.enclosingElementOrSelf();\n  }\n\n  async fetchComputedStyle(): Promise<ComputedStyle|null> {\n    const elementNode = this.elementNode();\n    const cssModel = this.cssModel();\n    if (!elementNode || !cssModel) {\n      return null;\n    }\n    const nodeId = elementNode.id;\n    if (!nodeId) {\n      return null;\n    }\n\n    if (!this.computedStylePromise) {\n      this.computedStylePromise = cssModel.getComputedStyle(nodeId).then(verifyOutdated.bind(this, elementNode));\n    }\n\n    return this.computedStylePromise;\n\n    function verifyOutdated(\n        this: ComputedStyleModel, elementNode: SDK.DOMModel.DOMNode, style: Map<string, string>|null): ComputedStyle|\n        null {\n      return elementNode === this.elementNode() && style ? new ComputedStyle(elementNode, style) :\n                                                           null as ComputedStyle | null;\n    }\n  }\n}\n\nexport const enum Events {\n  ComputedStyleChanged = 'ComputedStyleChanged',\n}\n\nexport type ComputedStyleChangedEvent = SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|\n                                        SDK.CSSModel.StyleSheetChangedEvent|void|SDK.CSSModel.PseudoStateForcedEvent|\n                                        null;\n\nexport type EventTypes = {\n  [Events.ComputedStyleChanged]: ComputedStyleChangedEvent,\n};\n\nexport class ComputedStyle {\n  node: SDK.DOMModel.DOMNode;\n  computedStyle: Map<string, string>;\n  constructor(node: SDK.DOMModel.DOMNode, computedStyle: Map<string, string>) {\n    this.node = node;\n    this.computedStyle = computedStyle;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
