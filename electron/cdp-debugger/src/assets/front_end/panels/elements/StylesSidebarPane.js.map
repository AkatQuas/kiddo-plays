{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/StylesSidebarPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as Formatter from '../../models/formatter/formatter.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport {formatCSSChangesFromDiff} from '../../panels/utils/utils.js';\nimport * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport type {ComputedStyleChangedEvent} from './ComputedStyleModel.js';\nimport {ComputedStyleModel} from './ComputedStyleModel.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport {ElementsSidebarPane} from './ElementsSidebarPane.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {StyleEditorWidget} from './StyleEditorWidget.js';\nimport {StylePropertyHighlighter} from './StylePropertyHighlighter.js';\nimport stylesSidebarPaneStyles from './stylesSidebarPane.css.js';\n\nimport type {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport {\n  StylePropertiesSection,\n  BlankStylePropertiesSection,\n  KeyframePropertiesSection,\n  HighlightPseudoStylePropertiesSection,\n} from './StylePropertiesSection.js';\n\nimport * as LayersWidget from './LayersWidget.js';\n\nconst UIStrings = {\n  /**\n  *@description No matches element text content in Styles Sidebar Pane of the Elements panel\n  */\n  noMatchingSelectorOrStyle: 'No matching selector or style',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  invalidPropertyValue: 'Invalid property value',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  unknownPropertyName: 'Unknown property name',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description ARIA accessible name in Styles Sidebar Pane of the Elements panel\n  */\n  filterStyles: 'Filter Styles',\n  /**\n  *@description Separator element text content in Styles Sidebar Pane of the Elements panel\n  *@example {scrollbar-corner} PH1\n  */\n  pseudoSElement: 'Pseudo ::{PH1} element',\n  /**\n  *@description Text of a DOM element in Styles Sidebar Pane of the Elements panel\n  */\n  inheritedFroms: 'Inherited from ',\n  /**\n  *@description Text of an inherited psuedo element in Styles Sidebar Pane of the Elements panel\n  *@example {highlight} PH1\n  */\n  inheritedFromSPseudoOf: 'Inherited from ::{PH1} pseudo of ',\n  /**\n  *@description Title of  in styles sidebar pane of the elements panel\n  *@example {Ctrl} PH1\n  */\n  incrementdecrementWithMousewheelOne:\n      'Increment/decrement with mousewheel or up/down keys. {PH1}: R \u00B11, Shift: G \u00B11, Alt: B \u00B11',\n  /**\n  *@description Title of  in styles sidebar pane of the elements panel\n  *@example {Ctrl} PH1\n  */\n  incrementdecrementWithMousewheelHundred:\n      'Increment/decrement with mousewheel or up/down keys. {PH1}: \u00B1100, Shift: \u00B110, Alt: \u00B10.1',\n  /**\n  *@description Announcement string for invalid properties.\n  *@example {Invalid property value} PH1\n  *@example {font-size} PH2\n  *@example {invalidValue} PH3\n  */\n  invalidString: '{PH1}, property name: {PH2}, property value: {PH3}',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Styles Sidebar Pane of the Elements panel\n  */\n  newStyleRule: 'New Style Rule',\n  /**\n  *@description Text that is announced by the screen reader when the user focuses on an input field for entering the name of a CSS property in the Styles panel\n  *@example {margin} PH1\n  */\n  cssPropertyName: '`CSS` property name: {PH1}',\n  /**\n  *@description Text that is announced by the screen reader when the user focuses on an input field for entering the value of a CSS property in the Styles panel\n  *@example {10px} PH1\n  */\n  cssPropertyValue: '`CSS` property value: {PH1}',\n  /**\n  *@description Tooltip text that appears when hovering over the rendering button in the Styles Sidebar Pane of the Elements panel\n  */\n  toggleRenderingEmulations: 'Toggle common rendering emulations',\n  /**\n  *@description Rendering emulation option for toggling the automatic dark mode\n  */\n  automaticDarkMode: 'Automatic dark mode',\n  /**\n  *@description Tooltip text that appears when hovering over the css changes button in the Styles Sidebar Pane of the Elements panel\n  */\n  copyAllCSSChanges: 'Copy all the CSS changes',\n  /**\n  *@description Tooltip text that appears after clicking on the copy CSS changes button\n  */\n  copiedToClipboard: 'Copied to clipboard',\n  /**\n  *@description Text displayed on layer separators in the styles sidebar pane.\n  */\n  layer: 'Layer',\n  /**\n  *@description Tooltip text for the link in the sidebar pane layer separators that reveals the layer in the layer tree view.\n  */\n  clickToRevealLayer: 'Click to reveal layer in layer tree',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylesSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// Highlightable properties are those that can be hovered in the sidebar to trigger a specific\n// highlighting mode on the current element.\nconst HIGHLIGHTABLE_PROPERTIES = [\n  {mode: 'padding', properties: ['padding']},\n  {mode: 'border', properties: ['border']},\n  {mode: 'margin', properties: ['margin']},\n  {mode: 'gap', properties: ['gap', 'grid-gap']},\n  {mode: 'column-gap', properties: ['column-gap', 'grid-column-gap']},\n  {mode: 'row-gap', properties: ['row-gap', 'grid-row-gap']},\n  {mode: 'grid-template-columns', properties: ['grid-template-columns']},\n  {mode: 'grid-template-rows', properties: ['grid-template-rows']},\n  {mode: 'grid-template-areas', properties: ['grid-areas']},\n  {mode: 'justify-content', properties: ['justify-content']},\n  {mode: 'align-content', properties: ['align-content']},\n  {mode: 'align-items', properties: ['align-items']},\n  {mode: 'flexibility', properties: ['flex', 'flex-basis', 'flex-grow', 'flex-shrink']},\n];\n\nlet stylesSidebarPaneInstance: StylesSidebarPane;\n\nexport class StylesSidebarPane extends Common.ObjectWrapper.eventMixin<EventTypes, typeof ElementsSidebarPane>(\n    ElementsSidebarPane) {\n  private currentToolbarPane: UI.Widget.Widget|null;\n  private animatedToolbarPane: UI.Widget.Widget|null;\n  private pendingWidget: UI.Widget.Widget|null;\n  private pendingWidgetToggle: UI.Toolbar.ToolbarToggle|null;\n  private toolbar: UI.Toolbar.Toolbar|null;\n  private toolbarPaneElement: HTMLElement;\n  private noMatchesElement: HTMLElement;\n  private sectionsContainer: HTMLElement;\n  sectionByElement: WeakMap<Node, StylePropertiesSection>;\n  private readonly swatchPopoverHelperInternal: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly decorator: StylePropertyHighlighter;\n  private lastRevealedProperty: SDK.CSSProperty.CSSProperty|null;\n  private userOperation: boolean;\n  isEditingStyle: boolean;\n  private filterRegexInternal: RegExp|null;\n  private isActivePropertyHighlighted: boolean;\n  private initialUpdateCompleted: boolean;\n  hasMatchedStyles: boolean;\n  private sectionBlocks: SectionBlock[];\n  private idleCallbackManager: IdleCallbackManager|null;\n  private needsForceUpdate: boolean;\n  private readonly resizeThrottler: Common.Throttler.Throttler;\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n  activeCSSAngle: InlineEditor.CSSAngle.CSSAngle|null;\n  #urlToChangeTracker: Map<Platform.DevToolsPath.UrlString, ChangeTracker> = new Map();\n  #copyChangesButton?: UI.Toolbar.ToolbarButton;\n\n  static instance(): StylesSidebarPane {\n    if (!stylesSidebarPaneInstance) {\n      stylesSidebarPaneInstance = new StylesSidebarPane();\n    }\n    return stylesSidebarPaneInstance;\n  }\n\n  private constructor() {\n    super(true /* delegatesFocus */);\n    this.setMinimumSize(96, 26);\n    this.registerCSSFiles([stylesSidebarPaneStyles]);\n    Common.Settings.Settings.instance().moduleSetting('colorFormat').addChangeListener(this.update.bind(this));\n    Common.Settings.Settings.instance().moduleSetting('textEditorIndent').addChangeListener(this.update.bind(this));\n\n    this.currentToolbarPane = null;\n    this.animatedToolbarPane = null;\n    this.pendingWidget = null;\n    this.pendingWidgetToggle = null;\n    this.toolbar = null;\n    this.toolbarPaneElement = this.createStylesSidebarToolbar();\n    this.computedStyleModelInternal = new ComputedStyleModel();\n\n    this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message hidden');\n    this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingSelectorOrStyle);\n\n    this.sectionsContainer = this.contentElement.createChild('div');\n    UI.ARIAUtils.markAsList(this.sectionsContainer);\n    this.sectionsContainer.addEventListener('keydown', this.sectionsContainerKeyDown.bind(this), false);\n    this.sectionsContainer.addEventListener('focusin', this.sectionsContainerFocusChanged.bind(this), false);\n    this.sectionsContainer.addEventListener('focusout', this.sectionsContainerFocusChanged.bind(this), false);\n    this.sectionByElement = new WeakMap();\n\n    this.swatchPopoverHelperInternal = new InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper();\n    this.swatchPopoverHelperInternal.addEventListener(\n        InlineEditor.SwatchPopoverHelper.Events.WillShowPopover, this.hideAllPopovers, this);\n    this.linkifier = new Components.Linkifier.Linkifier(MAX_LINK_LENGTH, /* useLinkDecorator */ true);\n    this.decorator = new StylePropertyHighlighter(this);\n    this.lastRevealedProperty = null;\n    this.userOperation = false;\n    this.isEditingStyle = false;\n    this.filterRegexInternal = null;\n    this.isActivePropertyHighlighted = false;\n    this.initialUpdateCompleted = false;\n    this.hasMatchedStyles = false;\n\n    this.contentElement.classList.add('styles-pane');\n\n    this.sectionBlocks = [];\n    this.idleCallbackManager = null;\n    this.needsForceUpdate = false;\n    stylesSidebarPaneInstance = this;\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.forceUpdate, this);\n    this.contentElement.addEventListener('copy', this.clipboardCopy.bind(this));\n    this.resizeThrottler = new Common.Throttler.Throttler(100);\n\n    this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n      const link = event.composedPath()[0];\n      if (link instanceof Element) {\n        return link;\n      }\n      return null;\n    }, () => this.node());\n\n    this.activeCSSAngle = null;\n  }\n\n  swatchPopoverHelper(): InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper {\n    return this.swatchPopoverHelperInternal;\n  }\n\n  setUserOperation(userOperation: boolean): void {\n    this.userOperation = userOperation;\n  }\n\n  static createExclamationMark(property: SDK.CSSProperty.CSSProperty, title: string|null): Element {\n    const exclamationElement = (document.createElement('span', {is: 'dt-icon-label'}) as UI.UIUtils.DevToolsIconLabel);\n    exclamationElement.className = 'exclamation-mark';\n    if (!StylesSidebarPane.ignoreErrorsForProperty(property)) {\n      exclamationElement.type = 'smallicon-warning';\n    }\n    let invalidMessage: string|Common.UIString.LocalizedString;\n    if (title) {\n      UI.Tooltip.Tooltip.install(exclamationElement, title);\n      invalidMessage = title;\n    } else {\n      invalidMessage = SDK.CSSMetadata.cssMetadata().isCSSPropertyName(property.name) ?\n          i18nString(UIStrings.invalidPropertyValue) :\n          i18nString(UIStrings.unknownPropertyName);\n      UI.Tooltip.Tooltip.install(exclamationElement, invalidMessage);\n    }\n    const invalidString =\n        i18nString(UIStrings.invalidString, {PH1: invalidMessage, PH2: property.name, PH3: property.value});\n\n    // Storing the invalidString for future screen reader support when editing the property\n    property.setDisplayedStringForInvalidProperty(invalidString);\n\n    return exclamationElement;\n  }\n\n  static ignoreErrorsForProperty(property: SDK.CSSProperty.CSSProperty): boolean {\n    function hasUnknownVendorPrefix(string: string): boolean {\n      return !string.startsWith('-webkit-') && /^[-_][\\w\\d]+-\\w/.test(string);\n    }\n\n    const name = property.name.toLowerCase();\n\n    // IE hack.\n    if (name.charAt(0) === '_') {\n      return true;\n    }\n\n    // IE has a different format for this.\n    if (name === 'filter') {\n      return true;\n    }\n\n    // Common IE-specific property prefix.\n    if (name.startsWith('scrollbar-')) {\n      return true;\n    }\n    if (hasUnknownVendorPrefix(name)) {\n      return true;\n    }\n\n    const value = property.value.toLowerCase();\n\n    // IE hack.\n    if (value.endsWith('\\\\9')) {\n      return true;\n    }\n    if (hasUnknownVendorPrefix(value)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static createPropertyFilterElement(\n      placeholder: string, container: Element, filterCallback: (arg0: RegExp|null) => void): Element {\n    const input = document.createElement('input');\n    input.type = 'search';\n    input.classList.add('custom-search-input');\n    input.placeholder = placeholder;\n\n    function searchHandler(): void {\n      const regex = input.value ? new RegExp(Platform.StringUtilities.escapeForRegExp(input.value), 'i') : null;\n      filterCallback(regex);\n    }\n    input.addEventListener('input', searchHandler, false);\n\n    function keydownHandler(event: Event): void {\n      const keyboardEvent = (event as KeyboardEvent);\n      if (keyboardEvent.key !== Platform.KeyboardUtilities.ESCAPE_KEY || !input.value) {\n        return;\n      }\n      keyboardEvent.consume(true);\n      input.value = '';\n      searchHandler();\n    }\n    input.addEventListener('keydown', keydownHandler, false);\n    return input;\n  }\n\n  static formatLeadingProperties(section: StylePropertiesSection): {\n    allDeclarationText: string,\n    ruleText: string,\n  } {\n    const selectorText = section.headerText();\n    const indent = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n\n    const style = section.style();\n    const lines: string[] = [];\n\n    // Invalid property should also be copied.\n    // For example: *display: inline.\n    for (const property of style.leadingProperties()) {\n      if (property.disabled) {\n        lines.push(`${indent}/* ${property.name}: ${property.value}; */`);\n      } else {\n        lines.push(`${indent}${property.name}: ${property.value};`);\n      }\n    }\n\n    const allDeclarationText: string = lines.join('\\n');\n    const ruleText: string = `${selectorText} {\\n${allDeclarationText}\\n}`;\n\n    return {\n      allDeclarationText,\n      ruleText,\n    };\n  }\n\n  revealProperty(cssProperty: SDK.CSSProperty.CSSProperty): void {\n    this.decorator.highlightProperty(cssProperty);\n    this.lastRevealedProperty = cssProperty;\n    this.update();\n  }\n\n  jumpToProperty(propertyName: string): void {\n    this.decorator.findAndHighlightPropertyName(propertyName);\n  }\n\n  forceUpdate(): void {\n    this.needsForceUpdate = true;\n    this.swatchPopoverHelperInternal.hide();\n    this.resetCache();\n    this.update();\n  }\n\n  private sectionsContainerKeyDown(event: Event): void {\n    const activeElement = Platform.DOMUtilities.deepActiveElement(this.sectionsContainer.ownerDocument);\n    if (!activeElement) {\n      return;\n    }\n    const section = this.sectionByElement.get(activeElement);\n    if (!section) {\n      return;\n    }\n    let sectionToFocus: (StylePropertiesSection|null)|null = null;\n    let willIterateForward = false;\n    switch ((event as KeyboardEvent).key) {\n      case 'ArrowUp':\n      case 'ArrowLeft': {\n        sectionToFocus = section.previousSibling() || section.lastSibling();\n        willIterateForward = false;\n        break;\n      }\n      case 'ArrowDown':\n      case 'ArrowRight': {\n        sectionToFocus = section.nextSibling() || section.firstSibling();\n        willIterateForward = true;\n        break;\n      }\n      case 'Home': {\n        sectionToFocus = section.firstSibling();\n        willIterateForward = true;\n        break;\n      }\n      case 'End': {\n        sectionToFocus = section.lastSibling();\n        willIterateForward = false;\n        break;\n      }\n    }\n\n    if (sectionToFocus && this.filterRegexInternal) {\n      sectionToFocus = sectionToFocus.findCurrentOrNextVisible(/* willIterateForward= */ willIterateForward);\n    }\n    if (sectionToFocus) {\n      sectionToFocus.element.focus();\n      event.consume(true);\n    }\n  }\n\n  private sectionsContainerFocusChanged(): void {\n    this.resetFocus();\n  }\n\n  resetFocus(): void {\n    // When a styles section is focused, shift+tab should leave the section.\n    // Leaving tabIndex = 0 on the first element would cause it to be focused instead.\n    if (!this.noMatchesElement.classList.contains('hidden')) {\n      return;\n    }\n    if (this.sectionBlocks[0] && this.sectionBlocks[0].sections[0]) {\n      const firstVisibleSection =\n          this.sectionBlocks[0].sections[0].findCurrentOrNextVisible(/* willIterateForward= */ true);\n      if (firstVisibleSection) {\n        firstVisibleSection.element.tabIndex = this.sectionsContainer.hasFocus() ? -1 : 0;\n      }\n    }\n  }\n\n  onAddButtonLongClick(event: Event): void {\n    const cssModel = this.cssModel();\n    if (!cssModel) {\n      return;\n    }\n    const headers = cssModel.styleSheetHeaders().filter(styleSheetResourceHeader);\n\n    const contextMenuDescriptors: {\n      text: string,\n      handler: () => Promise<void>,\n    }[] = [];\n    for (let i = 0; i < headers.length; ++i) {\n      const header = headers[i];\n      const handler = this.createNewRuleInStyleSheet.bind(this, header);\n      contextMenuDescriptors.push({text: Bindings.ResourceUtils.displayNameForURL(header.resourceURL()), handler});\n    }\n\n    contextMenuDescriptors.sort(compareDescriptors);\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    for (let i = 0; i < contextMenuDescriptors.length; ++i) {\n      const descriptor = contextMenuDescriptors[i];\n      contextMenu.defaultSection().appendItem(descriptor.text, descriptor.handler);\n    }\n    contextMenu.footerSection().appendItem(\n        'inspector-stylesheet', this.createNewRuleInViaInspectorStyleSheet.bind(this));\n    void contextMenu.show();\n\n    function compareDescriptors(\n        descriptor1: {\n          text: string,\n          handler: () => Promise<void>,\n        },\n        descriptor2: {\n          text: string,\n          handler: () => Promise<void>,\n        }): number {\n      return Platform.StringUtilities.naturalOrderComparator(descriptor1.text, descriptor2.text);\n    }\n\n    function styleSheetResourceHeader(header: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader): boolean {\n      return !header.isViaInspector() && !header.isInline && Boolean(header.resourceURL());\n    }\n  }\n\n  private onFilterChanged(regex: RegExp|null): void {\n    this.filterRegexInternal = regex;\n    this.updateFilter();\n    this.resetFocus();\n  }\n\n  refreshUpdate(editedSection: StylePropertiesSection, editedTreeElement?: StylePropertyTreeElement): void {\n    if (editedTreeElement) {\n      for (const section of this.allSections()) {\n        if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n          continue;\n        }\n        section.updateVarFunctions(editedTreeElement);\n      }\n    }\n\n    if (this.isEditingStyle) {\n      return;\n    }\n    const node = this.node();\n    if (!node) {\n      return;\n    }\n\n    for (const section of this.allSections()) {\n      if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n        continue;\n      }\n      section.update(section === editedSection);\n    }\n\n    if (this.filterRegexInternal) {\n      this.updateFilter();\n    }\n    this.swatchPopoverHelper().reposition();\n    this.nodeStylesUpdatedForTest(node, false);\n  }\n\n  async doUpdate(): Promise<void> {\n    if (!this.initialUpdateCompleted) {\n      window.setTimeout(() => {\n        if (!this.initialUpdateCompleted) {\n          // the spinner will get automatically removed when innerRebuildUpdate is called\n          this.sectionsContainer.createChild('span', 'spinner');\n        }\n      }, 200 /* only spin for loading time > 200ms to avoid unpleasant render flashes */);\n    }\n\n    const matchedStyles = await this.fetchMatchedCascade();\n    await this.innerRebuildUpdate(matchedStyles);\n    if (!this.initialUpdateCompleted) {\n      this.initialUpdateCompleted = true;\n      this.appendToolbarItem(this.createRenderingShortcuts());\n      if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES)) {\n        this.#copyChangesButton = this.createCopyAllChangesButton();\n        this.appendToolbarItem(this.#copyChangesButton);\n        this.#copyChangesButton.element.classList.add('hidden');\n      }\n      this.dispatchEventToListeners(Events.InitialUpdateCompleted);\n    }\n\n    this.dispatchEventToListeners(Events.StylesUpdateCompleted, {hasMatchedStyles: this.hasMatchedStyles});\n  }\n\n  onResize(): void {\n    void this.resizeThrottler.schedule(this.innerResize.bind(this));\n  }\n\n  private innerResize(): Promise<void> {\n    const width = this.contentElement.getBoundingClientRect().width + 'px';\n    this.allSections().forEach(section => {\n      section.propertiesTreeOutline.element.style.width = width;\n    });\n    return Promise.resolve();\n  }\n\n  private resetCache(): void {\n    const cssModel = this.cssModel();\n    if (cssModel) {\n      cssModel.discardCachedMatchedCascade();\n    }\n  }\n\n  private fetchMatchedCascade(): Promise<SDK.CSSMatchedStyles.CSSMatchedStyles|null> {\n    const node = this.node();\n    if (!node || !this.cssModel()) {\n      return Promise.resolve((null as SDK.CSSMatchedStyles.CSSMatchedStyles | null));\n    }\n\n    const cssModel = this.cssModel();\n    if (!cssModel) {\n      return Promise.resolve(null);\n    }\n    return cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n\n    function validateStyles(this: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null):\n        SDK.CSSMatchedStyles.CSSMatchedStyles|null {\n      return matchedStyles && matchedStyles.node() === this.node() ? matchedStyles : null;\n    }\n  }\n\n  setEditingStyle(editing: boolean, _treeElement?: StylePropertyTreeElement): void {\n    if (this.isEditingStyle === editing) {\n      return;\n    }\n    this.contentElement.classList.toggle('is-editing-style', editing);\n    this.isEditingStyle = editing;\n    this.setActiveProperty(null);\n  }\n\n  setActiveProperty(treeElement: StylePropertyTreeElement|null): void {\n    if (this.isActivePropertyHighlighted) {\n      SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    this.isActivePropertyHighlighted = false;\n\n    if (!this.node()) {\n      return;\n    }\n\n    if (!treeElement || treeElement.overloaded() || treeElement.inherited()) {\n      return;\n    }\n\n    const rule = treeElement.property.ownerStyle.parentRule;\n    const selectorList = (rule instanceof SDK.CSSRule.CSSStyleRule) ? rule.selectorText() : undefined;\n    for (const {properties, mode} of HIGHLIGHTABLE_PROPERTIES) {\n      if (!properties.includes(treeElement.name)) {\n        continue;\n      }\n      const node = this.node();\n      if (!node) {\n        continue;\n      }\n      node.domModel().overlayModel().highlightInOverlay(\n          {node: (this.node() as SDK.DOMModel.DOMNode), selectorList}, mode);\n      this.isActivePropertyHighlighted = true;\n      break;\n    }\n  }\n\n  override onCSSModelChanged(event: Common.EventTarget.EventTargetEvent<ComputedStyleChangedEvent>): void {\n    const edit = event?.data && 'edit' in event.data ? event.data.edit : null;\n    if (edit) {\n      for (const section of this.allSections()) {\n        section.styleSheetEdited(edit);\n      }\n      return;\n    }\n\n    if (this.userOperation || this.isEditingStyle) {\n      return;\n    }\n\n    this.resetCache();\n    this.update();\n  }\n\n  focusedSectionIndex(): number {\n    let index = 0;\n    for (const block of this.sectionBlocks) {\n      for (const section of block.sections) {\n        if (section.element.hasFocus()) {\n          return index;\n        }\n        index++;\n      }\n    }\n    return -1;\n  }\n\n  continueEditingElement(sectionIndex: number, propertyIndex: number): void {\n    const section = this.allSections()[sectionIndex];\n    if (section) {\n      const element = (section.closestPropertyForEditing(propertyIndex) as StylePropertyTreeElement | null);\n      if (!element) {\n        section.element.focus();\n        return;\n      }\n      element.startEditing();\n    }\n  }\n\n  private async innerRebuildUpdate(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null): Promise<void> {\n    // ElementsSidebarPane's throttler schedules this method. Usually,\n    // rebuild is suppressed while editing (see onCSSModelChanged()), but we need a\n    // 'force' flag since the currently running throttler process cannot be canceled.\n    if (this.needsForceUpdate) {\n      this.needsForceUpdate = false;\n    } else if (this.isEditingStyle || this.userOperation) {\n      return;\n    }\n\n    const focusedIndex = this.focusedSectionIndex();\n\n    this.linkifier.reset();\n    const prevSections = this.sectionBlocks.map(block => block.sections).flat();\n    this.sectionBlocks = [];\n\n    const node = this.node();\n    this.hasMatchedStyles = matchedStyles !== null && node !== null;\n    if (!this.hasMatchedStyles) {\n      this.sectionsContainer.removeChildren();\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n\n    this.sectionBlocks =\n        await this.rebuildSectionsForMatchedStyleRules((matchedStyles as SDK.CSSMatchedStyles.CSSMatchedStyles));\n\n    // Style sections maybe re-created when flexbox editor is activated.\n    // With the following code we re-bind the flexbox editor to the new\n    // section with the same index as the previous section had.\n    const newSections = this.sectionBlocks.map(block => block.sections).flat();\n    const styleEditorWidget = StyleEditorWidget.instance();\n    const boundSection = styleEditorWidget.getSection();\n    if (boundSection) {\n      styleEditorWidget.unbindContext();\n      for (const [index, prevSection] of prevSections.entries()) {\n        if (boundSection === prevSection && index < newSections.length) {\n          styleEditorWidget.bindContext(this, newSections[index]);\n        }\n      }\n    }\n\n    this.sectionsContainer.removeChildren();\n    const fragment = document.createDocumentFragment();\n\n    let index = 0;\n    let elementToFocus: HTMLDivElement|null = null;\n    for (const block of this.sectionBlocks) {\n      const titleElement = block.titleElement();\n      if (titleElement) {\n        fragment.appendChild(titleElement);\n      }\n      for (const section of block.sections) {\n        fragment.appendChild(section.element);\n        if (index === focusedIndex) {\n          elementToFocus = section.element;\n        }\n        index++;\n      }\n    }\n\n    this.sectionsContainer.appendChild(fragment);\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    if (focusedIndex >= index) {\n      this.sectionBlocks[0].sections[0].element.focus();\n    }\n\n    this.sectionsContainerFocusChanged();\n\n    if (this.filterRegexInternal) {\n      this.updateFilter();\n    } else {\n      this.noMatchesElement.classList.toggle('hidden', this.sectionBlocks.length > 0);\n    }\n    this.nodeStylesUpdatedForTest((node as SDK.DOMModel.DOMNode), true);\n    if (this.lastRevealedProperty) {\n      this.decorator.highlightProperty(this.lastRevealedProperty);\n      this.lastRevealedProperty = null;\n    }\n\n    this.swatchPopoverHelper().reposition();\n\n    // Record the elements tool load time after the sidepane has loaded.\n    Host.userMetrics.panelLoaded('elements', 'DevTools.Launch.Elements');\n\n    this.dispatchEventToListeners(Events.StylesUpdateCompleted, {hasMatchedStyles: false});\n  }\n\n  private nodeStylesUpdatedForTest(_node: SDK.DOMModel.DOMNode, _rebuild: boolean): void {\n    // For sniffing in tests.\n  }\n\n  private async rebuildSectionsForMatchedStyleRules(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles):\n      Promise<SectionBlock[]> {\n    if (this.idleCallbackManager) {\n      this.idleCallbackManager.discard();\n    }\n\n    this.idleCallbackManager = new IdleCallbackManager();\n\n    const blocks = [new SectionBlock(null)];\n    let sectionIdx = 0;\n    let lastParentNode: SDK.DOMModel.DOMNode|null = null;\n\n    let lastLayers: SDK.CSSLayer.CSSLayer[]|null = null;\n    let sawLayers: boolean = false;\n\n    const layersExperimentEnabled = Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.CSS_LAYERS);\n    const addLayerSeparator = (style: SDK.CSSStyleDeclaration.CSSStyleDeclaration): void => {\n      if (!layersExperimentEnabled) {\n        return;\n      }\n      const parentRule = style.parentRule;\n      if (parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n        const layers = parentRule.layers;\n        if ((layers.length || lastLayers) && lastLayers !== layers) {\n          const block = SectionBlock.createLayerBlock(parentRule);\n          blocks.push(block);\n          sawLayers = true;\n          lastLayers = layers;\n        }\n      }\n    };\n\n    // We disable the layer widget initially. If we see a layer in\n    // the matched styles we reenable the button.\n    LayersWidget.ButtonProvider.instance().item().setVisible(false);\n\n    const refreshedURLs = new Set<string>();\n    for (const style of matchedStyles.nodeStyles()) {\n      if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES) && style.parentRule) {\n        const url = style.parentRule.resourceURL();\n        if (url && !refreshedURLs.has(url)) {\n          await this.trackURLForChanges(url);\n          refreshedURLs.add(url);\n        }\n      }\n\n      const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n      if (parentNode && parentNode !== lastParentNode) {\n        lastParentNode = parentNode;\n        const block = await SectionBlock.createInheritedNodeBlock(lastParentNode);\n        blocks.push(block);\n      }\n\n      addLayerSeparator(style);\n\n      const lastBlock = blocks[blocks.length - 1];\n      if (lastBlock) {\n        this.idleCallbackManager.schedule(() => {\n          const section = new StylePropertiesSection(this, matchedStyles, style, sectionIdx);\n          sectionIdx++;\n          lastBlock.sections.push(section);\n        });\n      }\n    }\n\n    const customHighlightPseudoRulesets: {\n      highlightName: string|null,\n      pseudoType: Protocol.DOM.PseudoType,\n      pseudoStyles: SDK.CSSStyleDeclaration.CSSStyleDeclaration[],\n    }[] = Array.from(matchedStyles.customHighlightPseudoNames()).map(highlightName => {\n      return {\n        'highlightName': highlightName,\n        'pseudoType': Protocol.DOM.PseudoType.Highlight,\n        'pseudoStyles': matchedStyles.customHighlightPseudoStyles(highlightName),\n      };\n    });\n\n    const otherPseudoRulesets: {\n      highlightName: string|null,\n      pseudoType: Protocol.DOM.PseudoType,\n      pseudoStyles: SDK.CSSStyleDeclaration.CSSStyleDeclaration[],\n    }[] = [...matchedStyles.pseudoTypes()].map(pseudoType => {\n      return {'highlightName': null, 'pseudoType': pseudoType, 'pseudoStyles': matchedStyles.pseudoStyles(pseudoType)};\n    });\n\n    const pseudoRulesets = customHighlightPseudoRulesets.concat(otherPseudoRulesets).sort((a, b) => {\n      // We want to show the ::before pseudos first, followed by the remaining pseudos\n      // in alphabetical order.\n      if (a.pseudoType === Protocol.DOM.PseudoType.Before && b.pseudoType !== Protocol.DOM.PseudoType.Before) {\n        return -1;\n      }\n      if (a.pseudoType !== Protocol.DOM.PseudoType.Before && b.pseudoType === Protocol.DOM.PseudoType.Before) {\n        return 1;\n      }\n      if (a.pseudoType < b.pseudoType) {\n        return -1;\n      }\n      if (a.pseudoType > b.pseudoType) {\n        return 1;\n      }\n      return 0;\n    });\n\n    for (const pseudo of pseudoRulesets) {\n      lastParentNode = null;\n      for (let i = 0; i < pseudo.pseudoStyles.length; ++i) {\n        const style = pseudo.pseudoStyles[i];\n        const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n\n        // Start a new SectionBlock if this is the first rule for this pseudo type, or if this\n        // rule is inherited from a different parent than the previous rule.\n        if (i === 0 || parentNode !== lastParentNode) {\n          lastLayers = null;\n          if (parentNode) {\n            const block =\n                await SectionBlock.createInheritedPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName, parentNode);\n            blocks.push(block);\n          } else {\n            const block = SectionBlock.createPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName);\n            blocks.push(block);\n          }\n        }\n        lastParentNode = parentNode;\n\n        addLayerSeparator(style);\n        const lastBlock = blocks[blocks.length - 1];\n        this.idleCallbackManager.schedule(() => {\n          const section = new HighlightPseudoStylePropertiesSection(this, matchedStyles, style, sectionIdx);\n          sectionIdx++;\n          lastBlock.sections.push(section);\n        });\n      }\n    }\n\n    for (const keyframesRule of matchedStyles.keyframes()) {\n      const block = SectionBlock.createKeyframesBlock(keyframesRule.name().text);\n      for (const keyframe of keyframesRule.keyframes()) {\n        this.idleCallbackManager.schedule(() => {\n          block.sections.push(new KeyframePropertiesSection(this, matchedStyles, keyframe.style, sectionIdx));\n          sectionIdx++;\n        });\n      }\n      blocks.push(block);\n    }\n\n    if (layersExperimentEnabled) {\n      // If we have seen a layer in matched styles we enable\n      // the layer widget button.\n      if (sawLayers) {\n        LayersWidget.ButtonProvider.instance().item().setVisible(true);\n      } else if (LayersWidget.LayersWidget.instance().isShowing()) {\n        // Since the button for toggling the layers view is now hidden\n        // we ensure that the layers view is not currently toggled.\n        ElementsPanel.instance().showToolbarPane(null, LayersWidget.ButtonProvider.instance().item());\n      }\n    }\n\n    await this.idleCallbackManager.awaitDone();\n\n    return blocks;\n  }\n\n  async createNewRuleInViaInspectorStyleSheet(): Promise<void> {\n    const cssModel = this.cssModel();\n    const node = this.node();\n    if (!cssModel || !node) {\n      return;\n    }\n    this.setUserOperation(true);\n\n    const styleSheetHeader = await cssModel.requestViaInspectorStylesheet((node as SDK.DOMModel.DOMNode));\n\n    this.setUserOperation(false);\n    await this.createNewRuleInStyleSheet(styleSheetHeader);\n  }\n\n  private async createNewRuleInStyleSheet(styleSheetHeader: SDK.CSSStyleSheetHeader.CSSStyleSheetHeader|\n                                          null): Promise<void> {\n    if (!styleSheetHeader) {\n      return;\n    }\n\n    const text = (await styleSheetHeader.requestContent()).content || '';\n    const lines = text.split('\\n');\n    const range = TextUtils.TextRange.TextRange.createFromLocation(lines.length - 1, lines[lines.length - 1].length);\n\n    if (this.sectionBlocks && this.sectionBlocks.length > 0) {\n      this.addBlankSection(this.sectionBlocks[0].sections[0], styleSheetHeader.id, range);\n    }\n  }\n\n  addBlankSection(\n      insertAfterSection: StylePropertiesSection, styleSheetId: Protocol.CSS.StyleSheetId,\n      ruleLocation: TextUtils.TextRange.TextRange): void {\n    const node = this.node();\n    const blankSection = new BlankStylePropertiesSection(\n        this, insertAfterSection.matchedStyles, node ? node.simpleSelector() : '', styleSheetId, ruleLocation,\n        insertAfterSection.style(), 0);\n\n    this.sectionsContainer.insertBefore(blankSection.element, insertAfterSection.element.nextSibling);\n\n    for (const block of this.sectionBlocks) {\n      const index = block.sections.indexOf(insertAfterSection);\n      if (index === -1) {\n        continue;\n      }\n      block.sections.splice(index + 1, 0, blankSection);\n      blankSection.startEditingSelector();\n    }\n    let sectionIdx = 0;\n    for (const block of this.sectionBlocks) {\n      for (const section of block.sections) {\n        section.setSectionIdx(sectionIdx);\n        sectionIdx++;\n      }\n    }\n  }\n\n  removeSection(section: StylePropertiesSection): void {\n    for (const block of this.sectionBlocks) {\n      const index = block.sections.indexOf(section);\n      if (index === -1) {\n        continue;\n      }\n      block.sections.splice(index, 1);\n      section.element.remove();\n    }\n  }\n\n  filterRegex(): RegExp|null {\n    return this.filterRegexInternal;\n  }\n\n  private updateFilter(): void {\n    let hasAnyVisibleBlock = false;\n    for (const block of this.sectionBlocks) {\n      hasAnyVisibleBlock = block.updateFilter() || hasAnyVisibleBlock;\n    }\n    this.noMatchesElement.classList.toggle('hidden', Boolean(hasAnyVisibleBlock));\n  }\n\n  willHide(): void {\n    this.hideAllPopovers();\n    super.willHide();\n  }\n\n  hideAllPopovers(): void {\n    this.swatchPopoverHelperInternal.hide();\n    this.imagePreviewPopover.hide();\n    if (this.activeCSSAngle) {\n      this.activeCSSAngle.minify();\n      this.activeCSSAngle = null;\n    }\n  }\n\n  allSections(): StylePropertiesSection[] {\n    let sections: StylePropertiesSection[] = [];\n    for (const block of this.sectionBlocks) {\n      sections = sections.concat(block.sections);\n    }\n    return sections;\n  }\n\n  async trackURLForChanges(url: Platform.DevToolsPath.UrlString): Promise<void> {\n    const currentTracker = this.#urlToChangeTracker.get(url);\n    if (currentTracker) {\n      WorkspaceDiff.WorkspaceDiff.workspaceDiff().unsubscribeFromDiffChange(\n          currentTracker.uiSourceCode, currentTracker.diffChangeCallback);\n    }\n\n    // We get a refreshed uiSourceCode each time because the underlying instance may be recreated.\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n    if (!uiSourceCode) {\n      return;\n    }\n    const diffChangeCallback = this.refreshChangedLines.bind(this, uiSourceCode);\n    WorkspaceDiff.WorkspaceDiff.workspaceDiff().subscribeToDiffChange(uiSourceCode, diffChangeCallback);\n    const newTracker = {\n      uiSourceCode,\n      changedLines: new Set<number>(),\n      diffChangeCallback,\n    };\n    this.#urlToChangeTracker.set(url, newTracker);\n    await this.refreshChangedLines(newTracker.uiSourceCode);\n  }\n\n  isPropertyChanged(property: SDK.CSSProperty.CSSProperty): boolean {\n    const url = property.ownerStyle.parentRule?.resourceURL();\n    if (!url) {\n      return false;\n    }\n    const changeTracker = this.#urlToChangeTracker.get(url);\n    if (!changeTracker) {\n      return false;\n    }\n    const {changedLines, formattedCurrentMapping} = changeTracker;\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(property, true);\n    if (!uiLocation) {\n      return false;\n    }\n    if (!formattedCurrentMapping) {\n      // UILocation's lineNumber starts at 0, but changedLines start at 1.\n      return changedLines.has(uiLocation.lineNumber + 1);\n    }\n    const formattedLineNumber =\n        formattedCurrentMapping.originalToFormatted(uiLocation.lineNumber, uiLocation.columnNumber)[0];\n    return changedLines.has(formattedLineNumber + 1);\n  }\n\n  updateChangeStatus(): void {\n    if (!this.#copyChangesButton) {\n      return;\n    }\n\n    let hasChangedStyles = false;\n    for (const changeTracker of this.#urlToChangeTracker.values()) {\n      if (changeTracker.changedLines.size > 0) {\n        hasChangedStyles = true;\n        break;\n      }\n    }\n\n    this.#copyChangesButton.element.classList.toggle('hidden', !hasChangedStyles);\n  }\n\n  private async refreshChangedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const changeTracker = this.#urlToChangeTracker.get(uiSourceCode.url());\n    if (!changeTracker) {\n      return;\n    }\n    const diffResponse =\n        await WorkspaceDiff.WorkspaceDiff.workspaceDiff().requestDiff(uiSourceCode, {shouldFormatDiff: true});\n    const changedLines = new Set<number>();\n    changeTracker.changedLines = changedLines;\n    if (!diffResponse) {\n      return;\n    }\n    const {diff, formattedCurrentMapping} = diffResponse;\n    const {rows} = DiffView.DiffView.buildDiffRows(diff);\n    for (const row of rows) {\n      if (row.type === DiffView.DiffView.RowType.Addition) {\n        changedLines.add(row.currentLineNumber);\n      }\n    }\n    changeTracker.formattedCurrentMapping = formattedCurrentMapping;\n  }\n\n  async getFormattedChanges(): Promise<string> {\n    let allChanges = '';\n    for (const [url, {uiSourceCode}] of this.#urlToChangeTracker) {\n      const diffResponse =\n          await WorkspaceDiff.WorkspaceDiff.workspaceDiff().requestDiff(uiSourceCode, {shouldFormatDiff: true});\n      // Diff array with real diff will contain at least 2 lines.\n      if (!diffResponse || diffResponse?.diff.length < 2) {\n        continue;\n      }\n      const changes = await formatCSSChangesFromDiff(diffResponse.diff);\n      if (changes.length > 0) {\n        allChanges += `/* ${escapeUrlAsCssComment(url)} */\\n\\n${changes}\\n\\n`;\n      }\n    }\n\n    return allChanges;\n  }\n\n  private clipboardCopy(_event: Event): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.StyleRuleCopied);\n  }\n\n  private createStylesSidebarToolbar(): HTMLElement {\n    const container = this.contentElement.createChild('div', 'styles-sidebar-pane-toolbar-container');\n    const hbox = container.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n    const filterContainerElement = hbox.createChild('div', 'styles-sidebar-pane-filter-box');\n    const filterInput = StylesSidebarPane.createPropertyFilterElement(\n        i18nString(UIStrings.filter), hbox, this.onFilterChanged.bind(this));\n    UI.ARIAUtils.setAccessibleName(filterInput, i18nString(UIStrings.filterStyles));\n    filterContainerElement.appendChild(filterInput);\n    const toolbar = new UI.Toolbar.Toolbar('styles-pane-toolbar', hbox);\n    toolbar.makeToggledGray();\n    void toolbar.appendItemsAtLocation('styles-sidebarpane-toolbar');\n    this.toolbar = toolbar;\n    const toolbarPaneContainer = container.createChild('div', 'styles-sidebar-toolbar-pane-container');\n    const toolbarPaneContent = (toolbarPaneContainer.createChild('div', 'styles-sidebar-toolbar-pane') as HTMLElement);\n\n    return toolbarPaneContent;\n  }\n\n  showToolbarPane(widget: UI.Widget.Widget|null, toggle: UI.Toolbar.ToolbarToggle|null): void {\n    if (this.pendingWidgetToggle) {\n      this.pendingWidgetToggle.setToggled(false);\n    }\n    this.pendingWidgetToggle = toggle;\n\n    if (this.animatedToolbarPane) {\n      this.pendingWidget = widget;\n    } else {\n      this.startToolbarPaneAnimation(widget);\n    }\n\n    if (widget && toggle) {\n      toggle.setToggled(true);\n    }\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    if (this.toolbar) {\n      this.toolbar.appendToolbarItem(item);\n    }\n  }\n\n  private startToolbarPaneAnimation(widget: UI.Widget.Widget|null): void {\n    if (widget === this.currentToolbarPane) {\n      return;\n    }\n\n    if (widget && this.currentToolbarPane) {\n      this.currentToolbarPane.detach();\n      widget.show(this.toolbarPaneElement);\n      this.currentToolbarPane = widget;\n      this.currentToolbarPane.focus();\n      return;\n    }\n\n    this.animatedToolbarPane = widget;\n\n    if (this.currentToolbarPane) {\n      this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slideout';\n    } else if (widget) {\n      this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slidein';\n    }\n\n    if (widget) {\n      widget.show(this.toolbarPaneElement);\n    }\n\n    const listener = onAnimationEnd.bind(this);\n    this.toolbarPaneElement.addEventListener('animationend', listener, false);\n\n    function onAnimationEnd(this: StylesSidebarPane): void {\n      this.toolbarPaneElement.style.removeProperty('animation-name');\n      this.toolbarPaneElement.removeEventListener('animationend', listener, false);\n\n      if (this.currentToolbarPane) {\n        this.currentToolbarPane.detach();\n      }\n\n      this.currentToolbarPane = this.animatedToolbarPane;\n      if (this.currentToolbarPane) {\n        this.currentToolbarPane.focus();\n      }\n      this.animatedToolbarPane = null;\n\n      if (this.pendingWidget) {\n        this.startToolbarPaneAnimation(this.pendingWidget);\n        this.pendingWidget = null;\n      }\n    }\n  }\n\n  private createRenderingShortcuts(): UI.Toolbar.ToolbarButton {\n    const prefersColorSchemeSetting =\n        Common.Settings.Settings.instance().moduleSetting<string>('emulatedCSSMediaFeaturePrefersColorScheme');\n    const autoDarkModeSetting = Common.Settings.Settings.instance().moduleSetting('emulateAutoDarkMode');\n    const decorateStatus = (condition: boolean, title: string): string => `${condition ? '\u2713 ' : ''}${title}`;\n\n    const icon = new IconButton.Icon.Icon();\n    icon.data = {\n      iconName: 'ic_rendering',\n      color: 'var(--color-text-secondary)',\n      width: '18px',\n      height: '18px',\n    };\n    const button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleRenderingEmulations), icon);\n    button.setToggleWithDot(true);\n\n    button.element.addEventListener('click', event => {\n      const menu = new UI.ContextMenu.ContextMenu(event);\n      const preferredColorScheme = prefersColorSchemeSetting.get();\n      const isLightColorScheme = preferredColorScheme === 'light';\n      const isDarkColorScheme = preferredColorScheme === 'dark';\n      const isAutoDarkEnabled = autoDarkModeSetting.get();\n      const lightColorSchemeOption = decorateStatus(isLightColorScheme, 'prefers-color-scheme: light');\n      const darkColorSchemeOption = decorateStatus(isDarkColorScheme, 'prefers-color-scheme: dark');\n      const autoDarkModeOption = decorateStatus(isAutoDarkEnabled, i18nString(UIStrings.automaticDarkMode));\n\n      menu.defaultSection().appendItem(lightColorSchemeOption, () => {\n        autoDarkModeSetting.set(false);\n        prefersColorSchemeSetting.set(isLightColorScheme ? '' : 'light');\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      });\n      menu.defaultSection().appendItem(darkColorSchemeOption, () => {\n        autoDarkModeSetting.set(false);\n        prefersColorSchemeSetting.set(isDarkColorScheme ? '' : 'dark');\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      });\n      menu.defaultSection().appendItem(autoDarkModeOption, () => {\n        autoDarkModeSetting.set(!isAutoDarkEnabled);\n        button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n      });\n\n      void menu.show();\n      event.stopPropagation();\n    }, {capture: true});\n\n    return button;\n  }\n\n  private createCopyAllChangesButton(): UI.Toolbar.ToolbarButton {\n    const copyAllChangesButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.copyAllCSSChanges), 'largeicon-copy');\n    // TODO(1296947): implement a dedicated component to share between all copy buttons\n    copyAllChangesButton.element.setAttribute('data-content', i18nString(UIStrings.copiedToClipboard));\n    let timeout: number|undefined;\n    copyAllChangesButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, async () => {\n      const allChanges = await this.getFormattedChanges();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allChanges);\n      Host.userMetrics.styleTextCopied(Host.UserMetrics.StyleTextCopied.AllChangesViaStylesPane);\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      copyAllChangesButton.element.classList.add('copied-to-clipboard');\n      timeout = window.setTimeout(() => {\n        copyAllChangesButton.element.classList.remove('copied-to-clipboard');\n        timeout = undefined;\n      }, 2000);\n    });\n    return copyAllChangesButton;\n  }\n}\n\nexport const enum Events {\n  InitialUpdateCompleted = 'InitialUpdateCompleted',\n  StylesUpdateCompleted = 'StylesUpdateCompleted',\n}\n\nexport interface StylesUpdateCompletedEvent {\n  hasMatchedStyles: boolean;\n}\n\ninterface CompletionResult extends UI.SuggestBox.Suggestion {\n  isCSSVariableColor?: boolean;\n}\n\nexport type EventTypes = {\n  [Events.InitialUpdateCompleted]: void,\n  [Events.StylesUpdateCompleted]: StylesUpdateCompletedEvent,\n};\n\ntype ChangeTracker = {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode,\n  changedLines: Set<number>,\n  diffChangeCallback: () => Promise<void>,\n  formattedCurrentMapping?: Formatter.ScriptFormatter.FormatterSourceMapping,\n};\n\nconst MAX_LINK_LENGTH = 23;\n\nexport class SectionBlock {\n  private readonly titleElementInternal: Element|null;\n  sections: StylePropertiesSection[];\n  constructor(titleElement: Element|null) {\n    this.titleElementInternal = titleElement;\n    this.sections = [];\n  }\n\n  static createPseudoTypeBlock(pseudoType: Protocol.DOM.PseudoType, pseudoArgument: string|null): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n    const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n    separatorElement.textContent = i18nString(UIStrings.pseudoSElement, {PH1: pseudoTypeString});\n    return new SectionBlock(separatorElement);\n  }\n\n  static async createInheritedPseudoTypeBlock(\n      pseudoType: Protocol.DOM.PseudoType, pseudoArgument: string|null,\n      node: SDK.DOMModel.DOMNode): Promise<SectionBlock> {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n    const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n    UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFromSPseudoOf, {PH1: pseudoTypeString}));\n    const link = await Common.Linkifier.Linkifier.linkify(node, {\n      preventKeyboardFocus: true,\n      tooltip: undefined,\n    });\n    separatorElement.appendChild(link);\n    return new SectionBlock(separatorElement);\n  }\n\n  static createKeyframesBlock(keyframesName: string): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    separatorElement.textContent = `@keyframes ${keyframesName}`;\n    return new SectionBlock(separatorElement);\n  }\n\n  static async createInheritedNodeBlock(node: SDK.DOMModel.DOMNode): Promise<SectionBlock> {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator';\n    UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFroms));\n    const link = await Common.Linkifier.Linkifier.linkify(node, {\n      preventKeyboardFocus: true,\n      tooltip: undefined,\n    });\n    separatorElement.appendChild(link);\n    return new SectionBlock(separatorElement);\n  }\n\n  static createLayerBlock(rule: SDK.CSSRule.CSSStyleRule): SectionBlock {\n    const separatorElement = document.createElement('div');\n    separatorElement.className = 'sidebar-separator layer-separator';\n    UI.UIUtils.createTextChild(separatorElement.createChild('div'), i18nString(UIStrings.layer));\n    const layers = rule.layers;\n    if (!layers.length && rule.origin === Protocol.CSS.StyleSheetOrigin.UserAgent) {\n      const name = rule.origin === Protocol.CSS.StyleSheetOrigin.UserAgent ? '\\xa0user\\xa0agent\\xa0stylesheet' :\n                                                                             '\\xa0implicit\\xa0outer\\xa0layer';\n      UI.UIUtils.createTextChild(separatorElement.createChild('div'), name);\n      return new SectionBlock(separatorElement);\n    }\n    const layerLink = separatorElement.createChild('button') as HTMLButtonElement;\n    layerLink.className = 'link';\n    layerLink.title = i18nString(UIStrings.clickToRevealLayer);\n    const name = layers.map(layer => SDK.CSSModel.CSSModel.readableLayerName(layer.text)).join('.');\n    layerLink.textContent = name;\n    layerLink.onclick = (): Promise<void> => LayersWidget.LayersWidget.instance().revealLayer(name);\n    return new SectionBlock(separatorElement);\n  }\n\n  updateFilter(): boolean {\n    let hasAnyVisibleSection = false;\n    for (const section of this.sections) {\n      hasAnyVisibleSection = section.updateFilter() || hasAnyVisibleSection;\n    }\n    if (this.titleElementInternal) {\n      this.titleElementInternal.classList.toggle('hidden', !hasAnyVisibleSection);\n    }\n    return Boolean(hasAnyVisibleSection);\n  }\n\n  titleElement(): Element|null {\n    return this.titleElementInternal;\n  }\n}\n\nexport class IdleCallbackManager {\n  private discarded: boolean;\n  private readonly promises: Promise<void>[];\n  constructor() {\n    this.discarded = false;\n    this.promises = [];\n  }\n\n  discard(): void {\n    this.discarded = true;\n  }\n\n  schedule(fn: () => void, timeout: number = 100): void {\n    if (this.discarded) {\n      return;\n    }\n    this.promises.push(new Promise((resolve, reject) => {\n      const run = (): void => {\n        try {\n          fn();\n          resolve();\n        } catch (err) {\n          reject(err);\n        }\n      };\n      window.requestIdleCallback(() => {\n        if (this.discarded) {\n          return resolve();\n        }\n        run();\n      }, {timeout});\n    }));\n  }\n\n  awaitDone(): Promise<void[]> {\n    return Promise.all(this.promises);\n  }\n}\n\nexport function quoteFamilyName(familyName: string): string {\n  return `'${familyName.replaceAll('\\'', '\\\\\\'')}'`;\n}\n\nexport class CSSPropertyPrompt extends UI.TextPrompt.TextPrompt {\n  private readonly isColorAware: boolean;\n  private readonly cssCompletions: string[];\n  private selectedNodeComputedStyles: Map<string, string>|null;\n  private parentNodeComputedStyles: Map<string, string>|null;\n  private treeElement: StylePropertyTreeElement;\n  private isEditingName: boolean;\n  private readonly cssVariables: string[];\n\n  constructor(treeElement: StylePropertyTreeElement, isEditingName: boolean) {\n    // Use the same callback both for applyItemCallback and acceptItemCallback.\n    super();\n    this.initialize(this.buildPropertyCompletions.bind(this), UI.UIUtils.StyleValueDelimiters);\n    const cssMetadata = SDK.CSSMetadata.cssMetadata();\n    this.isColorAware = SDK.CSSMetadata.cssMetadata().isColorAwareProperty(treeElement.property.name);\n    this.cssCompletions = [];\n    const node = treeElement.node();\n    if (isEditingName) {\n      this.cssCompletions = cssMetadata.allProperties();\n      if (node && !node.isSVGNode()) {\n        this.cssCompletions = this.cssCompletions.filter(property => !cssMetadata.isSVGProperty(property));\n      }\n    } else {\n      this.cssCompletions = cssMetadata.getPropertyValues(treeElement.property.name);\n      if (node && cssMetadata.isFontFamilyProperty(treeElement.property.name)) {\n        const fontFamilies = node.domModel().cssModel().fontFaces().map(font => quoteFamilyName(font.getFontFamily()));\n        this.cssCompletions.unshift(...fontFamilies);\n      }\n    }\n\n    /**\n     * Computed styles cache populated for flexbox features.\n     */\n    this.selectedNodeComputedStyles = null;\n    /**\n     * Computed styles cache populated for flexbox features.\n     */\n    this.parentNodeComputedStyles = null;\n    this.treeElement = treeElement;\n    this.isEditingName = isEditingName;\n    this.cssVariables = treeElement.matchedStyles().availableCSSVariables(treeElement.property.ownerStyle);\n    if (this.cssVariables.length < 1000) {\n      this.cssVariables.sort(Platform.StringUtilities.naturalOrderComparator);\n    } else {\n      this.cssVariables.sort();\n    }\n\n    if (!isEditingName) {\n      this.disableDefaultSuggestionForEmptyInput();\n\n      // If a CSS value is being edited that has a numeric or hex substring, hint that precision modifier shortcuts are available.\n      if (treeElement && treeElement.valueElement) {\n        const cssValueText = treeElement.valueElement.textContent;\n        const cmdOrCtrl = Host.Platform.isMac() ? 'Cmd' : 'Ctrl';\n        if (cssValueText !== null) {\n          if (cssValueText.match(/#[\\da-f]{3,6}$/i)) {\n            this.setTitle(i18nString(UIStrings.incrementdecrementWithMousewheelOne, {PH1: cmdOrCtrl}));\n          } else if (cssValueText.match(/\\d+/)) {\n            this.setTitle(i18nString(UIStrings.incrementdecrementWithMousewheelHundred, {PH1: cmdOrCtrl}));\n          }\n        }\n      }\n    }\n  }\n\n  onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    switch (keyboardEvent.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n      case 'PageUp':\n      case 'PageDown':\n        if (!this.isSuggestBoxVisible() && this.handleNameOrValueUpDown(keyboardEvent)) {\n          keyboardEvent.preventDefault();\n          return;\n        }\n        break;\n      case 'Enter':\n        if (keyboardEvent.shiftKey) {\n          return;\n        }\n        // Accept any available autocompletions and advance to the next field.\n        this.tabKeyPressed();\n        keyboardEvent.preventDefault();\n        return;\n    }\n\n    super.onKeyDown(keyboardEvent);\n  }\n\n  onMouseWheel(event: Event): void {\n    if (this.handleNameOrValueUpDown(event)) {\n      event.consume(true);\n      return;\n    }\n    super.onMouseWheel(event);\n  }\n\n  tabKeyPressed(): boolean {\n    this.acceptAutoComplete();\n\n    // Always tab to the next field.\n    return false;\n  }\n\n  private handleNameOrValueUpDown(event: Event): boolean {\n    function finishHandler(this: CSSPropertyPrompt, _originalValue: string, _replacementString: string): void {\n      // Synthesize property text disregarding any comments, custom whitespace etc.\n      if (this.treeElement.nameElement && this.treeElement.valueElement) {\n        void this.treeElement.applyStyleText(\n            this.treeElement.nameElement.textContent + ': ' + this.treeElement.valueElement.textContent, false);\n      }\n    }\n\n    function customNumberHandler(this: CSSPropertyPrompt, prefix: string, number: number, suffix: string): string {\n      if (number !== 0 && !suffix.length &&\n          SDK.CSSMetadata.cssMetadata().isLengthProperty(this.treeElement.property.name) &&\n          !this.treeElement.property.value.toLowerCase().startsWith('calc(')) {\n        suffix = 'px';\n      }\n      return prefix + number + suffix;\n    }\n\n    // Handle numeric value increment/decrement only at this point.\n    if (!this.isEditingName && this.treeElement.valueElement &&\n        UI.UIUtils.handleElementValueModifications(\n            event, this.treeElement.valueElement, finishHandler.bind(this), this.isValueSuggestion.bind(this),\n            customNumberHandler.bind(this))) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private isValueSuggestion(word: string): boolean {\n    if (!word) {\n      return false;\n    }\n    word = word.toLowerCase();\n    return this.cssCompletions.indexOf(word) !== -1 || word.startsWith('--');\n  }\n\n  private async buildPropertyCompletions(expression: string, query: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    const lowerQuery = query.toLowerCase();\n    const editingVariable = !this.isEditingName && expression.trim().endsWith('var(');\n    if (!query && !force && !editingVariable && (this.isEditingName || expression)) {\n      return Promise.resolve([]);\n    }\n\n    const prefixResults: Array<CompletionResult> = [];\n    const anywhereResults: Array<CompletionResult> = [];\n    if (!editingVariable) {\n      this.cssCompletions.forEach(completion => filterCompletions.call(this, completion, false /* variable */));\n    }\n    const node = this.treeElement.node();\n    if (this.isEditingName && node) {\n      const nameValuePresets = SDK.CSSMetadata.cssMetadata().nameValuePresets(node.isSVGNode());\n      nameValuePresets.forEach(\n          preset => filterCompletions.call(this, preset, false /* variable */, true /* nameValue */));\n    }\n    if (this.isEditingName || editingVariable) {\n      this.cssVariables.forEach(variable => filterCompletions.call(this, variable, true /* variable */));\n    }\n\n    const results = prefixResults.concat(anywhereResults);\n    if (!this.isEditingName && !results.length && query.length > 1 && '!important'.startsWith(lowerQuery)) {\n      results.push({\n        text: '!important',\n        title: undefined,\n        subtitle: undefined,\n        iconType: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n      });\n    }\n    const userEnteredText = query.replace('-', '');\n    if (userEnteredText && (userEnteredText === userEnteredText.toUpperCase())) {\n      for (let i = 0; i < results.length; ++i) {\n        if (!results[i].text.startsWith('--')) {\n          results[i].text = results[i].text.toUpperCase();\n        }\n      }\n    }\n\n    for (const result of results) {\n      if (editingVariable) {\n        result.title = result.text;\n        result.text += ')';\n        continue;\n      }\n      const valuePreset = SDK.CSSMetadata.cssMetadata().getValuePreset(this.treeElement.name, result.text);\n      if (!this.isEditingName && valuePreset) {\n        result.title = result.text;\n        result.text = valuePreset.text;\n        result.selectionRange = {startColumn: valuePreset.startColumn, endColumn: valuePreset.endColumn};\n      }\n    }\n\n    const ensureComputedStyles = async(): Promise<void> => {\n      if (!node || this.selectedNodeComputedStyles) {\n        return;\n      }\n      this.selectedNodeComputedStyles = await node.domModel().cssModel().getComputedStyle(node.id);\n      const parentNode = node.parentNode;\n      if (parentNode) {\n        this.parentNodeComputedStyles = await parentNode.domModel().cssModel().getComputedStyle(parentNode.id);\n      }\n    };\n    for (const result of results) {\n      await ensureComputedStyles();\n      // Using parent node's computed styles does not work in all cases. For example:\n      //\n      // <div id=\"container\" style=\"display: flex;\">\n      //  <div id=\"useless\" style=\"display: contents;\">\n      //    <div id=\"item\">item</div>\n      //  </div>\n      // </div>\n      // TODO(crbug/1139945): Find a better way to get the flex container styles.\n      const iconInfo = ElementsComponents.CSSPropertyIconResolver.findIcon(\n          this.isEditingName ? result.text : `${this.treeElement.property.name}: ${result.text}`,\n          this.selectedNodeComputedStyles, this.parentNodeComputedStyles);\n      if (!iconInfo) {\n        continue;\n      }\n      const icon = new IconButton.Icon.Icon();\n      const width = '12.5px';\n      const height = '12.5px';\n      icon.data = {\n        iconName: iconInfo.iconName,\n        width,\n        height,\n        color: 'black',\n      };\n      icon.style.transform = `rotate(${iconInfo.rotate}deg) scale(${iconInfo.scaleX * 1.1}, ${iconInfo.scaleY * 1.1})`;\n      icon.style.maxHeight = height;\n      icon.style.maxWidth = width;\n      result.iconElement = icon;\n    }\n\n    if (this.isColorAware && !this.isEditingName) {\n      results.sort((a, b) => {\n        if (a.isCSSVariableColor && b.isCSSVariableColor) {\n          return 0;\n        }\n        return a.isCSSVariableColor ? -1 : 1;\n      });\n    }\n    return Promise.resolve(results);\n\n    function filterCompletions(\n        this: CSSPropertyPrompt, completion: string, variable: boolean, nameValue?: boolean): void {\n      const index = completion.toLowerCase().indexOf(lowerQuery);\n      const result: CompletionResult = {\n        text: completion,\n        title: undefined,\n        subtitle: undefined,\n        iconType: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n        isCSSVariableColor: false,\n      };\n      if (variable) {\n        const computedValue =\n            this.treeElement.matchedStyles().computeCSSVariable(this.treeElement.property.ownerStyle, completion);\n        if (computedValue) {\n          const color = Common.Color.Color.parse(computedValue);\n          if (color) {\n            result.subtitleRenderer = swatchRenderer.bind(null, color);\n            result.isCSSVariableColor = true;\n          } else {\n            result.subtitleRenderer = computedValueSubtitleRenderer.bind(null, computedValue);\n          }\n        }\n      }\n      if (nameValue) {\n        result.hideGhostText = true;\n      }\n      if (index === 0) {\n        result.priority = this.isEditingName ? SDK.CSSMetadata.cssMetadata().propertyUsageWeight(completion) : 1;\n        prefixResults.push(result);\n      } else if (index > -1) {\n        anywhereResults.push(result);\n      }\n    }\n\n    function swatchRenderer(color: Common.Color.Color): Element {\n      const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n      swatch.renderColor(color);\n      swatch.style.pointerEvents = 'none';\n      return swatch;\n    }\n    function computedValueSubtitleRenderer(computedValue: string): Element {\n      const subtitleElement = document.createElement('span');\n      subtitleElement.className = 'suggestion-subtitle';\n      subtitleElement.textContent = `${computedValue}`;\n      subtitleElement.style.maxWidth = '100px';\n      subtitleElement.title = `${computedValue}`;\n      return subtitleElement;\n    }\n  }\n}\n\nexport function unescapeCssString(input: string): string {\n  // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n  const reCssEscapeSequence = /(?<!\\\\)\\\\(?:([a-fA-F0-9]{1,6})|(.))[\\n\\t\\x20]?/gs;\n  return input.replace(reCssEscapeSequence, (_, $1, $2) => {\n    if ($2) {  // Handle the single-character escape sequence.\n      return $2;\n    }\n    // Otherwise, handle the code point escape sequence.\n    const codePoint = parseInt($1, 16);\n    const isSurrogate = 0xD800 <= codePoint && codePoint <= 0xDFFF;\n    if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n      return '\\uFFFD';\n    }\n    return String.fromCodePoint(codePoint);\n  });\n}\n\nexport function escapeUrlAsCssComment(urlText: string): string {\n  const url = new URL(urlText);\n  if (url.search) {\n    return `${url.origin}${url.pathname}${url.search.replaceAll('*/', '*%2F')}${url.hash}`;\n  }\n  return url.toString();\n}\n\nexport class StylesSidebarPropertyRenderer {\n  private rule: SDK.CSSRule.CSSRule|null;\n  private node: SDK.DOMModel.DOMNode|null;\n  private propertyName: string;\n  private propertyValue: string;\n  private colorHandler: ((arg0: string) => Node)|null;\n  private bezierHandler: ((arg0: string) => Node)|null;\n  private fontHandler: ((arg0: string) => Node)|null;\n  private shadowHandler: ((arg0: string, arg1: string) => Node)|null;\n  private gridHandler: ((arg0: string, arg1: string) => Node)|null;\n  private varHandler: ((arg0: string) => Node)|null;\n  private angleHandler: ((arg0: string) => Node)|null;\n  private lengthHandler: ((arg0: string) => Node)|null;\n\n  constructor(rule: SDK.CSSRule.CSSRule|null, node: SDK.DOMModel.DOMNode|null, name: string, value: string) {\n    this.rule = rule;\n    this.node = node;\n    this.propertyName = name;\n    this.propertyValue = value;\n    this.colorHandler = null;\n    this.bezierHandler = null;\n    this.fontHandler = null;\n    this.shadowHandler = null;\n    this.gridHandler = null;\n    this.varHandler = document.createTextNode.bind(document);\n    this.angleHandler = null;\n    this.lengthHandler = null;\n  }\n\n  setColorHandler(handler: (arg0: string) => Node): void {\n    this.colorHandler = handler;\n  }\n\n  setBezierHandler(handler: (arg0: string) => Node): void {\n    this.bezierHandler = handler;\n  }\n\n  setFontHandler(handler: (arg0: string) => Node): void {\n    this.fontHandler = handler;\n  }\n\n  setShadowHandler(handler: (arg0: string, arg1: string) => Node): void {\n    this.shadowHandler = handler;\n  }\n\n  setGridHandler(handler: (arg0: string, arg1: string) => Node): void {\n    this.gridHandler = handler;\n  }\n\n  setVarHandler(handler: (arg0: string) => Node): void {\n    this.varHandler = handler;\n  }\n\n  setAngleHandler(handler: (arg0: string) => Node): void {\n    this.angleHandler = handler;\n  }\n\n  setLengthHandler(handler: (arg0: string) => Node): void {\n    this.lengthHandler = handler;\n  }\n\n  renderName(): Element {\n    const nameElement = document.createElement('span');\n    UI.ARIAUtils.setAccessibleName(nameElement, i18nString(UIStrings.cssPropertyName, {PH1: this.propertyName}));\n    nameElement.className = 'webkit-css-property';\n    nameElement.textContent = this.propertyName;\n    nameElement.normalize();\n    return nameElement;\n  }\n\n  renderValue(): Element {\n    const valueElement = document.createElement('span');\n    UI.ARIAUtils.setAccessibleName(valueElement, i18nString(UIStrings.cssPropertyValue, {PH1: this.propertyValue}));\n    valueElement.className = 'value';\n    if (!this.propertyValue) {\n      return valueElement;\n    }\n\n    const metadata = SDK.CSSMetadata.cssMetadata();\n\n    if (this.shadowHandler && metadata.isShadowProperty(this.propertyName) &&\n        !SDK.CSSMetadata.VariableRegex.test(this.propertyValue)) {\n      valueElement.appendChild(this.shadowHandler(this.propertyValue, this.propertyName));\n      valueElement.normalize();\n      return valueElement;\n    }\n\n    if (this.gridHandler && metadata.isGridAreaDefiningProperty(this.propertyName)) {\n      valueElement.appendChild(this.gridHandler(this.propertyValue, this.propertyName));\n      valueElement.normalize();\n      return valueElement;\n    }\n\n    if (metadata.isStringProperty(this.propertyName)) {\n      UI.Tooltip.Tooltip.install(valueElement, unescapeCssString(this.propertyValue));\n    }\n\n    const regexes = [SDK.CSSMetadata.VariableRegex, SDK.CSSMetadata.URLRegex];\n    const processors = [this.varHandler, this.processURL.bind(this)];\n    if (this.bezierHandler && metadata.isBezierAwareProperty(this.propertyName)) {\n      regexes.push(UI.Geometry.CubicBezier.Regex);\n      processors.push(this.bezierHandler);\n    }\n    if (this.colorHandler && metadata.isColorAwareProperty(this.propertyName)) {\n      regexes.push(Common.Color.Regex);\n      processors.push(this.colorHandler);\n    }\n    if (this.angleHandler && metadata.isAngleAwareProperty(this.propertyName)) {\n      // TODO(changhaohan): crbug.com/1138628 refactor this to handle unitless 0 cases\n      regexes.push(InlineEditor.CSSAngleUtils.CSSAngleRegex);\n      processors.push(this.angleHandler);\n    }\n    if (this.fontHandler && metadata.isFontAwareProperty(this.propertyName)) {\n      if (this.propertyName === 'font-family') {\n        regexes.push(InlineEditor.FontEditorUtils.FontFamilyRegex);\n      } else {\n        regexes.push(InlineEditor.FontEditorUtils.FontPropertiesRegex);\n      }\n      processors.push(this.fontHandler);\n    }\n    if (Root.Runtime.experiments.isEnabled('cssTypeComponentLength') && this.lengthHandler) {\n      // TODO(changhaohan): crbug.com/1138628 refactor this to handle unitless 0 cases\n      regexes.push(InlineEditor.CSSLengthUtils.CSSLengthRegex);\n      processors.push(this.lengthHandler);\n    }\n    const results = TextUtils.TextUtils.Utils.splitStringByRegexes(this.propertyValue, regexes);\n    for (let i = 0; i < results.length; i++) {\n      const result = results[i];\n      const processor =\n          result.regexIndex === -1 ? document.createTextNode.bind(document) : processors[result.regexIndex];\n      if (processor) {\n        valueElement.appendChild(processor(result.value));\n      }\n    }\n    valueElement.normalize();\n    return valueElement;\n  }\n\n  private processURL(text: string): Node {\n    // Strip \"url(\" and \")\" along with whitespace.\n    let url = text.substring(4, text.length - 1).trim() as Platform.DevToolsPath.UrlString;\n    const isQuoted = /^'.*'$/s.test(url) || /^\".*\"$/s.test(url);\n    if (isQuoted) {\n      url = Common.ParsedURL.ParsedURL.substring(url, 1, url.length - 1);\n    }\n    const container = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(container, 'url(');\n    let hrefUrl: Platform.DevToolsPath.UrlString|null = null;\n    if (this.rule && this.rule.resourceURL()) {\n      hrefUrl = Common.ParsedURL.ParsedURL.completeURL(this.rule.resourceURL(), url);\n    } else if (this.node) {\n      hrefUrl = this.node.resolveURL(url);\n    }\n    const link = ImagePreviewPopover.setImageUrl(\n        Components.Linkifier.Linkifier.linkifyURL(hrefUrl || url, {\n          text: url,\n          preventClick: false,\n          // crbug.com/1027168\n          // We rely on CSS text-overflow: ellipsis to hide long URLs in the Style panel,\n          // so that we don't have to keep two versions (original vs. trimmed) of URL\n          // at the same time, which complicates both StylesSidebarPane and StylePropertyTreeElement.\n          bypassURLTrimming: true,\n          showColumnNumber: false,\n          inlineFrameIndex: 0,\n        }),\n        hrefUrl || url);\n    container.appendChild(link);\n    UI.UIUtils.createTextChild(container, ')');\n    return container;\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarButton;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.newStyleRule), 'largeicon-add');\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clicked, this);\n    const longclickTriangle = UI.Icon.Icon.create('largeicon-longclick-triangle', 'long-click-glyph');\n    this.button.element.appendChild(longclickTriangle);\n\n    new UI.UIUtils.LongClickController(this.button.element, this.longClicked.bind(this));\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, onNodeChanged.bind(this));\n    onNodeChanged.call(this);\n\n    function onNodeChanged(this: ButtonProvider): void {\n      let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n      node = node ? node.enclosingElementOrSelf() : null;\n      this.button.setEnabled(Boolean(node));\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    void StylesSidebarPane.instance().createNewRuleInViaInspectorStyleSheet();\n  }\n\n  private longClicked(event: Event): void {\n    StylesSidebarPane.instance().onAddButtonLongClick(event);\n  }\n\n  item(): UI.Toolbar.ToolbarItem {\n    return this.button;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
