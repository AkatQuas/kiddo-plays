{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/PlatformFontsWidget.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport platformFontsWidgetStyles from './platformFontsWidget.css.js';\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ComputedStyleModel} from './ComputedStyleModel.js';\nimport {Events} from './ComputedStyleModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Section title text content in Platform Fonts Widget of the Elements panel\n  */\n  renderedFonts: 'Rendered Fonts',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel\n  */\n  networkResource: 'Network resource',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel\n  */\n  localFile: 'Local file',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel. Indicates a number of glyphs (characters) .\n  */\n  dGlyphs: '{n, plural, =1 {(# glyph)} other {(# glyphs)}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PlatformFontsWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PlatformFontsWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly sharedModel: ComputedStyleModel;\n  private readonly sectionTitle: HTMLDivElement;\n  private readonly fontStatsSection: HTMLElement;\n\n  constructor(sharedModel: ComputedStyleModel) {\n    super(true);\n\n    this.sharedModel = sharedModel;\n    this.sharedModel.addEventListener(Events.ComputedStyleChanged, this.update, this);\n\n    this.sectionTitle = document.createElement('div');\n    this.sectionTitle.classList.add('title');\n    this.contentElement.classList.add('platform-fonts');\n    this.contentElement.appendChild(this.sectionTitle);\n    this.sectionTitle.textContent = i18nString(UIStrings.renderedFonts);\n    this.fontStatsSection = this.contentElement.createChild('div', 'stats-section');\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  doUpdate(): Promise<any> {\n    const cssModel = this.sharedModel.cssModel();\n    const node = this.sharedModel.node();\n    if (!node || !cssModel) {\n      return Promise.resolve();\n    }\n\n    return cssModel.getPlatformFonts(node.id).then(this.refreshUI.bind(this, node));\n  }\n\n  private refreshUI(node: SDK.DOMModel.DOMNode, platformFonts: Protocol.CSS.PlatformFontUsage[]|null): void {\n    if (this.sharedModel.node() !== node) {\n      return;\n    }\n\n    this.fontStatsSection.removeChildren();\n\n    const isEmptySection = !platformFonts || !platformFonts.length;\n    this.sectionTitle.classList.toggle('hidden', isEmptySection);\n    if (isEmptySection || !platformFonts) {\n      return;\n    }\n\n    platformFonts.sort(function(a, b) {\n      return b.glyphCount - a.glyphCount;\n    });\n\n    for (let i = 0; i < platformFonts.length; ++i) {\n      const fontStatElement = this.fontStatsSection.createChild('div', 'font-stats-item');\n\n      const fontNameElement = fontStatElement.createChild('span', 'font-name');\n      fontNameElement.textContent = platformFonts[i].familyName;\n\n      const fontDelimeterElement = fontStatElement.createChild('span', 'font-delimeter');\n      fontDelimeterElement.textContent = '\\u2014';\n\n      const fontOrigin = fontStatElement.createChild('span');\n      fontOrigin.textContent =\n          platformFonts[i].isCustomFont ? i18nString(UIStrings.networkResource) : i18nString(UIStrings.localFile);\n\n      const fontUsageElement = fontStatElement.createChild('span', 'font-usage');\n      const usage = platformFonts[i].glyphCount;\n      fontUsageElement.textContent = i18nString(UIStrings.dGlyphs, {n: usage});\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([platformFontsWidgetStyles]);\n  }\n}\n"],
  "mappings": "AA8BA;AAEA;AAGA;AAIA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA,EAIf,iBAAiB;AAAA,EAIjB,WAAW;AAAA,EAIX,SAAS;AAAA;AAEX,MAAM,OAAO,KAAK,KAAK,kBAAkB,0CAA0C;AACnF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,yCAAkC,GAAG,gBAAgB,gBAAgB;AAAA,EACzD;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YAAY,aAAiC;AAC3C,UAAM;AAEN,SAAK,cAAc;AACnB,SAAK,YAAY,iBAAiB,OAAO,sBAAsB,KAAK,QAAQ;AAE5E,SAAK,eAAe,SAAS,cAAc;AAC3C,SAAK,aAAa,UAAU,IAAI;AAChC,SAAK,eAAe,UAAU,IAAI;AAClC,SAAK,eAAe,YAAY,KAAK;AACrC,SAAK,aAAa,cAAc,WAAW,UAAU;AACrD,SAAK,mBAAmB,KAAK,eAAe,YAAY,OAAO;AAAA;AAAA,EAKjE,WAAyB;AACvB,UAAM,WAAW,KAAK,YAAY;AAClC,UAAM,OAAO,KAAK,YAAY;AAC9B,QAAI,CAAC,QAAQ,CAAC,UAAU;AACtB,aAAO,QAAQ;AAAA;AAGjB,WAAO,SAAS,iBAAiB,KAAK,IAAI,KAAK,KAAK,UAAU,KAAK,MAAM;AAAA;AAAA,EAGnE,UAAU,MAA4B,eAA4D;AACxG,QAAI,KAAK,YAAY,WAAW,MAAM;AACpC;AAAA;AAGF,SAAK,iBAAiB;AAEtB,UAAM,iBAAiB,CAAC,iBAAiB,CAAC,cAAc;AACxD,SAAK,aAAa,UAAU,OAAO,UAAU;AAC7C,QAAI,kBAAkB,CAAC,eAAe;AACpC;AAAA;AAGF,kBAAc,KAAK,SAAS,GAAG,GAAG;AAChC,aAAO,EAAE,aAAa,EAAE;AAAA;AAG1B,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,EAAE,GAAG;AAC7C,YAAM,kBAAkB,KAAK,iBAAiB,YAAY,OAAO;AAEjE,YAAM,kBAAkB,gBAAgB,YAAY,QAAQ;AAC5D,sBAAgB,cAAc,cAAc,GAAG;AAE/C,YAAM,uBAAuB,gBAAgB,YAAY,QAAQ;AACjE,2BAAqB,cAAc;AAEnC,YAAM,aAAa,gBAAgB,YAAY;AAC/C,iBAAW,cACP,cAAc,GAAG,eAAe,WAAW,UAAU,mBAAmB,WAAW,UAAU;AAEjG,YAAM,mBAAmB,gBAAgB,YAAY,QAAQ;AAC7D,YAAM,QAAQ,cAAc,GAAG;AAC/B,uBAAiB,cAAc,WAAW,UAAU,SAAS,EAAC,GAAG;AAAA;AAAA;AAAA,EAGrE,WAAiB;AACf,UAAM;AACN,SAAK,iBAAiB,CAAC;AAAA;AAAA;",
  "names": []
}
