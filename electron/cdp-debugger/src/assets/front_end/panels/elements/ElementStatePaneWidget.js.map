{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/ElementStatePaneWidget.ts"],
  "sourcesContent": ["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\nimport elementStatePaneWidgetStyles from './elementStatePaneWidget.css.js';\n\nconst UIStrings = {\n  /**\n  * @description Title of a section in the Element State Pane Widget of the Elements panel. The\n  * controls in this section allow users to force a particular state on the selected element, e.g. a\n  * focused state via :focus or a hover state via :hover.\n  */\n  forceElementState: 'Force element state',\n  /**\n  * @description Tooltip text in Element State Pane Widget of the Elements panel. For a button that\n  * opens a tool that toggles the various states of the selected element on/off.\n  */\n  toggleElementState: 'Toggle Element State',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementStatePaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ElementStatePaneWidget extends UI.Widget.Widget {\n  private readonly inputs: HTMLInputElement[];\n  private readonly inputStates: WeakMap<HTMLInputElement, string>;\n  private cssModel?: SDK.CSSModel.CSSModel|null;\n  constructor() {\n    super(true);\n\n    this.contentElement.className = 'styles-element-state-pane';\n    UI.UIUtils.createTextChild(this.contentElement.createChild('div'), i18nString(UIStrings.forceElementState));\n    const table = document.createElement('table');\n    table.classList.add('source-code');\n    UI.ARIAUtils.markAsPresentation(table);\n\n    const inputs: HTMLInputElement[] = [];\n    this.inputs = inputs;\n\n    this.inputStates = new WeakMap();\n\n    const clickListener = (event: MouseEvent): void => {\n      const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n      if (!node || !(event.target instanceof HTMLInputElement)) {\n        return;\n      }\n      const state = this.inputStates.get(event.target);\n      if (!state) {\n        return;\n      }\n      node.domModel().cssModel().forcePseudoState(node, state, event.target.checked);\n    };\n\n    const createCheckbox = (state: string): Element => {\n      const td = document.createElement('td');\n      const label = UI.UIUtils.CheckboxLabel.create(':' + state);\n      const input = label.checkboxElement;\n      this.inputStates.set(input, state);\n      input.addEventListener('click', (clickListener as EventListener), false);\n      inputs.push(input);\n      td.appendChild(label);\n      return td;\n    };\n\n    let tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('active'));\n    tr.appendChild(createCheckbox('hover'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('focus'));\n    tr.appendChild(createCheckbox('visited'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('focus-within'));\n    tr.appendChild(createCheckbox('focus-visible'));\n\n    tr = table.createChild('tr');\n    tr.appendChild(createCheckbox('target'));\n\n    this.contentElement.appendChild(table);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n  }\n\n  private updateModel(cssModel: SDK.CSSModel.CSSModel|null): void {\n    if (this.cssModel === cssModel) {\n      return;\n    }\n    if (this.cssModel) {\n      this.cssModel.removeEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n    }\n    this.cssModel = cssModel;\n    if (this.cssModel) {\n      this.cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([elementStatePaneWidgetStyles]);\n    this.update();\n  }\n\n  private update(): void {\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n\n    this.updateModel(node ? node.domModel().cssModel() : null);\n    if (node) {\n      const nodePseudoState = node.domModel().cssModel().pseudoState(node);\n      for (const input of this.inputs) {\n        input.disabled = Boolean(node.pseudoType());\n        const state = this.inputStates.get(input);\n        input.checked = nodePseudoState && state !== undefined ? nodePseudoState.indexOf(state) >= 0 : false;\n      }\n    } else {\n      for (const input of this.inputs) {\n        input.disabled = true;\n        input.checked = false;\n      }\n    }\n    ButtonProvider.instance().item().setToggled(this.inputs.some(input => input.checked));\n  }\n}\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  private readonly button: UI.Toolbar.ToolbarToggle;\n  private view: ElementStatePaneWidget;\n  private constructor() {\n    this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleElementState), '');\n    this.button.setText(i18n.i18n.lockedString(':hov'));\n    this.button.setToggleWithDot(true);\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clicked, this);\n    this.button.element.classList.add('monospace');\n    this.view = new ElementStatePaneWidget();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  private clicked(): void {\n    ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, null);\n  }\n\n  item(): UI.Toolbar.ToolbarToggle {\n    return this.button;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
