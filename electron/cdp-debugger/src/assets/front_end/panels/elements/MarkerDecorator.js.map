{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/MarkerDecorator.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nimport {PseudoStateMarkerDecorator} from './ElementsPanel.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the Marker Decorator of Elements\n  */\n  domBreakpoint: 'DOM Breakpoint',\n  /**\n  *@description Title of the Marker Decorator of Elements\n  */\n  elementIsHidden: 'Element is hidden',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/MarkerDecorator.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport interface MarkerDecorator {\n  decorate(node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null;\n}\n\nexport class GenericDecorator implements MarkerDecorator {\n  private readonly title: string;\n  private readonly color: string;\n\n  constructor(extension: {\n    marker: string,\n    title: () => string,\n    color: string,\n  }) {\n    if (!extension.title || !extension.color) {\n      throw new Error(`Generic decorator requires a color and a title: ${extension.marker}`);\n    }\n    this.title = extension.title();\n    this.color = (extension.color as string);\n  }\n\n  decorate(_node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null {\n    return {title: this.title, color: this.color};\n  }\n}\n\nconst domBreakpointData = {\n  marker: 'breakpoint-marker',\n  title: i18nLazyString(UIStrings.domBreakpoint),\n  color: 'rgb(105, 140, 254)',\n};\n\nconst elementIsHiddenData = {\n  marker: 'hidden-marker',\n  title: i18nLazyString(UIStrings.elementIsHidden),\n  color: '#555',\n};\n\nexport function getRegisteredDecorators(): MarkerDecoratorRegistration[] {\n  return [\n    {\n      ...domBreakpointData,\n      decorator: (): GenericDecorator => new GenericDecorator(domBreakpointData),\n    },\n    {\n      ...elementIsHiddenData,\n      decorator: (): GenericDecorator => new GenericDecorator(elementIsHiddenData),\n    },\n    {\n      decorator: PseudoStateMarkerDecorator.instance,\n      marker: 'pseudo-state-marker',\n      title: undefined,\n      color: undefined,\n    },\n  ];\n}\nexport interface MarkerDecoratorRegistration {\n  decorator: () => MarkerDecorator;\n  marker: string;\n  color?: string;\n  title?: (() => Platform.UIString.LocalizedString);\n}\n"],
  "mappings": "AAIA;AAIA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA,EAIf,iBAAiB;AAAA;AAEnB,MAAM,OAAO,KAAK,KAAK,kBAAkB,sCAAsC;AAC/E,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAS3E,8BAAkD;AAAA,EACtC;AAAA,EACA;AAAA,EAEjB,YAAY,WAIT;AACD,QAAI,CAAC,UAAU,SAAS,CAAC,UAAU,OAAO;AACxC,YAAM,IAAI,MAAM,mDAAmD,UAAU;AAAA;AAE/E,SAAK,QAAQ,UAAU;AACvB,SAAK,QAAS,UAAU;AAAA;AAAA,EAG1B,SAAS,OAGF;AACL,WAAO,EAAC,OAAO,KAAK,OAAO,OAAO,KAAK;AAAA;AAAA;AAI3C,MAAM,oBAAoB;AAAA,EACxB,QAAQ;AAAA,EACR,OAAO,eAAe,UAAU;AAAA,EAChC,OAAO;AAAA;AAGT,MAAM,sBAAsB;AAAA,EAC1B,QAAQ;AAAA,EACR,OAAO,eAAe,UAAU;AAAA,EAChC,OAAO;AAAA;AAGF,0CAAkE;AACvE,SAAO;AAAA,IACL;AAAA,SACK;AAAA,MACH,WAAW,MAAwB,IAAI,iBAAiB;AAAA;AAAA,IAE1D;AAAA,SACK;AAAA,MACH,WAAW,MAAwB,IAAI,iBAAiB;AAAA;AAAA,IAE1D;AAAA,MACE,WAAW,2BAA2B;AAAA,MACtC,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA;AAAA;AAAA;",
  "names": []
}
