{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/StylePropertiesSection.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {FontEditorSectionManager} from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport {linkifyDeferredNodeReference} from './DOMLinkifier.js';\nimport {ElementsPanel} from './ElementsPanel.js';\nimport stylesSectionTreeStyles from './stylesSectionTree.css.js';\n\nimport type {Context} from './StylePropertyTreeElement.js';\nimport {StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport {StylesSidebarPane} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Styles Sidebar Pane of the Elements panel\n  */\n  insertStyleRuleBelow: 'Insert Style Rule Below',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  constructedStylesheet: 'constructed stylesheet',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  userAgentStylesheet: 'user agent stylesheet',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  injectedStylesheet: 'injected stylesheet',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  viaInspector: 'via inspector',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  */\n  styleAttribute: '`style` attribute',\n  /**\n  *@description Text in Styles Sidebar Pane of the Elements panel\n  *@example {html} PH1\n  */\n  sattributesStyle: '{PH1}[Attributes Style]',\n  /**\n  *@description Show all button text content in Styles Sidebar Pane of the Elements panel\n  *@example {3} PH1\n  */\n  showAllPropertiesSMore: 'Show All Properties ({PH1} more)',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copySelector: 'Copy `selector`',\n  /**\n  *@description A context menu item in Styles panel to copy CSS rule\n  */\n  copyRule: 'Copy rule',\n  /**\n  *@description A context menu item in Styles panel to copy all CSS declarations\n  */\n  copyAllDeclarations: 'Copy all declarations',\n  /**\n  *@description  A context menu item in Styles panel to copy all the CSS changes\n  */\n  copyAllCSSChanges: 'Copy all CSS changes',\n  /**\n  *@description Text that is announced by the screen reader when the user focuses on an input field for editing the name of a CSS selector in the Styles panel\n  */\n  cssSelector: '`CSS` selector',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylePropertiesSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// TODO(crbug.com/1172300) This workaround is needed to keep the linter happy.\n// Otherwise it complains about: Unknown word CssSyntaxError\nconst STYLE_TAG = '<' +\n    'style>';\n\nexport class StylePropertiesSection {\n  protected parentPane: StylesSidebarPane;\n  styleInternal: SDK.CSSStyleDeclaration.CSSStyleDeclaration;\n  readonly matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles;\n  editable: boolean;\n  private hoverTimer: number|null;\n  private willCauseCancelEditing: boolean;\n  private forceShowAll: boolean;\n  private readonly originalPropertiesCount: number;\n  element: HTMLDivElement;\n  private readonly innerElement: HTMLElement;\n  private readonly titleElement: HTMLElement;\n  propertiesTreeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private showAllButton: HTMLButtonElement;\n  protected selectorElement: HTMLSpanElement;\n  private readonly newStyleRuleToolbar: UI.Toolbar.Toolbar|undefined;\n  private readonly fontEditorToolbar: UI.Toolbar.Toolbar|undefined;\n  private readonly fontEditorSectionManager: FontEditorSectionManager|undefined;\n  private readonly fontEditorButton: UI.Toolbar.ToolbarButton|undefined;\n  private selectedSinceMouseDown: boolean;\n  private readonly elementToSelectorIndex: WeakMap<Element, number>;\n  navigable: boolean|null|undefined;\n  protected readonly selectorRefElement: HTMLElement;\n  private readonly selectorContainer: HTMLDivElement;\n  private hoverableSelectorsMode: boolean;\n  private isHiddenInternal: boolean;\n\n  private queryListElement: HTMLElement;\n\n  // Used to identify buttons that trigger a flexbox or grid editor.\n  nextEditorTriggerButtonIdx = 1;\n  private sectionIdx = 0;\n\n  constructor(\n      parentPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    this.parentPane = parentPane;\n    this.sectionIdx = sectionIdx;\n    this.styleInternal = style;\n    this.matchedStyles = matchedStyles;\n    this.editable = Boolean(style.styleSheetId && style.range);\n    this.hoverTimer = null;\n    this.willCauseCancelEditing = false;\n    this.forceShowAll = false;\n    this.originalPropertiesCount = style.leadingProperties().length;\n\n    const rule = style.parentRule;\n    this.element = document.createElement('div');\n    this.element.classList.add('styles-section');\n    this.element.classList.add('matched-styles');\n    this.element.classList.add('monospace');\n    UI.ARIAUtils.setAccessibleName(this.element, `${this.headerText()}, css selector`);\n    this.element.tabIndex = -1;\n    UI.ARIAUtils.markAsListitem(this.element);\n    this.element.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    parentPane.sectionByElement.set(this.element, this);\n    this.innerElement = this.element.createChild('div');\n\n    this.titleElement = this.innerElement.createChild('div', 'styles-section-title ' + (rule ? 'styles-selector' : ''));\n\n    this.propertiesTreeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.propertiesTreeOutline.setFocusable(false);\n    this.propertiesTreeOutline.registerCSSFiles([stylesSectionTreeStyles]);\n    this.propertiesTreeOutline.element.classList.add('style-properties', 'matched-styles', 'monospace');\n    // @ts-ignore TODO: fix ad hoc section property in a separate CL to be safe\n    this.propertiesTreeOutline.section = this;\n    this.innerElement.appendChild(this.propertiesTreeOutline.element);\n\n    this.showAllButton = UI.UIUtils.createTextButton('', this.showAllItems.bind(this), 'styles-show-all');\n    this.innerElement.appendChild(this.showAllButton);\n\n    const selectorContainer = document.createElement('div');\n    this.selectorElement = document.createElement('span');\n    UI.ARIAUtils.setAccessibleName(this.selectorElement, i18nString(UIStrings.cssSelector));\n    this.selectorElement.classList.add('selector');\n    this.selectorElement.textContent = this.headerText();\n    selectorContainer.appendChild(this.selectorElement);\n    this.selectorElement.addEventListener('mouseenter', this.onMouseEnterSelector.bind(this), false);\n    this.selectorElement.addEventListener('mousemove', event => event.consume(), false);\n    this.selectorElement.addEventListener('mouseleave', this.onMouseOutSelector.bind(this), false);\n\n    const openBrace = selectorContainer.createChild('span', 'sidebar-pane-open-brace');\n    openBrace.textContent = ' {';\n    selectorContainer.addEventListener('mousedown', this.handleEmptySpaceMouseDown.bind(this), false);\n    selectorContainer.addEventListener('click', this.handleSelectorContainerClick.bind(this), false);\n\n    const closeBrace = this.innerElement.createChild('div', 'sidebar-pane-closing-brace');\n    closeBrace.textContent = '}';\n\n    if (this.styleInternal.parentRule) {\n      const newRuleButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.insertStyleRuleBelow), 'largeicon-add');\n      newRuleButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.onNewRuleClick, this);\n      newRuleButton.element.tabIndex = -1;\n      if (!this.newStyleRuleToolbar) {\n        this.newStyleRuleToolbar =\n            new UI.Toolbar.Toolbar('sidebar-pane-section-toolbar new-rule-toolbar', this.innerElement);\n      }\n      this.newStyleRuleToolbar.appendToolbarItem(newRuleButton);\n      UI.ARIAUtils.markAsHidden(this.newStyleRuleToolbar.element);\n    }\n\n    if (Root.Runtime.experiments.isEnabled('fontEditor') && this.editable) {\n      this.fontEditorToolbar = new UI.Toolbar.Toolbar('sidebar-pane-section-toolbar', this.innerElement);\n      this.fontEditorSectionManager = new FontEditorSectionManager(this.parentPane.swatchPopoverHelper(), this);\n      this.fontEditorButton = new UI.Toolbar.ToolbarButton('Font Editor', 'largeicon-font-editor');\n      this.fontEditorButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n        this.onFontEditorButtonClicked();\n      }, this);\n      this.fontEditorButton.element.addEventListener('keydown', event => {\n        if (isEnterOrSpaceKey(event)) {\n          event.consume(true);\n          this.onFontEditorButtonClicked();\n        }\n      }, false);\n      this.fontEditorToolbar.appendToolbarItem(this.fontEditorButton);\n\n      if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n        if (this.newStyleRuleToolbar) {\n          this.newStyleRuleToolbar.element.classList.add('shifted-toolbar');\n        }\n      } else {\n        this.fontEditorToolbar.element.classList.add('font-toolbar-hidden');\n      }\n    }\n\n    this.selectorElement.addEventListener('click', this.handleSelectorClick.bind(this), false);\n    this.element.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n    this.element.addEventListener('mousedown', this.handleEmptySpaceMouseDown.bind(this), false);\n    this.element.addEventListener('click', this.handleEmptySpaceClick.bind(this), false);\n    this.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this), false);\n    this.selectedSinceMouseDown = false;\n\n    this.elementToSelectorIndex = new WeakMap();\n\n    if (rule) {\n      // Prevent editing the user agent and user rules.\n      if (rule.isUserAgent() || rule.isInjected()) {\n        this.editable = false;\n      } else {\n        // Check this is a real CSSRule, not a bogus object coming from BlankStylePropertiesSection.\n        if (rule.styleSheetId) {\n          const header = rule.cssModel().styleSheetHeaderForId(rule.styleSheetId);\n          this.navigable = header && !header.isAnonymousInlineStyleSheet();\n        }\n      }\n    }\n\n    this.queryListElement = this.titleElement.createChild('div', 'query-list query-matches');\n    this.selectorRefElement = this.titleElement.createChild('div', 'styles-section-subtitle');\n    this.updateQueryList();\n    this.updateRuleOrigin();\n    this.titleElement.appendChild(selectorContainer);\n    this.selectorContainer = selectorContainer;\n\n    if (this.navigable) {\n      this.element.classList.add('navigable');\n    }\n\n    if (!this.editable) {\n      this.element.classList.add('read-only');\n      this.propertiesTreeOutline.element.classList.add('read-only');\n    }\n    this.hoverableSelectorsMode = false;\n    this.isHiddenInternal = false;\n    this.markSelectorMatches();\n    this.onpopulate();\n  }\n\n  setSectionIdx(sectionIdx: number): void {\n    this.sectionIdx = sectionIdx;\n    this.onpopulate();\n  }\n\n  getSectionIdx(): number {\n    return this.sectionIdx;\n  }\n\n  registerFontProperty(treeElement: StylePropertyTreeElement): void {\n    if (this.fontEditorSectionManager) {\n      this.fontEditorSectionManager.registerFontProperty(treeElement);\n    }\n    if (this.fontEditorToolbar) {\n      this.fontEditorToolbar.element.classList.remove('font-toolbar-hidden');\n      if (this.newStyleRuleToolbar) {\n        this.newStyleRuleToolbar.element.classList.add('shifted-toolbar');\n      }\n    }\n  }\n\n  resetToolbars(): void {\n    if (this.parentPane.swatchPopoverHelper().isShowing() ||\n        this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n      return;\n    }\n    if (this.fontEditorToolbar) {\n      this.fontEditorToolbar.element.classList.add('font-toolbar-hidden');\n    }\n    if (this.newStyleRuleToolbar) {\n      this.newStyleRuleToolbar.element.classList.remove('shifted-toolbar');\n    }\n  }\n\n  static createRuleOriginNode(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, linkifier: Components.Linkifier.Linkifier,\n      rule: SDK.CSSRule.CSSRule|null): Node {\n    if (!rule) {\n      return document.createTextNode('');\n    }\n\n    const ruleLocation = this.getRuleLocationFromCSSRule(rule);\n\n    const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n\n    function linkifyRuleLocation(): Node|null {\n      if (!rule) {\n        return null;\n      }\n      if (ruleLocation && rule.styleSheetId && header && !header.isAnonymousInlineStyleSheet()) {\n        return StylePropertiesSection.linkifyRuleLocation(\n            matchedStyles.cssModel(), linkifier, rule.styleSheetId, ruleLocation);\n      }\n      return null;\n    }\n\n    function linkifyNode(label: string): Node|null {\n      if (header?.ownerNode) {\n        const link = linkifyDeferredNodeReference(header.ownerNode, {\n          preventKeyboardFocus: false,\n          tooltip: undefined,\n        });\n        link.textContent = label;\n        return link;\n      }\n      return null;\n    }\n\n    if (header?.isMutable && !header.isViaInspector()) {\n      const location = header.isConstructedByNew() ? null : linkifyRuleLocation();\n      if (location) {\n        return location;\n      }\n      const label = header.isConstructedByNew() ? i18nString(UIStrings.constructedStylesheet) : STYLE_TAG;\n      const node = linkifyNode(label);\n      if (node) {\n        return node;\n      }\n      return document.createTextNode(label);\n    }\n\n    const location = linkifyRuleLocation();\n    if (location) {\n      return location;\n    }\n\n    if (rule.isUserAgent()) {\n      return document.createTextNode(i18nString(UIStrings.userAgentStylesheet));\n    }\n    if (rule.isInjected()) {\n      return document.createTextNode(i18nString(UIStrings.injectedStylesheet));\n    }\n    if (rule.isViaInspector()) {\n      return document.createTextNode(i18nString(UIStrings.viaInspector));\n    }\n\n    const node = linkifyNode(STYLE_TAG);\n    if (node) {\n      return node;\n    }\n\n    return document.createTextNode('');\n  }\n\n  private static getRuleLocationFromCSSRule(rule: SDK.CSSRule.CSSRule): TextUtils.TextRange.TextRange|null|undefined {\n    let ruleLocation;\n    if (rule instanceof SDK.CSSRule.CSSStyleRule) {\n      ruleLocation = rule.style.range;\n    } else if (rule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      ruleLocation = rule.key().range;\n    }\n    return ruleLocation;\n  }\n\n  static tryNavigateToRuleLocation(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, rule: SDK.CSSRule.CSSRule|null): void {\n    if (!rule) {\n      return;\n    }\n\n    const ruleLocation = this.getRuleLocationFromCSSRule(rule);\n    const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n\n    if (ruleLocation && rule.styleSheetId && header && !header.isAnonymousInlineStyleSheet()) {\n      const matchingSelectorLocation =\n          this.getCSSSelectorLocation(matchedStyles.cssModel(), rule.styleSheetId, ruleLocation);\n      this.revealSelectorSource(matchingSelectorLocation, true);\n    }\n  }\n\n  protected static linkifyRuleLocation(\n      cssModel: SDK.CSSModel.CSSModel, linkifier: Components.Linkifier.Linkifier,\n      styleSheetId: Protocol.CSS.StyleSheetId, ruleLocation: TextUtils.TextRange.TextRange): Node {\n    const matchingSelectorLocation = this.getCSSSelectorLocation(cssModel, styleSheetId, ruleLocation);\n    return linkifier.linkifyCSSLocation(matchingSelectorLocation);\n  }\n\n  private static getCSSSelectorLocation(\n      cssModel: SDK.CSSModel.CSSModel, styleSheetId: Protocol.CSS.StyleSheetId,\n      ruleLocation: TextUtils.TextRange.TextRange): SDK.CSSModel.CSSLocation {\n    const styleSheetHeader =\n        (cssModel.styleSheetHeaderForId(styleSheetId) as SDK.CSSStyleSheetHeader.CSSStyleSheetHeader);\n    const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n    const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n    return new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n  }\n\n  private getFocused(): HTMLElement|null {\n    return (this.propertiesTreeOutline.shadowRoot.activeElement as HTMLElement) || null;\n  }\n\n  private focusNext(element: HTMLElement): void {\n    // Clear remembered focused item (if any).\n    const focused = this.getFocused();\n    if (focused) {\n      focused.tabIndex = -1;\n    }\n\n    // Focus the next item and remember it (if in our subtree).\n    element.focus();\n    if (this.propertiesTreeOutline.shadowRoot.contains(element)) {\n      element.tabIndex = 0;\n    }\n  }\n\n  private ruleNavigation(keyboardEvent: KeyboardEvent): void {\n    if (keyboardEvent.altKey || keyboardEvent.ctrlKey || keyboardEvent.metaKey || keyboardEvent.shiftKey) {\n      return;\n    }\n\n    const focused = this.getFocused();\n\n    let focusNext: HTMLElement|null = null;\n    const focusable =\n        Array.from((this.propertiesTreeOutline.shadowRoot.querySelectorAll('[tabindex]') as NodeListOf<HTMLElement>));\n\n    if (focusable.length === 0) {\n      return;\n    }\n\n    const focusedIndex = focused ? focusable.indexOf(focused) : -1;\n\n    if (keyboardEvent.key === 'ArrowLeft') {\n      focusNext = focusable[focusedIndex - 1] || this.element;\n    } else if (keyboardEvent.key === 'ArrowRight') {\n      focusNext = focusable[focusedIndex + 1] || this.element;\n    } else if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'ArrowDown') {\n      this.focusNext(this.element);\n      return;\n    }\n\n    if (focusNext) {\n      this.focusNext(focusNext);\n      keyboardEvent.consume(true);\n    }\n  }\n\n  private onKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (UI.UIUtils.isEditing() || !this.editable || keyboardEvent.altKey || keyboardEvent.ctrlKey ||\n        keyboardEvent.metaKey) {\n      return;\n    }\n    switch (keyboardEvent.key) {\n      case 'Enter':\n      case ' ':\n        this.startEditingAtFirstPosition();\n        keyboardEvent.consume(true);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.ruleNavigation(keyboardEvent);\n        break;\n      default:\n        // Filter out non-printable key strokes.\n        if (keyboardEvent.key.length === 1) {\n          this.addNewBlankProperty(0).startEditing();\n        }\n        break;\n    }\n  }\n\n  private setSectionHovered(isHovered: boolean): void {\n    this.element.classList.toggle('styles-panel-hovered', isHovered);\n    this.propertiesTreeOutline.element.classList.toggle('styles-panel-hovered', isHovered);\n    if (this.hoverableSelectorsMode !== isHovered) {\n      this.hoverableSelectorsMode = isHovered;\n      this.markSelectorMatches();\n    }\n  }\n\n  private onMouseLeave(_event: Event): void {\n    this.setSectionHovered(false);\n    this.parentPane.setActiveProperty(null);\n  }\n\n  private onMouseMove(event: MouseEvent): void {\n    const hasCtrlOrMeta = UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event);\n    this.setSectionHovered(hasCtrlOrMeta);\n\n    const treeElement = this.propertiesTreeOutline.treeElementFromEvent(event);\n    if (treeElement instanceof StylePropertyTreeElement) {\n      this.parentPane.setActiveProperty((treeElement as StylePropertyTreeElement));\n    } else {\n      this.parentPane.setActiveProperty(null);\n    }\n    const selection = this.element.getComponentSelection();\n    if (!this.selectedSinceMouseDown && selection && selection.toString()) {\n      this.selectedSinceMouseDown = true;\n    }\n  }\n\n  private onFontEditorButtonClicked(): void {\n    if (this.fontEditorSectionManager && this.fontEditorButton) {\n      void this.fontEditorSectionManager.showPopover(this.fontEditorButton.element, this.parentPane);\n    }\n  }\n\n  style(): SDK.CSSStyleDeclaration.CSSStyleDeclaration {\n    return this.styleInternal;\n  }\n\n  headerText(): string {\n    const node = this.matchedStyles.nodeForStyle(this.styleInternal);\n    if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n      return this.matchedStyles.isInherited(this.styleInternal) ? i18nString(UIStrings.styleAttribute) :\n                                                                  'element.style';\n    }\n    if (node && this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Attributes) {\n      return i18nString(UIStrings.sattributesStyle, {PH1: node.nodeNameInCorrectCase()});\n    }\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      return this.styleInternal.parentRule.selectorText();\n    }\n    return '';\n  }\n\n  private onMouseOutSelector(): void {\n    if (this.hoverTimer) {\n      clearTimeout(this.hoverTimer);\n    }\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n  }\n\n  private onMouseEnterSelector(): void {\n    if (this.hoverTimer) {\n      clearTimeout(this.hoverTimer);\n    }\n    this.hoverTimer = window.setTimeout(this.highlight.bind(this), 300);\n  }\n\n  highlight(mode: string|undefined = 'all'): void {\n    SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    const node = this.parentPane.node();\n    if (!node) {\n      return;\n    }\n    const selectorList =\n        this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule ?\n        this.styleInternal.parentRule.selectorText() :\n        undefined;\n    node.domModel().overlayModel().highlightInOverlay({node, selectorList}, mode);\n  }\n\n  firstSibling(): StylePropertiesSection|null {\n    const parent = this.element.parentElement;\n    if (!parent) {\n      return null;\n    }\n\n    let childElement: (ChildNode|null) = parent.firstChild;\n    while (childElement) {\n      const childSection = this.parentPane.sectionByElement.get(childElement);\n      if (childSection) {\n        return childSection;\n      }\n      childElement = childElement.nextSibling;\n    }\n\n    return null;\n  }\n\n  findCurrentOrNextVisible(willIterateForward: boolean, originalSection?: StylePropertiesSection):\n      StylePropertiesSection|null {\n    if (!this.isHidden()) {\n      return this;\n    }\n    if (this === originalSection) {\n      return null;\n    }\n    if (!originalSection) {\n      originalSection = this;\n    }\n    let visibleSibling: (StylePropertiesSection|null)|null = null;\n    const nextSibling = willIterateForward ? this.nextSibling() : this.previousSibling();\n    if (nextSibling) {\n      visibleSibling = nextSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n    } else {\n      const loopSibling = willIterateForward ? this.firstSibling() : this.lastSibling();\n      if (loopSibling) {\n        visibleSibling = loopSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n      }\n    }\n\n    return visibleSibling;\n  }\n\n  lastSibling(): StylePropertiesSection|null {\n    const parent = this.element.parentElement;\n    if (!parent) {\n      return null;\n    }\n\n    let childElement: (ChildNode|null) = parent.lastChild;\n    while (childElement) {\n      const childSection = this.parentPane.sectionByElement.get(childElement);\n      if (childSection) {\n        return childSection;\n      }\n      childElement = childElement.previousSibling;\n    }\n\n    return null;\n  }\n\n  nextSibling(): StylePropertiesSection|undefined {\n    let curElement: (ChildNode|null)|HTMLDivElement = this.element;\n    do {\n      curElement = curElement.nextSibling;\n    } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n\n    if (curElement) {\n      return this.parentPane.sectionByElement.get(curElement);\n    }\n    return;\n  }\n\n  previousSibling(): StylePropertiesSection|undefined {\n    let curElement: (ChildNode|null)|HTMLDivElement = this.element;\n    do {\n      curElement = curElement.previousSibling;\n    } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n\n    if (curElement) {\n      return this.parentPane.sectionByElement.get(curElement);\n    }\n    return;\n  }\n\n  private onNewRuleClick(event: Common.EventTarget.EventTargetEvent<Event>): void {\n    event.data.consume();\n    const rule = this.styleInternal.parentRule;\n    if (!rule || !rule.style.range || rule.styleSheetId === undefined) {\n      return;\n    }\n    const range =\n        TextUtils.TextRange.TextRange.createFromLocation(rule.style.range.endLine, rule.style.range.endColumn + 1);\n    this.parentPane.addBlankSection(this, rule.styleSheetId, range);\n  }\n\n  styleSheetEdited(edit: SDK.CSSModel.Edit): void {\n    const rule = this.styleInternal.parentRule;\n    if (rule) {\n      rule.rebase(edit);\n    } else {\n      this.styleInternal.rebase(edit);\n    }\n\n    this.updateQueryList();\n    this.updateRuleOrigin();\n  }\n\n  protected createAtRuleLists(rule: SDK.CSSRule.CSSStyleRule): void {\n    this.createMediaList(rule.media);\n    this.createContainerQueryList(rule.containerQueries);\n    this.createSupportsList(rule.supports);\n  }\n\n  protected createMediaList(mediaRules: SDK.CSSMedia.CSSMedia[]): void {\n    for (let i = mediaRules.length - 1; i >= 0; --i) {\n      const media = mediaRules[i];\n      // Don't display trivial non-print media types.\n      const isMedia = !media.text || !media.text.includes('(') && media.text !== 'print';\n      if (isMedia) {\n        continue;\n      }\n\n      let queryPrefix = '';\n      let queryText = '';\n      let onQueryTextClick;\n      switch (media.source) {\n        case SDK.CSSMedia.Source.LINKED_SHEET:\n        case SDK.CSSMedia.Source.INLINE_SHEET: {\n          queryText = `media=\"${media.text}\"`;\n          break;\n        }\n        case SDK.CSSMedia.Source.MEDIA_RULE: {\n          queryPrefix = '@media';\n          queryText = media.text;\n          if (media.styleSheetId) {\n            onQueryTextClick = this.handleQueryRuleClick.bind(this, media);\n          }\n          break;\n        }\n        case SDK.CSSMedia.Source.IMPORT_RULE: {\n          queryText = `@import ${media.text}`;\n          break;\n        }\n      }\n\n      const mediaQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n      mediaQueryElement.data = {\n        queryPrefix,\n        queryText,\n        onQueryTextClick,\n      };\n      this.queryListElement.append(mediaQueryElement);\n    }\n  }\n\n  protected createContainerQueryList(containerQueries: SDK.CSSContainerQuery.CSSContainerQuery[]): void {\n    for (let i = containerQueries.length - 1; i >= 0; --i) {\n      const containerQuery = containerQueries[i];\n      if (!containerQuery.text) {\n        continue;\n      }\n\n      let onQueryTextClick;\n      if (containerQuery.styleSheetId) {\n        onQueryTextClick = this.handleQueryRuleClick.bind(this, containerQuery);\n      }\n\n      const containerQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n      containerQueryElement.data = {\n        queryPrefix: '@container',\n        queryName: containerQuery.name,\n        queryText: containerQuery.text,\n        onQueryTextClick,\n      };\n      this.queryListElement.append(containerQueryElement);\n\n      void this.addContainerForContainerQuery(containerQuery);\n    }\n  }\n\n  protected createSupportsList(supportsList: SDK.CSSSupports.CSSSupports[]): void {\n    for (let i = supportsList.length - 1; i >= 0; --i) {\n      const supports = supportsList[i];\n      if (!supports.text) {\n        continue;\n      }\n\n      let onQueryTextClick;\n      if (supports.styleSheetId) {\n        onQueryTextClick = this.handleQueryRuleClick.bind(this, supports);\n      }\n\n      const supportsElement = new ElementsComponents.CSSQuery.CSSQuery();\n      supportsElement.data = {\n        queryPrefix: '@supports',\n        queryText: supports.text,\n        onQueryTextClick,\n      };\n      this.queryListElement.append(supportsElement);\n    }\n  }\n\n  private async addContainerForContainerQuery(containerQuery: SDK.CSSContainerQuery.CSSContainerQuery): Promise<void> {\n    const container = await containerQuery.getContainerForNode(this.matchedStyles.node().id);\n    if (!container) {\n      return;\n    }\n\n    const containerElement = new ElementsComponents.QueryContainer.QueryContainer();\n    containerElement.data = {\n      container: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(container.containerNode),\n      queryName: containerQuery.name,\n      onContainerLinkClick: (event): void => {\n        event.preventDefault();\n        void ElementsPanel.instance().revealAndSelectNode(container.containerNode, true, true);\n        void container.containerNode.scrollIntoView();\n      },\n    };\n\n    containerElement.addEventListener('queriedsizerequested', async () => {\n      const details = await container.getContainerSizeDetails();\n      if (details) {\n        containerElement.updateContainerQueriedSizeDetails(details);\n      }\n    });\n\n    this.queryListElement.prepend(containerElement);\n  }\n\n  private updateQueryList(): void {\n    this.queryListElement.removeChildren();\n    if (this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      this.createAtRuleLists(this.styleInternal.parentRule);\n    }\n  }\n\n  isPropertyInherited(propertyName: string): boolean {\n    if (this.matchedStyles.isInherited(this.styleInternal)) {\n      // While rendering inherited stylesheet, reverse meaning of this property.\n      // Render truly inherited properties with black, i.e. return them as non-inherited.\n      return !SDK.CSSMetadata.cssMetadata().isPropertyInherited(propertyName);\n    }\n    return false;\n  }\n\n  nextEditableSibling(): StylePropertiesSection|null {\n    let curSection: (StylePropertiesSection|undefined)|(StylePropertiesSection | null)|this = this;\n    do {\n      curSection = curSection.nextSibling();\n    } while (curSection && !curSection.editable);\n\n    if (!curSection) {\n      curSection = this.firstSibling();\n      while (curSection && !curSection.editable) {\n        curSection = curSection.nextSibling();\n      }\n    }\n\n    return (curSection && curSection.editable) ? curSection : null;\n  }\n\n  previousEditableSibling(): StylePropertiesSection|null {\n    let curSection: (StylePropertiesSection|undefined)|(StylePropertiesSection | null)|this = this;\n    do {\n      curSection = curSection.previousSibling();\n    } while (curSection && !curSection.editable);\n\n    if (!curSection) {\n      curSection = this.lastSibling();\n      while (curSection && !curSection.editable) {\n        curSection = curSection.previousSibling();\n      }\n    }\n\n    return (curSection && curSection.editable) ? curSection : null;\n  }\n\n  refreshUpdate(editedTreeElement: StylePropertyTreeElement): void {\n    this.parentPane.refreshUpdate(this, editedTreeElement);\n  }\n\n  updateVarFunctions(editedTreeElement: StylePropertyTreeElement): void {\n    let child = this.propertiesTreeOutline.firstChild();\n    while (child) {\n      if (child !== editedTreeElement && child instanceof StylePropertyTreeElement) {\n        child.updateTitleIfComputedValueChanged();\n      }\n      child = child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n    }\n  }\n\n  update(full: boolean): void {\n    this.selectorElement.textContent = this.headerText();\n    this.markSelectorMatches();\n    if (full) {\n      this.onpopulate();\n    } else {\n      let child = this.propertiesTreeOutline.firstChild();\n      while (child && child instanceof StylePropertyTreeElement) {\n        child.setOverloaded(this.isPropertyOverloaded(child.property));\n        child =\n            child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n      }\n    }\n  }\n\n  showAllItems(event?: Event): void {\n    if (event) {\n      event.consume();\n    }\n    if (this.forceShowAll) {\n      return;\n    }\n    this.forceShowAll = true;\n    this.onpopulate();\n  }\n\n  onpopulate(): void {\n    this.parentPane.setActiveProperty(null);\n    this.nextEditorTriggerButtonIdx = 1;\n    this.propertiesTreeOutline.removeChildren();\n    const style = this.styleInternal;\n    let count = 0;\n    const properties = style.leadingProperties();\n    const maxProperties = StylePropertiesSection.MaxProperties + properties.length - this.originalPropertiesCount;\n\n    for (const property of properties) {\n      if (!this.forceShowAll && count >= maxProperties) {\n        break;\n      }\n      count++;\n      const isShorthand = Boolean(style.longhandProperties(property.name).length);\n      const inherited = this.isPropertyInherited(property.name);\n      const overloaded = this.isPropertyOverloaded(property);\n      if (style.parentRule && style.parentRule.isUserAgent() && inherited) {\n        continue;\n      }\n      const item = new StylePropertyTreeElement(\n          this.parentPane, this.matchedStyles, property, isShorthand, inherited, overloaded, false);\n      this.propertiesTreeOutline.appendChild(item);\n    }\n\n    if (count < properties.length) {\n      this.showAllButton.classList.remove('hidden');\n      this.showAllButton.textContent = i18nString(UIStrings.showAllPropertiesSMore, {PH1: properties.length - count});\n    } else {\n      this.showAllButton.classList.add('hidden');\n    }\n  }\n\n  isPropertyOverloaded(property: SDK.CSSProperty.CSSProperty): boolean {\n    return this.matchedStyles.propertyState(property) === SDK.CSSMatchedStyles.PropertyState.Overloaded;\n  }\n\n  updateFilter(): boolean {\n    let hasMatchingChild = false;\n    this.showAllItems();\n    for (const child of this.propertiesTreeOutline.rootElement().children()) {\n      if (child instanceof StylePropertyTreeElement) {\n        const childHasMatches = child.updateFilter();\n        hasMatchingChild = hasMatchingChild || childHasMatches;\n      }\n    }\n\n    const regex = this.parentPane.filterRegex();\n    const hideRule = !hasMatchingChild && regex !== null && !regex.test(this.element.deepTextContent());\n    this.isHiddenInternal = hideRule;\n    this.element.classList.toggle('hidden', hideRule);\n    if (!hideRule && this.styleInternal.parentRule) {\n      this.markSelectorHighlights();\n    }\n    return !hideRule;\n  }\n\n  isHidden(): boolean {\n    return this.isHiddenInternal;\n  }\n\n  markSelectorMatches(): void {\n    const rule = this.styleInternal.parentRule;\n    if (!rule || !(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n      return;\n    }\n\n    this.queryListElement.classList.toggle('query-matches', this.matchedStyles.queryMatches(this.styleInternal));\n\n    const selectorTexts = rule.selectors.map(selector => selector.text);\n    const matchingSelectorIndexes = this.matchedStyles.getMatchingSelectors(rule);\n    const matchingSelectors = (new Array(selectorTexts.length).fill(false) as boolean[]);\n    for (const matchingIndex of matchingSelectorIndexes) {\n      matchingSelectors[matchingIndex] = true;\n    }\n\n    if (this.parentPane.isEditingStyle) {\n      return;\n    }\n\n    const fragment = this.hoverableSelectorsMode ? this.renderHoverableSelectors(selectorTexts, matchingSelectors) :\n                                                   this.renderSimplifiedSelectors(selectorTexts, matchingSelectors);\n    this.selectorElement.removeChildren();\n    this.selectorElement.appendChild(fragment);\n    this.markSelectorHighlights();\n  }\n\n  private renderHoverableSelectors(selectors: string[], matchingSelectors: boolean[]): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    for (let i = 0; i < selectors.length; ++i) {\n      if (i) {\n        UI.UIUtils.createTextChild(fragment, ', ');\n      }\n      fragment.appendChild(this.createSelectorElement(selectors[i], matchingSelectors[i], i));\n    }\n    return fragment;\n  }\n\n  private createSelectorElement(text: string, isMatching: boolean, navigationIndex?: number): Element {\n    const element = document.createElement('span');\n    element.classList.add('simple-selector');\n    element.classList.toggle('selector-matches', isMatching);\n    if (typeof navigationIndex === 'number') {\n      this.elementToSelectorIndex.set(element, navigationIndex);\n    }\n    element.textContent = text;\n    return element;\n  }\n\n  private renderSimplifiedSelectors(selectors: string[], matchingSelectors: boolean[]): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    let currentMatching = false;\n    let text = '';\n    for (let i = 0; i < selectors.length; ++i) {\n      if (currentMatching !== matchingSelectors[i] && text) {\n        fragment.appendChild(this.createSelectorElement(text, currentMatching));\n        text = '';\n      }\n      currentMatching = matchingSelectors[i];\n      text += selectors[i] + (i === selectors.length - 1 ? '' : ', ');\n    }\n    if (text) {\n      fragment.appendChild(this.createSelectorElement(text, currentMatching));\n    }\n    return fragment;\n  }\n\n  markSelectorHighlights(): void {\n    const selectors = this.selectorElement.getElementsByClassName('simple-selector');\n    const regex = this.parentPane.filterRegex();\n    for (let i = 0; i < selectors.length; ++i) {\n      const selectorMatchesFilter = regex !== null && regex.test(selectors[i].textContent || '');\n      selectors[i].classList.toggle('filter-match', selectorMatchesFilter);\n    }\n  }\n\n  private checkWillCancelEditing(): boolean {\n    const willCauseCancelEditing = this.willCauseCancelEditing;\n    this.willCauseCancelEditing = false;\n    return willCauseCancelEditing;\n  }\n\n  private handleSelectorContainerClick(event: Event): void {\n    if (this.checkWillCancelEditing() || !this.editable) {\n      return;\n    }\n    if (event.target === this.selectorContainer) {\n      this.addNewBlankProperty(0).startEditing();\n      event.consume(true);\n    }\n  }\n\n  addNewBlankProperty(index: number|undefined = this.propertiesTreeOutline.rootElement().childCount()):\n      StylePropertyTreeElement {\n    const property = this.styleInternal.newBlankProperty(index);\n    const item = new StylePropertyTreeElement(this.parentPane, this.matchedStyles, property, false, false, false, true);\n    this.propertiesTreeOutline.insertChild(item, property.index);\n    return item;\n  }\n\n  private handleEmptySpaceMouseDown(): void {\n    this.willCauseCancelEditing = this.parentPane.isEditingStyle;\n    this.selectedSinceMouseDown = false;\n  }\n\n  private handleEmptySpaceClick(event: Event): void {\n    if (!this.editable || this.element.hasSelection() || this.checkWillCancelEditing() || this.selectedSinceMouseDown) {\n      return;\n    }\n\n    const target = (event.target as Element);\n\n    if (target.classList.contains('header') || this.element.classList.contains('read-only') ||\n        target.enclosingNodeOrSelfWithClass('query')) {\n      event.consume();\n      return;\n    }\n    const deepTarget = UI.UIUtils.deepElementFromEvent(event);\n    const treeElement = deepTarget && UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(deepTarget);\n    if (treeElement && treeElement instanceof StylePropertyTreeElement) {\n      this.addNewBlankProperty(treeElement.property.index + 1).startEditing();\n    } else {\n      this.addNewBlankProperty().startEditing();\n    }\n    event.consume(true);\n  }\n\n  private handleQueryRuleClick(query: SDK.CSSQuery.CSSQuery, event: Event): void {\n    const element = event.currentTarget as Element;\n    if (UI.UIUtils.isBeingEdited(element)) {\n      return;\n    }\n\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event as MouseEvent) && this.navigable) {\n      const location = query.rawLocation();\n      if (!location) {\n        event.consume(true);\n        return;\n      }\n      const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(location);\n      if (uiLocation) {\n        void Common.Revealer.reveal(uiLocation);\n      }\n      event.consume(true);\n      return;\n    }\n\n    if (!this.editable) {\n      return;\n    }\n\n    const config = new UI.InplaceEditor.Config(\n        this.editingMediaCommitted.bind(this, query), this.editingMediaCancelled.bind(this, element), undefined,\n        this.editingMediaBlurHandler.bind(this));\n    UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.selectAllChildren(element);\n    }\n    this.parentPane.setEditingStyle(true);\n    const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n    parentMediaElement.classList.add('editing-query');\n\n    event.consume(true);\n  }\n\n  private editingMediaFinished(element: Element): void {\n    this.parentPane.setEditingStyle(false);\n    const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n    parentMediaElement.classList.remove('editing-query');\n  }\n\n  private editingMediaCancelled(element: Element): void {\n    this.editingMediaFinished(element);\n    // Mark the selectors in group if necessary.\n    // This is overridden by BlankStylePropertiesSection.\n    this.markSelectorMatches();\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.collapse(element, 0);\n    }\n  }\n\n  private editingMediaBlurHandler(): boolean {\n    return true;\n  }\n\n  private async editingMediaCommitted(\n      query: SDK.CSSQuery.CSSQuery, element: Element, newContent: string, _oldContent: string,\n      _context: Context|undefined, _moveDirection: string): Promise<void> {\n    this.parentPane.setEditingStyle(false);\n    this.editingMediaFinished(element);\n\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n\n    // This gets deleted in finishOperation(), which is called both on success and failure.\n    this.parentPane.setUserOperation(true);\n    const cssModel = this.parentPane.cssModel();\n    if (cssModel && query.styleSheetId) {\n      const range = query.range as TextUtils.TextRange.TextRange;\n      let success = false;\n      if (query instanceof SDK.CSSContainerQuery.CSSContainerQuery) {\n        success = await cssModel.setContainerQueryText(query.styleSheetId, range, newContent);\n      } else if (query instanceof SDK.CSSSupports.CSSSupports) {\n        success = await cssModel.setSupportsText(query.styleSheetId, range, newContent);\n      } else {\n        success = await cssModel.setMediaText(query.styleSheetId, range, newContent);\n      }\n\n      if (success) {\n        this.matchedStyles.resetActiveProperties();\n        this.parentPane.refreshUpdate(this);\n      }\n      this.parentPane.setUserOperation(false);\n      this.editingMediaTextCommittedForTest();\n    }\n  }\n\n  private editingMediaTextCommittedForTest(): void {\n  }\n\n  private handleSelectorClick(event: Event): void {\n    const target = (event.target as Element | null);\n    if (!target) {\n      return;\n    }\n    if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey((event as MouseEvent)) && this.navigable &&\n        target.classList.contains('simple-selector')) {\n      const selectorIndex = this.elementToSelectorIndex.get(target);\n      if (selectorIndex) {\n        this.navigateToSelectorSource(selectorIndex, true);\n      }\n      event.consume(true);\n      return;\n    }\n    if (this.element.hasSelection()) {\n      return;\n    }\n    this.startEditingAtFirstPosition();\n    event.consume(true);\n  }\n\n  private handleContextMenuEvent(event: Event): void {\n    const target = (event.target as Element | null);\n    if (!target) {\n      return;\n    }\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copySelector), () => {\n      const selectorText = this.headerText();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(selectorText);\n      Host.userMetrics.styleTextCopied(Host.UserMetrics.StyleTextCopied.SelectorViaContextMenu);\n    });\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyRule), () => {\n      const ruleText = StylesSidebarPane.formatLeadingProperties(this).ruleText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(ruleText);\n      Host.userMetrics.styleTextCopied(Host.UserMetrics.StyleTextCopied.RuleViaContextMenu);\n    });\n\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllDeclarations), () => {\n      const allDeclarationText = StylesSidebarPane.formatLeadingProperties(this).allDeclarationText;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allDeclarationText);\n      Host.userMetrics.styleTextCopied(Host.UserMetrics.StyleTextCopied.AllDeclarationsViaContextMenu);\n    });\n\n    // TODO(changhaohan): conditionally add this item only when there are changes to copy\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllCSSChanges), async () => {\n      const allChanges = await this.parentPane.getFormattedChanges();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allChanges);\n      Host.userMetrics.styleTextCopied(Host.UserMetrics.StyleTextCopied.AllChangesViaStylesPane);\n    });\n    void contextMenu.show();\n  }\n\n  private navigateToSelectorSource(index: number, focus: boolean): void {\n    const cssModel = this.parentPane.cssModel();\n    if (!cssModel) {\n      return;\n    }\n    const rule = (this.styleInternal.parentRule as SDK.CSSRule.CSSStyleRule | null);\n    if (!rule || rule.styleSheetId === undefined) {\n      return;\n    }\n    const header = cssModel.styleSheetHeaderForId(rule.styleSheetId);\n    if (!header) {\n      return;\n    }\n    const rawLocation =\n        new SDK.CSSModel.CSSLocation(header, rule.lineNumberInSource(index), rule.columnNumberInSource(index));\n    StylePropertiesSection.revealSelectorSource(rawLocation, focus);\n  }\n\n  private static revealSelectorSource(rawLocation: SDK.CSSModel.CSSLocation, focus: boolean): void {\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, !focus);\n    }\n  }\n\n  private startEditingAtFirstPosition(): void {\n    if (!this.editable) {\n      return;\n    }\n\n    if (!this.styleInternal.parentRule) {\n      this.moveEditorFromSelector('forward');\n      return;\n    }\n\n    this.startEditingSelector();\n  }\n\n  startEditingSelector(): void {\n    const element = this.selectorElement;\n    if (UI.UIUtils.isBeingEdited(element)) {\n      return;\n    }\n\n    element.scrollIntoViewIfNeeded(false);\n    // Reset selector marks in group, and normalize whitespace.\n    const textContent = element.textContent;\n    if (textContent !== null) {\n      element.textContent = textContent.replace(/\\s+/g, ' ').trim();\n    }\n\n    const config =\n        new UI.InplaceEditor.Config(this.editingSelectorCommitted.bind(this), this.editingSelectorCancelled.bind(this));\n    UI.InplaceEditor.InplaceEditor.startEditing(this.selectorElement, config);\n\n    const selection = element.getComponentSelection();\n    if (selection) {\n      selection.selectAllChildren(element);\n    }\n    this.parentPane.setEditingStyle(true);\n    if (element.classList.contains('simple-selector')) {\n      this.navigateToSelectorSource(0, false);\n    }\n  }\n\n  moveEditorFromSelector(moveDirection: string): void {\n    this.markSelectorMatches();\n\n    if (!moveDirection) {\n      return;\n    }\n\n    if (moveDirection === 'forward') {\n      const firstChild = (this.propertiesTreeOutline.firstChild() as StylePropertyTreeElement);\n      let currentChild: (StylePropertyTreeElement|null)|StylePropertyTreeElement = firstChild;\n      while (currentChild && currentChild.inherited()) {\n        const sibling: UI.TreeOutline.TreeElement|null = currentChild.nextSibling;\n        currentChild = sibling instanceof StylePropertyTreeElement ? sibling : null;\n      }\n      if (!currentChild) {\n        this.addNewBlankProperty().startEditing();\n      } else {\n        currentChild.startEditing(currentChild.nameElement);\n      }\n    } else {\n      const previousSection = this.previousEditableSibling();\n      if (!previousSection) {\n        return;\n      }\n\n      previousSection.addNewBlankProperty().startEditing();\n    }\n  }\n\n  editingSelectorCommitted(\n      element: Element, newContent: string, oldContent: string, context: Context|undefined,\n      moveDirection: string): void {\n    this.editingSelectorEnded();\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n    if (newContent === oldContent) {\n      // Revert to a trimmed version of the selector if need be.\n      this.selectorElement.textContent = newContent;\n      this.moveEditorFromSelector(moveDirection);\n      return;\n    }\n    const rule = this.styleInternal.parentRule;\n    if (!rule) {\n      return;\n    }\n\n    function headerTextCommitted(this: StylePropertiesSection): void {\n      this.parentPane.setUserOperation(false);\n      this.moveEditorFromSelector(moveDirection);\n      this.editingSelectorCommittedForTest();\n    }\n\n    // This gets deleted in finishOperationAndMoveEditor(), which is called both on success and failure.\n    this.parentPane.setUserOperation(true);\n    void this.setHeaderText(rule, newContent).then(headerTextCommitted.bind(this));\n  }\n\n  setHeaderText(rule: SDK.CSSRule.CSSRule, newContent: string): Promise<void> {\n    function onSelectorsUpdated(\n        this: StylePropertiesSection, rule: SDK.CSSRule.CSSStyleRule, success: boolean): Promise<void> {\n      if (!success) {\n        return Promise.resolve();\n      }\n      return this.matchedStyles.recomputeMatchingSelectors(rule).then(updateSourceRanges.bind(this, rule));\n    }\n\n    function updateSourceRanges(this: StylePropertiesSection, rule: SDK.CSSRule.CSSStyleRule): void {\n      const doesAffectSelectedNode = this.matchedStyles.getMatchingSelectors(rule).length > 0;\n      this.propertiesTreeOutline.element.classList.toggle('no-affect', !doesAffectSelectedNode);\n      this.matchedStyles.resetActiveProperties();\n      this.parentPane.refreshUpdate(this);\n    }\n\n    if (!(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n      return Promise.resolve();\n    }\n    const oldSelectorRange = rule.selectorRange();\n    if (!oldSelectorRange) {\n      return Promise.resolve();\n    }\n    return rule.setSelectorText(newContent).then(onSelectorsUpdated.bind(this, rule, Boolean(oldSelectorRange)));\n  }\n\n  protected editingSelectorCommittedForTest(): void {\n  }\n\n  protected updateRuleOrigin(): void {\n    this.selectorRefElement.removeChildren();\n    this.selectorRefElement.appendChild(StylePropertiesSection.createRuleOriginNode(\n        this.matchedStyles, this.parentPane.linkifier, this.styleInternal.parentRule));\n  }\n\n  protected editingSelectorEnded(): void {\n    this.parentPane.setEditingStyle(false);\n  }\n\n  editingSelectorCancelled(): void {\n    this.editingSelectorEnded();\n\n    // Mark the selectors in group if necessary.\n    // This is overridden by BlankStylePropertiesSection.\n    this.markSelectorMatches();\n  }\n\n  /**\n   * A property at or near an index and suitable for subsequent editing.\n   * Either the last property, if index out-of-upper-bound,\n   * or property at index, if such a property exists,\n   * or otherwise, null.\n   */\n  closestPropertyForEditing(propertyIndex: number): UI.TreeOutline.TreeElement|null {\n    const rootElement = this.propertiesTreeOutline.rootElement();\n    if (propertyIndex >= rootElement.childCount()) {\n      return rootElement.lastChild();\n    }\n    return rootElement.childAt(propertyIndex);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static MaxProperties = 50;\n}\n\nexport class BlankStylePropertiesSection extends StylePropertiesSection {\n  private normal: boolean;\n  private readonly ruleLocation: TextUtils.TextRange.TextRange;\n  private readonly styleSheetId: Protocol.CSS.StyleSheetId;\n\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, defaultSelectorText: string,\n      styleSheetId: Protocol.CSS.StyleSheetId, ruleLocation: TextUtils.TextRange.TextRange,\n      insertAfterStyle: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    const cssModel = (stylesPane.cssModel() as SDK.CSSModel.CSSModel);\n    const rule = SDK.CSSRule.CSSStyleRule.createDummyRule(cssModel, defaultSelectorText);\n    super(stylesPane, matchedStyles, rule.style, sectionIdx);\n    this.normal = false;\n    this.ruleLocation = ruleLocation;\n    this.styleSheetId = styleSheetId;\n    this.selectorRefElement.removeChildren();\n    this.selectorRefElement.appendChild(StylePropertiesSection.linkifyRuleLocation(\n        cssModel, this.parentPane.linkifier, styleSheetId, this.actualRuleLocation()));\n    if (insertAfterStyle && insertAfterStyle.parentRule &&\n        insertAfterStyle.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n      this.createAtRuleLists(insertAfterStyle.parentRule);\n    }\n    this.element.classList.add('blank-section');\n  }\n\n  private actualRuleLocation(): TextUtils.TextRange.TextRange {\n    const prefix = this.rulePrefix();\n    const lines = prefix.split('\\n');\n    const lastLine = lines[lines.length - 1];\n    const editRange = new TextUtils.TextRange.TextRange(0, 0, lines.length - 1, lastLine ? lastLine.length : 0);\n    return this.ruleLocation.rebaseAfterTextEdit(TextUtils.TextRange.TextRange.createFromLocation(0, 0), editRange);\n  }\n\n  private rulePrefix(): string {\n    return this.ruleLocation.startLine === 0 && this.ruleLocation.startColumn === 0 ? '' : '\\n\\n';\n  }\n\n  get isBlank(): boolean {\n    return !this.normal;\n  }\n\n  editingSelectorCommitted(\n      element: Element, newContent: string, oldContent: string, context: Context|undefined,\n      moveDirection: string): void {\n    if (!this.isBlank) {\n      super.editingSelectorCommitted(element, newContent, oldContent, context, moveDirection);\n      return;\n    }\n\n    function onRuleAdded(this: BlankStylePropertiesSection, newRule: SDK.CSSRule.CSSStyleRule|null): Promise<void> {\n      if (!newRule) {\n        this.editingSelectorCancelled();\n        this.editingSelectorCommittedForTest();\n        return Promise.resolve();\n      }\n      return this.matchedStyles.addNewRule(newRule, this.matchedStyles.node())\n          .then(onAddedToCascade.bind(this, newRule));\n    }\n\n    function onAddedToCascade(this: BlankStylePropertiesSection, newRule: SDK.CSSRule.CSSStyleRule): void {\n      const doesSelectorAffectSelectedNode = this.matchedStyles.getMatchingSelectors(newRule).length > 0;\n      this.makeNormal(newRule);\n\n      if (!doesSelectorAffectSelectedNode) {\n        this.propertiesTreeOutline.element.classList.add('no-affect');\n      }\n\n      this.updateRuleOrigin();\n\n      this.parentPane.setUserOperation(false);\n      this.editingSelectorEnded();\n      if (this.element.parentElement)  // Might have been detached already.\n      {\n        this.moveEditorFromSelector(moveDirection);\n      }\n      this.markSelectorMatches();\n\n      this.editingSelectorCommittedForTest();\n    }\n\n    if (newContent) {\n      newContent = newContent.trim();\n    }\n    this.parentPane.setUserOperation(true);\n\n    const cssModel = this.parentPane.cssModel();\n    const ruleText = this.rulePrefix() + newContent + ' {}';\n    if (cssModel) {\n      void cssModel.addRule(this.styleSheetId, ruleText, this.ruleLocation).then(onRuleAdded.bind(this));\n    }\n  }\n\n  editingSelectorCancelled(): void {\n    this.parentPane.setUserOperation(false);\n    if (!this.isBlank) {\n      super.editingSelectorCancelled();\n      return;\n    }\n\n    this.editingSelectorEnded();\n    this.parentPane.removeSection(this);\n  }\n\n  private makeNormal(newRule: SDK.CSSRule.CSSRule): void {\n    this.element.classList.remove('blank-section');\n    this.styleInternal = newRule.style;\n    // FIXME: replace this instance by a normal StylePropertiesSection.\n    this.normal = true;\n  }\n}\n\nexport class KeyframePropertiesSection extends StylePropertiesSection {\n  constructor(\n      stylesPane: StylesSidebarPane, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      style: SDK.CSSStyleDeclaration.CSSStyleDeclaration, sectionIdx: number) {\n    super(stylesPane, matchedStyles, style, sectionIdx);\n    this.selectorElement.className = 'keyframe-key';\n  }\n\n  headerText(): string {\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      return this.styleInternal.parentRule.key().text;\n    }\n    return '';\n  }\n\n  setHeaderText(rule: SDK.CSSRule.CSSRule, newContent: string): Promise<void> {\n    function updateSourceRanges(this: KeyframePropertiesSection, success: boolean): void {\n      if (!success) {\n        return;\n      }\n      this.parentPane.refreshUpdate(this);\n    }\n\n    if (!(rule instanceof SDK.CSSRule.CSSKeyframeRule)) {\n      return Promise.resolve();\n    }\n    const oldRange = rule.key().range;\n    if (!oldRange) {\n      return Promise.resolve();\n    }\n    return rule.setKeyText(newContent).then(updateSourceRanges.bind(this));\n  }\n\n  isPropertyInherited(_propertyName: string): boolean {\n    return false;\n  }\n\n  isPropertyOverloaded(_property: SDK.CSSProperty.CSSProperty): boolean {\n    return false;\n  }\n\n  markSelectorHighlights(): void {\n  }\n\n  markSelectorMatches(): void {\n    if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n      this.selectorElement.textContent = this.styleInternal.parentRule.key().text;\n    }\n  }\n\n  highlight(): void {\n  }\n}\n\nexport class HighlightPseudoStylePropertiesSection extends StylePropertiesSection {\n  isPropertyInherited(_propertyName: string): boolean {\n    // For highlight pseudos, all valid properties are treated as inherited.\n    // Note that the meaning is reversed in this context; the result of\n    // returning false here is that properties of inherited pseudos will never\n    // be shown in the darker style of non-inherited properties.\n    return false;\n  }\n}\n"],
  "mappings": "AAiCA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,sBAAsB;AAAA,EAItB,uBAAuB;AAAA,EAIvB,qBAAqB;AAAA,EAIrB,oBAAoB;AAAA,EAIpB,cAAc;AAAA,EAId,gBAAgB;AAAA,EAKhB,kBAAkB;AAAA,EAKlB,wBAAwB;AAAA,EAIxB,cAAc;AAAA,EAId,UAAU;AAAA,EAIV,qBAAqB;AAAA,EAIrB,mBAAmB;AAAA,EAInB,aAAa;AAAA;AAGf,MAAM,OAAO,KAAK,KAAK,kBAAkB,6CAA6C;AACtF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAIhE,MAAM,YAAY;AAGX,oCAA6B;AAAA,EACxB;AAAA,EACV;AAAA,EACS;AAAA,EACT;AAAA,EACQ;AAAA,EACA;AAAA,EACA;AAAA,EACS;AAAA,EACjB;AAAA,EACiB;AAAA,EACA;AAAA,EACjB;AAAA,EACQ;AAAA,EACE;AAAA,EACO;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACT;AAAA,EACS;AAAA,EACjB;AAAA,EACmB;AAAA,EACF;AAAA,EACT;AAAA,EACA;AAAA,EAEA;AAAA,EAGR,6BAA6B;AAAA,EACrB,aAAa;AAAA,EAErB,YACI,YAA+B,eAC/B,OAAoD,YAAoB;AAC1E,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,gBAAgB;AACrB,SAAK,gBAAgB;AACrB,SAAK,WAAW,QAAQ,MAAM,gBAAgB,MAAM;AACpD,SAAK,aAAa;AAClB,SAAK,yBAAyB;AAC9B,SAAK,eAAe;AACpB,SAAK,0BAA0B,MAAM,oBAAoB;AAEzD,UAAM,OAAO,MAAM;AACnB,SAAK,UAAU,SAAS,cAAc;AACtC,SAAK,QAAQ,UAAU,IAAI;AAC3B,SAAK,QAAQ,UAAU,IAAI;AAC3B,SAAK,QAAQ,UAAU,IAAI;AAC3B,OAAG,UAAU,kBAAkB,KAAK,SAAS,GAAG,KAAK;AACrD,SAAK,QAAQ,WAAW;AACxB,OAAG,UAAU,eAAe,KAAK;AACjC,SAAK,QAAQ,iBAAiB,WAAW,KAAK,UAAU,KAAK,OAAO;AACpE,eAAW,iBAAiB,IAAI,KAAK,SAAS;AAC9C,SAAK,eAAe,KAAK,QAAQ,YAAY;AAE7C,SAAK,eAAe,KAAK,aAAa,YAAY,OAAO,0BAA2B,QAAO,oBAAoB;AAE/G,SAAK,wBAAwB,IAAI,GAAG,YAAY;AAChD,SAAK,sBAAsB,aAAa;AACxC,SAAK,sBAAsB,iBAAiB,CAAC;AAC7C,SAAK,sBAAsB,QAAQ,UAAU,IAAI,oBAAoB,kBAAkB;AAEvF,SAAK,sBAAsB,UAAU;AACrC,SAAK,aAAa,YAAY,KAAK,sBAAsB;AAEzD,SAAK,gBAAgB,GAAG,QAAQ,iBAAiB,IAAI,KAAK,aAAa,KAAK,OAAO;AACnF,SAAK,aAAa,YAAY,KAAK;AAEnC,UAAM,oBAAoB,SAAS,cAAc;AACjD,SAAK,kBAAkB,SAAS,cAAc;AAC9C,OAAG,UAAU,kBAAkB,KAAK,iBAAiB,WAAW,UAAU;AAC1E,SAAK,gBAAgB,UAAU,IAAI;AACnC,SAAK,gBAAgB,cAAc,KAAK;AACxC,sBAAkB,YAAY,KAAK;AACnC,SAAK,gBAAgB,iBAAiB,cAAc,KAAK,qBAAqB,KAAK,OAAO;AAC1F,SAAK,gBAAgB,iBAAiB,aAAa,WAAS,MAAM,WAAW;AAC7E,SAAK,gBAAgB,iBAAiB,cAAc,KAAK,mBAAmB,KAAK,OAAO;AAExF,UAAM,YAAY,kBAAkB,YAAY,QAAQ;AACxD,cAAU,cAAc;AACxB,sBAAkB,iBAAiB,aAAa,KAAK,0BAA0B,KAAK,OAAO;AAC3F,sBAAkB,iBAAiB,SAAS,KAAK,6BAA6B,KAAK,OAAO;AAE1F,UAAM,aAAa,KAAK,aAAa,YAAY,OAAO;AACxD,eAAW,cAAc;AAEzB,QAAI,KAAK,cAAc,YAAY;AACjC,YAAM,gBAAgB,IAAI,GAAG,QAAQ,cAAc,WAAW,UAAU,uBAAuB;AAC/F,oBAAc,iBAAiB,GAAG,QAAQ,cAAc,OAAO,OAAO,KAAK,gBAAgB;AAC3F,oBAAc,QAAQ,WAAW;AACjC,UAAI,CAAC,KAAK,qBAAqB;AAC7B,aAAK,sBACD,IAAI,GAAG,QAAQ,QAAQ,iDAAiD,KAAK;AAAA;AAEnF,WAAK,oBAAoB,kBAAkB;AAC3C,SAAG,UAAU,aAAa,KAAK,oBAAoB;AAAA;AAGrD,QAAI,KAAK,QAAQ,YAAY,UAAU,iBAAiB,KAAK,UAAU;AACrE,WAAK,oBAAoB,IAAI,GAAG,QAAQ,QAAQ,gCAAgC,KAAK;AACrF,WAAK,2BAA2B,IAAI,yBAAyB,KAAK,WAAW,uBAAuB;AACpG,WAAK,mBAAmB,IAAI,GAAG,QAAQ,cAAc,eAAe;AACpE,WAAK,iBAAiB,iBAAiB,GAAG,QAAQ,cAAc,OAAO,OAAO,MAAM;AAClF,aAAK;AAAA,SACJ;AACH,WAAK,iBAAiB,QAAQ,iBAAiB,WAAW,WAAS;AACjE,YAAI,kBAAkB,QAAQ;AAC5B,gBAAM,QAAQ;AACd,eAAK;AAAA;AAAA,SAEN;AACH,WAAK,kBAAkB,kBAAkB,KAAK;AAE9C,UAAI,KAAK,cAAc,SAAS,IAAI,oBAAoB,KAAK,QAAQ;AACnE,YAAI,KAAK,qBAAqB;AAC5B,eAAK,oBAAoB,QAAQ,UAAU,IAAI;AAAA;AAAA,aAE5C;AACL,aAAK,kBAAkB,QAAQ,UAAU,IAAI;AAAA;AAAA;AAIjD,SAAK,gBAAgB,iBAAiB,SAAS,KAAK,oBAAoB,KAAK,OAAO;AACpF,SAAK,QAAQ,iBAAiB,eAAe,KAAK,uBAAuB,KAAK,OAAO;AACrF,SAAK,QAAQ,iBAAiB,aAAa,KAAK,0BAA0B,KAAK,OAAO;AACtF,SAAK,QAAQ,iBAAiB,SAAS,KAAK,sBAAsB,KAAK,OAAO;AAC9E,SAAK,QAAQ,iBAAiB,aAAa,KAAK,YAAY,KAAK,OAAO;AACxE,SAAK,QAAQ,iBAAiB,cAAc,KAAK,aAAa,KAAK,OAAO;AAC1E,SAAK,yBAAyB;AAE9B,SAAK,yBAAyB,oBAAI;AAElC,QAAI,MAAM;AAER,UAAI,KAAK,iBAAiB,KAAK,cAAc;AAC3C,aAAK,WAAW;AAAA,aACX;AAEL,YAAI,KAAK,cAAc;AACrB,gBAAM,SAAS,KAAK,WAAW,sBAAsB,KAAK;AAC1D,eAAK,YAAY,UAAU,CAAC,OAAO;AAAA;AAAA;AAAA;AAKzC,SAAK,mBAAmB,KAAK,aAAa,YAAY,OAAO;AAC7D,SAAK,qBAAqB,KAAK,aAAa,YAAY,OAAO;AAC/D,SAAK;AACL,SAAK;AACL,SAAK,aAAa,YAAY;AAC9B,SAAK,oBAAoB;AAEzB,QAAI,KAAK,WAAW;AAClB,WAAK,QAAQ,UAAU,IAAI;AAAA;AAG7B,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,QAAQ,UAAU,IAAI;AAC3B,WAAK,sBAAsB,QAAQ,UAAU,IAAI;AAAA;AAEnD,SAAK,yBAAyB;AAC9B,SAAK,mBAAmB;AACxB,SAAK;AACL,SAAK;AAAA;AAAA,EAGP,cAAc,YAA0B;AACtC,SAAK,aAAa;AAClB,SAAK;AAAA;AAAA,EAGP,gBAAwB;AACtB,WAAO,KAAK;AAAA;AAAA,EAGd,qBAAqB,aAA6C;AAChE,QAAI,KAAK,0BAA0B;AACjC,WAAK,yBAAyB,qBAAqB;AAAA;AAErD,QAAI,KAAK,mBAAmB;AAC1B,WAAK,kBAAkB,QAAQ,UAAU,OAAO;AAChD,UAAI,KAAK,qBAAqB;AAC5B,aAAK,oBAAoB,QAAQ,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA,EAKrD,gBAAsB;AACpB,QAAI,KAAK,WAAW,sBAAsB,eACtC,KAAK,cAAc,SAAS,IAAI,oBAAoB,KAAK,QAAQ;AACnE;AAAA;AAEF,QAAI,KAAK,mBAAmB;AAC1B,WAAK,kBAAkB,QAAQ,UAAU,IAAI;AAAA;AAE/C,QAAI,KAAK,qBAAqB;AAC5B,WAAK,oBAAoB,QAAQ,UAAU,OAAO;AAAA;AAAA;AAAA,SAI/C,qBACH,eAAsD,WACtD,MAAsC;AACxC,QAAI,CAAC,MAAM;AACT,aAAO,SAAS,eAAe;AAAA;AAGjC,UAAM,eAAe,KAAK,2BAA2B;AAErD,UAAM,SAAS,KAAK,eAAe,cAAc,WAAW,sBAAsB,KAAK,gBAAgB;AAEvG,mCAA0C;AACxC,UAAI,CAAC,MAAM;AACT,eAAO;AAAA;AAET,UAAI,gBAAgB,KAAK,gBAAgB,UAAU,CAAC,OAAO,+BAA+B;AACxF,eAAO,uBAAuB,oBAC1B,cAAc,YAAY,WAAW,KAAK,cAAc;AAAA;AAE9D,aAAO;AAAA;AAGT,yBAAqB,OAA0B;AAC7C,UAAI,QAAQ,WAAW;AACrB,cAAM,OAAO,6BAA6B,OAAO,WAAW;AAAA,UAC1D,sBAAsB;AAAA,UACtB,SAAS;AAAA;AAEX,aAAK,cAAc;AACnB,eAAO;AAAA;AAET,aAAO;AAAA;AAGT,QAAI,QAAQ,aAAa,CAAC,OAAO,kBAAkB;AACjD,YAAM,YAAW,OAAO,uBAAuB,OAAO;AACtD,UAAI,WAAU;AACZ,eAAO;AAAA;AAET,YAAM,QAAQ,OAAO,uBAAuB,WAAW,UAAU,yBAAyB;AAC1F,YAAM,QAAO,YAAY;AACzB,UAAI,OAAM;AACR,eAAO;AAAA;AAET,aAAO,SAAS,eAAe;AAAA;AAGjC,UAAM,WAAW;AACjB,QAAI,UAAU;AACZ,aAAO;AAAA;AAGT,QAAI,KAAK,eAAe;AACtB,aAAO,SAAS,eAAe,WAAW,UAAU;AAAA;AAEtD,QAAI,KAAK,cAAc;AACrB,aAAO,SAAS,eAAe,WAAW,UAAU;AAAA;AAEtD,QAAI,KAAK,kBAAkB;AACzB,aAAO,SAAS,eAAe,WAAW,UAAU;AAAA;AAGtD,UAAM,OAAO,YAAY;AACzB,QAAI,MAAM;AACR,aAAO;AAAA;AAGT,WAAO,SAAS,eAAe;AAAA;AAAA,SAGlB,2BAA2B,MAAyE;AACjH,QAAI;AACJ,QAAI,gBAAgB,IAAI,QAAQ,cAAc;AAC5C,qBAAe,KAAK,MAAM;AAAA,eACjB,gBAAgB,IAAI,QAAQ,iBAAiB;AACtD,qBAAe,KAAK,MAAM;AAAA;AAE5B,WAAO;AAAA;AAAA,SAGF,0BACH,eAAsD,MAAsC;AAC9F,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,UAAM,eAAe,KAAK,2BAA2B;AACrD,UAAM,SAAS,KAAK,eAAe,cAAc,WAAW,sBAAsB,KAAK,gBAAgB;AAEvG,QAAI,gBAAgB,KAAK,gBAAgB,UAAU,CAAC,OAAO,+BAA+B;AACxF,YAAM,2BACF,KAAK,uBAAuB,cAAc,YAAY,KAAK,cAAc;AAC7E,WAAK,qBAAqB,0BAA0B;AAAA;AAAA;AAAA,SAIvC,oBACb,UAAiC,WACjC,cAAyC,cAAmD;AAC9F,UAAM,2BAA2B,KAAK,uBAAuB,UAAU,cAAc;AACrF,WAAO,UAAU,mBAAmB;AAAA;AAAA,SAGvB,uBACX,UAAiC,cACjC,cAAuE;AACzE,UAAM,mBACD,SAAS,sBAAsB;AACpC,UAAM,aAAa,iBAAiB,mBAAmB,aAAa;AACpE,UAAM,eAAe,iBAAiB,qBAAqB,aAAa,WAAW,aAAa;AAChG,WAAO,IAAI,IAAI,SAAS,YAAY,kBAAkB,YAAY;AAAA;AAAA,EAG5D,aAA+B;AACrC,WAAQ,KAAK,sBAAsB,WAAW,iBAAiC;AAAA;AAAA,EAGzE,UAAU,SAA4B;AAE5C,UAAM,UAAU,KAAK;AACrB,QAAI,SAAS;AACX,cAAQ,WAAW;AAAA;AAIrB,YAAQ;AACR,QAAI,KAAK,sBAAsB,WAAW,SAAS,UAAU;AAC3D,cAAQ,WAAW;AAAA;AAAA;AAAA,EAIf,eAAe,eAAoC;AACzD,QAAI,cAAc,UAAU,cAAc,WAAW,cAAc,WAAW,cAAc,UAAU;AACpG;AAAA;AAGF,UAAM,UAAU,KAAK;AAErB,QAAI,YAA8B;AAClC,UAAM,YACF,MAAM,KAAM,KAAK,sBAAsB,WAAW,iBAAiB;AAEvE,QAAI,UAAU,WAAW,GAAG;AAC1B;AAAA;AAGF,UAAM,eAAe,UAAU,UAAU,QAAQ,WAAW;AAE5D,QAAI,cAAc,QAAQ,aAAa;AACrC,kBAAY,UAAU,eAAe,MAAM,KAAK;AAAA,eACvC,cAAc,QAAQ,cAAc;AAC7C,kBAAY,UAAU,eAAe,MAAM,KAAK;AAAA,eACvC,cAAc,QAAQ,aAAa,cAAc,QAAQ,aAAa;AAC/E,WAAK,UAAU,KAAK;AACpB;AAAA;AAGF,QAAI,WAAW;AACb,WAAK,UAAU;AACf,oBAAc,QAAQ;AAAA;AAAA;AAAA,EAIlB,UAAU,OAAoB;AACpC,UAAM,gBAAiB;AACvB,QAAI,GAAG,QAAQ,eAAe,CAAC,KAAK,YAAY,cAAc,UAAU,cAAc,WAClF,cAAc,SAAS;AACzB;AAAA;AAEF,YAAQ,cAAc;AAAA,WACf;AAAA,WACA;AACH,aAAK;AACL,sBAAc,QAAQ;AACtB;AAAA,WACG;AAAA,WACA;AAAA,WACA;AAAA,WACA;AACH,aAAK,eAAe;AACpB;AAAA;AAGA,YAAI,cAAc,IAAI,WAAW,GAAG;AAClC,eAAK,oBAAoB,GAAG;AAAA;AAE9B;AAAA;AAAA;AAAA,EAIE,kBAAkB,WAA0B;AAClD,SAAK,QAAQ,UAAU,OAAO,wBAAwB;AACtD,SAAK,sBAAsB,QAAQ,UAAU,OAAO,wBAAwB;AAC5E,QAAI,KAAK,2BAA2B,WAAW;AAC7C,WAAK,yBAAyB;AAC9B,WAAK;AAAA;AAAA;AAAA,EAID,aAAa,QAAqB;AACxC,SAAK,kBAAkB;AACvB,SAAK,WAAW,kBAAkB;AAAA;AAAA,EAG5B,YAAY,OAAyB;AAC3C,UAAM,gBAAgB,GAAG,iBAAiB,iBAAiB,0BAA0B;AACrF,SAAK,kBAAkB;AAEvB,UAAM,cAAc,KAAK,sBAAsB,qBAAqB;AACpE,QAAI,uBAAuB,0BAA0B;AACnD,WAAK,WAAW,kBAAmB;AAAA,WAC9B;AACL,WAAK,WAAW,kBAAkB;AAAA;AAEpC,UAAM,YAAY,KAAK,QAAQ;AAC/B,QAAI,CAAC,KAAK,0BAA0B,aAAa,UAAU,YAAY;AACrE,WAAK,yBAAyB;AAAA;AAAA;AAAA,EAI1B,4BAAkC;AACxC,QAAI,KAAK,4BAA4B,KAAK,kBAAkB;AAC1D,WAAK,KAAK,yBAAyB,YAAY,KAAK,iBAAiB,SAAS,KAAK;AAAA;AAAA;AAAA,EAIvF,QAAqD;AACnD,WAAO,KAAK;AAAA;AAAA,EAGd,aAAqB;AACnB,UAAM,OAAO,KAAK,cAAc,aAAa,KAAK;AAClD,QAAI,KAAK,cAAc,SAAS,IAAI,oBAAoB,KAAK,QAAQ;AACnE,aAAO,KAAK,cAAc,YAAY,KAAK,iBAAiB,WAAW,UAAU,kBACrB;AAAA;AAE9D,QAAI,QAAQ,KAAK,cAAc,SAAS,IAAI,oBAAoB,KAAK,YAAY;AAC/E,aAAO,WAAW,UAAU,kBAAkB,EAAC,KAAK,KAAK;AAAA;AAE3D,QAAI,KAAK,cAAc,sBAAsB,IAAI,QAAQ,cAAc;AACrE,aAAO,KAAK,cAAc,WAAW;AAAA;AAEvC,WAAO;AAAA;AAAA,EAGD,qBAA2B;AACjC,QAAI,KAAK,YAAY;AACnB,mBAAa,KAAK;AAAA;AAEpB,QAAI,aAAa,aAAa;AAAA;AAAA,EAGxB,uBAA6B;AACnC,QAAI,KAAK,YAAY;AACnB,mBAAa,KAAK;AAAA;AAEpB,SAAK,aAAa,OAAO,WAAW,KAAK,UAAU,KAAK,OAAO;AAAA;AAAA,EAGjE,UAAU,OAAyB,OAAa;AAC9C,QAAI,aAAa,aAAa;AAC9B,UAAM,OAAO,KAAK,WAAW;AAC7B,QAAI,CAAC,MAAM;AACT;AAAA;AAEF,UAAM,eACF,KAAK,cAAc,cAAc,KAAK,cAAc,sBAAsB,IAAI,QAAQ,eACtF,KAAK,cAAc,WAAW,iBAC9B;AACJ,SAAK,WAAW,eAAe,mBAAmB,EAAC,MAAM,gBAAe;AAAA;AAAA,EAG1E,eAA4C;AAC1C,UAAM,SAAS,KAAK,QAAQ;AAC5B,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA;AAGT,QAAI,eAAiC,OAAO;AAC5C,WAAO,cAAc;AACnB,YAAM,eAAe,KAAK,WAAW,iBAAiB,IAAI;AAC1D,UAAI,cAAc;AAChB,eAAO;AAAA;AAET,qBAAe,aAAa;AAAA;AAG9B,WAAO;AAAA;AAAA,EAGT,yBAAyB,oBAA6B,iBACtB;AAC9B,QAAI,CAAC,KAAK,YAAY;AACpB,aAAO;AAAA;AAET,QAAI,SAAS,iBAAiB;AAC5B,aAAO;AAAA;AAET,QAAI,CAAC,iBAAiB;AACpB,wBAAkB;AAAA;AAEpB,QAAI,iBAAqD;AACzD,UAAM,cAAc,qBAAqB,KAAK,gBAAgB,KAAK;AACnE,QAAI,aAAa;AACf,uBAAiB,YAAY,yBAAyB,oBAAoB;AAAA,WACrE;AACL,YAAM,cAAc,qBAAqB,KAAK,iBAAiB,KAAK;AACpE,UAAI,aAAa;AACf,yBAAiB,YAAY,yBAAyB,oBAAoB;AAAA;AAAA;AAI9E,WAAO;AAAA;AAAA,EAGT,cAA2C;AACzC,UAAM,SAAS,KAAK,QAAQ;AAC5B,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA;AAGT,QAAI,eAAiC,OAAO;AAC5C,WAAO,cAAc;AACnB,YAAM,eAAe,KAAK,WAAW,iBAAiB,IAAI;AAC1D,UAAI,cAAc;AAChB,eAAO;AAAA;AAET,qBAAe,aAAa;AAAA;AAG9B,WAAO;AAAA;AAAA,EAGT,cAAgD;AAC9C,QAAI,aAA8C,KAAK;AACvD,OAAG;AACD,mBAAa,WAAW;AAAA,aACjB,cAAc,CAAC,KAAK,WAAW,iBAAiB,IAAI;AAE7D,QAAI,YAAY;AACd,aAAO,KAAK,WAAW,iBAAiB,IAAI;AAAA;AAE9C;AAAA;AAAA,EAGF,kBAAoD;AAClD,QAAI,aAA8C,KAAK;AACvD,OAAG;AACD,mBAAa,WAAW;AAAA,aACjB,cAAc,CAAC,KAAK,WAAW,iBAAiB,IAAI;AAE7D,QAAI,YAAY;AACd,aAAO,KAAK,WAAW,iBAAiB,IAAI;AAAA;AAE9C;AAAA;AAAA,EAGM,eAAe,OAAyD;AAC9E,UAAM,KAAK;AACX,UAAM,OAAO,KAAK,cAAc;AAChC,QAAI,CAAC,QAAQ,CAAC,KAAK,MAAM,SAAS,KAAK,iBAAiB,QAAW;AACjE;AAAA;AAEF,UAAM,QACF,UAAU,UAAU,UAAU,mBAAmB,KAAK,MAAM,MAAM,SAAS,KAAK,MAAM,MAAM,YAAY;AAC5G,SAAK,WAAW,gBAAgB,MAAM,KAAK,cAAc;AAAA;AAAA,EAG3D,iBAAiB,MAA+B;AAC9C,UAAM,OAAO,KAAK,cAAc;AAChC,QAAI,MAAM;AACR,WAAK,OAAO;AAAA,WACP;AACL,WAAK,cAAc,OAAO;AAAA;AAG5B,SAAK;AACL,SAAK;AAAA;AAAA,EAGG,kBAAkB,MAAsC;AAChE,SAAK,gBAAgB,KAAK;AAC1B,SAAK,yBAAyB,KAAK;AACnC,SAAK,mBAAmB,KAAK;AAAA;AAAA,EAGrB,gBAAgB,YAA2C;AACnE,aAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC/C,YAAM,QAAQ,WAAW;AAEzB,YAAM,UAAU,CAAC,MAAM,QAAQ,CAAC,MAAM,KAAK,SAAS,QAAQ,MAAM,SAAS;AAC3E,UAAI,SAAS;AACX;AAAA;AAGF,UAAI,cAAc;AAClB,UAAI,YAAY;AAChB,UAAI;AACJ,cAAQ,MAAM;AAAA,aACP,IAAI,SAAS,OAAO;AAAA,aACpB,IAAI,SAAS,OAAO,cAAc;AACrC,sBAAY,UAAU,MAAM;AAC5B;AAAA;AAAA,aAEG,IAAI,SAAS,OAAO,YAAY;AACnC,wBAAc;AACd,sBAAY,MAAM;AAClB,cAAI,MAAM,cAAc;AACtB,+BAAmB,KAAK,qBAAqB,KAAK,MAAM;AAAA;AAE1D;AAAA;AAAA,aAEG,IAAI,SAAS,OAAO,aAAa;AACpC,sBAAY,WAAW,MAAM;AAC7B;AAAA;AAAA;AAIJ,YAAM,oBAAoB,IAAI,mBAAmB,SAAS;AAC1D,wBAAkB,OAAO;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA;AAEF,WAAK,iBAAiB,OAAO;AAAA;AAAA;AAAA,EAIvB,yBAAyB,kBAAmE;AACpG,aAAS,IAAI,iBAAiB,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACrD,YAAM,iBAAiB,iBAAiB;AACxC,UAAI,CAAC,eAAe,MAAM;AACxB;AAAA;AAGF,UAAI;AACJ,UAAI,eAAe,cAAc;AAC/B,2BAAmB,KAAK,qBAAqB,KAAK,MAAM;AAAA;AAG1D,YAAM,wBAAwB,IAAI,mBAAmB,SAAS;AAC9D,4BAAsB,OAAO;AAAA,QAC3B,aAAa;AAAA,QACb,WAAW,eAAe;AAAA,QAC1B,WAAW,eAAe;AAAA,QAC1B;AAAA;AAEF,WAAK,iBAAiB,OAAO;AAE7B,WAAK,KAAK,8BAA8B;AAAA;AAAA;AAAA,EAIlC,mBAAmB,cAAmD;AAC9E,aAAS,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACjD,YAAM,WAAW,aAAa;AAC9B,UAAI,CAAC,SAAS,MAAM;AAClB;AAAA;AAGF,UAAI;AACJ,UAAI,SAAS,cAAc;AACzB,2BAAmB,KAAK,qBAAqB,KAAK,MAAM;AAAA;AAG1D,YAAM,kBAAkB,IAAI,mBAAmB,SAAS;AACxD,sBAAgB,OAAO;AAAA,QACrB,aAAa;AAAA,QACb,WAAW,SAAS;AAAA,QACpB;AAAA;AAEF,WAAK,iBAAiB,OAAO;AAAA;AAAA;AAAA,QAInB,8BAA8B,gBAAwE;AAClH,UAAM,YAAY,MAAM,eAAe,oBAAoB,KAAK,cAAc,OAAO;AACrF,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,UAAM,mBAAmB,IAAI,mBAAmB,eAAe;AAC/D,qBAAiB,OAAO;AAAA,MACtB,WAAW,mBAAmB,OAAO,mCAAmC,UAAU;AAAA,MAClF,WAAW,eAAe;AAAA,MAC1B,sBAAsB,CAAC,UAAgB;AACrC,cAAM;AACN,aAAK,cAAc,WAAW,oBAAoB,UAAU,eAAe,MAAM;AACjF,aAAK,UAAU,cAAc;AAAA;AAAA;AAIjC,qBAAiB,iBAAiB,wBAAwB,YAAY;AACpE,YAAM,UAAU,MAAM,UAAU;AAChC,UAAI,SAAS;AACX,yBAAiB,kCAAkC;AAAA;AAAA;AAIvD,SAAK,iBAAiB,QAAQ;AAAA;AAAA,EAGxB,kBAAwB;AAC9B,SAAK,iBAAiB;AACtB,QAAI,KAAK,cAAc,cAAc,KAAK,cAAc,sBAAsB,IAAI,QAAQ,cAAc;AACtG,WAAK,kBAAkB,KAAK,cAAc;AAAA;AAAA;AAAA,EAI9C,oBAAoB,cAA+B;AACjD,QAAI,KAAK,cAAc,YAAY,KAAK,gBAAgB;AAGtD,aAAO,CAAC,IAAI,YAAY,cAAc,oBAAoB;AAAA;AAE5D,WAAO;AAAA;AAAA,EAGT,sBAAmD;AACjD,QAAI,aAAsF;AAC1F,OAAG;AACD,mBAAa,WAAW;AAAA,aACjB,cAAc,CAAC,WAAW;AAEnC,QAAI,CAAC,YAAY;AACf,mBAAa,KAAK;AAClB,aAAO,cAAc,CAAC,WAAW,UAAU;AACzC,qBAAa,WAAW;AAAA;AAAA;AAI5B,WAAQ,cAAc,WAAW,WAAY,aAAa;AAAA;AAAA,EAG5D,0BAAuD;AACrD,QAAI,aAAsF;AAC1F,OAAG;AACD,mBAAa,WAAW;AAAA,aACjB,cAAc,CAAC,WAAW;AAEnC,QAAI,CAAC,YAAY;AACf,mBAAa,KAAK;AAClB,aAAO,cAAc,CAAC,WAAW,UAAU;AACzC,qBAAa,WAAW;AAAA;AAAA;AAI5B,WAAQ,cAAc,WAAW,WAAY,aAAa;AAAA;AAAA,EAG5D,cAAc,mBAAmD;AAC/D,SAAK,WAAW,cAAc,MAAM;AAAA;AAAA,EAGtC,mBAAmB,mBAAmD;AACpE,QAAI,QAAQ,KAAK,sBAAsB;AACvC,WAAO,OAAO;AACZ,UAAI,UAAU,qBAAqB,iBAAiB,0BAA0B;AAC5E,cAAM;AAAA;AAER,cAAQ,MAAM,wBAAwB,OAA4B,MAAuB;AAAA;AAAA;AAAA,EAI7F,OAAO,MAAqB;AAC1B,SAAK,gBAAgB,cAAc,KAAK;AACxC,SAAK;AACL,QAAI,MAAM;AACR,WAAK;AAAA,WACA;AACL,UAAI,QAAQ,KAAK,sBAAsB;AACvC,aAAO,SAAS,iBAAiB,0BAA0B;AACzD,cAAM,cAAc,KAAK,qBAAqB,MAAM;AACpD,gBACI,MAAM,wBAAwB,OAA4B,MAAuB;AAAA;AAAA;AAAA;AAAA,EAK3F,aAAa,OAAqB;AAChC,QAAI,OAAO;AACT,YAAM;AAAA;AAER,QAAI,KAAK,cAAc;AACrB;AAAA;AAEF,SAAK,eAAe;AACpB,SAAK;AAAA;AAAA,EAGP,aAAmB;AACjB,SAAK,WAAW,kBAAkB;AAClC,SAAK,6BAA6B;AAClC,SAAK,sBAAsB;AAC3B,UAAM,QAAQ,KAAK;AACnB,QAAI,QAAQ;AACZ,UAAM,aAAa,MAAM;AACzB,UAAM,gBAAgB,uBAAuB,gBAAgB,WAAW,SAAS,KAAK;AAEtF,eAAW,YAAY,YAAY;AACjC,UAAI,CAAC,KAAK,gBAAgB,SAAS,eAAe;AAChD;AAAA;AAEF;AACA,YAAM,cAAc,QAAQ,MAAM,mBAAmB,SAAS,MAAM;AACpE,YAAM,YAAY,KAAK,oBAAoB,SAAS;AACpD,YAAM,aAAa,KAAK,qBAAqB;AAC7C,UAAI,MAAM,cAAc,MAAM,WAAW,iBAAiB,WAAW;AACnE;AAAA;AAEF,YAAM,OAAO,IAAI,yBACb,KAAK,YAAY,KAAK,eAAe,UAAU,aAAa,WAAW,YAAY;AACvF,WAAK,sBAAsB,YAAY;AAAA;AAGzC,QAAI,QAAQ,WAAW,QAAQ;AAC7B,WAAK,cAAc,UAAU,OAAO;AACpC,WAAK,cAAc,cAAc,WAAW,UAAU,wBAAwB,EAAC,KAAK,WAAW,SAAS;AAAA,WACnG;AACL,WAAK,cAAc,UAAU,IAAI;AAAA;AAAA;AAAA,EAIrC,qBAAqB,UAAgD;AACnE,WAAO,KAAK,cAAc,cAAc,cAAc,IAAI,iBAAiB,cAAc;AAAA;AAAA,EAG3F,eAAwB;AACtB,QAAI,mBAAmB;AACvB,SAAK;AACL,eAAW,SAAS,KAAK,sBAAsB,cAAc,YAAY;AACvE,UAAI,iBAAiB,0BAA0B;AAC7C,cAAM,kBAAkB,MAAM;AAC9B,2BAAmB,oBAAoB;AAAA;AAAA;AAI3C,UAAM,QAAQ,KAAK,WAAW;AAC9B,UAAM,WAAW,CAAC,oBAAoB,UAAU,QAAQ,CAAC,MAAM,KAAK,KAAK,QAAQ;AACjF,SAAK,mBAAmB;AACxB,SAAK,QAAQ,UAAU,OAAO,UAAU;AACxC,QAAI,CAAC,YAAY,KAAK,cAAc,YAAY;AAC9C,WAAK;AAAA;AAEP,WAAO,CAAC;AAAA;AAAA,EAGV,WAAoB;AAClB,WAAO,KAAK;AAAA;AAAA,EAGd,sBAA4B;AAC1B,UAAM,OAAO,KAAK,cAAc;AAChC,QAAI,CAAC,QAAQ,CAAE,iBAAgB,IAAI,QAAQ,eAAe;AACxD;AAAA;AAGF,SAAK,iBAAiB,UAAU,OAAO,iBAAiB,KAAK,cAAc,aAAa,KAAK;AAE7F,UAAM,gBAAgB,KAAK,UAAU,IAAI,cAAY,SAAS;AAC9D,UAAM,0BAA0B,KAAK,cAAc,qBAAqB;AACxE,UAAM,oBAAqB,IAAI,MAAM,cAAc,QAAQ,KAAK;AAChE,eAAW,iBAAiB,yBAAyB;AACnD,wBAAkB,iBAAiB;AAAA;AAGrC,QAAI,KAAK,WAAW,gBAAgB;AAClC;AAAA;AAGF,UAAM,WAAW,KAAK,yBAAyB,KAAK,yBAAyB,eAAe,qBAC7C,KAAK,0BAA0B,eAAe;AAC7F,SAAK,gBAAgB;AACrB,SAAK,gBAAgB,YAAY;AACjC,SAAK;AAAA;AAAA,EAGC,yBAAyB,WAAqB,mBAAgD;AACpG,UAAM,WAAW,SAAS;AAC1B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,UAAI,GAAG;AACL,WAAG,QAAQ,gBAAgB,UAAU;AAAA;AAEvC,eAAS,YAAY,KAAK,sBAAsB,UAAU,IAAI,kBAAkB,IAAI;AAAA;AAEtF,WAAO;AAAA;AAAA,EAGD,sBAAsB,MAAc,YAAqB,iBAAmC;AAClG,UAAM,UAAU,SAAS,cAAc;AACvC,YAAQ,UAAU,IAAI;AACtB,YAAQ,UAAU,OAAO,oBAAoB;AAC7C,QAAI,OAAO,oBAAoB,UAAU;AACvC,WAAK,uBAAuB,IAAI,SAAS;AAAA;AAE3C,YAAQ,cAAc;AACtB,WAAO;AAAA;AAAA,EAGD,0BAA0B,WAAqB,mBAAgD;AACrG,UAAM,WAAW,SAAS;AAC1B,QAAI,kBAAkB;AACtB,QAAI,OAAO;AACX,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,UAAI,oBAAoB,kBAAkB,MAAM,MAAM;AACpD,iBAAS,YAAY,KAAK,sBAAsB,MAAM;AACtD,eAAO;AAAA;AAET,wBAAkB,kBAAkB;AACpC,cAAQ,UAAU,KAAM,OAAM,UAAU,SAAS,IAAI,KAAK;AAAA;AAE5D,QAAI,MAAM;AACR,eAAS,YAAY,KAAK,sBAAsB,MAAM;AAAA;AAExD,WAAO;AAAA;AAAA,EAGT,yBAA+B;AAC7B,UAAM,YAAY,KAAK,gBAAgB,uBAAuB;AAC9D,UAAM,QAAQ,KAAK,WAAW;AAC9B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,EAAE,GAAG;AACzC,YAAM,wBAAwB,UAAU,QAAQ,MAAM,KAAK,UAAU,GAAG,eAAe;AACvF,gBAAU,GAAG,UAAU,OAAO,gBAAgB;AAAA;AAAA;AAAA,EAI1C,yBAAkC;AACxC,UAAM,yBAAyB,KAAK;AACpC,SAAK,yBAAyB;AAC9B,WAAO;AAAA;AAAA,EAGD,6BAA6B,OAAoB;AACvD,QAAI,KAAK,4BAA4B,CAAC,KAAK,UAAU;AACnD;AAAA;AAEF,QAAI,MAAM,WAAW,KAAK,mBAAmB;AAC3C,WAAK,oBAAoB,GAAG;AAC5B,YAAM,QAAQ;AAAA;AAAA;AAAA,EAIlB,oBAAoB,QAA0B,KAAK,sBAAsB,cAAc,cAC1D;AAC3B,UAAM,WAAW,KAAK,cAAc,iBAAiB;AACrD,UAAM,OAAO,IAAI,yBAAyB,KAAK,YAAY,KAAK,eAAe,UAAU,OAAO,OAAO,OAAO;AAC9G,SAAK,sBAAsB,YAAY,MAAM,SAAS;AACtD,WAAO;AAAA;AAAA,EAGD,4BAAkC;AACxC,SAAK,yBAAyB,KAAK,WAAW;AAC9C,SAAK,yBAAyB;AAAA;AAAA,EAGxB,sBAAsB,OAAoB;AAChD,QAAI,CAAC,KAAK,YAAY,KAAK,QAAQ,kBAAkB,KAAK,4BAA4B,KAAK,wBAAwB;AACjH;AAAA;AAGF,UAAM,SAAU,MAAM;AAEtB,QAAI,OAAO,UAAU,SAAS,aAAa,KAAK,QAAQ,UAAU,SAAS,gBACvE,OAAO,6BAA6B,UAAU;AAChD,YAAM;AACN;AAAA;AAEF,UAAM,aAAa,GAAG,QAAQ,qBAAqB;AACnD,UAAM,cAAc,cAAc,GAAG,YAAY,YAAY,6BAA6B;AAC1F,QAAI,eAAe,uBAAuB,0BAA0B;AAClE,WAAK,oBAAoB,YAAY,SAAS,QAAQ,GAAG;AAAA,WACpD;AACL,WAAK,sBAAsB;AAAA;AAE7B,UAAM,QAAQ;AAAA;AAAA,EAGR,qBAAqB,OAA8B,OAAoB;AAC7E,UAAM,UAAU,MAAM;AACtB,QAAI,GAAG,QAAQ,cAAc,UAAU;AACrC;AAAA;AAGF,QAAI,GAAG,iBAAiB,iBAAiB,0BAA0B,UAAwB,KAAK,WAAW;AACzG,YAAM,WAAW,MAAM;AACvB,UAAI,CAAC,UAAU;AACb,cAAM,QAAQ;AACd;AAAA;AAEF,YAAM,aAAa,SAAS,oBAAoB,oBAAoB,WAAW,wBAAwB;AACvG,UAAI,YAAY;AACd,aAAK,OAAO,SAAS,OAAO;AAAA;AAE9B,YAAM,QAAQ;AACd;AAAA;AAGF,QAAI,CAAC,KAAK,UAAU;AAClB;AAAA;AAGF,UAAM,SAAS,IAAI,GAAG,cAAc,OAChC,KAAK,sBAAsB,KAAK,MAAM,QAAQ,KAAK,sBAAsB,KAAK,MAAM,UAAU,QAC9F,KAAK,wBAAwB,KAAK;AACtC,OAAG,cAAc,cAAc,aAAa,SAAS;AAErD,UAAM,YAAY,QAAQ;AAC1B,QAAI,WAAW;AACb,gBAAU,kBAAkB;AAAA;AAE9B,SAAK,WAAW,gBAAgB;AAChC,UAAM,qBAAqB,QAAQ,6BAA6B;AAChE,uBAAmB,UAAU,IAAI;AAEjC,UAAM,QAAQ;AAAA;AAAA,EAGR,qBAAqB,SAAwB;AACnD,SAAK,WAAW,gBAAgB;AAChC,UAAM,qBAAqB,QAAQ,6BAA6B;AAChE,uBAAmB,UAAU,OAAO;AAAA;AAAA,EAG9B,sBAAsB,SAAwB;AACpD,SAAK,qBAAqB;AAG1B,SAAK;AACL,UAAM,YAAY,QAAQ;AAC1B,QAAI,WAAW;AACb,gBAAU,SAAS,SAAS;AAAA;AAAA;AAAA,EAIxB,0BAAmC;AACzC,WAAO;AAAA;AAAA,QAGK,sBACV,OAA8B,SAAkB,YAAoB,aACpE,UAA6B,gBAAuC;AACtE,SAAK,WAAW,gBAAgB;AAChC,SAAK,qBAAqB;AAE1B,QAAI,YAAY;AACd,mBAAa,WAAW;AAAA;AAI1B,SAAK,WAAW,iBAAiB;AACjC,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI,YAAY,MAAM,cAAc;AAClC,YAAM,QAAQ,MAAM;AACpB,UAAI,UAAU;AACd,UAAI,iBAAiB,IAAI,kBAAkB,mBAAmB;AAC5D,kBAAU,MAAM,SAAS,sBAAsB,MAAM,cAAc,OAAO;AAAA,iBACjE,iBAAiB,IAAI,YAAY,aAAa;AACvD,kBAAU,MAAM,SAAS,gBAAgB,MAAM,cAAc,OAAO;AAAA,aAC/D;AACL,kBAAU,MAAM,SAAS,aAAa,MAAM,cAAc,OAAO;AAAA;AAGnE,UAAI,SAAS;AACX,aAAK,cAAc;AACnB,aAAK,WAAW,cAAc;AAAA;AAEhC,WAAK,WAAW,iBAAiB;AACjC,WAAK;AAAA;AAAA;AAAA,EAID,mCAAyC;AAAA;AAAA,EAGzC,oBAAoB,OAAoB;AAC9C,UAAM,SAAU,MAAM;AACtB,QAAI,CAAC,QAAQ;AACX;AAAA;AAEF,QAAI,GAAG,iBAAiB,iBAAiB,0BAA2B,UAAyB,KAAK,aAC9F,OAAO,UAAU,SAAS,oBAAoB;AAChD,YAAM,gBAAgB,KAAK,uBAAuB,IAAI;AACtD,UAAI,eAAe;AACjB,aAAK,yBAAyB,eAAe;AAAA;AAE/C,YAAM,QAAQ;AACd;AAAA;AAEF,QAAI,KAAK,QAAQ,gBAAgB;AAC/B;AAAA;AAEF,SAAK;AACL,UAAM,QAAQ;AAAA;AAAA,EAGR,uBAAuB,OAAoB;AACjD,UAAM,SAAU,MAAM;AACtB,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,UAAM,cAAc,IAAI,GAAG,YAAY,YAAY;AACnD,gBAAY,mBAAmB,WAAW,WAAW,UAAU,eAAe,MAAM;AAClF,YAAM,eAAe,KAAK;AAC1B,WAAK,sBAAsB,8BAA8B,SAAS;AAClE,WAAK,YAAY,gBAAgB,KAAK,YAAY,gBAAgB;AAAA;AAGpE,gBAAY,mBAAmB,WAAW,WAAW,UAAU,WAAW,MAAM;AAC9E,YAAM,WAAW,kBAAkB,wBAAwB,MAAM;AACjE,WAAK,sBAAsB,8BAA8B,SAAS;AAClE,WAAK,YAAY,gBAAgB,KAAK,YAAY,gBAAgB;AAAA;AAGpE,gBAAY,mBAAmB,WAAW,WAAW,UAAU,sBAAsB,MAAM;AACzF,YAAM,qBAAqB,kBAAkB,wBAAwB,MAAM;AAC3E,WAAK,sBAAsB,8BAA8B,SAAS;AAClE,WAAK,YAAY,gBAAgB,KAAK,YAAY,gBAAgB;AAAA;AAIpE,gBAAY,mBAAmB,WAAW,WAAW,UAAU,oBAAoB,YAAY;AAC7F,YAAM,aAAa,MAAM,KAAK,WAAW;AACzC,WAAK,sBAAsB,8BAA8B,SAAS;AAClE,WAAK,YAAY,gBAAgB,KAAK,YAAY,gBAAgB;AAAA;AAEpE,SAAK,YAAY;AAAA;AAAA,EAGX,yBAAyB,OAAe,OAAsB;AACpE,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI,CAAC,UAAU;AACb;AAAA;AAEF,UAAM,OAAQ,KAAK,cAAc;AACjC,QAAI,CAAC,QAAQ,KAAK,iBAAiB,QAAW;AAC5C;AAAA;AAEF,UAAM,SAAS,SAAS,sBAAsB,KAAK;AACnD,QAAI,CAAC,QAAQ;AACX;AAAA;AAEF,UAAM,cACF,IAAI,IAAI,SAAS,YAAY,QAAQ,KAAK,mBAAmB,QAAQ,KAAK,qBAAqB;AACnG,2BAAuB,qBAAqB,aAAa;AAAA;AAAA,SAG5C,qBAAqB,aAAuC,OAAsB;AAC/F,UAAM,aAAa,SAAS,oBAAoB,oBAAoB,WAAW,wBAAwB;AACvG,QAAI,YAAY;AACd,WAAK,OAAO,SAAS,OAAO,YAAY,CAAC;AAAA;AAAA;AAAA,EAIrC,8BAAoC;AAC1C,QAAI,CAAC,KAAK,UAAU;AAClB;AAAA;AAGF,QAAI,CAAC,KAAK,cAAc,YAAY;AAClC,WAAK,uBAAuB;AAC5B;AAAA;AAGF,SAAK;AAAA;AAAA,EAGP,uBAA6B;AAC3B,UAAM,UAAU,KAAK;AACrB,QAAI,GAAG,QAAQ,cAAc,UAAU;AACrC;AAAA;AAGF,YAAQ,uBAAuB;AAE/B,UAAM,cAAc,QAAQ;AAC5B,QAAI,gBAAgB,MAAM;AACxB,cAAQ,cAAc,YAAY,QAAQ,QAAQ,KAAK;AAAA;AAGzD,UAAM,SACF,IAAI,GAAG,cAAc,OAAO,KAAK,yBAAyB,KAAK,OAAO,KAAK,yBAAyB,KAAK;AAC7G,OAAG,cAAc,cAAc,aAAa,KAAK,iBAAiB;AAElE,UAAM,YAAY,QAAQ;AAC1B,QAAI,WAAW;AACb,gBAAU,kBAAkB;AAAA;AAE9B,SAAK,WAAW,gBAAgB;AAChC,QAAI,QAAQ,UAAU,SAAS,oBAAoB;AACjD,WAAK,yBAAyB,GAAG;AAAA;AAAA;AAAA,EAIrC,uBAAuB,eAA6B;AAClD,SAAK;AAEL,QAAI,CAAC,eAAe;AAClB;AAAA;AAGF,QAAI,kBAAkB,WAAW;AAC/B,YAAM,aAAc,KAAK,sBAAsB;AAC/C,UAAI,eAAyE;AAC7E,aAAO,gBAAgB,aAAa,aAAa;AAC/C,cAAM,UAA2C,aAAa;AAC9D,uBAAe,mBAAmB,2BAA2B,UAAU;AAAA;AAEzE,UAAI,CAAC,cAAc;AACjB,aAAK,sBAAsB;AAAA,aACtB;AACL,qBAAa,aAAa,aAAa;AAAA;AAAA,WAEpC;AACL,YAAM,kBAAkB,KAAK;AAC7B,UAAI,CAAC,iBAAiB;AACpB;AAAA;AAGF,sBAAgB,sBAAsB;AAAA;AAAA;AAAA,EAI1C,yBACI,SAAkB,YAAoB,YAAoB,SAC1D,eAA6B;AAC/B,SAAK;AACL,QAAI,YAAY;AACd,mBAAa,WAAW;AAAA;AAE1B,QAAI,eAAe,YAAY;AAE7B,WAAK,gBAAgB,cAAc;AACnC,WAAK,uBAAuB;AAC5B;AAAA;AAEF,UAAM,OAAO,KAAK,cAAc;AAChC,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,mCAAiE;AAC/D,WAAK,WAAW,iBAAiB;AACjC,WAAK,uBAAuB;AAC5B,WAAK;AAAA;AAIP,SAAK,WAAW,iBAAiB;AACjC,SAAK,KAAK,cAAc,MAAM,YAAY,KAAK,oBAAoB,KAAK;AAAA;AAAA,EAG1E,cAAc,MAA2B,YAAmC;AAC1E,gCACkC,OAAgC,SAAiC;AACjG,UAAI,CAAC,SAAS;AACZ,eAAO,QAAQ;AAAA;AAEjB,aAAO,KAAK,cAAc,2BAA2B,OAAM,KAAK,mBAAmB,KAAK,MAAM;AAAA;AAGhG,gCAA0D,OAAsC;AAC9F,YAAM,yBAAyB,KAAK,cAAc,qBAAqB,OAAM,SAAS;AACtF,WAAK,sBAAsB,QAAQ,UAAU,OAAO,aAAa,CAAC;AAClE,WAAK,cAAc;AACnB,WAAK,WAAW,cAAc;AAAA;AAGhC,QAAI,CAAE,iBAAgB,IAAI,QAAQ,eAAe;AAC/C,aAAO,QAAQ;AAAA;AAEjB,UAAM,mBAAmB,KAAK;AAC9B,QAAI,CAAC,kBAAkB;AACrB,aAAO,QAAQ;AAAA;AAEjB,WAAO,KAAK,gBAAgB,YAAY,KAAK,mBAAmB,KAAK,MAAM,MAAM,QAAQ;AAAA;AAAA,EAGjF,kCAAwC;AAAA;AAAA,EAGxC,mBAAyB;AACjC,SAAK,mBAAmB;AACxB,SAAK,mBAAmB,YAAY,uBAAuB,qBACvD,KAAK,eAAe,KAAK,WAAW,WAAW,KAAK,cAAc;AAAA;AAAA,EAG9D,uBAA6B;AACrC,SAAK,WAAW,gBAAgB;AAAA;AAAA,EAGlC,2BAAiC;AAC/B,SAAK;AAIL,SAAK;AAAA;AAAA,EASP,0BAA0B,eAAwD;AAChF,UAAM,cAAc,KAAK,sBAAsB;AAC/C,QAAI,iBAAiB,YAAY,cAAc;AAC7C,aAAO,YAAY;AAAA;AAErB,WAAO,YAAY,QAAQ;AAAA;AAAA,SAKtB,gBAAgB;AAAA;AAGlB,iDAA0C,uBAAuB;AAAA,EAC9D;AAAA,EACS;AAAA,EACA;AAAA,EAEjB,YACI,YAA+B,eAAsD,qBACrF,cAAyC,cACzC,kBAA+D,YAAoB;AACrF,UAAM,WAAY,WAAW;AAC7B,UAAM,OAAO,IAAI,QAAQ,aAAa,gBAAgB,UAAU;AAChE,UAAM,YAAY,eAAe,KAAK,OAAO;AAC7C,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,mBAAmB;AACxB,SAAK,mBAAmB,YAAY,uBAAuB,oBACvD,UAAU,KAAK,WAAW,WAAW,cAAc,KAAK;AAC5D,QAAI,oBAAoB,iBAAiB,cACrC,iBAAiB,sBAAsB,IAAI,QAAQ,cAAc;AACnE,WAAK,kBAAkB,iBAAiB;AAAA;AAE1C,SAAK,QAAQ,UAAU,IAAI;AAAA;AAAA,EAGrB,qBAAoD;AAC1D,UAAM,SAAS,KAAK;AACpB,UAAM,QAAQ,OAAO,MAAM;AAC3B,UAAM,WAAW,MAAM,MAAM,SAAS;AACtC,UAAM,YAAY,IAAI,UAAU,UAAU,UAAU,GAAG,GAAG,MAAM,SAAS,GAAG,WAAW,SAAS,SAAS;AACzG,WAAO,KAAK,aAAa,oBAAoB,UAAU,UAAU,UAAU,mBAAmB,GAAG,IAAI;AAAA;AAAA,EAG/F,aAAqB;AAC3B,WAAO,KAAK,aAAa,cAAc,KAAK,KAAK,aAAa,gBAAgB,IAAI,KAAK;AAAA;AAAA,MAGrF,UAAmB;AACrB,WAAO,CAAC,KAAK;AAAA;AAAA,EAGf,yBACI,SAAkB,YAAoB,YAAoB,SAC1D,eAA6B;AAC/B,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,yBAAyB,SAAS,YAAY,YAAY,SAAS;AACzE;AAAA;AAGF,yBAAwD,SAAuD;AAC7G,UAAI,CAAC,SAAS;AACZ,aAAK;AACL,aAAK;AACL,eAAO,QAAQ;AAAA;AAEjB,aAAO,KAAK,cAAc,WAAW,SAAS,KAAK,cAAc,QAC5D,KAAK,iBAAiB,KAAK,MAAM;AAAA;AAGxC,8BAA6D,SAAyC;AACpG,YAAM,iCAAiC,KAAK,cAAc,qBAAqB,SAAS,SAAS;AACjG,WAAK,WAAW;AAEhB,UAAI,CAAC,gCAAgC;AACnC,aAAK,sBAAsB,QAAQ,UAAU,IAAI;AAAA;AAGnD,WAAK;AAEL,WAAK,WAAW,iBAAiB;AACjC,WAAK;AACL,UAAI,KAAK,QAAQ,eACjB;AACE,aAAK,uBAAuB;AAAA;AAE9B,WAAK;AAEL,WAAK;AAAA;AAGP,QAAI,YAAY;AACd,mBAAa,WAAW;AAAA;AAE1B,SAAK,WAAW,iBAAiB;AAEjC,UAAM,WAAW,KAAK,WAAW;AACjC,UAAM,WAAW,KAAK,eAAe,aAAa;AAClD,QAAI,UAAU;AACZ,WAAK,SAAS,QAAQ,KAAK,cAAc,UAAU,KAAK,cAAc,KAAK,YAAY,KAAK;AAAA;AAAA;AAAA,EAIhG,2BAAiC;AAC/B,SAAK,WAAW,iBAAiB;AACjC,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM;AACN;AAAA;AAGF,SAAK;AACL,SAAK,WAAW,cAAc;AAAA;AAAA,EAGxB,WAAW,SAAoC;AACrD,SAAK,QAAQ,UAAU,OAAO;AAC9B,SAAK,gBAAgB,QAAQ;AAE7B,SAAK,SAAS;AAAA;AAAA;AAIX,+CAAwC,uBAAuB;AAAA,EACpE,YACI,YAA+B,eAC/B,OAAoD,YAAoB;AAC1E,UAAM,YAAY,eAAe,OAAO;AACxC,SAAK,gBAAgB,YAAY;AAAA;AAAA,EAGnC,aAAqB;AACnB,QAAI,KAAK,cAAc,sBAAsB,IAAI,QAAQ,iBAAiB;AACxE,aAAO,KAAK,cAAc,WAAW,MAAM;AAAA;AAE7C,WAAO;AAAA;AAAA,EAGT,cAAc,MAA2B,YAAmC;AAC1E,gCAA6D,SAAwB;AACnF,UAAI,CAAC,SAAS;AACZ;AAAA;AAEF,WAAK,WAAW,cAAc;AAAA;AAGhC,QAAI,CAAE,iBAAgB,IAAI,QAAQ,kBAAkB;AAClD,aAAO,QAAQ;AAAA;AAEjB,UAAM,WAAW,KAAK,MAAM;AAC5B,QAAI,CAAC,UAAU;AACb,aAAO,QAAQ;AAAA;AAEjB,WAAO,KAAK,WAAW,YAAY,KAAK,mBAAmB,KAAK;AAAA;AAAA,EAGlE,oBAAoB,eAAgC;AAClD,WAAO;AAAA;AAAA,EAGT,qBAAqB,WAAiD;AACpE,WAAO;AAAA;AAAA,EAGT,yBAA+B;AAAA;AAAA,EAG/B,sBAA4B;AAC1B,QAAI,KAAK,cAAc,sBAAsB,IAAI,QAAQ,iBAAiB;AACxE,WAAK,gBAAgB,cAAc,KAAK,cAAc,WAAW,MAAM;AAAA;AAAA;AAAA,EAI3E,YAAkB;AAAA;AAAA;AAIb,2DAAoD,uBAAuB;AAAA,EAChF,oBAAoB,eAAgC;AAKlD,WAAO;AAAA;AAAA;",
  "names": []
}
