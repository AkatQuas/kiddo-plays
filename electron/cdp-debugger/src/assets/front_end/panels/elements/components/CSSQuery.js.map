{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/elements/components/CSSQuery.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport cssQueryStyles from './cssQuery.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface CSSQueryData {\n  queryPrefix: string;\n  queryName?: string;\n  queryText: string;\n  onQueryTextClick?: (event: Event) => void;\n}\n\nexport class CSSQuery extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-css-query`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #queryPrefix: string = '';\n  #queryName?: string;\n  #queryText: string = '';\n  #onQueryTextClick?: (event: Event) => void;\n\n  set data(data: CSSQueryData) {\n    this.#queryPrefix = data.queryPrefix;\n    this.#queryName = data.queryName;\n    this.#queryText = data.queryText;\n    this.#onQueryTextClick = data.onQueryTextClick;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [\n      cssQueryStyles,\n      inspectorCommonStyles,\n    ];\n  }\n\n  #render(): void {\n    const queryClasses = LitHtml.Directives.classMap({\n      query: true,\n      editable: Boolean(this.#onQueryTextClick),\n    });\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const queryText = html`\n      <span class=\"query-text\" @click=${this.#onQueryTextClick}>${this.#queryText}</span>\n    `;\n\n    render(html`\n      <div class=${queryClasses}>\n        ${this.#queryPrefix ? html`<span>${this.#queryPrefix + ' '}</span>` : LitHtml.nothing}${this.#queryName ? html`<span>${this.#queryName + ' '}</span>` : LitHtml.nothing}${queryText}\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-css-query', CSSQuery);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-css-query': CSSQuery;\n  }\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AAEA;AAEA,MAAM,EAAC,QAAQ,SAAQ;AAShB,8BAAuB,YAAY;AAAA,SACxB,aAAa,QAAQ;AAAA,YAElB,KAAK,aAAa,EAAC,MAAM;AAAA,iBACrB;AAAA;AAAA,eAEF;AAAA;AAAA,MAGjB,KAAK,MAAoB;AAC3B,wBAAoB,KAAK;AACzB,sBAAkB,KAAK;AACvB,sBAAkB,KAAK;AACvB,6BAAyB,KAAK;AAC9B;AAAA;AAAA,EAGF,oBAA0B;AACxB,iBAAa,qBAAqB;AAAA,MAChC;AAAA,MACA;AAAA;AAAA;AAAA,YAIY;AACd,UAAM,eAAe,QAAQ,WAAW,SAAS;AAAA,MAC/C,OAAO;AAAA,MACP,UAAU,QAAQ;AAAA;AAKpB,UAAM,YAAY;AAAA,wCACkB,0BAA0B;AAAA;AAG9D,WAAO;AAAA,mBACQ;AAAA,UACT,oBAAoB,aAAa,oBAAoB,eAAe,QAAQ,UAAU,kBAAkB,aAAa,kBAAkB,eAAe,QAAQ,UAAU;AAAA;AAAA,OAE3K,cAAc;AAAA,MACf,MAAM;AAAA;AAAA;AAAA;AAMZ,iBAAiB,eAAe,gBAAgB,sBAAsB;",
  "names": []
}
