{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/elements/components/AccessibilityTreeNode.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Protocol from '../../../generated/protocol.js';\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport accessibilityTreeNodeStyles from './accessibilityTreeNode.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Ignored node element text content in Accessibility Tree View of the Elements panel\n  */\n  ignored: 'Ignored',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/AccessibilityTreeNode.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n// TODO(jobay) move this to Platform.StringUtilities if still needed.\n// This function is a variant of setTextContentTruncatedIfNeeded found in DOMExtension.\nfunction truncateTextIfNeeded(text: string): string {\n  const maxTextContentLength = 10000;\n\n  if (text.length > maxTextContentLength) {\n    return Platform.StringUtilities.trimMiddle(text, maxTextContentLength);\n  }\n  return text;\n}\n\nfunction isPrintable(valueType: Protocol.Accessibility.AXValueType): boolean {\n  switch (valueType) {\n    case Protocol.Accessibility.AXValueType.Boolean:\n    case Protocol.Accessibility.AXValueType.BooleanOrUndefined:\n    case Protocol.Accessibility.AXValueType.String:\n    case Protocol.Accessibility.AXValueType.Number:\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport interface AccessibilityTreeNodeData {\n  ignored: boolean;\n  name: string;\n  role: string;\n  properties: Protocol.Accessibility.AXProperty[];\n}\n\nexport class AccessibilityTreeNode extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-accessibility-tree-node`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #ignored = true;\n  #name = '';\n  #role = '';\n  #properties: Protocol.Accessibility.AXProperty[] = [];\n\n  set data(data: AccessibilityTreeNodeData) {\n    this.#ignored = data.ignored;\n    this.#name = data.name;\n    this.#role = data.role;\n    this.#properties = data.properties;\n    void this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [accessibilityTreeNodeStyles];\n  }\n\n  async #render(): Promise<void> {\n    const role = LitHtml.html`<span class='role-value'>${truncateTextIfNeeded(this.#role)}</span>`;\n    const name = LitHtml.html`\"<span class='attribute-value'>${this.#name}</span>\"`;\n    const properties = this.#properties.map(\n        ({name, value}) => isPrintable(value.type) ?\n            LitHtml.html`&nbsp<span class='attribute-name'>${name}</span>:&nbsp<span class='attribute-value'>${\n                value.value}</span>` :\n            LitHtml.nothing);\n\n    await Coordinator.RenderCoordinator.RenderCoordinator.instance().write('Accessibility node render', () => {\n      // clang-format off\n      LitHtml.render(\n        this.#ignored ?\n          LitHtml.html`<span>${i18nString(UIStrings.ignored)}</span>` :\n          LitHtml.html`${role}&nbsp${name}${properties}`,\n        this.#shadow,\n        {host: this});\n      // clang-format on\n    });\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-accessibility-tree-node', AccessibilityTreeNode);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-accessibility-tree-node': AccessibilityTreeNode;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,SAAS;AAAA;AAEX,MAAM,OAAO,KAAK,KAAK,kBAAkB,uDAAuD;AAChG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAIhE,8BAA8B,MAAsB;AAClD,QAAM,uBAAuB;AAE7B,MAAI,KAAK,SAAS,sBAAsB;AACtC,WAAO,SAAS,gBAAgB,WAAW,MAAM;AAAA;AAEnD,SAAO;AAAA;AAGT,qBAAqB,WAAwD;AAC3E,UAAQ;AAAA,SACD,SAAS,cAAc,YAAY;AAAA,SACnC,SAAS,cAAc,YAAY;AAAA,SACnC,SAAS,cAAc,YAAY;AAAA,SACnC,SAAS,cAAc,YAAY;AACtC,aAAO;AAAA;AAEP,aAAO;AAAA;AAAA;AAWN,2CAAoC,YAAY;AAAA,SACrC,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,aAEjC;AAAA,UACH;AAAA,UACA;AAAA,gBAC2C;AAAA,MAE/C,KAAK,MAAiC;AACxC,oBAAgB,KAAK;AACrB,iBAAa,KAAK;AAClB,iBAAa,KAAK;AAClB,uBAAmB,KAAK;AACxB,SAAK;AAAA;AAAA,EAGP,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,kBAGN;AAC7B,UAAM,OAAO,QAAQ,gCAAgC,qBAAqB;AAC1E,UAAM,OAAO,QAAQ,sCAAsC;AAC3D,UAAM,aAAa,iBAAiB,IAChC,CAAC,EAAC,aAAM,YAAW,YAAY,MAAM,QACjC,QAAQ,yCAAyC,mDAC7C,MAAM,iBACV,QAAQ;AAEhB,UAAM,YAAY,kBAAkB,kBAAkB,WAAW,MAAM,6BAA6B,MAAM;AAExG,cAAQ,OACN,gBACE,QAAQ,aAAa,WAAW,UAAU,oBAC1C,QAAQ,OAAO,YAAY,OAAO,cACpC,cACA,EAAC,MAAM;AAAA;AAAA;AAAA;AAMf,iBAAiB,eAAe,gBAAgB,oCAAoC;",
  "names": []
}
