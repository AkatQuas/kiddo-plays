{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/elements/components/ElementsPanelLink.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport elementsPanelLinkStyles from './elementsPanelLink.css.js';\n\nexport interface ElementsPanelLinkData {\n  onElementRevealIconClick: (event?: Event) => void;\n  onElementRevealIconMouseEnter: (event?: Event) => void;\n  onElementRevealIconMouseLeave: (event?: Event) => void;\n}\nexport class ElementsPanelLink extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-elements-panel-link`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #onElementRevealIconClick: ((event?: Event) => void) = () => {};\n  #onElementRevealIconMouseEnter: ((event?: Event) => void) = () => {};\n  #onElementRevealIconMouseLeave: ((event?: Event) => void) = () => {};\n\n  set data(data: ElementsPanelLinkData) {\n    this.#onElementRevealIconClick = data.onElementRevealIconClick;\n    this.#onElementRevealIconMouseEnter = data.onElementRevealIconMouseEnter;\n    this.#onElementRevealIconMouseLeave = data.onElementRevealIconMouseLeave;\n    this.#update();\n  }\n\n  #update(): void {\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [elementsPanelLinkStyles];\n  }\n\n  #render(): void {\n    // clang-format off\n      LitHtml.render(LitHtml.html`\n      <span\n        class=\"element-reveal-icon\"\n        @click=${this.#onElementRevealIconClick}\n        @mouseenter=${this.#onElementRevealIconMouseEnter}\n        @mouseleave=${this.#onElementRevealIconMouseLeave}></span>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-elements-panel-link', ElementsPanelLink);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-elements-panel-link': ElementsPanelLink;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAOO,uCAAgC,YAAY;AAAA,SACjC,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,8BAEW,MAAM;AAAA;AAAA,mCACD,MAAM;AAAA;AAAA,mCACN,MAAM;AAAA;AAAA,MAE9D,KAAK,MAA6B;AACpC,qCAAiC,KAAK;AACtC,0CAAsC,KAAK;AAC3C,0CAAsC,KAAK;AAC3C;AAAA;AAAA,YAGc;AACd;AAAA;AAAA,EAGF,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,YAGrB;AAEZ,YAAQ,OAAO,QAAQ;AAAA;AAAA;AAAA,iBAGZ;AAAA,sBACK;AAAA,sBACA;AAAA,SACb,cAAc,EAAC,MAAM;AAAA;AAAA;AAK9B,iBAAiB,eAAe,gBAAgB,gCAAgC;",
  "names": []
}
