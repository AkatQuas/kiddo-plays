{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/elements/components/StylePropertyEditor.ts"],
  "sourcesContent": ["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport stylePropertyEditorStyles from './stylePropertyEditor.css.js';\n\nimport type {IconInfo} from './CSSPropertyIconResolver.js';\nimport {findFlexContainerIcon, findGridContainerIcon} from './CSSPropertyIconResolver.js';\n\nconst UIStrings = {\n  /**\n    * @description Title of the button that selects a flex property.\n    * @example {flex-direction} propertyName\n    * @example {column} propertyValue\n    */\n  selectButton: 'Add {propertyName}: {propertyValue}',\n  /**\n    * @description Title of the button that deselects a flex property.\n    * @example {flex-direction} propertyName\n    * @example {row} propertyValue\n    */\n  deselectButton: 'Remove {propertyName}: {propertyValue}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/StylePropertyEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html, Directives} = LitHtml;\n\ndeclare global {\n  interface HTMLElementEventMap {\n    'propertyselected': PropertySelectedEvent;\n    'propertydeselected': PropertyDeselectedEvent;\n  }\n}\n\ninterface FlexEditorData {\n  authoredProperties: Map<string, string>;\n  computedProperties: Map<string, string>;\n}\n\ninterface EditableProperty {\n  propertyName: string;\n  propertyValues: string[];\n}\n\nexport class PropertySelectedEvent extends Event {\n  static readonly eventName = 'propertyselected';\n  data: {name: string, value: string};\n\n  constructor(name: string, value: string) {\n    super(PropertySelectedEvent.eventName, {});\n    this.data = {name, value};\n  }\n}\n\nexport class PropertyDeselectedEvent extends Event {\n  static readonly eventName = 'propertydeselected';\n  data: {name: string, value: string};\n\n  constructor(name: string, value: string) {\n    super(PropertyDeselectedEvent.eventName, {});\n    this.data = {name, value};\n  }\n}\n\n// eslint-disable-next-line rulesdir/check_component_naming\nexport class StylePropertyEditor extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #authoredProperties: Map<string, string> = new Map();\n  #computedProperties: Map<string, string> = new Map();\n  protected readonly editableProperties: EditableProperty[] = [];\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [stylePropertyEditorStyles];\n  }\n\n  getEditableProperties(): EditableProperty[] {\n    return this.editableProperties;\n  }\n\n  set data(data: FlexEditorData) {\n    this.#authoredProperties = data.authoredProperties;\n    this.#computedProperties = data.computedProperties;\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"container\">\n        ${this.editableProperties.map(prop => this.#renderProperty(prop))}\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n\n  #renderProperty(prop: EditableProperty): LitHtml.TemplateResult {\n    const authoredValue = this.#authoredProperties.get(prop.propertyName);\n    const notAuthored = !authoredValue;\n    const shownValue = authoredValue || this.#computedProperties.get(prop.propertyName);\n    const classes = Directives.classMap({\n      'property-value': true,\n      'not-authored': notAuthored,\n    });\n    return html`<div class=\"row\">\n      <div class=\"property\">\n        <span class=\"property-name\">${prop.propertyName}</span>: <span class=${classes}>${shownValue}</span>\n      </div>\n      <div class=\"buttons\">\n        ${prop.propertyValues.map(value => this.#renderButton(value, prop.propertyName, value === authoredValue))}\n      </div>\n    </div>`;\n  }\n\n  #renderButton(propertyValue: string, propertyName: string, selected: boolean = false): LitHtml.TemplateResult {\n    const query = `${propertyName}: ${propertyValue}`;\n    const iconInfo = this.findIcon(query, this.#computedProperties);\n    if (!iconInfo) {\n      throw new Error(`Icon for ${query} is not found`);\n    }\n    const transform = `transform: rotate(${iconInfo.rotate}deg) scale(${iconInfo.scaleX}, ${iconInfo.scaleY})`;\n    const classes = Directives.classMap({\n      'button': true,\n      'selected': selected,\n    });\n    const values = {propertyName, propertyValue};\n    const title = selected ? i18nString(UIStrings.deselectButton, values) : i18nString(UIStrings.selectButton, values);\n    return html`<button title=${title} class=${classes} @click=${\n        (): void => this.#onButtonClick(propertyName, propertyValue, selected)}>\n       <${IconButton.Icon.Icon.litTagName} style=${transform} .data=${\n        {iconName: iconInfo.iconName, color: 'var(--icon-color)', width: '18px', height: '18px'} as\n        IconButton.Icon.IconWithName}></${IconButton.Icon.Icon.litTagName}>\n    </button>`;\n  }\n\n  #onButtonClick(propertyName: string, propertyValue: string, selected: boolean): void {\n    if (selected) {\n      this.dispatchEvent(new PropertyDeselectedEvent(propertyName, propertyValue));\n    } else {\n      this.dispatchEvent(new PropertySelectedEvent(propertyName, propertyValue));\n    }\n  }\n\n  protected findIcon(_query: string, _computedProperties: Map<string, string>): IconInfo|null {\n    throw new Error('Not implemented');\n  }\n}\n\nexport class FlexboxEditor extends StylePropertyEditor {\n  protected readonly editableProperties: EditableProperty[] = FlexboxEditableProperties;\n\n  protected findIcon(query: string, computedProperties: Map<string, string>): IconInfo|null {\n    return findFlexContainerIcon(query, computedProperties);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-flexbox-editor', FlexboxEditor);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-flexbox-editor': FlexboxEditor;\n  }\n}\n\nexport class GridEditor extends StylePropertyEditor {\n  protected readonly editableProperties: EditableProperty[] = GridEditableProperties;\n\n  protected findIcon(query: string, computedProperties: Map<string, string>): IconInfo|null {\n    return findGridContainerIcon(query, computedProperties);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-grid-editor', GridEditor);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-grid-editor': GridEditor;\n  }\n}\n\nexport const FlexboxEditableProperties = [\n  {\n    propertyName: 'flex-direction',\n    propertyValues: [\n      'row',\n      'column',\n      'row-reverse',\n      'column-reverse',\n    ],\n  },\n  {\n    propertyName: 'flex-wrap',\n    propertyValues: [\n      'nowrap',\n      'wrap',\n    ],\n  },\n  {\n    propertyName: 'align-content',\n    propertyValues: [\n      'center',\n      'flex-start',\n      'flex-end',\n      'space-around',\n      'space-between',\n      'stretch',\n    ],\n  },\n  {\n    propertyName: 'justify-content',\n    propertyValues: [\n      'center',\n      'flex-start',\n      'flex-end',\n      'space-between',\n      'space-around',\n      'space-evenly',\n    ],\n  },\n  {\n    propertyName: 'align-items',\n    propertyValues: [\n      'center',\n      'flex-start',\n      'flex-end',\n      'stretch',\n      'baseline',\n    ],\n  },\n];\n\nexport const GridEditableProperties = [\n  {\n    propertyName: 'align-content',\n    propertyValues: [\n      'center',\n      'space-between',\n      'space-around',\n      'space-evenly',\n      'stretch',\n    ],\n  },\n  {\n    propertyName: 'justify-content',\n    propertyValues: [\n      'center',\n      'start',\n      'end',\n      'space-between',\n      'space-around',\n      'space-evenly',\n    ],\n  },\n  {\n    propertyName: 'align-items',\n    propertyValues: [\n      'center',\n      'start',\n      'end',\n      'stretch',\n      'baseline',\n    ],\n  },\n  {\n    propertyName: 'justify-items',\n    propertyValues: [\n      'center',\n      'start',\n      'end',\n      'stretch',\n    ],\n  },\n];\n"],
  "mappings": "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",
  "names": []
}
