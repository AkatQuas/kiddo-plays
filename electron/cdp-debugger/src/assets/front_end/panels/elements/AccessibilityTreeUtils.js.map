{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/AccessibilityTreeUtils.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as ElementsComponents from './components/components.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport type AXTreeNodeData = SDK.AccessibilityModel.AccessibilityNode;\nexport type AXTreeNode = TreeOutline.TreeOutlineUtils.TreeNode<AXTreeNodeData>;\n\nfunction isLeafNode(node: SDK.AccessibilityModel.AccessibilityNode): boolean {\n  return node.numChildren() === 0 && node.role()?.value !== 'Iframe';\n}\n\nfunction getModel(frameId: Protocol.Page.FrameId): SDK.AccessibilityModel.AccessibilityModel {\n  const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n  const model = frame?.resourceTreeModel().target().model(SDK.AccessibilityModel.AccessibilityModel);\n  if (!model) {\n    throw Error('Could not instantiate model for frameId');\n  }\n  return model;\n}\n\nexport async function getRootNode(frameId: Protocol.Page.FrameId): Promise<SDK.AccessibilityModel.AccessibilityNode> {\n  const model = getModel(frameId);\n  const root = await model.requestRootNode(frameId);\n  if (!root) {\n    throw Error('No accessibility root for frame');\n  }\n  return root;\n}\n\nfunction getFrameIdForNodeOrDocument(node: SDK.DOMModel.DOMNode): Protocol.Page.FrameId {\n  let frameId;\n  if (node instanceof SDK.DOMModel.DOMDocument) {\n    frameId = node.body?.frameId();\n  } else {\n    frameId = node.frameId();\n  }\n  if (!frameId) {\n    throw Error('No frameId for DOM node');\n  }\n  return frameId;\n}\n\nexport async function getNodeAndAncestorsFromDOMNode(domNode: SDK.DOMModel.DOMNode):\n    Promise<SDK.AccessibilityModel.AccessibilityNode[]> {\n  let frameId = getFrameIdForNodeOrDocument(domNode);\n  const model = getModel(frameId);\n  const result = await model.requestAndLoadSubTreeToNode(domNode);\n  if (!result) {\n    throw Error('Could not retrieve accessibility node for inspected DOM node');\n  }\n\n  const topFrameId = SDK.FrameManager.FrameManager.instance().getTopFrame()?.id;\n  if (!topFrameId) {\n    return result;\n  }\n  while (frameId !== topFrameId) {\n    const node = await SDK.FrameManager.FrameManager.instance().getFrame(frameId)?.getOwnerDOMNodeOrDocument();\n    if (!node) {\n      break;\n    }\n    frameId = getFrameIdForNodeOrDocument(node);\n    const model = getModel(frameId);\n    const ancestors = await model.requestAndLoadSubTreeToNode(node);\n    result.push(...ancestors || []);\n  }\n  return result;\n}\n\nasync function getChildren(node: SDK.AccessibilityModel.AccessibilityNode):\n    Promise<SDK.AccessibilityModel.AccessibilityNode[]> {\n  if (node.role()?.value === 'Iframe') {\n    const domNode = await node.deferredDOMNode()?.resolvePromise();\n    if (!domNode) {\n      throw new Error('Could not find corresponding DOMNode');\n    }\n    const frameId = domNode.frameOwnerFrameId();\n    if (!frameId) {\n      throw Error('No owner frameId on iframe node');\n    }\n    const localRoot = await getRootNode(frameId);\n    return [localRoot];\n  }\n  return node.accessibilityModel().requestAXChildren(node.id(), node.getFrameId() || undefined);\n}\n\nexport async function sdkNodeToAXTreeNodes(sdkNode: SDK.AccessibilityModel.AccessibilityNode): Promise<AXTreeNode[]> {\n  const treeNodeData = sdkNode;\n  if (isLeafNode(sdkNode)) {\n    return [{\n      treeNodeData,\n      id: getNodeId(sdkNode),\n    }];\n  }\n\n  return [{\n    treeNodeData,\n    children: async(): Promise<AXTreeNode[]> => {\n      const childNodes = await getChildren(sdkNode);\n      const childTreeNodes = await Promise.all(childNodes.map(childNode => sdkNodeToAXTreeNodes(childNode)));\n      return childTreeNodes.flat(1);\n    },\n    id: getNodeId(sdkNode),\n  }];\n}\n\ntype Data = ElementsComponents.AccessibilityTreeNode.AccessibilityTreeNodeData;\n\nexport function accessibilityNodeRenderer(node: AXTreeNode): LitHtml.TemplateResult {\n  const tag = ElementsComponents.AccessibilityTreeNode.AccessibilityTreeNode.litTagName;\n  const sdkNode = node.treeNodeData;\n  const name = sdkNode.name()?.value || '';\n  const role = sdkNode.role()?.value || '';\n  const properties = sdkNode.properties() || [];\n  const ignored = sdkNode.ignored();\n  return LitHtml.html`<${tag} .data=${{name, role, ignored, properties} as Data}></${tag}>`;\n}\n\nexport function getNodeId(node: SDK.AccessibilityModel.AccessibilityNode): string {\n  return node.getFrameId() + '#' + node.id();\n}\n"],
  "mappings": "AAIA;AAEA;AACA;AAMA,oBAAoB,MAAyD;AAC3E,SAAO,KAAK,kBAAkB,KAAK,KAAK,QAAQ,UAAU;AAAA;AAG5D,kBAAkB,SAA2E;AAC3F,QAAM,QAAQ,IAAI,aAAa,aAAa,WAAW,SAAS;AAChE,QAAM,QAAQ,OAAO,oBAAoB,SAAS,MAAM,IAAI,mBAAmB;AAC/E,MAAI,CAAC,OAAO;AACV,UAAM,MAAM;AAAA;AAEd,SAAO;AAAA;AAGT,kCAAkC,SAAmF;AACnH,QAAM,QAAQ,SAAS;AACvB,QAAM,OAAO,MAAM,MAAM,gBAAgB;AACzC,MAAI,CAAC,MAAM;AACT,UAAM,MAAM;AAAA;AAEd,SAAO;AAAA;AAGT,qCAAqC,MAAmD;AACtF,MAAI;AACJ,MAAI,gBAAgB,IAAI,SAAS,aAAa;AAC5C,cAAU,KAAK,MAAM;AAAA,SAChB;AACL,cAAU,KAAK;AAAA;AAEjB,MAAI,CAAC,SAAS;AACZ,UAAM,MAAM;AAAA;AAEd,SAAO;AAAA;AAGT,qDAAqD,SACG;AACtD,MAAI,UAAU,4BAA4B;AAC1C,QAAM,QAAQ,SAAS;AACvB,QAAM,SAAS,MAAM,MAAM,4BAA4B;AACvD,MAAI,CAAC,QAAQ;AACX,UAAM,MAAM;AAAA;AAGd,QAAM,aAAa,IAAI,aAAa,aAAa,WAAW,eAAe;AAC3E,MAAI,CAAC,YAAY;AACf,WAAO;AAAA;AAET,SAAO,YAAY,YAAY;AAC7B,UAAM,OAAO,MAAM,IAAI,aAAa,aAAa,WAAW,SAAS,UAAU;AAC/E,QAAI,CAAC,MAAM;AACT;AAAA;AAEF,cAAU,4BAA4B;AACtC,UAAM,SAAQ,SAAS;AACvB,UAAM,YAAY,MAAM,OAAM,4BAA4B;AAC1D,WAAO,KAAK,GAAG,aAAa;AAAA;AAE9B,SAAO;AAAA;AAGT,2BAA2B,MAC6B;AACtD,MAAI,KAAK,QAAQ,UAAU,UAAU;AACnC,UAAM,UAAU,MAAM,KAAK,mBAAmB;AAC9C,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,MAAM;AAAA;AAElB,UAAM,UAAU,QAAQ;AACxB,QAAI,CAAC,SAAS;AACZ,YAAM,MAAM;AAAA;AAEd,UAAM,YAAY,MAAM,YAAY;AACpC,WAAO,CAAC;AAAA;AAEV,SAAO,KAAK,qBAAqB,kBAAkB,KAAK,MAAM,KAAK,gBAAgB;AAAA;AAGrF,2CAA2C,SAA0E;AACnH,QAAM,eAAe;AACrB,MAAI,WAAW,UAAU;AACvB,WAAO,CAAC;AAAA,MACN;AAAA,MACA,IAAI,UAAU;AAAA;AAAA;AAIlB,SAAO,CAAC;AAAA,IACN;AAAA,IACA,UAAU,YAAkC;AAC1C,YAAM,aAAa,MAAM,YAAY;AACrC,YAAM,iBAAiB,MAAM,QAAQ,IAAI,WAAW,IAAI,eAAa,qBAAqB;AAC1F,aAAO,eAAe,KAAK;AAAA;AAAA,IAE7B,IAAI,UAAU;AAAA;AAAA;AAMX,0CAAmC,MAA0C;AAClF,QAAM,MAAM,mBAAmB,sBAAsB,sBAAsB;AAC3E,QAAM,UAAU,KAAK;AACrB,QAAM,OAAO,QAAQ,QAAQ,SAAS;AACtC,QAAM,OAAO,QAAQ,QAAQ,SAAS;AACtC,QAAM,aAAa,QAAQ,gBAAgB;AAC3C,QAAM,UAAU,QAAQ;AACxB,SAAO,QAAQ,QAAQ,aAAa,EAAC,MAAM,MAAM,SAAS,kBAAyB;AAAA;AAG9E,0BAAmB,MAAwD;AAChF,SAAO,KAAK,eAAe,MAAM,KAAK;AAAA;",
  "names": []
}
