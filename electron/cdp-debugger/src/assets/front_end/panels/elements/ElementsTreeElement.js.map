{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/elements/ElementsTreeElement.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Emulation from '../emulation/emulation.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {canGetJSPath, cssPath, jsPath, xPath} from './DOMPath.js';\nimport {ElementsPanel} from './ElementsPanel.js';\n\nimport type {ElementsTreeOutline, UpdateRecord} from './ElementsTreeOutline.js';\nimport {MappedCharToEntity} from './ElementsTreeOutline.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport type {MarkerDecorator, MarkerDecoratorRegistration} from './MarkerDecorator.js';\nimport {getRegisteredDecorators} from './MarkerDecorator.js';\n\nconst UIStrings = {\n  /**\n  *@description Title for Ad adorner. This iframe is marked as advertisement frame.\n  */\n  thisFrameWasIdentifiedAsAnAd: 'This frame was identified as an ad frame',\n  /**\n  *@description A context menu item in the Elements panel. Force is used as a verb, indicating intention to make the state change.\n  */\n  forceState: 'Force state',\n  /**\n  *@description Hint element title in Elements Tree Element of the Elements panel\n  *@example {0} PH1\n  */\n  useSInTheConsoleToReferToThis: 'Use {PH1} in the console to refer to this element.',\n  /**\n  *@description A context menu item in the Elements Tree Element of the Elements panel\n  */\n  addAttribute: 'Add attribute',\n  /**\n  *@description Text to modify the attribute of an item\n  */\n  editAttribute: 'Edit attribute',\n  /**\n  *@description Text to focus on something\n  */\n  focus: 'Focus',\n  /**\n  *@description Text to scroll the displayed content into view\n  */\n  scrollIntoView: 'Scroll into view',\n  /**\n  *@description A context menu item in the Elements Tree Element of the Elements panel\n  */\n  editText: 'Edit text',\n  /**\n  *@description A context menu item in the Elements Tree Element of the Elements panel\n  */\n  editAsHtml: 'Edit as HTML',\n  /**\n  *@description Text to cut an element, cut should be used as a verb\n  */\n  cut: 'Cut',\n  /**\n  *@description Text for copying, copy should be used as a verb\n  */\n  copy: 'Copy',\n  /**\n  *@description Text to paste an element, paste should be used as a verb\n  */\n  paste: 'Paste',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copyOuterhtml: 'Copy outerHTML',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copySelector: 'Copy `selector`',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel\n  */\n  copyJsPath: 'Copy JS path',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copyStyles: 'Copy styles',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copyXpath: 'Copy XPath',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copyFullXpath: 'Copy full XPath',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n  */\n  copyElement: 'Copy element',\n  /**\n  *@description A context menu item in the Elements Tree Element of the Elements panel\n  */\n  duplicateElement: 'Duplicate element',\n  /**\n  *@description Text to hide an element\n  */\n  hideElement: 'Hide element',\n  /**\n  *@description A context menu item in the Elements Tree Element of the Elements panel\n  */\n  deleteElement: 'Delete element',\n  /**\n  *@description Text to expand something recursively\n  */\n  expandRecursively: 'Expand recursively',\n  /**\n  *@description Text to collapse children of a parent group\n  */\n  collapseChildren: 'Collapse children',\n  /**\n  *@description Title of an action in the emulation tool to capture node screenshot\n  */\n  captureNodeScreenshot: 'Capture node screenshot',\n  /**\n  *@description Title of a context menu item. When clicked DevTools goes to the Application panel and shows this specific iframe's details\n  */\n  showFrameDetails: 'Show `iframe` details',\n  /**\n  *@description Text in Elements Tree Element of the Elements panel\n  */\n  valueIsTooLargeToEdit: '<value is too large to edit>',\n  /**\n  *@description Element text content in Elements Tree Element of the Elements panel\n  */\n  children: 'Children:',\n  /**\n  *@description ARIA label for Elements Tree adorners\n  */\n  enableGridMode: 'Enable grid mode',\n  /**\n  *@description ARIA label for Elements Tree adorners\n  */\n  disableGridMode: 'Disable grid mode',\n  /**\n  *@description Label of the adorner for flex elements in the Elements panel\n  */\n  enableFlexMode: 'Enable flex mode',\n  /**\n  *@description Label of the adorner for flex elements in the Elements panel\n  */\n  disableFlexMode: 'Disable flex mode',\n  /**\n  *@description Label of an adorner in the Elements panel. When clicked, it enables\n  * the overlay showing CSS scroll snapping for the current element.\n  */\n  enableScrollSnap: 'Enable scroll-snap overlay',\n  /**\n  *@description Label of an adorner in the Elements panel. When clicked, it disables\n  * the overlay showing CSS scroll snapping for the current element.\n  */\n  disableScrollSnap: 'Disable scroll-snap overlay',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst enum TagType {\n  OPENING = 'OPENING_TAG',\n  CLOSING = 'CLOSING_TAG',\n}\n\ntype OpeningTagContext = {\n    tagType: TagType.OPENING,\n    readonly adornerContainer: HTMLElement,\n    adorners: Adorners.Adorner.Adorner[],\n    styleAdorners: Adorners.Adorner.Adorner[],\n    readonly adornersThrottler: Common.Throttler.Throttler,\n    slot?: Adorners.Adorner.Adorner,\n    canAddAttributes: boolean,\n};\n\ntype ClosingTagContext = {\n  tagType: TagType.CLOSING,\n};\n\nexport type TagTypeContext = OpeningTagContext|ClosingTagContext;\n\nfunction isOpeningTag(context: TagTypeContext): context is OpeningTagContext {\n  return context.tagType === TagType.OPENING;\n}\n\nexport class ElementsTreeElement extends UI.TreeOutline.TreeElement {\n  nodeInternal: SDK.DOMModel.DOMNode;\n  treeOutline: ElementsTreeOutline|null;\n  private gutterContainer: HTMLElement;\n  private readonly decorationsElement: HTMLElement;\n  private searchQuery: string|null;\n  private expandedChildrenLimitInternal: number;\n  private readonly decorationsThrottler: Common.Throttler.Throttler;\n  private inClipboard: boolean;\n  private hoveredInternal: boolean;\n  private editing: EditorHandles|null;\n  private highlightResult: UI.UIUtils.HighlightChange[];\n  private htmlEditElement?: HTMLElement;\n  expandAllButtonElement: UI.TreeOutline.TreeElement|null;\n  private searchHighlightsVisible?: boolean;\n  selectionElement?: HTMLDivElement;\n  private hintElement?: HTMLElement;\n  private contentElement: HTMLElement;\n\n  readonly tagTypeContext: TagTypeContext;\n\n  constructor(node: SDK.DOMModel.DOMNode, isClosingTag?: boolean) {\n    // The title will be updated in onattach.\n    super();\n    this.nodeInternal = node;\n    this.treeOutline = null;\n    this.contentElement = this.listItemElement.createChild('div');\n    this.gutterContainer = this.contentElement.createChild('div', 'gutter-container');\n    this.gutterContainer.addEventListener('click', this.showContextMenu.bind(this));\n    const gutterMenuIcon = UI.Icon.Icon.create('largeicon-menu', 'gutter-menu-icon');\n    this.gutterContainer.append(gutterMenuIcon);\n    this.decorationsElement = this.gutterContainer.createChild('div', 'hidden');\n\n    this.searchQuery = null;\n    this.expandedChildrenLimitInternal = InitialChildrenLimit;\n    this.decorationsThrottler = new Common.Throttler.Throttler(100);\n\n    this.inClipboard = false;\n    this.hoveredInternal = false;\n\n    this.editing = null;\n\n    this.highlightResult = [];\n\n    if (isClosingTag) {\n      this.tagTypeContext = {tagType: TagType.CLOSING};\n    } else {\n      this.tagTypeContext = {\n        tagType: TagType.OPENING,\n        adornerContainer: this.contentElement.createChild('div', 'adorner-container hidden'),\n        adorners: [],\n        styleAdorners: [],\n        adornersThrottler: new Common.Throttler.Throttler(100),\n        canAddAttributes: this.nodeInternal.nodeType() === Node.ELEMENT_NODE,\n      };\n      void this.updateStyleAdorners();\n\n      if (node.isAdFrameNode()) {\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n            ElementsComponents.AdornerManager.RegisteredAdorners.AD);\n        const adorner = this.adorn(config);\n        UI.Tooltip.Tooltip.install(adorner, i18nString(UIStrings.thisFrameWasIdentifiedAsAnAd));\n      }\n    }\n    this.expandAllButtonElement = null;\n  }\n\n  static animateOnDOMUpdate(treeElement: ElementsTreeElement): void {\n    const tagName = treeElement.listItemElement.querySelector('.webkit-html-tag-name');\n    UI.UIUtils.runCSSAnimationOnce(tagName || treeElement.listItemElement, 'dom-update-highlight');\n  }\n\n  static visibleShadowRoots(node: SDK.DOMModel.DOMNode): SDK.DOMModel.DOMNode[] {\n    let roots = node.shadowRoots();\n    if (roots.length && !Common.Settings.Settings.instance().moduleSetting('showUAShadowDOM').get()) {\n      roots = roots.filter(filter);\n    }\n\n    function filter(root: SDK.DOMModel.DOMNode): boolean {\n      return root.shadowRootType() !== SDK.DOMModel.DOMNode.ShadowRootTypes.UserAgent;\n    }\n    return roots;\n  }\n\n  static canShowInlineText(node: SDK.DOMModel.DOMNode): boolean {\n    if (node.contentDocument() || node.templateContent() || ElementsTreeElement.visibleShadowRoots(node).length ||\n        node.hasPseudoElements()) {\n      return false;\n    }\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n      return false;\n    }\n    if (!node.firstChild || node.firstChild !== node.lastChild || node.firstChild.nodeType() !== Node.TEXT_NODE) {\n      return false;\n    }\n    const textChild = node.firstChild;\n    const maxInlineTextChildLength = 80;\n    if (textChild.nodeValue().length < maxInlineTextChildLength) {\n      return true;\n    }\n    return false;\n  }\n\n  static populateForcedPseudoStateItems(contextMenu: UI.ContextMenu.ContextMenu, node: SDK.DOMModel.DOMNode): void {\n    const pseudoClasses = ['active', 'hover', 'focus', 'visited', 'focus-within', 'focus-visible'];\n    const forcedPseudoState = node.domModel().cssModel().pseudoState(node);\n    const stateMenu = contextMenu.debugSection().appendSubMenuItem(i18nString(UIStrings.forceState));\n    for (const pseudoClass of pseudoClasses) {\n      const pseudoClassForced = forcedPseudoState ? forcedPseudoState.indexOf(pseudoClass) >= 0 : false;\n      stateMenu.defaultSection().appendCheckboxItem(\n          ':' + pseudoClass, setPseudoStateCallback.bind(null, pseudoClass, !pseudoClassForced), pseudoClassForced,\n          false);\n    }\n\n    function setPseudoStateCallback(pseudoState: string, enabled: boolean): void {\n      node.domModel().cssModel().forcePseudoState(node, pseudoState, enabled);\n    }\n  }\n\n  isClosingTag(): boolean {\n    return !isOpeningTag(this.tagTypeContext);\n  }\n\n  node(): SDK.DOMModel.DOMNode {\n    return this.nodeInternal;\n  }\n\n  isEditing(): boolean {\n    return Boolean(this.editing);\n  }\n\n  highlightSearchResults(searchQuery: string): void {\n    if (this.searchQuery !== searchQuery) {\n      this.hideSearchHighlight();\n    }\n\n    this.searchQuery = searchQuery;\n    this.searchHighlightsVisible = true;\n    this.updateTitle(null, true);\n  }\n\n  hideSearchHighlights(): void {\n    delete this.searchHighlightsVisible;\n    this.hideSearchHighlight();\n  }\n\n  private hideSearchHighlight(): void {\n    if (this.highlightResult.length === 0) {\n      return;\n    }\n\n    for (let i = (this.highlightResult.length - 1); i >= 0; --i) {\n      const entry = this.highlightResult[i];\n      switch (entry.type) {\n        case 'added':\n          entry.node.remove();\n          break;\n        case 'changed':\n          entry.node.textContent = entry.oldText || null;\n          break;\n      }\n    }\n\n    this.highlightResult = [];\n  }\n\n  setInClipboard(inClipboard: boolean): void {\n    if (this.inClipboard === inClipboard) {\n      return;\n    }\n    this.inClipboard = inClipboard;\n    this.listItemElement.classList.toggle('in-clipboard', inClipboard);\n  }\n\n  get hovered(): boolean {\n    return this.hoveredInternal;\n  }\n\n  set hovered(isHovered: boolean) {\n    if (this.hoveredInternal === isHovered) {\n      return;\n    }\n\n    this.hoveredInternal = isHovered;\n\n    if (this.listItemElement) {\n      if (isHovered) {\n        this.createSelection();\n        this.listItemElement.classList.add('hovered');\n      } else {\n        this.listItemElement.classList.remove('hovered');\n      }\n    }\n  }\n\n  expandedChildrenLimit(): number {\n    return this.expandedChildrenLimitInternal;\n  }\n\n  setExpandedChildrenLimit(expandedChildrenLimit: number): void {\n    this.expandedChildrenLimitInternal = expandedChildrenLimit;\n  }\n\n  createSlotLink(nodeShortcut: SDK.DOMModel.DOMNodeShortcut|null): void {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n    if (nodeShortcut) {\n      const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n          ElementsComponents.AdornerManager.RegisteredAdorners.SLOT);\n      this.tagTypeContext.slot = this.adornSlot(config, this.tagTypeContext);\n      const deferredNode = nodeShortcut.deferredNode;\n      this.tagTypeContext.slot.addEventListener('click', () => {\n        deferredNode.resolve(node => {\n          void Common.Revealer.reveal(node);\n        });\n      });\n      this.tagTypeContext.slot.addEventListener('mousedown', e => e.consume(), false);\n    }\n  }\n\n  private createSelection(): void {\n    const contentElement = this.contentElement;\n    if (!contentElement) {\n      return;\n    }\n\n    if (!this.selectionElement) {\n      this.selectionElement = document.createElement('div');\n      this.selectionElement.className = 'selection fill';\n      this.selectionElement.style.setProperty('margin-left', (-this.computeLeftIndent()) + 'px');\n      contentElement.prepend(this.selectionElement);\n    }\n  }\n\n  private createHint(): void {\n    if (this.contentElement && !this.hintElement) {\n      this.hintElement = this.contentElement.createChild('span', 'selected-hint');\n      const selectedElementCommand = '$0';\n      UI.Tooltip.Tooltip.install(\n          this.hintElement, i18nString(UIStrings.useSInTheConsoleToReferToThis, {PH1: selectedElementCommand}));\n      UI.ARIAUtils.markAsHidden(this.hintElement);\n    }\n  }\n\n  onbind(): void {\n    if (this.treeOutline && !this.isClosingTag()) {\n      this.treeOutline.treeElementByNode.set(this.nodeInternal, this);\n    }\n  }\n\n  onunbind(): void {\n    if (this.editing) {\n      this.editing.cancel();\n    }\n    if (this.treeOutline && this.treeOutline.treeElementByNode.get(this.nodeInternal) === this) {\n      this.treeOutline.treeElementByNode.delete(this.nodeInternal);\n    }\n  }\n\n  onattach(): void {\n    if (this.hoveredInternal) {\n      this.createSelection();\n      this.listItemElement.classList.add('hovered');\n    }\n\n    this.updateTitle();\n    this.listItemElement.draggable = true;\n  }\n\n  async onpopulate(): Promise<void> {\n    if (this.treeOutline) {\n      return this.treeOutline.populateTreeElement(this);\n    }\n  }\n\n  async expandRecursively(): Promise<void> {\n    await this.nodeInternal.getSubtree(-1, true);\n    await super.expandRecursively(Number.MAX_VALUE);\n  }\n\n  onexpand(): void {\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    this.updateTitle();\n  }\n\n  oncollapse(): void {\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    this.updateTitle();\n  }\n\n  select(omitFocus?: boolean, selectedByUser?: boolean): boolean {\n    if (this.editing) {\n      return false;\n    }\n    return super.select(omitFocus, selectedByUser);\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    if (!this.treeOutline) {\n      return false;\n    }\n    this.treeOutline.suppressRevealAndSelect = true;\n    this.treeOutline.selectDOMNode(this.nodeInternal, selectedByUser);\n    if (selectedByUser) {\n      this.nodeInternal.highlight();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.ChangeInspectedNodeInElementsPanel);\n    }\n    this.createSelection();\n    this.createHint();\n    this.treeOutline.suppressRevealAndSelect = false;\n    return true;\n  }\n\n  ondelete(): boolean {\n    if (!this.treeOutline) {\n      return false;\n    }\n    const startTagTreeElement = this.treeOutline.findTreeElement(this.nodeInternal);\n    startTagTreeElement ? startTagTreeElement.remove() : this.remove();\n    return true;\n  }\n\n  onenter(): boolean {\n    // On Enter or Return start editing the first attribute\n    // or create a new attribute on the selected element.\n    if (this.editing) {\n      return false;\n    }\n\n    this.startEditing();\n\n    // prevent a newline from being immediately inserted\n    return true;\n  }\n\n  selectOnMouseDown(event: MouseEvent): void {\n    super.selectOnMouseDown(event);\n\n    if (this.editing) {\n      return;\n    }\n\n    // Prevent selecting the nearest word on double click.\n    if (event.detail >= 2) {\n      event.preventDefault();\n    }\n  }\n\n  ondblclick(event: Event): boolean {\n    if (this.editing || this.isClosingTag()) {\n      return false;\n    }\n    if (this.startEditingTarget((event.target as Element))) {\n      return false;\n    }\n\n    if (this.isExpandable() && !this.expanded) {\n      this.expand();\n    }\n    return false;\n  }\n\n  hasEditableNode(): boolean {\n    return !this.nodeInternal.isShadowRoot() && !this.nodeInternal.ancestorUserAgentShadowRoot();\n  }\n\n  private insertInLastAttributePosition(tag: Element, node: Element): void {\n    if (tag.getElementsByClassName('webkit-html-attribute').length > 0) {\n      tag.insertBefore(node, tag.lastChild);\n    } else if (tag.textContent !== null) {\n      const matchResult = tag.textContent.match(/^<(.*?)>$/);\n      if (!matchResult) {\n        return;\n      }\n      const nodeName = matchResult[1];\n      tag.textContent = '';\n      UI.UIUtils.createTextChild(tag, '<' + nodeName);\n      tag.appendChild(node);\n      UI.UIUtils.createTextChild(tag, '>');\n    }\n  }\n\n  private startEditingTarget(eventTarget: Element): boolean {\n    if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n      return false;\n    }\n\n    if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE && this.nodeInternal.nodeType() !== Node.TEXT_NODE) {\n      return false;\n    }\n\n    const textNode = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (textNode) {\n      return this.startEditingTextNode(textNode);\n    }\n\n    const attribute = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n    if (attribute) {\n      return this.startEditingAttribute(attribute, eventTarget);\n    }\n\n    const tagName = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-tag-name');\n    if (tagName) {\n      return this.startEditingTagName(tagName);\n    }\n\n    const newAttribute = eventTarget.enclosingNodeOrSelfWithClass('add-attribute');\n    if (newAttribute) {\n      return this.addNewAttribute();\n    }\n\n    return false;\n  }\n\n  private showContextMenu(event: Event): void {\n    this.treeOutline && this.treeOutline.showContextMenu(this, event);\n  }\n\n  populateTagContextMenu(contextMenu: UI.ContextMenu.ContextMenu, event: Event): void {\n    // Add attribute-related actions.\n    const treeElement =\n        this.isClosingTag() && this.treeOutline ? this.treeOutline.findTreeElement(this.nodeInternal) : this;\n    if (!treeElement) {\n      return;\n    }\n    contextMenu.editSection().appendItem(\n        i18nString(UIStrings.addAttribute), treeElement.addNewAttribute.bind(treeElement));\n\n    const target = (event.target as Element);\n    const attribute = target.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n    const newAttribute = target.enclosingNodeOrSelfWithClass('add-attribute');\n    if (attribute && !newAttribute) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.editAttribute), this.startEditingAttribute.bind(this, attribute, target));\n    }\n    this.populateNodeContextMenu(contextMenu);\n    ElementsTreeElement.populateForcedPseudoStateItems(contextMenu, treeElement.node());\n    this.populateScrollIntoView(contextMenu);\n    contextMenu.viewSection().appendItem(i18nString(UIStrings.focus), async () => {\n      await this.nodeInternal.focus();\n    });\n  }\n\n  populateScrollIntoView(contextMenu: UI.ContextMenu.ContextMenu): void {\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.scrollIntoView), () => this.nodeInternal.scrollIntoView());\n  }\n\n  populateTextContextMenu(contextMenu: UI.ContextMenu.ContextMenu, textNode: Element): void {\n    if (!this.editing) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.editText), this.startEditingTextNode.bind(this, textNode));\n    }\n    this.populateNodeContextMenu(contextMenu);\n  }\n\n  populateNodeContextMenu(contextMenu: UI.ContextMenu.ContextMenu): void {\n    // Add free-form node-related actions.\n    const isEditable = this.hasEditableNode();\n    // clang-format off\n    if (isEditable && !this.editing) {\n      contextMenu.editSection().appendItem(i18nString(UIStrings.editAsHtml), this.editAsHTML.bind(this));\n    }\n    // clang-format on\n    const isShadowRoot = this.nodeInternal.isShadowRoot();\n\n    const createShortcut = UI.KeyboardShortcut.KeyboardShortcut.shortcutToString.bind(null);\n    const modifier = UI.KeyboardShortcut.Modifiers.CtrlOrMeta;\n    const treeOutline = this.treeOutline;\n    if (!treeOutline) {\n      return;\n    }\n    let menuItem;\n\n    menuItem = contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.cut), treeOutline.performCopyOrCut.bind(treeOutline, true, this.nodeInternal),\n        !this.hasEditableNode());\n    menuItem.setShortcut(createShortcut('X', modifier));\n\n    // Place it here so that all \"Copy\"-ing items stick together.\n    const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(i18nString(UIStrings.copy));\n    const section = copyMenu.section();\n    if (!isShadowRoot) {\n      menuItem = section.appendItem(\n          i18nString(UIStrings.copyOuterhtml),\n          treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal));\n      menuItem.setShortcut(createShortcut('V', modifier));\n    }\n    if (this.nodeInternal.nodeType() === Node.ELEMENT_NODE) {\n      section.appendItem(i18nString(UIStrings.copySelector), this.copyCSSPath.bind(this));\n      section.appendItem(\n          i18nString(UIStrings.copyJsPath), this.copyJSPath.bind(this), !canGetJSPath(this.nodeInternal));\n      section.appendItem(i18nString(UIStrings.copyStyles), this.copyStyles.bind(this));\n    }\n    if (!isShadowRoot) {\n      section.appendItem(i18nString(UIStrings.copyXpath), this.copyXPath.bind(this));\n      section.appendItem(i18nString(UIStrings.copyFullXpath), this.copyFullXPath.bind(this));\n    }\n\n    if (!isShadowRoot) {\n      menuItem = copyMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyElement), treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal));\n      menuItem.setShortcut(createShortcut('C', modifier));\n\n      // Duplicate element, disabled on root element and ShadowDOM.\n      const isRootElement = !this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeName() === '#document';\n      menuItem = contextMenu.editSection().appendItem(\n          i18nString(UIStrings.duplicateElement), treeOutline.duplicateNode.bind(treeOutline, this.nodeInternal),\n          (this.nodeInternal.isInShadowTree() || isRootElement));\n    }\n\n    menuItem = contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.paste), treeOutline.pasteNode.bind(treeOutline, this.nodeInternal),\n        !treeOutline.canPaste(this.nodeInternal));\n    menuItem.setShortcut(createShortcut('V', modifier));\n\n    menuItem = contextMenu.debugSection().appendCheckboxItem(\n        i18nString(UIStrings.hideElement), treeOutline.toggleHideElement.bind(treeOutline, this.nodeInternal),\n        treeOutline.isToggledToHidden(this.nodeInternal));\n    menuItem.setShortcut(\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction('elements.hide-element') || '');\n\n    if (isEditable) {\n      contextMenu.editSection().appendItem(i18nString(UIStrings.deleteElement), this.remove.bind(this));\n    }\n\n    contextMenu.viewSection().appendItem(i18nString(UIStrings.expandRecursively), this.expandRecursively.bind(this));\n    contextMenu.viewSection().appendItem(i18nString(UIStrings.collapseChildren), this.collapseChildren.bind(this));\n    const deviceModeWrapperAction = new Emulation.DeviceModeWrapper.ActionDelegate();\n    contextMenu.viewSection().appendItem(\n        i18nString(UIStrings.captureNodeScreenshot),\n        deviceModeWrapperAction.handleAction.bind(\n            null, UI.Context.Context.instance(), 'emulation.capture-node-screenshot'));\n    if (this.nodeInternal.frameOwnerFrameId()) {\n      contextMenu.viewSection().appendItem(i18nString(UIStrings.showFrameDetails), () => {\n        const frameOwnerFrameId = this.nodeInternal.frameOwnerFrameId();\n        if (frameOwnerFrameId) {\n          const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameOwnerFrameId);\n          void Common.Revealer.reveal(frame);\n        }\n      });\n    }\n  }\n\n  private startEditing(): boolean|undefined {\n    if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n      return;\n    }\n\n    const listItem = this.listItemElement;\n\n    if (isOpeningTag(this.tagTypeContext) && this.tagTypeContext.canAddAttributes) {\n      const attribute = listItem.getElementsByClassName('webkit-html-attribute')[0];\n      if (attribute) {\n        return this.startEditingAttribute(\n            attribute, attribute.getElementsByClassName('webkit-html-attribute-value')[0]);\n      }\n\n      return this.addNewAttribute();\n    }\n\n    if (this.nodeInternal.nodeType() === Node.TEXT_NODE) {\n      const textNode = listItem.getElementsByClassName('webkit-html-text-node')[0];\n      if (textNode) {\n        return this.startEditingTextNode(textNode);\n      }\n    }\n\n    return;\n  }\n\n  private addNewAttribute(): boolean {\n    // Cannot just convert the textual html into an element without\n    // a parent node. Use a temporary span container for the HTML.\n    const container = document.createElement('span');\n    const attr = this.buildAttributeDOM(container, ' ', '', null);\n    attr.style.marginLeft = '2px';   // overrides the .editing margin rule\n    attr.style.marginRight = '2px';  // overrides the .editing margin rule\n\n    const tag = this.listItemElement.getElementsByClassName('webkit-html-tag')[0];\n    this.insertInLastAttributePosition(tag, attr);\n    attr.scrollIntoViewIfNeeded(true);\n    return this.startEditingAttribute(attr, attr);\n  }\n\n  private triggerEditAttribute(attributeName: string): boolean|undefined {\n    const attributeElements = this.listItemElement.getElementsByClassName('webkit-html-attribute-name');\n    for (let i = 0, len = attributeElements.length; i < len; ++i) {\n      if (attributeElements[i].textContent === attributeName) {\n        for (let elem: (ChildNode|null) = attributeElements[i].nextSibling; elem; elem = elem.nextSibling) {\n          if (elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          if ((elem as Element).classList.contains('webkit-html-attribute-value')) {\n            return this.startEditingAttribute((elem.parentElement as HTMLElement), (elem as Element));\n          }\n        }\n      }\n    }\n\n    return;\n  }\n\n  private startEditingAttribute(attribute: Element, elementForSelection: Element): boolean {\n    console.assert(this.listItemElement.isAncestor(attribute));\n\n    if (UI.UIUtils.isBeingEdited(attribute)) {\n      return true;\n    }\n\n    const attributeNameElement = attribute.getElementsByClassName('webkit-html-attribute-name')[0];\n    if (!attributeNameElement) {\n      return false;\n    }\n\n    const attributeName = attributeNameElement.textContent;\n    const attributeValueElement = attribute.getElementsByClassName('webkit-html-attribute-value')[0];\n\n    // Make sure elementForSelection is not a child of attributeValueElement.\n    elementForSelection =\n        attributeValueElement.isAncestor(elementForSelection) ? attributeValueElement : elementForSelection;\n\n    function removeZeroWidthSpaceRecursive(node: Node): void {\n      if (node.nodeType === Node.TEXT_NODE) {\n        node.nodeValue = node.nodeValue ? node.nodeValue.replace(/\\u200B/g, '') : '';\n        return;\n      }\n\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n\n      for (let child: (ChildNode|null) = node.firstChild; child; child = child.nextSibling) {\n        removeZeroWidthSpaceRecursive(child);\n      }\n    }\n\n    const attributeValue =\n        attributeName && attributeValueElement ? this.nodeInternal.getAttribute(attributeName) : undefined;\n    if (attributeValue !== undefined) {\n      attributeValueElement.setTextContentTruncatedIfNeeded(\n          attributeValue, i18nString(UIStrings.valueIsTooLargeToEdit));\n    }\n\n    // Remove zero-width spaces that were added by nodeTitleInfo.\n    removeZeroWidthSpaceRecursive(attribute);\n\n    const config = new UI.InplaceEditor.Config(\n        this.attributeEditingCommitted.bind(this), this.editingCancelled.bind(this), attributeName || undefined);\n\n    function postKeyDownFinishHandler(event: Event): string {\n      UI.UIUtils.handleElementValueModifications(event, attribute);\n      return '';\n    }\n\n    if (!Common.ParsedURL.ParsedURL.fromString(attributeValueElement.textContent || '')) {\n      config.setPostKeydownFinishHandler(postKeyDownFinishHandler);\n    }\n\n    this.updateEditorHandles(attribute, config);\n\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection && componentSelection.selectAllChildren(elementForSelection);\n\n    return true;\n  }\n\n  private startEditingTextNode(textNodeElement: Element): boolean {\n    if (UI.UIUtils.isBeingEdited(textNodeElement)) {\n      return true;\n    }\n\n    let textNode: SDK.DOMModel.DOMNode = this.nodeInternal;\n    // We only show text nodes inline in elements if the element only\n    // has a single child, and that child is a text node.\n    if (textNode.nodeType() === Node.ELEMENT_NODE && textNode.firstChild) {\n      textNode = textNode.firstChild;\n    }\n\n    const container = textNodeElement.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n    if (container) {\n      container.textContent = textNode.nodeValue();\n    }  // Strip the CSS or JS highlighting if present.\n    const config = new UI.InplaceEditor.Config(\n        this.textNodeEditingCommitted.bind(this, textNode), this.editingCancelled.bind(this));\n    this.updateEditorHandles(textNodeElement, config);\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection && componentSelection.selectAllChildren(textNodeElement);\n\n    return true;\n  }\n\n  private startEditingTagName(tagNameElement?: Element): boolean {\n    if (!tagNameElement) {\n      tagNameElement = this.listItemElement.getElementsByClassName('webkit-html-tag-name')[0];\n      if (!tagNameElement) {\n        return false;\n      }\n    }\n\n    const tagName = tagNameElement.textContent;\n    if (tagName !== null && EditTagBlocklist.has(tagName.toLowerCase())) {\n      return false;\n    }\n\n    if (UI.UIUtils.isBeingEdited(tagNameElement)) {\n      return true;\n    }\n\n    const closingTagElement = this.distinctClosingTagElement();\n\n    function keyupListener(): void {\n      if (closingTagElement && tagNameElement) {\n        closingTagElement.textContent = '</' + tagNameElement.textContent + '>';\n      }\n    }\n\n    const keydownListener = (event: Event): void => {\n      if ((event as KeyboardEvent).key !== ' ') {\n        return;\n      }\n      this.editing && this.editing.commit();\n      event.consume(true);\n    };\n\n    function editingCommitted(\n        this: ElementsTreeElement, element: Element, newTagName: string, oldText: string, tagName: string|null,\n        moveDirection: string): void {\n      if (!tagNameElement) {\n        return;\n      }\n      tagNameElement.removeEventListener('keyup', keyupListener, false);\n      tagNameElement.removeEventListener('keydown', keydownListener, false);\n      this.tagNameEditingCommitted(element, newTagName, oldText, tagName, moveDirection);\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function editingCancelled(this: ElementsTreeElement, element: Element, context: any): void {\n      if (!tagNameElement) {\n        return;\n      }\n      tagNameElement.removeEventListener('keyup', keyupListener, false);\n      tagNameElement.removeEventListener('keydown', keydownListener, false);\n      this.editingCancelled(element, context);\n    }\n\n    tagNameElement.addEventListener('keyup', keyupListener, false);\n    tagNameElement.addEventListener('keydown', keydownListener, false);\n\n    const config =\n        new UI.InplaceEditor.Config<string|null>(editingCommitted.bind(this), editingCancelled.bind(this), tagName);\n    this.updateEditorHandles(tagNameElement, config);\n    const componentSelection = this.listItemElement.getComponentSelection();\n    componentSelection && componentSelection.selectAllChildren(tagNameElement);\n    return true;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private updateEditorHandles(element: Element, config?: UI.InplaceEditor.Config<any>): void {\n    const editorHandles = UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n    if (!editorHandles) {\n      this.editing = null;\n    } else {\n      this.editing = {\n        commit: editorHandles.commit,\n        cancel: editorHandles.cancel,\n        editor: undefined,\n        resize: (): void => {},\n      };\n    }\n  }\n\n  private async startEditingAsHTML(\n      commitCallback: (arg0: string, arg1: string) => void, disposeCallback: () => void,\n      maybeInitialValue: string|null): Promise<void> {\n    if (maybeInitialValue === null) {\n      return;\n    }\n    if (this.editing) {\n      return;\n    }\n\n    const initialValue = this.convertWhitespaceToEntities(maybeInitialValue).text;\n    this.htmlEditElement = document.createElement('div');\n    this.htmlEditElement.className = 'source-code elements-tree-editor';\n\n    // Hide header items.\n    let child: (ChildNode|null) = this.listItemElement.firstChild;\n    while (child) {\n      (child as HTMLElement).style.display = 'none';\n      child = child.nextSibling;\n    }\n    // Hide children item.\n    if (this.childrenListElement) {\n      this.childrenListElement.style.display = 'none';\n    }\n    // Append editor.\n    this.listItemElement.append(this.htmlEditElement);\n    this.htmlEditElement.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        event.consume(true);\n      }\n    });\n\n    const editor = new TextEditor.TextEditor.TextEditor(CodeMirror.EditorState.create({\n      doc: initialValue,\n      extensions: [\n        CodeMirror.keymap.of([\n          {\n            key: 'Mod-Enter',\n            run: (): boolean => {\n              this.editing?.commit();\n              return true;\n            },\n          },\n          {\n            key: 'Escape',\n            run: (): boolean => {\n              this.editing?.cancel();\n              return true;\n            },\n          },\n        ]),\n        TextEditor.Config.baseConfiguration(initialValue),\n        TextEditor.Config.closeBrackets,\n        TextEditor.Config.autocompletion,\n        CodeMirror.html.html(),\n        TextEditor.Config.domWordWrap.instance(),\n        CodeMirror.EditorView.theme({\n          '&.cm-editor': {maxHeight: '300px'},\n          '.cm-scroller': {overflowY: 'auto'},\n        }),\n        CodeMirror.EditorView.domEventHandlers({\n          focusout: event => {\n            // The relatedTarget is null when no element gains focus, e.g. switching windows.\n            const relatedTarget = (event.relatedTarget as Node | null);\n            if (relatedTarget && !relatedTarget.isSelfOrDescendant(editor)) {\n              this.editing && this.editing.commit();\n            }\n          },\n        }),\n      ],\n    }));\n    this.editing = {commit: commit.bind(this), cancel: dispose.bind(this), editor, resize: resize.bind(this)};\n    resize.call(this);\n    this.htmlEditElement.appendChild(editor);\n    editor.editor.focus();\n\n    this.treeOutline && this.treeOutline.setMultilineEditing(this.editing);\n\n    function resize(this: ElementsTreeElement): void {\n      if (this.treeOutline && this.htmlEditElement) {\n        this.htmlEditElement.style.width = this.treeOutline.visibleWidth() - this.computeLeftIndent() - 30 + 'px';\n      }\n    }\n\n    function commit(this: ElementsTreeElement): void {\n      if (this.editing && this.editing.editor) {\n        commitCallback(initialValue, this.editing.editor.state.doc.toString());\n      }\n      dispose.call(this);\n    }\n\n    function dispose(this: ElementsTreeElement): void {\n      if (!this.editing || !this.editing.editor) {\n        return;\n      }\n      this.editing = null;\n\n      // Remove editor.\n      if (this.htmlEditElement) {\n        this.listItemElement.removeChild(this.htmlEditElement);\n      }\n      this.htmlEditElement = undefined;\n      // Unhide children item.\n      if (this.childrenListElement) {\n        this.childrenListElement.style.removeProperty('display');\n      }\n      // Unhide header items.\n      let child: (ChildNode|null) = this.listItemElement.firstChild;\n      while (child) {\n        (child as HTMLElement).style.removeProperty('display');\n        child = child.nextSibling;\n      }\n\n      if (this.treeOutline) {\n        this.treeOutline.setMultilineEditing(null);\n        this.treeOutline.focus();\n      }\n\n      disposeCallback();\n    }\n  }\n\n  private attributeEditingCommitted(\n      element: Element, newText: string, oldText: string, attributeName: string, moveDirection: string): void {\n    this.editing = null;\n\n    const treeOutline = this.treeOutline;\n\n    function moveToNextAttributeIfNeeded(this: ElementsTreeElement, error?: string|null): void {\n      if (error) {\n        this.editingCancelled(element, attributeName);\n      }\n\n      if (!moveDirection) {\n        return;\n      }\n\n      if (treeOutline) {\n        treeOutline.runPendingUpdates();\n        treeOutline.focus();\n      }\n\n      // Search for the attribute's position, and then decide where to move to.\n      const attributes = this.nodeInternal.attributes();\n      for (let i = 0; i < attributes.length; ++i) {\n        if (attributes[i].name !== attributeName) {\n          continue;\n        }\n\n        if (moveDirection === 'backward') {\n          if (i === 0) {\n            this.startEditingTagName();\n          } else {\n            this.triggerEditAttribute(attributes[i - 1].name);\n          }\n        } else {\n          if (i === attributes.length - 1) {\n            this.addNewAttribute();\n          } else {\n            this.triggerEditAttribute(attributes[i + 1].name);\n          }\n        }\n        return;\n      }\n\n      // Moving From the \"New Attribute\" position.\n      if (moveDirection === 'backward') {\n        if (newText === ' ') {\n          // Moving from \"New Attribute\" that was not edited\n          if (attributes.length > 0) {\n            this.triggerEditAttribute(attributes[attributes.length - 1].name);\n          }\n        } else {\n          // Moving from \"New Attribute\" that holds new value\n          if (attributes.length > 1) {\n            this.triggerEditAttribute(attributes[attributes.length - 2].name);\n          }\n        }\n      } else if (moveDirection === 'forward') {\n        if (!Platform.StringUtilities.isWhitespace(newText)) {\n          this.addNewAttribute();\n        } else {\n          this.startEditingTagName();\n        }\n      }\n    }\n\n    if ((attributeName.trim() || newText.trim()) && oldText !== newText) {\n      this.nodeInternal.setAttribute(attributeName, newText, moveToNextAttributeIfNeeded.bind(this));\n      return;\n    }\n\n    this.updateTitle();\n    moveToNextAttributeIfNeeded.call(this);\n  }\n\n  private tagNameEditingCommitted(\n      element: Element, newText: string, oldText: string, tagName: string|null, moveDirection: string): void {\n    this.editing = null;\n    const self = this;\n\n    function cancel(): void {\n      const closingTagElement = self.distinctClosingTagElement();\n      if (closingTagElement) {\n        closingTagElement.textContent = '</' + tagName + '>';\n      }\n\n      self.editingCancelled(element, tagName);\n      moveToNextAttributeIfNeeded.call(self);\n    }\n\n    function moveToNextAttributeIfNeeded(this: ElementsTreeElement): void {\n      if (moveDirection !== 'forward') {\n        this.addNewAttribute();\n        return;\n      }\n\n      const attributes = this.nodeInternal.attributes();\n      if (attributes.length > 0) {\n        this.triggerEditAttribute(attributes[0].name);\n      } else {\n        this.addNewAttribute();\n      }\n    }\n\n    newText = newText.trim();\n    if (newText === oldText) {\n      cancel();\n      return;\n    }\n\n    const treeOutline = this.treeOutline;\n    const wasExpanded = this.expanded;\n\n    this.nodeInternal.setNodeName(newText, (error, newNode) => {\n      if (error || !newNode) {\n        cancel();\n        return;\n      }\n      if (!treeOutline) {\n        return;\n      }\n      const newTreeItem = treeOutline.selectNodeAfterEdit(wasExpanded, error, newNode);\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      moveToNextAttributeIfNeeded.call(newTreeItem);\n    });\n  }\n\n  private textNodeEditingCommitted(textNode: SDK.DOMModel.DOMNode, element: Element, newText: string): void {\n    this.editing = null;\n\n    function callback(this: ElementsTreeElement): void {\n      this.updateTitle();\n    }\n    textNode.setNodeValue(newText, callback.bind(this));\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private editingCancelled(_element: Element, _context: any): void {\n    this.editing = null;\n\n    // Need to restore attributes structure.\n    this.updateTitle();\n  }\n\n  private distinctClosingTagElement(): Element|null {\n    // FIXME: Improve the Tree Element / Outline Abstraction to prevent crawling the DOM\n\n    // For an expanded element, it will be the last element with class \"close\"\n    // in the child element list.\n    if (this.expanded) {\n      const closers = this.childrenListElement.querySelectorAll('.close');\n      return closers[closers.length - 1];\n    }\n\n    // Remaining cases are single line non-expanded elements with a closing\n    // tag, or HTML elements without a closing tag (such as <br>). Return\n    // null in the case where there isn't a closing tag.\n    const tags = this.listItemElement.getElementsByClassName('webkit-html-tag');\n    return tags.length === 1 ? null : tags[tags.length - 1];\n  }\n\n  updateTitle(updateRecord?: UpdateRecord|null, onlySearchQueryChanged?: boolean): void {\n    // If we are editing, return early to prevent canceling the edit.\n    // After editing is committed updateTitle will be called.\n    if (this.editing) {\n      return;\n    }\n\n    if (onlySearchQueryChanged) {\n      this.hideSearchHighlight();\n    } else {\n      const nodeInfo = this.nodeTitleInfo(updateRecord || null);\n      if (this.nodeInternal.nodeType() === Node.DOCUMENT_FRAGMENT_NODE && this.nodeInternal.isInShadowTree() &&\n          this.nodeInternal.shadowRootType()) {\n        this.childrenListElement.classList.add('shadow-root');\n        let depth = 4;\n        for (let node: (SDK.DOMModel.DOMNode|null) = (this.nodeInternal as SDK.DOMModel.DOMNode | null); depth && node;\n             node = node.parentNode) {\n          if (node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE) {\n            depth--;\n          }\n        }\n        if (!depth) {\n          this.childrenListElement.classList.add('shadow-root-deep');\n        } else {\n          this.childrenListElement.classList.add('shadow-root-depth-' + depth);\n        }\n      }\n      this.contentElement.removeChildren();\n      const highlightElement = this.contentElement.createChild('span', 'highlight');\n      highlightElement.append(nodeInfo);\n      // fixme: make it clear that `this.title = x` is a setter with significant side effects\n      this.title = this.contentElement;\n      this.updateDecorations();\n      this.contentElement.prepend(this.gutterContainer);\n      if (isOpeningTag(this.tagTypeContext)) {\n        this.contentElement.append(this.tagTypeContext.adornerContainer);\n        if (this.tagTypeContext.slot) {\n          this.contentElement.append(this.tagTypeContext.slot);\n        }\n      }\n      this.highlightResult = [];\n      delete this.selectionElement;\n      delete this.hintElement;\n      if (this.selected) {\n        this.createSelection();\n        this.createHint();\n      }\n    }\n\n    this.highlightSearchResultsInternal();\n  }\n\n  private computeLeftIndent(): number {\n    let treeElement: (UI.TreeOutline.TreeElement|null) = this.parent;\n    let depth = 0;\n    while (treeElement !== null) {\n      depth++;\n      treeElement = treeElement.parent;\n    }\n\n    /** Keep it in sync with elementsTreeOutline.css **/\n    return 12 * (depth - 2) + (this.isExpandable() && this.isCollapsible() ? 1 : 12);\n  }\n\n  updateDecorations(): void {\n    this.gutterContainer.style.left = (-this.computeLeftIndent()) + 'px';\n\n    if (this.isClosingTag()) {\n      return;\n    }\n\n    if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE) {\n      return;\n    }\n\n    void this.decorationsThrottler.schedule(this.updateDecorationsInternal.bind(this));\n  }\n\n  private updateDecorationsInternal(): Promise<void> {\n    if (!this.treeOutline) {\n      return Promise.resolve();\n    }\n\n    const node = this.nodeInternal;\n\n    if (!this.treeOutline.decoratorExtensions) {\n      this.treeOutline.decoratorExtensions = getRegisteredDecorators();\n    }\n\n    const markerToExtension = new Map<string, MarkerDecoratorRegistration>();\n    for (const decoratorExtension of this.treeOutline.decoratorExtensions) {\n      markerToExtension.set(decoratorExtension.marker, decoratorExtension);\n    }\n\n    const promises: Promise<void>[] = [];\n    const decorations: {\n      title: string,\n      color: string,\n    }[] = [];\n    const descendantDecorations: {\n      title: string,\n      color: string,\n    }[] = [];\n    node.traverseMarkers(visitor);\n\n    function visitor(n: SDK.DOMModel.DOMNode, marker: string): void {\n      const extension = markerToExtension.get(marker);\n      if (!extension) {\n        return;\n      }\n      promises.push(Promise.resolve(extension.decorator()).then(collectDecoration.bind(null, n)));\n    }\n\n    function collectDecoration(n: SDK.DOMModel.DOMNode, decorator: MarkerDecorator): void {\n      const decoration = decorator.decorate(n);\n      if (!decoration) {\n        return;\n      }\n      (n === node ? decorations : descendantDecorations).push(decoration);\n    }\n\n    return Promise.all(promises).then(updateDecorationsUI.bind(this));\n\n    function updateDecorationsUI(this: ElementsTreeElement): void {\n      this.decorationsElement.removeChildren();\n      this.decorationsElement.classList.add('hidden');\n      this.gutterContainer.classList.toggle(\n          'has-decorations', Boolean(decorations.length || descendantDecorations.length));\n      UI.ARIAUtils.setAccessibleName(this.decorationsElement, '');\n\n      if (!decorations.length && !descendantDecorations.length) {\n        return;\n      }\n\n      const colors = new Set<string>();\n      const titles = document.createElement('div');\n\n      for (const decoration of decorations) {\n        const titleElement = titles.createChild('div');\n        titleElement.textContent = decoration.title;\n        colors.add(decoration.color);\n      }\n      if (this.expanded && !decorations.length) {\n        return;\n      }\n\n      const descendantColors = new Set<string>();\n      if (descendantDecorations.length) {\n        let element = titles.createChild('div');\n        element.textContent = i18nString(UIStrings.children);\n        for (const decoration of descendantDecorations) {\n          element = titles.createChild('div');\n          element.style.marginLeft = '15px';\n          element.textContent = decoration.title;\n          descendantColors.add(decoration.color);\n        }\n      }\n\n      let offset = 0;\n      processColors.call(this, colors, 'elements-gutter-decoration');\n      if (!this.expanded) {\n        processColors.call(this, descendantColors, 'elements-gutter-decoration elements-has-decorated-children');\n      }\n      UI.Tooltip.Tooltip.install(this.decorationsElement, titles.textContent);\n      UI.ARIAUtils.setAccessibleName(this.decorationsElement, titles.textContent || '');\n\n      function processColors(this: ElementsTreeElement, colors: Set<string>, className: string): void {\n        for (const color of colors) {\n          const child = this.decorationsElement.createChild('div', className);\n          this.decorationsElement.classList.remove('hidden');\n          child.style.backgroundColor = color;\n          child.style.borderColor = color;\n          if (offset) {\n            child.style.marginLeft = offset + 'px';\n          }\n          offset += 3;\n        }\n      }\n    }\n  }\n\n  private buildAttributeDOM(\n      parentElement: Element|DocumentFragment, name: string, value: string, updateRecord: UpdateRecord|null,\n      forceValue?: boolean, node?: SDK.DOMModel.DOMNode): HTMLElement {\n    const closingPunctuationRegex = /[\\/;:\\)\\]\\}]/g;\n    let highlightIndex = 0;\n    let highlightCount = 0;\n    let additionalHighlightOffset = 0;\n\n    function setValueWithEntities(this: ElementsTreeElement, element: Element, value: string): void {\n      const result = this.convertWhitespaceToEntities(value);\n      highlightCount = result.entityRanges.length;\n      value = result.text.replace(closingPunctuationRegex, (match, replaceOffset) => {\n        while (highlightIndex < highlightCount && result.entityRanges[highlightIndex].offset < replaceOffset) {\n          result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n          ++highlightIndex;\n        }\n        additionalHighlightOffset += 1;\n        return match + '\\u200B';\n      });\n\n      while (highlightIndex < highlightCount) {\n        result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n        ++highlightIndex;\n      }\n      element.setTextContentTruncatedIfNeeded(value);\n      UI.UIUtils.highlightRangesWithStyleClass(element, result.entityRanges, 'webkit-html-entity-value');\n    }\n\n    const hasText = (forceValue || value.length > 0);\n    const attrSpanElement = (parentElement.createChild('span', 'webkit-html-attribute') as HTMLElement);\n    const attrNameElement = attrSpanElement.createChild('span', 'webkit-html-attribute-name');\n    attrNameElement.textContent = name;\n\n    if (hasText) {\n      UI.UIUtils.createTextChild(attrSpanElement, '=\\u200B\"');\n    }\n\n    const attrValueElement = attrSpanElement.createChild('span', 'webkit-html-attribute-value');\n\n    if (updateRecord && updateRecord.isAttributeModified(name)) {\n      UI.UIUtils.runCSSAnimationOnce(hasText ? attrValueElement : attrNameElement, 'dom-update-highlight');\n    }\n\n    function linkifyValue(this: ElementsTreeElement, value: string): Element {\n      const rewrittenHref = node ? node.resolveURL(value) : null;\n      if (rewrittenHref === null) {\n        const span = document.createElement('span');\n        setValueWithEntities.call(this, span, value);\n        return span;\n      }\n      value = value.replace(closingPunctuationRegex, '$&\\u200B');\n      if (value.startsWith('data:')) {\n        value = Platform.StringUtilities.trimMiddle(value, 60);\n      }\n      const link = node && node.nodeName().toLowerCase() === 'a' ?\n          UI.XLink.XLink.create(rewrittenHref, value, '', true /* preventClick */) :\n          Components.Linkifier.Linkifier.linkifyURL(rewrittenHref, {\n            text: value,\n            preventClick: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          });\n      return ImagePreviewPopover.setImageUrl(link, rewrittenHref);\n    }\n\n    const nodeName = node ? node.nodeName().toLowerCase() : '';\n    if (nodeName && (name === 'src' || name === 'href')) {\n      attrValueElement.appendChild(linkifyValue.call(this, value));\n    } else if ((nodeName === 'img' || nodeName === 'source') && name === 'srcset') {\n      attrValueElement.appendChild(linkifySrcset.call(this, value));\n    } else if (nodeName === 'image' && (name === 'xlink:href' || name === 'href')) {\n      attrValueElement.appendChild(linkifySrcset.call(this, value));\n    } else {\n      setValueWithEntities.call(this, attrValueElement, value);\n    }\n\n    if (hasText) {\n      UI.UIUtils.createTextChild(attrSpanElement, '\"');\n    }\n\n    function linkifySrcset(this: ElementsTreeElement, value: string): DocumentFragment {\n      // Splitting normally on commas or spaces will break on valid srcsets \"foo 1x,bar 2x\" and \"data:,foo 1x\".\n      // 1) Let the index of the next space be `indexOfSpace`.\n      // 2a) If the character at `indexOfSpace - 1` is a comma, collect the preceding characters up to\n      //     `indexOfSpace - 1` as a URL and repeat step 1).\n      // 2b) Else, collect the preceding characters as a URL.\n      // 3) Collect the characters from `indexOfSpace` up to the next comma as the size descriptor and repeat step 1).\n      // https://html.spec.whatwg.org/C/#parse-a-srcset-attribute\n      const fragment = document.createDocumentFragment();\n      let i = 0;\n      while (value.length) {\n        if (i++ > 0) {\n          UI.UIUtils.createTextChild(fragment, ' ');\n        }\n        value = value.trim();\n        // The url and descriptor may end with a separating comma.\n        let url = '';\n        let descriptor = '';\n        const indexOfSpace = value.search(/\\s/);\n        if (indexOfSpace === -1) {\n          url = value;\n        } else if (indexOfSpace > 0 && value[indexOfSpace - 1] === ',') {\n          url = value.substring(0, indexOfSpace);\n        } else {\n          url = value.substring(0, indexOfSpace);\n          const indexOfComma = value.indexOf(',', indexOfSpace);\n          if (indexOfComma !== -1) {\n            descriptor = value.substring(indexOfSpace, indexOfComma + 1);\n          } else {\n            descriptor = value.substring(indexOfSpace);\n          }\n        }\n\n        if (url) {\n          // Up to one trailing comma should be removed from `url`.\n          if (url.endsWith(',')) {\n            fragment.appendChild(linkifyValue.call(this, url.substring(0, url.length - 1)));\n            UI.UIUtils.createTextChild(fragment, ',');\n          } else {\n            fragment.appendChild(linkifyValue.call(this, url));\n          }\n        }\n        if (descriptor) {\n          UI.UIUtils.createTextChild(fragment, descriptor);\n        }\n        value = value.substring(url.length + descriptor.length);\n      }\n      return fragment;\n    }\n\n    return attrSpanElement;\n  }\n\n  private buildPseudoElementDOM(parentElement: DocumentFragment, pseudoElementName: string): void {\n    const pseudoElement = parentElement.createChild('span', 'webkit-html-pseudo-element');\n    pseudoElement.textContent = '::' + pseudoElementName;\n    UI.UIUtils.createTextChild(parentElement, '\\u200B');\n  }\n\n  private buildTagDOM(\n      parentElement: DocumentFragment, tagName: string, isClosingTag: boolean, isDistinctTreeElement: boolean,\n      updateRecord: UpdateRecord|null): void {\n    const node = this.nodeInternal;\n    const classes = ['webkit-html-tag'];\n    if (isClosingTag && isDistinctTreeElement) {\n      classes.push('close');\n    }\n    const tagElement = parentElement.createChild('span', classes.join(' '));\n    UI.UIUtils.createTextChild(tagElement, '<');\n    const tagNameElement =\n        tagElement.createChild('span', isClosingTag ? 'webkit-html-close-tag-name' : 'webkit-html-tag-name');\n    tagNameElement.textContent = (isClosingTag ? '/' : '') + tagName;\n    if (!isClosingTag) {\n      if (node.hasAttributes()) {\n        const attributes = node.attributes();\n        for (let i = 0; i < attributes.length; ++i) {\n          const attr = attributes[i];\n          UI.UIUtils.createTextChild(tagElement, ' ');\n          this.buildAttributeDOM(tagElement, attr.name, attr.value, updateRecord, false, node);\n        }\n      }\n      if (updateRecord) {\n        let hasUpdates: boolean = updateRecord.hasRemovedAttributes() || updateRecord.hasRemovedChildren();\n        hasUpdates = hasUpdates || (!this.expanded && updateRecord.hasChangedChildren());\n        if (hasUpdates) {\n          UI.UIUtils.runCSSAnimationOnce(tagNameElement, 'dom-update-highlight');\n        }\n      }\n    }\n\n    UI.UIUtils.createTextChild(tagElement, '>');\n    UI.UIUtils.createTextChild(parentElement, '\\u200B');\n    if (tagElement.textContent) {\n      UI.ARIAUtils.setAccessibleName(tagElement, tagElement.textContent);\n    }\n  }\n\n  private convertWhitespaceToEntities(text: string): {\n    text: string,\n    entityRanges: Array<TextUtils.TextRange.SourceRange>,\n  } {\n    let result = '';\n    let lastIndexAfterEntity = 0;\n    const entityRanges = [];\n    const charToEntity = MappedCharToEntity;\n    for (let i = 0, size = text.length; i < size; ++i) {\n      const char = text.charAt(i);\n      if (charToEntity.has(char)) {\n        result += text.substring(lastIndexAfterEntity, i);\n        const entityValue = '&' + charToEntity.get(char) + ';';\n        entityRanges.push({offset: result.length, length: entityValue.length});\n        result += entityValue;\n        lastIndexAfterEntity = i + 1;\n      }\n    }\n    if (result) {\n      result += text.substring(lastIndexAfterEntity);\n    }\n    return {text: result || text, entityRanges: entityRanges};\n  }\n\n  private nodeTitleInfo(updateRecord: UpdateRecord|null): DocumentFragment {\n    const node = this.nodeInternal;\n    const titleDOM = document.createDocumentFragment();\n    const updateSearchHighlight = (): void => {\n      this.highlightResult = [];\n      this.highlightSearchResultsInternal();\n    };\n\n    switch (node.nodeType()) {\n      case Node.ATTRIBUTE_NODE:\n        this.buildAttributeDOM(titleDOM, (node.name as string), (node.value as string), updateRecord, true);\n        break;\n\n      case Node.ELEMENT_NODE: {\n        let pseudoElementName = node.pseudoType();\n        if (pseudoElementName) {\n          const pseudoIdentifier = node.pseudoIdentifier();\n          if (pseudoIdentifier) {\n            pseudoElementName += `(${pseudoIdentifier})`;\n          }\n          this.buildPseudoElementDOM(titleDOM, pseudoElementName);\n          break;\n        }\n\n        const tagName = node.nodeNameInCorrectCase();\n        if (this.isClosingTag()) {\n          this.buildTagDOM(titleDOM, tagName, true, true, updateRecord);\n          break;\n        }\n\n        this.buildTagDOM(titleDOM, tagName, false, false, updateRecord);\n\n        if (this.isExpandable()) {\n          if (!this.expanded) {\n            const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node bogus');\n            textNodeElement.textContent = '\u2026';\n            UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n            this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n          }\n          break;\n        }\n\n        if (ElementsTreeElement.canShowInlineText(node)) {\n          const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n          const firstChild = node.firstChild;\n          if (!firstChild) {\n            throw new Error('ElementsTreeElement._nodeTitleInfo expects node.firstChild to be defined.');\n          }\n          const result = this.convertWhitespaceToEntities(firstChild.nodeValue());\n          textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n          UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n          UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n          this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n          if (updateRecord && updateRecord.hasChangedChildren()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n          if (updateRecord && updateRecord.isCharDataModified()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n          break;\n        }\n\n        if (this.treeOutline && this.treeOutline.isXMLMimeType || !ForbiddenClosingTagElements.has(tagName)) {\n          this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n        }\n        break;\n      }\n\n      case Node.TEXT_NODE:\n        if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'script') {\n          const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-js-node');\n          const text = node.nodeValue();\n          newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n          void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/javascript').then(updateSearchHighlight);\n        } else if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'style') {\n          const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-css-node');\n          const text = node.nodeValue();\n          newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n          void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/css').then(updateSearchHighlight);\n        } else {\n          UI.UIUtils.createTextChild(titleDOM, '\"');\n          const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n          const result = this.convertWhitespaceToEntities(node.nodeValue());\n          textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n          UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n          UI.UIUtils.createTextChild(titleDOM, '\"');\n          if (updateRecord && updateRecord.isCharDataModified()) {\n            UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n          }\n        }\n        break;\n\n      case Node.COMMENT_NODE: {\n        const commentElement = titleDOM.createChild('span', 'webkit-html-comment');\n        UI.UIUtils.createTextChild(commentElement, '<!--' + node.nodeValue() + '-->');\n        break;\n      }\n\n      case Node.DOCUMENT_TYPE_NODE: {\n        const docTypeElement = titleDOM.createChild('span', 'webkit-html-doctype');\n        UI.UIUtils.createTextChild(docTypeElement, '<!DOCTYPE ' + node.nodeName());\n        if (node.publicId) {\n          UI.UIUtils.createTextChild(docTypeElement, ' PUBLIC \"' + node.publicId + '\"');\n          if (node.systemId) {\n            UI.UIUtils.createTextChild(docTypeElement, ' \"' + node.systemId + '\"');\n          }\n        } else if (node.systemId) {\n          UI.UIUtils.createTextChild(docTypeElement, ' SYSTEM \"' + node.systemId + '\"');\n        }\n\n        if (node.internalSubset) {\n          UI.UIUtils.createTextChild(docTypeElement, ' [' + node.internalSubset + ']');\n        }\n\n        UI.UIUtils.createTextChild(docTypeElement, '>');\n        break;\n      }\n\n      case Node.CDATA_SECTION_NODE: {\n        const cdataElement = titleDOM.createChild('span', 'webkit-html-text-node');\n        UI.UIUtils.createTextChild(cdataElement, '<![CDATA[' + node.nodeValue() + ']]>');\n        break;\n      }\n\n      case Node.DOCUMENT_FRAGMENT_NODE: {\n        const fragmentElement = titleDOM.createChild('span', 'webkit-html-fragment');\n        fragmentElement.textContent = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n        break;\n      }\n\n      default: {\n        const nameWithSpaceCollapsed = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n        UI.UIUtils.createTextChild(titleDOM, nameWithSpaceCollapsed);\n      }\n    }\n\n    return titleDOM;\n  }\n\n  remove(): void {\n    if (this.nodeInternal.pseudoType()) {\n      return;\n    }\n    const parentElement = this.parent;\n    if (!parentElement) {\n      return;\n    }\n\n    if (!this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeType() === Node.DOCUMENT_NODE) {\n      return;\n    }\n    void this.nodeInternal.removeNode();\n  }\n\n  toggleEditAsHTML(callback?: ((arg0: boolean) => void), startEditing?: boolean): void {\n    if (this.editing && this.htmlEditElement) {\n      this.editing.commit();\n      return;\n    }\n\n    if (startEditing === false) {\n      return;\n    }\n\n    function selectNode(error: string|null): void {\n      if (callback) {\n        callback(!error);\n      }\n    }\n\n    function commitChange(initialValue: string, value: string): void {\n      if (initialValue !== value) {\n        node.setOuterHTML(value, selectNode);\n      }\n    }\n\n    function disposeCallback(): void {\n      if (callback) {\n        callback(false);\n      }\n    }\n\n    const node = this.nodeInternal;\n    void node.getOuterHTML().then(this.startEditingAsHTML.bind(this, commitChange, disposeCallback));\n  }\n\n  private copyCSSPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssPath(this.nodeInternal, true));\n  }\n\n  private copyJSPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(jsPath(this.nodeInternal, true));\n  }\n\n  private copyXPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, true));\n  }\n\n  private copyFullXPath(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, false));\n  }\n\n  async copyStyles(): Promise<void> {\n    const node = this.nodeInternal;\n    const cssModel = node.domModel().cssModel();\n    const cascade = await cssModel.cachedMatchedCascadeForNode(node);\n    if (!cascade) {\n      return;\n    }\n\n    const indent = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n    const lines: string[] = [];\n    for (const style of cascade.nodeStyles().reverse()) {\n      for (const property of style.leadingProperties()) {\n        if (!property.parsedOk || property.disabled || !property.activeInStyle() || property.implicit) {\n          continue;\n        }\n        if (cascade.isInherited(style) && !SDK.CSSMetadata.cssMetadata().isPropertyInherited(property.name)) {\n          continue;\n        }\n        if (style.parentRule && style.parentRule.isUserAgent()) {\n          continue;\n        }\n        if (cascade.propertyState(property) !== SDK.CSSMatchedStyles.PropertyState.Active) {\n          continue;\n        }\n        lines.push(`${indent}${property.name}: ${property.value};`);\n      }\n    }\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(lines.join('\\n'));\n  }\n\n  private highlightSearchResultsInternal(): void {\n    if (!this.searchQuery || !this.searchHighlightsVisible) {\n      return;\n    }\n    this.hideSearchHighlight();\n\n    const text = this.listItemElement.textContent || '';\n    const regexObject = Platform.StringUtilities.createPlainTextSearchRegex(this.searchQuery, 'gi');\n\n    let match = regexObject.exec(text);\n    const matchRanges = [];\n    while (match) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n      match = regexObject.exec(text);\n    }\n\n    // Fall back for XPath, etc. matches.\n    if (!matchRanges.length) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(0, text.length));\n    }\n\n    this.highlightResult = [];\n    UI.UIUtils.highlightSearchResults(this.listItemElement, matchRanges, this.highlightResult);\n  }\n\n  private editAsHTML(): void {\n    const promise = Common.Revealer.reveal(this.node());\n    void promise.then(() => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().action('elements.edit-as-html');\n      if (!action) {\n        return;\n      }\n      return action.execute();\n    });\n  }\n\n  // TODO: add unit tests for adorner-related methods after component and TypeScript works are done\n  adorn({name}: {name: string}, content?: HTMLElement): Adorners.Adorner.Adorner {\n    let adornerContent = content;\n    if (!adornerContent) {\n      adornerContent = document.createElement('span');\n      adornerContent.textContent = name;\n    }\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      name,\n      content: adornerContent,\n    };\n    if (isOpeningTag(this.tagTypeContext)) {\n      this.tagTypeContext.adorners.push(adorner);\n      ElementsPanel.instance().registerAdorner(adorner);\n      this.updateAdorners(this.tagTypeContext);\n    }\n    return adorner;\n  }\n\n  adornSlot({name}: {name: string}, context: OpeningTagContext): Adorners.Adorner.Adorner {\n    const linkIcon = new IconButton.Icon.Icon();\n    linkIcon\n        .data = {iconName: 'ic_show_node_16x16', color: 'var(--color-text-disabled)', width: '12px', height: '12px'};\n    const slotText = document.createElement('span');\n    slotText.textContent = name;\n    const adornerContent = document.createElement('span');\n    adornerContent.append(linkIcon);\n    adornerContent.append(slotText);\n    adornerContent.classList.add('adorner-with-icon');\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      name,\n      content: adornerContent,\n    };\n    context.adorners.push(adorner);\n    ElementsPanel.instance().registerAdorner(adorner);\n    this.updateAdorners(context);\n    return adorner;\n  }\n\n  removeAdorner(adornerToRemove: Adorners.Adorner.Adorner, context: OpeningTagContext): void {\n    const adorners = context.adorners;\n    ElementsPanel.instance().deregisterAdorner(adornerToRemove);\n    adornerToRemove.remove();\n    for (let i = 0; i < adorners.length; ++i) {\n      if (adorners[i] === adornerToRemove) {\n        adorners.splice(i, 1);\n        this.updateAdorners(context);\n        return;\n      }\n    }\n  }\n\n  removeAllAdorners(): void {\n    if (isOpeningTag(this.tagTypeContext)) {\n      for (const adorner of this.tagTypeContext.adorners) {\n        ElementsPanel.instance().deregisterAdorner(adorner);\n        adorner.remove();\n      }\n\n      this.tagTypeContext.adorners = [];\n      this.updateAdorners(this.tagTypeContext);\n    }\n  }\n\n  private updateAdorners(context: OpeningTagContext): void {\n    void context.adornersThrottler.schedule(this.updateAdornersInternal.bind(null, context));\n  }\n\n  private updateAdornersInternal(context: OpeningTagContext): Promise<void> {\n    const adornerContainer = context.adornerContainer;\n    if (!adornerContainer) {\n      return Promise.resolve();\n    }\n    const adorners = context.adorners;\n    if (adorners.length === 0) {\n      adornerContainer.classList.add('hidden');\n      return Promise.resolve();\n    }\n\n    adorners.sort(adornerComparator);\n\n    adornerContainer.removeChildren();\n    for (const adorner of adorners) {\n      adornerContainer.appendChild(adorner);\n    }\n    adornerContainer.classList.remove('hidden');\n    return Promise.resolve();\n  }\n\n  async updateStyleAdorners(): Promise<void> {\n    if (!isOpeningTag(this.tagTypeContext)) {\n      return;\n    }\n\n    const node = this.node();\n    const nodeId = node.id;\n    if (node.nodeType() === Node.COMMENT_NODE || node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE ||\n        node.nodeType() === Node.TEXT_NODE || nodeId === undefined) {\n      return;\n    }\n\n    const styles = await node.domModel().cssModel().getComputedStyle(nodeId);\n    for (const styleAdorner of this.tagTypeContext.styleAdorners) {\n      this.removeAdorner(styleAdorner, this.tagTypeContext);\n    }\n    this.tagTypeContext.styleAdorners = [];\n    if (!styles) {\n      return;\n    }\n\n    const display = styles.get('display');\n    const isGrid = display === 'grid' || display === 'inline-grid';\n    const isFlex = display === 'flex' || display === 'inline-flex';\n\n    const containerType = styles.get('container-type');\n    const contain = styles.get('contain');\n    const isContainer =\n        SDK.CSSContainerQuery.getQueryAxis(`${containerType} ${contain}`) !== SDK.CSSContainerQuery.QueryAxis.None;\n\n    if (isGrid) {\n      this.pushGridAdorner(this.tagTypeContext);\n    }\n    if (isFlex) {\n      this.pushFlexAdorner(this.tagTypeContext);\n    }\n    if (styles.get('scroll-snap-type') && styles.get('scroll-snap-type') !== 'none') {\n      this.pushScrollSnapAdorner(this.tagTypeContext);\n    }\n    if (isContainer) {\n      this.pushContainerAdorner(this.tagTypeContext);\n    }\n  }\n\n  pushGridAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.GRID);\n    const adorner = this.adorn(config);\n    adorner.classList.add('grid');\n\n    const onClick = (((): void => {\n                       if (adorner.isActive()) {\n                         node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n                       } else {\n                         node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableGridMode),\n      ariaLabelActive: i18nString(UIStrings.disableGridMode),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PersistentGridOverlayStateChanged, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.push(adorner);\n  }\n\n  pushScrollSnapAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL_SNAP);\n    const adorner = this.adorn(config);\n    adorner.classList.add('scroll-snap');\n\n    const onClick = (((): void => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightScrollSnapInPersistentOverlay(nodeId);\n                       } else {\n                         model.hideScrollSnapInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n      ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PersistentScrollSnapOverlayStateChanged, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.push(adorner);\n  }\n\n  pushFlexAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.FLEX);\n    const adorner = this.adorn(config);\n    adorner.classList.add('flex');\n\n    const onClick = (((): void => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightFlexContainerInPersistentOverlay(nodeId);\n                       } else {\n                         model.hideFlexContainerInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableFlexMode),\n      ariaLabelActive: i18nString(UIStrings.disableFlexMode),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PersistentFlexContainerOverlayStateChanged, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.push(adorner);\n  }\n\n  pushContainerAdorner(context: OpeningTagContext): void {\n    const node = this.node();\n    const nodeId = node.id;\n    if (!nodeId) {\n      return;\n    }\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.CONTAINER);\n    const adorner = this.adorn(config);\n    adorner.classList.add('container');\n\n    const onClick = (((): void => {\n                       const model = node.domModel().overlayModel();\n                       if (adorner.isActive()) {\n                         model.highlightContainerQueryInPersistentOverlay(nodeId);\n                       } else {\n                         model.hideContainerQueryInPersistentOverlay(nodeId);\n                       }\n                     }) as EventListener);\n\n    adorner.addInteraction(onClick, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n      ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n    });\n\n    node.domModel().overlayModel().addEventListener(\n        SDK.OverlayModel.Events.PersistentContainerQueryOverlayStateChanged, event => {\n          const {nodeId: eventNodeId, enabled} = event.data;\n          if (eventNodeId !== nodeId) {\n            return;\n          }\n          adorner.toggle(enabled);\n        });\n\n    context.styleAdorners.push(adorner);\n  }\n}\n\nexport const InitialChildrenLimit = 500;\n\n// A union of HTML4 and HTML5-Draft elements that explicitly\n// or implicitly (for HTML5) forbid the closing tag.\nexport const ForbiddenClosingTagElements = new Set<string>([\n  'area', 'base',  'basefont', 'br',   'canvas',   'col',  'command', 'embed',  'frame', 'hr',\n  'img',  'input', 'keygen',   'link', 'menuitem', 'meta', 'param',   'source', 'track', 'wbr',\n]);\n\n// These tags we do not allow editing their tag name.\nexport const EditTagBlocklist = new Set<string>(['html', 'head', 'body']);\n\nexport function adornerComparator(adornerA: Adorners.Adorner.Adorner, adornerB: Adorners.Adorner.Adorner): number {\n  const compareCategories =\n      ElementsComponents.AdornerManager.compareAdornerNamesByCategory(adornerB.name, adornerB.name);\n  if (compareCategories === 0) {\n    return adornerA.name.localeCompare(adornerB.name);\n  }\n  return compareCategories;\n}\nexport interface EditorHandles {\n  commit: () => void;\n  cancel: () => void;\n  editor?: TextEditor.TextEditor.TextEditor;\n  resize: () => void;\n}\n"],
  "mappings": "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",
  "names": []
}
