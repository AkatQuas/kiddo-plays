{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/changes/ChangesSidebar.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Snippets from '../snippets/snippets.js';\n\nimport changesSidebarStyles from './changesSidebar.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Name of an item from source map\n  *@example {compile.html} PH1\n  */\n  sFromSourceMap: '{PH1} (from source map)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChangesSidebar extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) {\n  private treeoutline: UI.TreeOutline.TreeOutlineInShadow;\n  private readonly treeElements: Map<Workspace.UISourceCode.UISourceCode, UISourceCodeTreeElement>;\n  private readonly workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl;\n  constructor(workspaceDiff: WorkspaceDiff.WorkspaceDiff.WorkspaceDiffImpl) {\n    super();\n    this.treeoutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeoutline.setFocusable(false);\n\n    this.treeoutline.setComparator((a, b) => Platform.StringUtilities.compare(a.titleAsText(), b.titleAsText()));\n    this.treeoutline.addEventListener(UI.TreeOutline.Events.ElementSelected, this.selectionChanged, this);\n    UI.ARIAUtils.markAsTablist(this.treeoutline.contentElement);\n\n    this.element.appendChild(this.treeoutline.element);\n\n    this.treeElements = new Map();\n    this.workspaceDiff = workspaceDiff;\n    this.workspaceDiff.modifiedUISourceCodes().forEach(this.addUISourceCode.bind(this));\n    this.workspaceDiff.addEventListener(\n        WorkspaceDiff.WorkspaceDiff.Events.ModifiedStatusChanged, this.uiSourceCodeMofiedStatusChanged, this);\n  }\n\n  selectUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode, omitFocus?: boolean|undefined): void {\n    const treeElement = this.treeElements.get(uiSourceCode);\n    if (!treeElement) {\n      return;\n    }\n    treeElement.select(omitFocus);\n  }\n\n  selectedUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    // @ts-ignore uiSourceCode seems to be dynamically attached.\n    return this.treeoutline.selectedTreeElement ? this.treeoutline.selectedTreeElement.uiSourceCode : null;\n  }\n\n  private selectionChanged(): void {\n    this.dispatchEventToListeners(Events.SelectedUISourceCodeChanged);\n  }\n\n  private uiSourceCodeMofiedStatusChanged(\n      event: Common.EventTarget.EventTargetEvent<WorkspaceDiff.WorkspaceDiff.ModifiedStatusChangedEvent>): void {\n    if (event.data.isModified) {\n      this.addUISourceCode(event.data.uiSourceCode);\n    } else {\n      this.removeUISourceCode(event.data.uiSourceCode);\n    }\n  }\n\n  private removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = this.treeElements.get(uiSourceCode);\n    this.treeElements.delete(uiSourceCode);\n    if (this.treeoutline.selectedTreeElement === treeElement) {\n      const nextElementToSelect = treeElement.previousSibling || treeElement.nextSibling;\n      if (nextElementToSelect) {\n        nextElementToSelect.select(true);\n      } else {\n        treeElement.deselect();\n        this.selectionChanged();\n      }\n    }\n    if (treeElement) {\n      this.treeoutline.removeChild(treeElement);\n      treeElement.dispose();\n    }\n    if (this.treeoutline.rootElement().childCount() === 0) {\n      this.treeoutline.setFocusable(false);\n    }\n  }\n\n  private addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const treeElement = new UISourceCodeTreeElement(uiSourceCode);\n    this.treeElements.set(uiSourceCode, treeElement);\n    this.treeoutline.setFocusable(true);\n    this.treeoutline.appendChild(treeElement);\n    if (!this.treeoutline.selectedTreeElement) {\n      treeElement.select(true);\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.treeoutline.registerCSSFiles([changesSidebarStyles]);\n  }\n}\n\nexport const enum Events {\n  SelectedUISourceCodeChanged = 'SelectedUISourceCodeChanged',\n}\n\nexport type EventTypes = {\n  [Events.SelectedUISourceCodeChanged]: void,\n};\n\nexport class UISourceCodeTreeElement extends UI.TreeOutline.TreeElement {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private readonly eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.uiSourceCode = uiSourceCode;\n    this.listItemElement.classList.add('navigator-' + uiSourceCode.contentType().name() + '-tree-item');\n    UI.ARIAUtils.markAsTab(this.listItemElement);\n\n    let iconType: 'largeicon-navigator-snippet'|'largeicon-navigator-file' = 'largeicon-navigator-file';\n    if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(this.uiSourceCode)) {\n      iconType = 'largeicon-navigator-snippet';\n    }\n    const defaultIcon = UI.Icon.Icon.create(iconType, 'icon');\n    this.setLeadingIcons([defaultIcon]);\n\n    this.eventListeners = [\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.updateTitle, this),\n      uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.updateTitle, this),\n    ];\n\n    this.updateTitle();\n  }\n\n  private updateTitle(): void {\n    let titleText: string = this.uiSourceCode.displayName();\n    if (this.uiSourceCode.isDirty()) {\n      titleText = '*' + titleText;\n    }\n    this.title = titleText;\n\n    let tooltip: Common.UIString.LocalizedString|string = this.uiSourceCode.url();\n    if (this.uiSourceCode.contentType().isFromSourceMap()) {\n      tooltip = i18nString(UIStrings.sFromSourceMap, {PH1: this.uiSourceCode.displayName()});\n    }\n    this.tooltip = tooltip;\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
