{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/css_overview/CSSOverviewUnusedDeclarations.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Label to explain why top values are ignored\n  */\n  topAppliedToAStatically: '`Top` applied to a statically positioned element',\n  /**\n  *@description Label to explain why left (opposite to right) values are ignored.\n  */\n  leftAppliedToAStatically: '`Left` applied to a statically positioned element',\n  /**\n  *@description Label to explain why right values are ignored\n  */\n  rightAppliedToAStatically: '`Right` applied to a statically positioned element',\n  /**\n  *@description Label to explain why bottom values are ignored\n  */\n  bottomAppliedToAStatically: '`Bottom` applied to a statically positioned element',\n  /**\n  *@description Label to explain why width values are ignored\n  */\n  widthAppliedToAnInlineElement: '`Width` applied to an inline element',\n  /**\n  *@description Label to explain why height values are ignored\n  */\n  heightAppliedToAnInlineElement: '`Height` applied to an inline element',\n  /**\n  *@description Label to explain why vertical-align values are ignored\n  */\n  verticalAlignmentAppliedTo: 'Vertical alignment applied to element which is neither `inline` nor `table-cell`',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewUnusedDeclarations.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface UnusedDeclaration {\n  declaration: string;\n  nodeId: Protocol.DOM.BackendNodeId;\n}\n\nexport class CSSOverviewUnusedDeclarations {\n  private static add(target: Map<string, UnusedDeclaration[]>, key: string, item: {\n    declaration: string,\n    nodeId: Protocol.DOM.BackendNodeId,\n  }): void {\n    const values = target.get(key) || [];\n    values.push(item);\n    target.set(key, values);\n  }\n\n  static checkForUnusedPositionValues(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      positionIdx: number, topIdx: number, leftIdx: number, rightIdx: number, bottomIdx: number): void {\n    if (strings[positionIdx] !== 'static') {\n      return;\n    }\n\n    if (strings[topIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.topAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `top: ${strings[topIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[leftIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.leftAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `left: ${strings[leftIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[rightIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.rightAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `right: ${strings[rightIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[bottomIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.bottomAppliedToAStatically);\n      this.add(unusedDeclarations, reason, {\n        declaration: `bottom: ${strings[bottomIdx]}`,\n        nodeId,\n      });\n    }\n  }\n\n  static checkForUnusedWidthAndHeightValues(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      displayIdx: number, widthIdx: number, heightIdx: number): void {\n    if (strings[displayIdx] !== 'inline') {\n      return;\n    }\n\n    if (strings[widthIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.widthAppliedToAnInlineElement);\n      this.add(unusedDeclarations, reason, {\n        declaration: `width: ${strings[widthIdx]}`,\n        nodeId,\n      });\n    }\n\n    if (strings[heightIdx] !== 'auto') {\n      const reason = i18nString(UIStrings.heightAppliedToAnInlineElement);\n      this.add(unusedDeclarations, reason, {\n        declaration: `height: ${strings[heightIdx]}`,\n        nodeId,\n      });\n    }\n  }\n\n  static checkForInvalidVerticalAlignment(\n      unusedDeclarations: Map<string, UnusedDeclaration[]>, nodeId: Protocol.DOM.BackendNodeId, strings: string[],\n      displayIdx: number, verticalAlignIdx: number): void {\n    if (!strings[displayIdx] || strings[displayIdx] === 'inline' || strings[displayIdx].startsWith('table')) {\n      return;\n    }\n\n    if (strings[verticalAlignIdx] !== 'baseline') {\n      const reason = i18nString(UIStrings.verticalAlignmentAppliedTo);\n      this.add(unusedDeclarations, reason, {\n        declaration: `vertical-align: ${strings[verticalAlignIdx]}`,\n        nodeId,\n      });\n    }\n  }\n}\n"],
  "mappings": "AAIA;AAGA,MAAM,YAAY;AAAA,EAIhB,yBAAyB;AAAA,EAIzB,0BAA0B;AAAA,EAI1B,2BAA2B;AAAA,EAI3B,4BAA4B;AAAA,EAI5B,+BAA+B;AAAA,EAI/B,gCAAgC;AAAA,EAIhC,4BAA4B;AAAA;AAE9B,MAAM,OAAO,KAAK,KAAK,kBAAkB,wDAAwD;AACjG,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAMzD,2CAAoC;AAAA,SAC1B,IAAI,QAA0C,KAAa,MAGjE;AACP,UAAM,SAAS,OAAO,IAAI,QAAQ;AAClC,WAAO,KAAK;AACZ,WAAO,IAAI,KAAK;AAAA;AAAA,SAGX,6BACH,oBAAsD,QAAoC,SAC1F,aAAqB,QAAgB,SAAiB,UAAkB,WAAyB;AACnG,QAAI,QAAQ,iBAAiB,UAAU;AACrC;AAAA;AAGF,QAAI,QAAQ,YAAY,QAAQ;AAC9B,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,QAAQ,QAAQ;AAAA,QAC7B;AAAA;AAAA;AAIJ,QAAI,QAAQ,aAAa,QAAQ;AAC/B,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,SAAS,QAAQ;AAAA,QAC9B;AAAA;AAAA;AAIJ,QAAI,QAAQ,cAAc,QAAQ;AAChC,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,UAAU,QAAQ;AAAA,QAC/B;AAAA;AAAA;AAIJ,QAAI,QAAQ,eAAe,QAAQ;AACjC,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,WAAW,QAAQ;AAAA,QAChC;AAAA;AAAA;AAAA;AAAA,SAKC,mCACH,oBAAsD,QAAoC,SAC1F,YAAoB,UAAkB,WAAyB;AACjE,QAAI,QAAQ,gBAAgB,UAAU;AACpC;AAAA;AAGF,QAAI,QAAQ,cAAc,QAAQ;AAChC,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,UAAU,QAAQ;AAAA,QAC/B;AAAA;AAAA;AAIJ,QAAI,QAAQ,eAAe,QAAQ;AACjC,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,WAAW,QAAQ;AAAA,QAChC;AAAA;AAAA;AAAA;AAAA,SAKC,iCACH,oBAAsD,QAAoC,SAC1F,YAAoB,kBAAgC;AACtD,QAAI,CAAC,QAAQ,eAAe,QAAQ,gBAAgB,YAAY,QAAQ,YAAY,WAAW,UAAU;AACvG;AAAA;AAGF,QAAI,QAAQ,sBAAsB,YAAY;AAC5C,YAAM,SAAS,WAAW,UAAU;AACpC,WAAK,IAAI,oBAAoB,QAAQ;AAAA,QACnC,aAAa,mBAAmB,QAAQ;AAAA,QACxC;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
