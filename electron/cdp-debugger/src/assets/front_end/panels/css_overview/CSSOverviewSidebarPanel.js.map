{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/css_overview/CSSOverviewSidebarPanel.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport cssOverviewSidebarPanelStyles from './cssOverviewSidebarPanel.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for the 'Clear overview' button in the CSS Overview report\n  */\n  clearOverview: 'Clear overview',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CSSOverviewSidebarPanel extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(\n    UI.Widget.VBox) {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get ITEM_CLASS_NAME(): string {\n    return 'overview-sidebar-panel-item';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get SELECTED(): string {\n    return 'selected';\n  }\n\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('overview-sidebar-panel');\n    this.contentElement.addEventListener('click', this.#onItemClick.bind(this));\n\n    // Clear overview.\n    const clearResultsButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearOverview), 'largeicon-clear');\n    clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.#reset, this);\n\n    // Toolbar.\n    const toolbarElement = this.contentElement.createChild('div', 'overview-toolbar');\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarElement);\n    toolbar.appendToolbarItem(clearResultsButton);\n  }\n\n  addItem(name: string, id: string): void {\n    const item = this.contentElement.createChild('div', CSSOverviewSidebarPanel.ITEM_CLASS_NAME);\n    item.textContent = name;\n    item.dataset.id = id;\n  }\n\n  #reset(): void {\n    this.dispatchEventToListeners(SidebarEvents.Reset);\n  }\n\n  #deselectAllItems(): void {\n    const items = this.contentElement.querySelectorAll(`.${CSSOverviewSidebarPanel.ITEM_CLASS_NAME}`);\n    items.forEach(item => {\n      item.classList.remove(CSSOverviewSidebarPanel.SELECTED);\n    });\n  }\n\n  #onItemClick(event: Event): void {\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(CSSOverviewSidebarPanel.ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n    this.select(id);\n    this.dispatchEventToListeners(SidebarEvents.ItemSelected, id);\n  }\n\n  select(id: string): void {\n    const target = this.contentElement.querySelector(`[data-id=${CSS.escape(id)}]`);\n    if (!target) {\n      return;\n    }\n\n    if (target.classList.contains(CSSOverviewSidebarPanel.SELECTED)) {\n      return;\n    }\n\n    this.#deselectAllItems();\n    target.classList.add(CSSOverviewSidebarPanel.SELECTED);\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([cssOverviewSidebarPanelStyles]);\n  }\n}\n\nexport const enum SidebarEvents {\n  ItemSelected = 'ItemSelected',\n  Reset = 'Reset',\n}\n\nexport type EventTypes = {\n  [SidebarEvents.ItemSelected]: string,\n  [SidebarEvents.Reset]: void,\n};\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,eAAe;AAAA;AAEjB,MAAM,OAAO,KAAK,KAAK,kBAAkB,kDAAkD;AAC3F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,6CAAsC,OAAO,cAAc,WAC9D,GAAG,OAAO,MAAM;AAAA,aAEP,kBAA0B;AACnC,WAAO;AAAA;AAAA,aAIE,WAAmB;AAC5B,WAAO;AAAA;AAAA,EAGT,cAAc;AACZ,UAAM;AAEN,SAAK,eAAe,UAAU,IAAI;AAClC,SAAK,eAAe,iBAAiB,SAAS,kBAAkB,KAAK;AAGrE,UAAM,qBAAqB,IAAI,GAAG,QAAQ,cAAc,WAAW,UAAU,gBAAgB;AAC7F,uBAAmB,iBAAiB,GAAG,QAAQ,cAAc,OAAO,OAAO,aAAa;AAGxF,UAAM,iBAAiB,KAAK,eAAe,YAAY,OAAO;AAC9D,UAAM,UAAU,IAAI,GAAG,QAAQ,QAAQ,IAAI;AAC3C,YAAQ,kBAAkB;AAAA;AAAA,EAG5B,QAAQ,MAAc,IAAkB;AACtC,UAAM,OAAO,KAAK,eAAe,YAAY,OAAO,wBAAwB;AAC5E,SAAK,cAAc;AACnB,SAAK,QAAQ,KAAK;AAAA;AAAA,WAGL;AACb,SAAK,yBAAyB,cAAc;AAAA;AAAA,sBAGpB;AACxB,UAAM,QAAQ,KAAK,eAAe,iBAAiB,IAAI,wBAAwB;AAC/E,UAAM,QAAQ,UAAQ;AACpB,WAAK,UAAU,OAAO,wBAAwB;AAAA;AAAA;AAAA,eAIrC,OAAoB;AAC/B,UAAM,SAAU,MAAM,eAAe;AACrC,QAAI,CAAC,OAAO,UAAU,SAAS,wBAAwB,kBAAkB;AACvE;AAAA;AAGF,UAAM,EAAC,OAAM,OAAO;AACpB,QAAI,CAAC,IAAI;AACP;AAAA;AAEF,SAAK,OAAO;AACZ,SAAK,yBAAyB,cAAc,cAAc;AAAA;AAAA,EAG5D,OAAO,IAAkB;AACvB,UAAM,SAAS,KAAK,eAAe,cAAc,YAAY,IAAI,OAAO;AACxE,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,QAAI,OAAO,UAAU,SAAS,wBAAwB,WAAW;AAC/D;AAAA;AAGF;AACA,WAAO,UAAU,IAAI,wBAAwB;AAAA;AAAA,EAE/C,WAAiB;AACf,UAAM;AACN,SAAK,iBAAiB,CAAC;AAAA;AAAA;AAIpB,WAAW,gBAAX,kBAAW,mBAAX;AACL,mCAAe;AACf,4BAAQ;AAFQ;AAAA;",
  "names": []
}
