{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/css_overview/CSSOverviewController.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ContrastIssue} from './CSSOverviewCompletedView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\nexport class OverviewController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  currentUrl: string;\n  constructor() {\n    super();\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.InspectedURLChanged, this.#checkUrlAndResetIfChanged, this);\n  }\n\n  #checkUrlAndResetIfChanged(): void {\n    if (this.currentUrl === SDK.TargetManager.TargetManager.instance().inspectedURL()) {\n      return;\n    }\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    this.dispatchEventToListeners(Events.Reset);\n  }\n}\n\nexport type PopulateNodesEvent = {\n  type: 'contrast',\n  key: string,\n  section: string|undefined,\n  nodes: ContrastIssue[],\n}|{\n  type: 'color',\n  color: string,\n  section: string | undefined,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n}|{\n  type: 'unused-declarations',\n  declaration: string,\n  nodes: UnusedDeclaration[],\n}|{\n  type: 'media-queries',\n  text: string,\n  nodes: Protocol.CSS.CSSMedia[],\n}|{\n  type: 'font-info',\n  name: string,\n  nodes: {nodeId: Protocol.DOM.BackendNodeId}[],\n};\n\nexport type PopulateNodesEventNodes = PopulateNodesEvent['nodes'];\nexport type PopulateNodesEventNodeTypes = PopulateNodesEventNodes[0];\n\nexport const enum Events {\n  RequestOverviewStart = 'RequestOverviewStart',\n  RequestNodeHighlight = 'RequestNodeHighlight',\n  PopulateNodes = 'PopulateNodes',\n  RequestOverviewCancel = 'RequestOverviewCancel',\n  OverviewCompleted = 'OverviewCompleted',\n  Reset = 'Reset',\n}\n\nexport type EventTypes = {\n  [Events.RequestOverviewStart]: void,\n  [Events.RequestNodeHighlight]: number,\n  [Events.PopulateNodes]: {payload: PopulateNodesEvent},\n  [Events.RequestOverviewCancel]: void,\n  [Events.OverviewCompleted]: void,\n  [Events.Reset]: void,\n};\n"],
  "mappings": "AAIA;AACA;AAMO,wCAAiC,OAAO,cAAc,cAA0B;AAAA,EACrF;AAAA,EACA,cAAc;AACZ;AAEA,SAAK,aAAa,IAAI,cAAc,cAAc,WAAW;AAC7D,QAAI,cAAc,cAAc,WAAW,iBACvC,IAAI,cAAc,OAAO,qBAAqB,iCAAiC;AAAA;AAAA,+BAGlD;AACjC,QAAI,KAAK,eAAe,IAAI,cAAc,cAAc,WAAW,gBAAgB;AACjF;AAAA;AAGF,SAAK,aAAa,IAAI,cAAc,cAAc,WAAW;AAC7D,SAAK,yBAAyB,OAAO;AAAA;AAAA;AA+BlC,WAAW,SAAX,kBAAW,YAAX;AACL,oCAAuB;AACvB,oCAAuB;AACvB,6BAAgB;AAChB,qCAAwB;AACxB,iCAAoB;AACpB,qBAAQ;AANQ;AAAA;",
  "names": []
}
