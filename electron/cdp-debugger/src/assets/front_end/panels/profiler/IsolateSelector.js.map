{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/profiler/IsolateSelector.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description aria label for javascript VM instances target list in heap profiler\n  */\n  javascriptVmInstances: 'JavaScript VM instances',\n  /**\n  *@description Text in Isolate Selector of a profiler tool\n  */\n  totalJsHeapSize: 'Total JS heap size',\n  /**\n  *@description Total trend div title in Isolate Selector of a profiler tool\n  *@example {3} PH1\n  */\n  totalPageJsHeapSizeChangeTrend: 'Total page JS heap size change trend over the last {PH1} minutes.',\n  /**\n  *@description Total value div title in Isolate Selector of a profiler tool\n  */\n  totalPageJsHeapSizeAcrossAllVm: 'Total page JS heap size across all VM instances.',\n  /**\n  *@description Heap size change trend measured in kB/s\n  *@example {2 kB} PH1\n  */\n  changeRate: '{PH1}/s',\n  /**\n  *@description Text for isolate selector list items with positive change rate\n  *@example {1.0 kB} PH1\n  */\n  increasingBySPerSecond: 'increasing by {PH1} per second',\n  /**\n  *@description Text for isolate selector list items with negative change rate\n  *@example {1.0 kB} PH1\n  */\n  decreasingBySPerSecond: 'decreasing by {PH1} per second',\n  /**\n  *@description Heap div title in Isolate Selector of a profiler tool\n  */\n  heapSizeInUseByLiveJsObjects: 'Heap size in use by live JS objects.',\n  /**\n  *@description Trend div title in Isolate Selector of a profiler tool\n  *@example {3} PH1\n  */\n  heapSizeChangeTrendOverTheLastS: 'Heap size change trend over the last {PH1} minutes.',\n  /**\n  *@description Text to show an item is empty\n  */\n  empty: '(empty)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/IsolateSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IsolateSelector extends UI.Widget.VBox implements UI.ListControl.ListDelegate<ListItem>,\n                                                               SDK.IsolateManager.Observer {\n  readonly items: UI.ListModel.ListModel<ListItem>;\n  list: UI.ListControl.ListControl<ListItem>;\n  readonly itemByIsolate: Map<SDK.IsolateManager.Isolate, ListItem>;\n  readonly totalElement: HTMLDivElement;\n  totalValueDiv: HTMLElement;\n  readonly totalTrendDiv: HTMLElement;\n\n  constructor() {\n    super(false);\n\n    this.items = new UI.ListModel.ListModel();\n    this.list = new UI.ListControl.ListControl(this.items, this, UI.ListControl.ListMode.NonViewport);\n    this.list.element.classList.add('javascript-vm-instances-list');\n    UI.ARIAUtils.setAccessibleName(this.list.element, i18nString(UIStrings.javascriptVmInstances));\n    this.contentElement.appendChild(this.list.element);\n\n    this.itemByIsolate = new Map();\n\n    this.totalElement = document.createElement('div');\n    this.totalElement.classList.add('profile-memory-usage-item');\n    this.totalElement.classList.add('hbox');\n    this.totalValueDiv = this.totalElement.createChild('div', 'profile-memory-usage-item-size');\n    this.totalTrendDiv = this.totalElement.createChild('div', 'profile-memory-usage-item-trend');\n    this.totalElement.createChild('div').textContent = i18nString(UIStrings.totalJsHeapSize);\n    const trendIntervalMinutes = Math.round(SDK.IsolateManager.MemoryTrendWindowMs / 60e3);\n    UI.Tooltip.Tooltip.install(\n        this.totalTrendDiv, i18nString(UIStrings.totalPageJsHeapSizeChangeTrend, {PH1: trendIntervalMinutes}));\n    UI.Tooltip.Tooltip.install(this.totalValueDiv, i18nString(UIStrings.totalPageJsHeapSizeAcrossAllVm));\n\n    SDK.IsolateManager.IsolateManager.instance().observeIsolates(this);\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.NameChanged, this.targetChanged, this);\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.InspectedURLChanged, this.targetChanged, this);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    SDK.IsolateManager.IsolateManager.instance().addEventListener(\n        SDK.IsolateManager.Events.MemoryChanged, this.heapStatsChanged, this);\n  }\n\n  willHide(): void {\n    SDK.IsolateManager.IsolateManager.instance().removeEventListener(\n        SDK.IsolateManager.Events.MemoryChanged, this.heapStatsChanged, this);\n  }\n\n  isolateAdded(isolate: SDK.IsolateManager.Isolate): void {\n    this.list.element.tabIndex = 0;\n    const item = new ListItem(isolate);\n    const index = (item.model() as SDK.RuntimeModel.RuntimeModel).target() ===\n            SDK.TargetManager.TargetManager.instance().mainTarget() ?\n        0 :\n        this.items.length;\n    this.items.insert(index, item);\n    this.itemByIsolate.set(isolate, item);\n    if (this.items.length === 1 || isolate.isMainThread()) {\n      this.list.selectItem(item);\n    }\n    this.update();\n  }\n\n  isolateChanged(isolate: SDK.IsolateManager.Isolate): void {\n    const item = this.itemByIsolate.get(isolate);\n    if (item) {\n      item.updateTitle();\n    }\n    this.update();\n  }\n\n  isolateRemoved(isolate: SDK.IsolateManager.Isolate): void {\n    const item = this.itemByIsolate.get(isolate);\n    if (item) {\n      this.items.remove(this.items.indexOf(item));\n    }\n    this.itemByIsolate.delete(isolate);\n    if (this.items.length === 0) {\n      this.list.element.tabIndex = -1;\n    }\n    this.update();\n  }\n\n  targetChanged(event: Common.EventTarget.EventTargetEvent<SDK.Target.Target>): void {\n    const target = event.data;\n    const model = target.model(SDK.RuntimeModel.RuntimeModel);\n    if (!model) {\n      return;\n    }\n    const isolate = SDK.IsolateManager.IsolateManager.instance().isolateByModel(model);\n    const item = isolate && this.itemByIsolate.get(isolate);\n    if (item) {\n      item.updateTitle();\n    }\n  }\n\n  heapStatsChanged(event: Common.EventTarget.EventTargetEvent<SDK.IsolateManager.Isolate>): void {\n    const isolate = event.data;\n    const listItem = this.itemByIsolate.get(isolate);\n    if (listItem) {\n      listItem.updateStats();\n    }\n    this.updateTotal();\n  }\n\n  updateTotal(): void {\n    let total = 0;\n    let trend = 0;\n    for (const isolate of SDK.IsolateManager.IsolateManager.instance().isolates()) {\n      total += isolate.usedHeapSize();\n      trend += isolate.usedHeapSizeGrowRate();\n    }\n    this.totalValueDiv.textContent = Platform.NumberUtilities.bytesToString(total);\n    IsolateSelector.formatTrendElement(trend, this.totalTrendDiv);\n  }\n\n  static formatTrendElement(trendValueMs: number, element: Element): void {\n    const changeRateBytesPerSecond = trendValueMs * 1e3;\n    const changeRateThresholdBytesPerSecond = 1000;\n    if (Math.abs(changeRateBytesPerSecond) < changeRateThresholdBytesPerSecond) {\n      return;\n    }\n    const changeRateText = Platform.NumberUtilities.bytesToString(Math.abs(changeRateBytesPerSecond));\n    let changeText, changeLabel;\n    if (changeRateBytesPerSecond > 0) {\n      changeText = '\\u2B06' + i18nString(UIStrings.changeRate, {PH1: changeRateText});\n      element.classList.toggle('increasing', true);\n      changeLabel = i18nString(UIStrings.increasingBySPerSecond, {PH1: changeRateText});\n    } else {\n      changeText = '\\u2B07' + i18nString(UIStrings.changeRate, {PH1: changeRateText});\n      element.classList.toggle('increasing', false);\n      changeLabel = i18nString(UIStrings.decreasingBySPerSecond, {PH1: changeRateText});\n    }\n    element.textContent = changeText;\n    UI.ARIAUtils.setAccessibleName(element, changeLabel);\n  }\n\n  totalMemoryElement(): Element {\n    return this.totalElement;\n  }\n\n  createElementForItem(item: ListItem): Element {\n    return item.element;\n  }\n\n  heightForItem(_item: ListItem): number {\n    console.assert(false, 'should not be called');\n    return 0;\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return false;\n  }\n\n  isItemSelectable(_item: ListItem): boolean {\n    return true;\n  }\n\n  selectedItemChanged(_from: ListItem|null, to: ListItem|null, fromElement: Element|null, toElement: Element|null):\n      void {\n    if (fromElement) {\n      fromElement.classList.remove('selected');\n    }\n    if (toElement) {\n      toElement.classList.add('selected');\n    }\n    const model = to && to.model();\n    UI.Context.Context.instance().setFlavor(\n        SDK.HeapProfilerModel.HeapProfilerModel, model && model.heapProfilerModel());\n    UI.Context.Context.instance().setFlavor(\n        SDK.CPUProfilerModel.CPUProfilerModel, model && model.target().model(SDK.CPUProfilerModel.CPUProfilerModel));\n  }\n\n  update(): void {\n    this.updateTotal();\n    this.list.invalidateRange(0, this.items.length);\n  }\n}\n\nexport class ListItem {\n  isolate: SDK.IsolateManager.Isolate;\n  element: HTMLDivElement;\n  heapDiv: HTMLElement;\n  readonly trendDiv: HTMLElement;\n  readonly nameDiv: HTMLElement;\n\n  constructor(isolate: SDK.IsolateManager.Isolate) {\n    this.isolate = isolate;\n    const trendIntervalMinutes = Math.round(SDK.IsolateManager.MemoryTrendWindowMs / 60e3);\n    this.element = document.createElement('div');\n    this.element.classList.add('profile-memory-usage-item');\n    this.element.classList.add('hbox');\n    UI.ARIAUtils.markAsOption(this.element);\n    this.heapDiv = this.element.createChild('div', 'profile-memory-usage-item-size');\n    UI.Tooltip.Tooltip.install(this.heapDiv, i18nString(UIStrings.heapSizeInUseByLiveJsObjects));\n    this.trendDiv = this.element.createChild('div', 'profile-memory-usage-item-trend');\n    UI.Tooltip.Tooltip.install(\n        this.trendDiv, i18nString(UIStrings.heapSizeChangeTrendOverTheLastS, {PH1: trendIntervalMinutes}));\n    this.nameDiv = this.element.createChild('div', 'profile-memory-usage-item-name');\n    this.updateTitle();\n  }\n\n  model(): SDK.RuntimeModel.RuntimeModel|null {\n    return this.isolate.runtimeModel();\n  }\n\n  updateStats(): void {\n    this.heapDiv.textContent = Platform.NumberUtilities.bytesToString(this.isolate.usedHeapSize());\n    IsolateSelector.formatTrendElement(this.isolate.usedHeapSizeGrowRate(), this.trendDiv);\n  }\n\n  updateTitle(): void {\n    const modelCountByName = new Map<string, number>();\n    for (const model of this.isolate.models()) {\n      const target = model.target();\n      const name = SDK.TargetManager.TargetManager.instance().mainTarget() !== target ? target.name() : '';\n      const parsedURL = new Common.ParsedURL.ParsedURL(target.inspectedURL());\n      const domain = parsedURL.isValid ? parsedURL.domain() : '';\n      const title =\n          target.decorateLabel(domain && name ? `${domain}: ${name}` : name || domain || i18nString(UIStrings.empty));\n      modelCountByName.set(title, (modelCountByName.get(title) || 0) + 1);\n    }\n    this.nameDiv.removeChildren();\n    const titles = [];\n    for (const [name, count] of modelCountByName) {\n      const title = count > 1 ? `${name} (${count})` : name;\n      titles.push(title);\n      const titleDiv = this.nameDiv.createChild('div');\n      titleDiv.textContent = title;\n      UI.Tooltip.Tooltip.install(titleDiv, String(title));\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
