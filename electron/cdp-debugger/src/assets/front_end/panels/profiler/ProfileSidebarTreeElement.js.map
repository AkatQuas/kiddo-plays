{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/profiler/ProfileSidebarTreeElement.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {DataDisplayDelegate, ProfileHeader, StatusUpdate} from './ProfileHeader.js';\nimport {Events as ProfileHeaderEvents} from './ProfileHeader.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to save something\n  */\n  save: 'Save',\n  /**\n  *@description Text to save something (with ellipsis)\n  */\n  saveWithEllipsis: 'Save\u2026',\n  /**\n  *@description A context menu item in the Profiles Panel of a profiler tool\n  */\n  load: 'Load\u2026',\n  /**\n  *@description Text to delete something\n  */\n  delete: 'Delete',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/ProfileSidebarTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet sharedFileSelectorElement: HTMLInputElement|null = null;\n\nfunction getSharedFileSelectorElement(): HTMLInputElement|null {\n  return sharedFileSelectorElement;\n}\n\nexport function setSharedFileSelectorElement(element: HTMLInputElement): void {\n  sharedFileSelectorElement = element;\n}\n\nexport class ProfileSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  readonly iconElement: HTMLDivElement;\n  readonly titlesElement: HTMLDivElement;\n  titleContainer: HTMLElement;\n  titleElement: HTMLElement;\n  subtitleElement: HTMLElement;\n  readonly className: string;\n  small: boolean;\n  readonly dataDisplayDelegate: DataDisplayDelegate;\n  profile: ProfileHeader;\n  saveLinkElement?: HTMLElement;\n  editing?: UI.InplaceEditor.Controller|null;\n  constructor(dataDisplayDelegate: DataDisplayDelegate, profile: ProfileHeader, className: string) {\n    super('', false);\n    this.iconElement = document.createElement('div');\n    this.iconElement.classList.add('icon');\n    this.titlesElement = document.createElement('div');\n    this.titlesElement.classList.add('titles');\n    this.titlesElement.classList.add('no-subtitle');\n    this.titleContainer = this.titlesElement.createChild('span', 'title-container');\n    this.titleElement = this.titleContainer.createChild('span', 'title');\n    this.subtitleElement = this.titlesElement.createChild('span', 'subtitle');\n\n    this.titleElement.textContent = profile.title;\n    this.className = className;\n    this.small = false;\n    this.dataDisplayDelegate = dataDisplayDelegate;\n    this.profile = profile;\n    profile.addEventListener(ProfileHeaderEvents.UpdateStatus, this.updateStatus, this);\n    if (profile.canSaveToFile()) {\n      this.createSaveLink();\n    } else {\n      profile.addEventListener(ProfileHeaderEvents.ProfileReceived, this.onProfileReceived, this);\n    }\n  }\n\n  createSaveLink(): void {\n    this.saveLinkElement = this.titleContainer.createChild('span', 'save-link');\n    this.saveLinkElement.textContent = i18nString(UIStrings.save);\n    this.saveLinkElement.addEventListener('click', this.saveProfile.bind(this), false);\n  }\n\n  onProfileReceived(): void {\n    this.createSaveLink();\n  }\n\n  updateStatus(event: Common.EventTarget.EventTargetEvent<StatusUpdate>): void {\n    const statusUpdate = event.data;\n    if (statusUpdate.subtitle !== null) {\n      this.subtitleElement.textContent = statusUpdate.subtitle || '';\n      this.titlesElement.classList.toggle('no-subtitle', !statusUpdate.subtitle);\n    }\n    if (typeof statusUpdate.wait === 'boolean' && this.listItemElement) {\n      this.iconElement.classList.toggle('spinner', statusUpdate.wait);\n      this.listItemElement.classList.toggle('wait', statusUpdate.wait);\n    }\n  }\n\n  ondblclick(event: Event): boolean {\n    if (!this.editing) {\n      this.startEditing((event.target as Element));\n    }\n    return false;\n  }\n\n  startEditing(eventTarget: Element): void {\n    const container = eventTarget.enclosingNodeOrSelfWithClass('title');\n    if (!container) {\n      return;\n    }\n    const config = new UI.InplaceEditor.Config(this.editingCommitted.bind(this), this.editingCancelled.bind(this));\n    this.editing = UI.InplaceEditor.InplaceEditor.startEditing(container, config);\n  }\n\n  editingCommitted(container: Element, newTitle: string): void {\n    delete this.editing;\n    this.profile.setTitle(newTitle);\n  }\n\n  editingCancelled(): void {\n    delete this.editing;\n  }\n\n  dispose(): void {\n    this.profile.removeEventListener(ProfileHeaderEvents.UpdateStatus, this.updateStatus, this);\n    this.profile.removeEventListener(ProfileHeaderEvents.ProfileReceived, this.onProfileReceived, this);\n  }\n\n  onselect(): boolean {\n    this.dataDisplayDelegate.showProfile(this.profile);\n    return true;\n  }\n\n  ondelete(): boolean {\n    this.profile.profileType().removeProfile(this.profile);\n    return true;\n  }\n\n  onattach(): void {\n    if (this.className) {\n      this.listItemElement.classList.add(this.className);\n    }\n    if (this.small) {\n      this.listItemElement.classList.add('small');\n    }\n    this.listItemElement.append(this.iconElement, this.titlesElement);\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n\n    UI.ARIAUtils.setDescription(this.listItemElement, this.profile.profileType().name);\n  }\n\n  handleContextMenuEvent(event: Event): void {\n    const profile = this.profile;\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    // FIXME: use context menu provider\n    const sharedFileSelectorElement = getSharedFileSelectorElement();\n    if (!sharedFileSelectorElement) {\n      throw new Error('File selector element shared by ProfilePanel instances is missing');\n    }\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.load), sharedFileSelectorElement.click.bind(sharedFileSelectorElement));\n    if (profile.canSaveToFile()) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveWithEllipsis), profile.saveToFile.bind(profile));\n    }\n    contextMenu.footerSection().appendItem(i18nString(UIStrings.delete), this.ondelete.bind(this));\n    void contextMenu.show();\n  }\n\n  saveProfile(_event: Event): void {\n    this.profile.saveToFile();\n  }\n\n  setSmall(small: boolean): void {\n    this.small = small;\n    if (this.listItemElement) {\n      this.listItemElement.classList.toggle('small', this.small);\n    }\n  }\n\n  setMainTitle(title: string): void {\n    this.titleElement.textContent = title;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
