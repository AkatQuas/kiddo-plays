{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/profiler/ProfileHeader.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Bindings from '../../models/bindings/bindings.js';\nimport * as Common from '../../core/common/common.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class ProfileHeader extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  readonly profileTypeInternal: ProfileType;\n  title: string;\n  uid: number;\n  fromFileInternal: boolean;\n  tempFile: Bindings.TempFile.TempFile|null;\n\n  constructor(profileType: ProfileType, title: string) {\n    super();\n    this.profileTypeInternal = profileType;\n    this.title = title;\n    this.uid = profileType.incrementProfileUid();\n    this.fromFileInternal = false;\n\n    this.tempFile = null;\n  }\n\n  setTitle(title: string): void {\n    this.title = title;\n    this.dispatchEventToListeners(Events.ProfileTitleChanged, this);\n  }\n\n  profileType(): ProfileType {\n    return this.profileTypeInternal;\n  }\n\n  updateStatus(subtitle: string|null, wait?: boolean): void {\n    this.dispatchEventToListeners(Events.UpdateStatus, new StatusUpdate(subtitle, wait));\n  }\n\n  /**\n   * Must be implemented by subclasses.\n   */\n  createSidebarTreeElement(_dataDisplayDelegate: DataDisplayDelegate): UI.TreeOutline.TreeElement {\n    throw new Error('Not implemented.');\n  }\n\n  createView(_dataDisplayDelegate: DataDisplayDelegate): UI.Widget.Widget {\n    throw new Error('Not implemented.');\n  }\n\n  removeTempFile(): void {\n    if (this.tempFile) {\n      this.tempFile.remove();\n    }\n  }\n\n  dispose(): void {\n  }\n\n  canSaveToFile(): boolean {\n    return false;\n  }\n\n  saveToFile(): void {\n    throw new Error('Not implemented.');\n  }\n\n  loadFromFile(_file: File): Promise<Error|DOMError|null> {\n    throw new Error('Not implemented.');\n  }\n\n  fromFile(): boolean {\n    return this.fromFileInternal;\n  }\n\n  setFromFile(): void {\n    this.fromFileInternal = true;\n  }\n\n  setProfile(_profile: Protocol.Profiler.Profile): void {\n  }\n}\n\nexport class StatusUpdate {\n  subtitle: string|null;\n  wait: boolean|undefined;\n  constructor(subtitle: string|null, wait: boolean|undefined) {\n    this.subtitle = subtitle;\n    this.wait = wait;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  UpdateStatus = 'UpdateStatus',\n  ProfileReceived = 'ProfileReceived',\n  ProfileTitleChanged = 'ProfileTitleChanged',\n}\n\nexport type EventTypes = {\n  [Events.UpdateStatus]: StatusUpdate,\n  [Events.ProfileReceived]: void,\n  [Events.ProfileTitleChanged]: ProfileHeader,\n};\n\nexport class ProfileType extends Common.ObjectWrapper.ObjectWrapper<ProfileEventTypes> {\n  readonly idInternal: string;\n  readonly nameInternal: string;\n  profiles: ProfileHeader[];\n  profileBeingRecordedInternal: ProfileHeader|null;\n  nextProfileUidInternal: number;\n\n  constructor(id: string, name: string) {\n    super();\n    this.idInternal = id;\n    this.nameInternal = name;\n    this.profiles = [];\n    this.profileBeingRecordedInternal = null;\n    this.nextProfileUidInternal = 1;\n\n    if (!window.opener) {\n      window.addEventListener('unload', this.clearTempStorage.bind(this), false);\n    }\n  }\n\n  typeName(): string {\n    return '';\n  }\n\n  nextProfileUid(): number {\n    return this.nextProfileUidInternal;\n  }\n\n  incrementProfileUid(): number {\n    return this.nextProfileUidInternal++;\n  }\n\n  hasTemporaryView(): boolean {\n    return false;\n  }\n\n  fileExtension(): string|null {\n    return null;\n  }\n\n  get buttonTooltip(): string {\n    return '';\n  }\n\n  get id(): string {\n    return this.idInternal;\n  }\n\n  get treeItemTitle(): string {\n    return this.nameInternal;\n  }\n\n  get name(): string {\n    return this.nameInternal;\n  }\n\n  buttonClicked(): boolean {\n    return false;\n  }\n\n  get description(): string {\n    return '';\n  }\n\n  isInstantProfile(): boolean {\n    return false;\n  }\n\n  isEnabled(): boolean {\n    return true;\n  }\n\n  getProfiles(): ProfileHeader[] {\n    function isFinished(this: ProfileType, profile: ProfileHeader): boolean {\n      return this.profileBeingRecordedInternal !== profile;\n    }\n    return this.profiles.filter(isFinished.bind(this));\n  }\n\n  customContent(): Element|null {\n    return null;\n  }\n\n  setCustomContentEnabled(_enable: boolean): void {\n  }\n\n  getProfile(uid: number): ProfileHeader|null {\n    for (let i = 0; i < this.profiles.length; ++i) {\n      if (this.profiles[i].uid === uid) {\n        return this.profiles[i];\n      }\n    }\n    return null;\n  }\n\n  loadFromFile(file: File): Promise<Error|DOMError|null> {\n    let name: string = file.name;\n    const fileExtension = this.fileExtension();\n    if (fileExtension && name.endsWith(fileExtension)) {\n      name = name.substr(0, name.length - fileExtension.length);\n    }\n    const profile = this.createProfileLoadedFromFile(name);\n    profile.setFromFile();\n    this.setProfileBeingRecorded(profile);\n    this.addProfile(profile);\n    return profile.loadFromFile(file);\n  }\n\n  createProfileLoadedFromFile(_title: string): ProfileHeader {\n    throw new Error('Not implemented');\n  }\n\n  addProfile(profile: ProfileHeader): void {\n    this.profiles.push(profile);\n    this.dispatchEventToListeners(ProfileEvents.AddProfileHeader, profile);\n  }\n\n  removeProfile(profile: ProfileHeader): void {\n    const index = this.profiles.indexOf(profile);\n    if (index === -1) {\n      return;\n    }\n    this.profiles.splice(index, 1);\n    this.disposeProfile(profile);\n  }\n\n  clearTempStorage(): void {\n    for (let i = 0; i < this.profiles.length; ++i) {\n      this.profiles[i].removeTempFile();\n    }\n  }\n\n  profileBeingRecorded(): ProfileHeader|null {\n    return this.profileBeingRecordedInternal;\n  }\n\n  setProfileBeingRecorded(profile: ProfileHeader|null): void {\n    this.profileBeingRecordedInternal = profile;\n  }\n\n  profileBeingRecordedRemoved(): void {\n  }\n\n  reset(): void {\n    for (const profile of this.profiles.slice()) {\n      this.disposeProfile(profile);\n    }\n    this.profiles = [];\n    this.nextProfileUidInternal = 1;\n  }\n\n  disposeProfile(profile: ProfileHeader): void {\n    this.dispatchEventToListeners(ProfileEvents.RemoveProfileHeader, profile);\n    profile.dispose();\n    if (this.profileBeingRecordedInternal === profile) {\n      this.profileBeingRecordedRemoved();\n      this.setProfileBeingRecorded(null);\n    }\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum ProfileEvents {\n  AddProfileHeader = 'add-profile-header',\n  ProfileComplete = 'profile-complete',\n  RemoveProfileHeader = 'remove-profile-header',\n  ViewUpdated = 'view-updated',\n}\n\nexport type ProfileEventTypes = {\n  [ProfileEvents.AddProfileHeader]: ProfileHeader,\n  [ProfileEvents.ProfileComplete]: ProfileHeader,\n  [ProfileEvents.RemoveProfileHeader]: ProfileHeader,\n  [ProfileEvents.ViewUpdated]: void,\n};\n\nexport interface DataDisplayDelegate {\n  showProfile(profile: ProfileHeader|null): UI.Widget.Widget|null;\n  showObject(snapshotObjectId: string, perspectiveName: string): void;\n  linkifyObject(nodeIndex: number): Promise<Element|null>;\n}\n"],
  "mappings": "AAKA;AAIO,mCAA4B,OAAO,cAAc,cAA0B;AAAA,EACvE;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,aAA0B,OAAe;AACnD;AACA,SAAK,sBAAsB;AAC3B,SAAK,QAAQ;AACb,SAAK,MAAM,YAAY;AACvB,SAAK,mBAAmB;AAExB,SAAK,WAAW;AAAA;AAAA,EAGlB,SAAS,OAAqB;AAC5B,SAAK,QAAQ;AACb,SAAK,yBAAyB,OAAO,qBAAqB;AAAA;AAAA,EAG5D,cAA2B;AACzB,WAAO,KAAK;AAAA;AAAA,EAGd,aAAa,UAAuB,MAAsB;AACxD,SAAK,yBAAyB,OAAO,cAAc,IAAI,aAAa,UAAU;AAAA;AAAA,EAMhF,yBAAyB,sBAAuE;AAC9F,UAAM,IAAI,MAAM;AAAA;AAAA,EAGlB,WAAW,sBAA6D;AACtE,UAAM,IAAI,MAAM;AAAA;AAAA,EAGlB,iBAAuB;AACrB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS;AAAA;AAAA;AAAA,EAIlB,UAAgB;AAAA;AAAA,EAGhB,gBAAyB;AACvB,WAAO;AAAA;AAAA,EAGT,aAAmB;AACjB,UAAM,IAAI,MAAM;AAAA;AAAA,EAGlB,aAAa,OAA2C;AACtD,UAAM,IAAI,MAAM;AAAA;AAAA,EAGlB,WAAoB;AAClB,WAAO,KAAK;AAAA;AAAA,EAGd,cAAoB;AAClB,SAAK,mBAAmB;AAAA;AAAA,EAG1B,WAAW,UAA2C;AAAA;AAAA;AAIjD,0BAAmB;AAAA,EACxB;AAAA,EACA;AAAA,EACA,YAAY,UAAuB,MAAyB;AAC1D,SAAK,WAAW;AAChB,SAAK,OAAO;AAAA;AAAA;AAMT,WAAK,SAAL,kBAAK,YAAL;AACL,4BAAe;AACf,+BAAkB;AAClB,mCAAsB;AAHZ;AAAA;AAYL,iCAA0B,OAAO,cAAc,cAAiC;AAAA,EAC5E;AAAA,EACA;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,IAAY,MAAc;AACpC;AACA,SAAK,aAAa;AAClB,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,+BAA+B;AACpC,SAAK,yBAAyB;AAE9B,QAAI,CAAC,OAAO,QAAQ;AAClB,aAAO,iBAAiB,UAAU,KAAK,iBAAiB,KAAK,OAAO;AAAA;AAAA;AAAA,EAIxE,WAAmB;AACjB,WAAO;AAAA;AAAA,EAGT,iBAAyB;AACvB,WAAO,KAAK;AAAA;AAAA,EAGd,sBAA8B;AAC5B,WAAO,KAAK;AAAA;AAAA,EAGd,mBAA4B;AAC1B,WAAO;AAAA;AAAA,EAGT,gBAA6B;AAC3B,WAAO;AAAA;AAAA,MAGL,gBAAwB;AAC1B,WAAO;AAAA;AAAA,MAGL,KAAa;AACf,WAAO,KAAK;AAAA;AAAA,MAGV,gBAAwB;AAC1B,WAAO,KAAK;AAAA;AAAA,MAGV,OAAe;AACjB,WAAO,KAAK;AAAA;AAAA,EAGd,gBAAyB;AACvB,WAAO;AAAA;AAAA,MAGL,cAAsB;AACxB,WAAO;AAAA;AAAA,EAGT,mBAA4B;AAC1B,WAAO;AAAA;AAAA,EAGT,YAAqB;AACnB,WAAO;AAAA;AAAA,EAGT,cAA+B;AAC7B,wBAAuC,SAAiC;AACtE,aAAO,KAAK,iCAAiC;AAAA;AAE/C,WAAO,KAAK,SAAS,OAAO,WAAW,KAAK;AAAA;AAAA,EAG9C,gBAA8B;AAC5B,WAAO;AAAA;AAAA,EAGT,wBAAwB,SAAwB;AAAA;AAAA,EAGhD,WAAW,KAAiC;AAC1C,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,EAAE,GAAG;AAC7C,UAAI,KAAK,SAAS,GAAG,QAAQ,KAAK;AAChC,eAAO,KAAK,SAAS;AAAA;AAAA;AAGzB,WAAO;AAAA;AAAA,EAGT,aAAa,MAA0C;AACrD,QAAI,OAAe,KAAK;AACxB,UAAM,gBAAgB,KAAK;AAC3B,QAAI,iBAAiB,KAAK,SAAS,gBAAgB;AACjD,aAAO,KAAK,OAAO,GAAG,KAAK,SAAS,cAAc;AAAA;AAEpD,UAAM,UAAU,KAAK,4BAA4B;AACjD,YAAQ;AACR,SAAK,wBAAwB;AAC7B,SAAK,WAAW;AAChB,WAAO,QAAQ,aAAa;AAAA;AAAA,EAG9B,4BAA4B,QAA+B;AACzD,UAAM,IAAI,MAAM;AAAA;AAAA,EAGlB,WAAW,SAA8B;AACvC,SAAK,SAAS,KAAK;AACnB,SAAK,yBAAyB,cAAc,kBAAkB;AAAA;AAAA,EAGhE,cAAc,SAA8B;AAC1C,UAAM,QAAQ,KAAK,SAAS,QAAQ;AACpC,QAAI,UAAU,IAAI;AAChB;AAAA;AAEF,SAAK,SAAS,OAAO,OAAO;AAC5B,SAAK,eAAe;AAAA;AAAA,EAGtB,mBAAyB;AACvB,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,EAAE,GAAG;AAC7C,WAAK,SAAS,GAAG;AAAA;AAAA;AAAA,EAIrB,uBAA2C;AACzC,WAAO,KAAK;AAAA;AAAA,EAGd,wBAAwB,SAAmC;AACzD,SAAK,+BAA+B;AAAA;AAAA,EAGtC,8BAAoC;AAAA;AAAA,EAGpC,QAAc;AACZ,eAAW,WAAW,KAAK,SAAS,SAAS;AAC3C,WAAK,eAAe;AAAA;AAEtB,SAAK,WAAW;AAChB,SAAK,yBAAyB;AAAA;AAAA,EAGhC,eAAe,SAA8B;AAC3C,SAAK,yBAAyB,cAAc,qBAAqB;AACjE,YAAQ;AACR,QAAI,KAAK,iCAAiC,SAAS;AACjD,WAAK;AACL,WAAK,wBAAwB;AAAA;AAAA;AAAA;AAO5B,WAAK,gBAAL,kBAAK,mBAAL;AACL,uCAAmB;AACnB,sCAAkB;AAClB,0CAAsB;AACtB,kCAAc;AAJJ;AAAA;",
  "names": []
}
