{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/layer_viewer/LayerDetailsView.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport layerDetailsViewStyles from './layerDetailsView.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {LayerView, LayerViewHost, Selection, SnapshotSelection} from './LayerViewHost.js';\nimport {ScrollRectSelection, Type} from './LayerViewHost.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  selectALayerToSeeItsDetails: 'Select a layer to see its details',\n  /**\n  *@description Element text content in Layer Details View of the Layers panel\n  *@example {Touch event handler} PH1\n  *@example {10} PH2\n  *@example {10} PH3\n  *@example {10} PH4\n  *@example {10} PH5\n  */\n  scrollRectangleDimensions: '{PH1} {PH2} \u00D7 {PH3} (at {PH4}, {PH5})',\n  /**\n  * @description Text in Layer Details View of the Layers panel. Used to indicate that a particular\n  * layer of the website is unnamed (was not given a name/doesn't have one).\n  */\n  unnamed: '<unnamed>',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  *@example {Nearest Layer Shifting Sticky Box} PH1\n  *@example {&lt;unnamed&gt;} PH2\n  *@example {5} PH3\n  */\n  stickyAncenstorLayersS: '{PH1}: {PH2} ({PH3})',\n  /**\n  *@description Sticky box rect element text content in Layer Details View of the Layers panel\n  *@example {10} PH1\n  *@example {10} PH2\n  *@example {10} PH3\n  *@example {10} PH4\n  */\n  stickyBoxRectangleDimensions: 'Sticky Box {PH1} \u00D7 {PH2} (at {PH3}, {PH4})',\n  /**\n  * @description Containing block rect element text content in Layer Details View of the Layers panel.\n  * The placeholder are width, height, x position, and y position respectively.\n  *@example {10} PH1\n  *@example {10} PH2\n  *@example {10} PH3\n  *@example {10} PH4\n  */\n  containingBlocRectangleDimensions: 'Containing Block {PH1} \u00D7 {PH2} (at {PH3}, {PH4})',\n  /**\n  * @description Text in Layer Details View of the Layers panel. This also means \"The nearest sticky\n  * box that causes a layer shift\".\n  */\n  nearestLayerShiftingStickyBox: 'Nearest Layer Shifting Sticky Box',\n  /**\n  * @description Text in Layer Details View of the Layers panel. This also means \"The nearest block\n  * that causes a layer shift\".\n  */\n  nearestLayerShiftingContaining: 'Nearest Layer Shifting Containing Block',\n  /**\n  *@description Size cell text content in Layer Details View of the Layers panel\n  *@example {10} PH1\n  *@example {10} PH2\n  *@example {10} PH3\n  *@example {10} PH4\n  */\n  updateRectangleDimensions: '{PH1} \u00D7 {PH2} (at {PH3}, {PH4})',\n  /**\n  *@description Text for the size of something\n  */\n  size: 'Size',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  compositingReasons: 'Compositing Reasons',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  memoryEstimate: 'Memory estimate',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  paintCount: 'Paint count',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  slowScrollRegions: 'Slow scroll regions',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  stickyPositionConstraint: 'Sticky position constraint',\n  /**\n  *@description Title of the paint profiler, old name of the performance pane\n  */\n  paintProfiler: 'Paint Profiler',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  nonFastScrollable: 'Non fast scrollable',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  touchEventHandler: 'Touch event handler',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  wheelEventHandler: 'Wheel event handler',\n  /**\n  * @description Text in Layer Details View of the Layers panel. Means that this rectangle needs to\n  * be repainted when the webpage is scrolled. 'repaints' means that the browser engine needs to\n  * draw the pixels for this rectangle to the user's monitor again.\n  */\n  repaintsOnScroll: 'Repaints on scroll',\n  /**\n  *@description Text in Layer Details View of the Layers panel\n  */\n  mainThreadScrollingReason: 'Main thread scrolling reason',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class LayerDetailsView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.Widget>(\n    UI.Widget.Widget) implements LayerView {\n  private readonly layerViewHost: LayerViewHost;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private layerSnapshotMap: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n  private tableElement!: HTMLElement;\n  private tbodyElement!: HTMLElement;\n  private sizeCell!: HTMLElement;\n  private compositingReasonsCell!: HTMLElement;\n  private memoryEstimateCell!: HTMLElement;\n  private paintCountCell!: HTMLElement;\n  private scrollRectsCell!: HTMLElement;\n  private stickyPositionConstraintCell!: HTMLElement;\n  private paintProfilerLink!: HTMLElement;\n  private selection: Selection|null;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super(true);\n\n    this.layerViewHost = layerViewHost;\n    this.layerViewHost.registerView(this);\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectALayerToSeeItsDetails));\n    this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n\n    this.buildContent();\n    this.selection = null;\n  }\n\n  hoverObject(_selection: Selection|null): void {\n  }\n\n  selectObject(selection: Selection|null): void {\n    this.selection = selection;\n    if (this.isShowing()) {\n      this.update();\n    }\n  }\n\n  setLayerTree(_layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([layerDetailsViewStyles]);\n    this.update();\n  }\n\n  private onScrollRectClicked(index: number, event: Event): void {\n    if ((event as KeyboardEvent).which !== 1) {\n      return;\n    }\n    if (!this.selection) {\n      return;\n    }\n    this.layerViewHost.selectObject(new ScrollRectSelection(this.selection.layer(), index));\n  }\n\n  private invokeProfilerLink(): void {\n    if (!this.selection) {\n      return;\n    }\n    const snapshotSelection =\n        this.selection.type() === Type.Snapshot ? this.selection : this.layerSnapshotMap.get(this.selection.layer());\n    if (snapshotSelection) {\n      this.dispatchEventToListeners(Events.PaintProfilerRequested, snapshotSelection);\n    }\n  }\n\n  private createScrollRectElement(scrollRect: Protocol.LayerTree.ScrollRect, index: number): void {\n    if (index) {\n      UI.UIUtils.createTextChild(this.scrollRectsCell, ', ');\n    }\n    const element = this.scrollRectsCell.createChild('span', 'scroll-rect');\n    if (this.selection && (this.selection as ScrollRectSelection).scrollRectIndex === index) {\n      element.classList.add('active');\n    }\n    element.textContent = i18nString(UIStrings.scrollRectangleDimensions, {\n      PH1: String(slowScrollRectNames.get(scrollRect.type as unknown as SDK.LayerTreeBase.Layer.ScrollRectType)?.()),\n      PH2: scrollRect.rect.width,\n      PH3: scrollRect.rect.height,\n      PH4: scrollRect.rect.x,\n      PH5: scrollRect.rect.y,\n    });\n    element.addEventListener('click', this.onScrollRectClicked.bind(this, index), false);\n  }\n\n  private formatStickyAncestorLayer(title: string, layer: SDK.LayerTreeBase.Layer|null): string {\n    if (!layer) {\n      return '';\n    }\n\n    const node = layer.nodeForSelfOrAncestor();\n    const name = node ? node.simpleSelector() : i18nString(UIStrings.unnamed);\n    return i18nString(UIStrings.stickyAncenstorLayersS, {PH1: title, PH2: name, PH3: layer.id()});\n  }\n\n  private createStickyAncestorChild(title: string, layer: SDK.LayerTreeBase.Layer|null): void {\n    if (!layer) {\n      return;\n    }\n\n    UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n    const child = this.stickyPositionConstraintCell.createChild('span');\n    child.textContent = this.formatStickyAncestorLayer(title, layer);\n  }\n\n  private populateStickyPositionConstraintCell(constraint: SDK.LayerTreeBase.StickyPositionConstraint|null): void {\n    this.stickyPositionConstraintCell.removeChildren();\n    if (!constraint) {\n      return;\n    }\n\n    const stickyBoxRect = constraint.stickyBoxRect();\n    const stickyBoxRectElement = this.stickyPositionConstraintCell.createChild('span');\n    stickyBoxRectElement.textContent = i18nString(\n        UIStrings.stickyBoxRectangleDimensions,\n        {PH1: stickyBoxRect.width, PH2: stickyBoxRect.height, PH3: stickyBoxRect.x, PH4: stickyBoxRect.y});\n\n    UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n\n    const containingBlockRect = constraint.containingBlockRect();\n    const containingBlockRectElement = this.stickyPositionConstraintCell.createChild('span');\n    containingBlockRectElement.textContent = i18nString(UIStrings.containingBlocRectangleDimensions, {\n      PH1: containingBlockRect.width,\n      PH2: containingBlockRect.height,\n      PH3: containingBlockRect.x,\n      PH4: containingBlockRect.y,\n    });\n\n    this.createStickyAncestorChild(\n        i18nString(UIStrings.nearestLayerShiftingStickyBox), constraint.nearestLayerShiftingStickyBox());\n    this.createStickyAncestorChild(\n        i18nString(UIStrings.nearestLayerShiftingContaining), constraint.nearestLayerShiftingContainingBlock());\n  }\n\n  update(): void {\n    const layer = this.selection && this.selection.layer();\n    if (!layer) {\n      this.tableElement.remove();\n      this.paintProfilerLink.remove();\n      this.emptyWidget.show(this.contentElement);\n      return;\n    }\n    this.emptyWidget.detach();\n    this.contentElement.appendChild(this.tableElement);\n    this.contentElement.appendChild(this.paintProfilerLink);\n    this.sizeCell.textContent = i18nString(\n        UIStrings.updateRectangleDimensions,\n        {PH1: layer.width(), PH2: layer.height(), PH3: layer.offsetX(), PH4: layer.offsetY()});\n    if (this.paintCountCell.parentElement) {\n      this.paintCountCell.parentElement.classList.toggle('hidden', !layer.paintCount());\n    }\n    this.paintCountCell.textContent = String(layer.paintCount());\n    this.memoryEstimateCell.textContent = Platform.NumberUtilities.bytesToString(layer.gpuMemoryUsage());\n    void layer.requestCompositingReasonIds().then(this.updateCompositingReasons.bind(this));\n    this.scrollRectsCell.removeChildren();\n    layer.scrollRects().forEach(this.createScrollRectElement.bind(this));\n    this.populateStickyPositionConstraintCell(layer.stickyPositionConstraint());\n    const snapshot = this.selection && this.selection.type() === Type.Snapshot ?\n        (this.selection as SnapshotSelection).snapshot() :\n        null;\n\n    this.paintProfilerLink.classList.toggle('hidden', !(this.layerSnapshotMap.has(layer) || snapshot));\n  }\n\n  private buildContent(): void {\n    this.tableElement = this.contentElement.createChild('table') as HTMLElement;\n    this.tbodyElement = this.tableElement.createChild('tbody') as HTMLElement;\n    this.sizeCell = this.createRow(i18nString(UIStrings.size));\n    this.compositingReasonsCell = this.createRow(i18nString(UIStrings.compositingReasons));\n    this.memoryEstimateCell = this.createRow(i18nString(UIStrings.memoryEstimate));\n    this.paintCountCell = this.createRow(i18nString(UIStrings.paintCount));\n    this.scrollRectsCell = this.createRow(i18nString(UIStrings.slowScrollRegions));\n    this.stickyPositionConstraintCell = this.createRow(i18nString(UIStrings.stickyPositionConstraint));\n    this.paintProfilerLink = this.contentElement.createChild('span', 'hidden devtools-link link-margin') as HTMLElement;\n    UI.ARIAUtils.markAsLink(this.paintProfilerLink);\n    this.paintProfilerLink.textContent = i18nString(UIStrings.paintProfiler);\n    this.paintProfilerLink.tabIndex = 0;\n    this.paintProfilerLink.addEventListener('click', e => {\n      e.consume(true);\n      this.invokeProfilerLink();\n    });\n    this.paintProfilerLink.addEventListener('keydown', event => {\n      if (event.key === 'Enter') {\n        event.consume();\n        this.invokeProfilerLink();\n      }\n    });\n  }\n\n  private createRow(title: string): HTMLElement {\n    const tr = this.tbodyElement.createChild('tr');\n    const titleCell = tr.createChild('td');\n    titleCell.textContent = title;\n    return tr.createChild('td');\n  }\n\n  private updateCompositingReasons(compositingReasonIds: string[]): void {\n    if (!compositingReasonIds || !compositingReasonIds.length) {\n      this.compositingReasonsCell.textContent = 'n/a';\n      return;\n    }\n    this.compositingReasonsCell.removeChildren();\n    const list = this.compositingReasonsCell.createChild('ul');\n    const compositingReasons = LayerDetailsView.getCompositingReasons(compositingReasonIds);\n    for (const compositingReason of compositingReasons) {\n      list.createChild('li').textContent = compositingReason;\n    }\n  }\n\n  static getCompositingReasons(compositingReasonIds: string[]): string[] {\n    const compositingReasons = [];\n    for (const compositingReasonId of compositingReasonIds) {\n      const compositingReason = compositingReasonIdToReason.get(compositingReasonId);\n      if (compositingReason) {\n        compositingReasons.push(compositingReason);\n      } else {\n        console.error(`Compositing reason id '${compositingReasonId}' is not recognized.`);\n      }\n    }\n    return compositingReasons;\n  }\n}\n\n// The compositing reason IDs are defined in third_party/blink/renderer/platform/graphics/compositing_reasons.cc\n// These strings are not translated because they are implementation details from chromium that are hard to translate.\nconst compositingReasonIdToReason = new Map([\n  ['transform3D', 'Has a 3D transform.'],\n  ['video', 'Is an accelerated video.'],\n  [\n    'canvas',\n    'Is an accelerated canvas, or is a display list backed canvas that was promoted to a layer based on a performance heuristic.',\n  ],\n  ['plugin', 'Is an accelerated plugin.'],\n  ['iFrame', 'Is an accelerated iFrame.'],\n  ['backfaceVisibilityHidden', 'Has backface-visibility: hidden.'],\n  ['activeTransformAnimation', 'Has an active accelerated transform animation or transition.'],\n  ['activeOpacityAnimation', 'Has an active accelerated opacity animation or transition.'],\n  ['activeFilterAnimation', 'Has an active accelerated filter animation or transition.'],\n  ['activeBackdropFilterAnimation', 'Has an active accelerated backdrop filter animation or transition.'],\n  ['immersiveArOverlay', 'Is DOM overlay for WebXR immersive-ar mode.'],\n  ['scrollDependentPosition', 'Is fixed or sticky position.'],\n  ['overflowScrolling', 'Is a scrollable overflow element.'],\n  ['overflowScrollingParent', 'Scroll parent is not an ancestor.'],\n  ['outOfFlowClipping', 'Has clipping ancestor.'],\n  ['videoOverlay', 'Is overlay controls for video.'],\n  ['willChangeTransform', 'Has a will-change: transform compositing hint.'],\n  ['willChangeOpacity', 'Has a will-change: opacity compositing hint.'],\n  ['willChangeOther', 'Has a will-change compositing hint other than transform and opacity.'],\n  ['backdropFilter', 'Has a backdrop filter.'],\n  ['rootScroller', 'Is the document.rootScroller.'],\n  ['assumedOverlap', 'Might overlap other composited content.'],\n  ['overlap', 'Overlaps other composited content.'],\n  ['negativeZIndexChildren', 'Parent with composited negative z-index content.'],\n  ['squashingDisallowed', 'Layer was separately composited because it could not be squashed.'],\n  [\n    'opacityWithCompositedDescendants',\n    'Has opacity that needs to be applied by the compositor because of composited descendants.',\n  ],\n  [\n    'maskWithCompositedDescendants',\n    'Has a mask that needs to be known by the compositor because of composited descendants.',\n  ],\n  [\n    'reflectionWithCompositedDescendants',\n    'Has a reflection that needs to be known by the compositor because of composited descendants.',\n  ],\n  [\n    'filterWithCompositedDescendants',\n    'Has a filter effect that needs to be known by the compositor because of composited descendants.',\n  ],\n  [\n    'blendingWithCompositedDescendants',\n    'Has a blending effect that needs to be known by the compositor because of composited descendants.',\n  ],\n  [\n    'clipsCompositingDescendants',\n    'Has a clip that needs to be known by the compositor because of composited descendants.',\n  ],\n  [\n    'perspectiveWith3DDescendants',\n    'Has a perspective transform that needs to be known by the compositor because of 3D descendants.',\n  ],\n  [\n    'preserve3DWith3DDescendants',\n    'Has a preserves-3D property that needs to be known by the compositor because of 3D descendants.',\n  ],\n  ['isolateCompositedDescendants', 'Should isolate descendants to apply a blend effect.'],\n  ['positionFixedWithCompositedDescendants', 'Is a position:fixed element with composited descendants.'],\n  ['root', 'Is the root layer.'],\n  ['layerForHorizontalScrollbar', 'Secondary layer, the horizontal scrollbar layer.'],\n  ['layerForVerticalScrollbar', 'Secondary layer, the vertical scrollbar layer.'],\n  ['layerForOverflowControlsHost', 'Secondary layer, the overflow controls host layer.'],\n  ['layerForScrollCorner', 'Secondary layer, the scroll corner layer.'],\n  ['layerForScrollingContents', 'Secondary layer, to house contents that can be scrolled.'],\n  ['layerForScrollingContainer', 'Secondary layer, used to position the scrolling contents while scrolling.'],\n  ['layerForSquashingContents', 'Secondary layer, home for a group of squashable content.'],\n  [\n    'layerForSquashingContainer',\n    'Secondary layer, no-op layer to place the squashing layer correctly in the composited layer tree.',\n  ],\n  [\n    'layerForForeground',\n    'Secondary layer, to contain any normal flow and positive z-index contents on top of a negative z-index layer.',\n  ],\n  ['layerForMask', 'Secondary layer, to contain the mask contents.'],\n  ['layerForDecoration', 'Layer painted on top of other layers as decoration.'],\n  ['layerForOther', 'Layer for link highlight, frame overlay, etc.'],\n]);\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  PaintProfilerRequested = 'PaintProfilerRequested',\n}\n\nexport type EventTypes = {\n  [Events.PaintProfilerRequested]: Selection,\n};\n\nexport const slowScrollRectNames = new Map([\n  [SDK.LayerTreeBase.Layer.ScrollRectType.NonFastScrollable, i18nLazyString(UIStrings.nonFastScrollable)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.TouchEventHandler, i18nLazyString(UIStrings.touchEventHandler)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.WheelEventHandler, i18nLazyString(UIStrings.wheelEventHandler)],\n  [SDK.LayerTreeBase.Layer.ScrollRectType.RepaintsOnScroll, i18nLazyString(UIStrings.repaintsOnScroll)],\n  [\n    SDK.LayerTreeBase.Layer.ScrollRectType.MainThreadScrollingReason,\n    i18nLazyString(UIStrings.mainThreadScrollingReason),\n  ],\n]);\n"],
  "mappings": "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",
  "names": []
}
