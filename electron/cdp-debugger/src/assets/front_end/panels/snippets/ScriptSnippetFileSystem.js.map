{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/snippets/ScriptSnippetFileSystem.ts"],
  "sourcesContent": ["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\n\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\n\nconst UIStrings = {\n  /**\n  *@description Default snippet name when a new snippet is created in the Sources panel\n  *@example {1} PH1\n  */\n  scriptSnippet: 'Script snippet #{PH1}',\n  /**\n  *@description Text to show something is linked to another\n  *@example {example.url} PH1\n  */\n  linkedTo: 'Linked to {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/snippets/ScriptSnippetFileSystem.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction escapeSnippetName(name: Platform.DevToolsPath.RawPathString): Platform.DevToolsPath.EncodedPathString {\n  return Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(name);\n}\n\nfunction unescapeSnippetName(name: Platform.DevToolsPath.EncodedPathString): Platform.DevToolsPath.RawPathString {\n  return Common.ParsedURL.ParsedURL.encodedPathToRawPathString(name);\n}\n\nexport class SnippetFileSystem extends Persistence.PlatformFileSystem.PlatformFileSystem {\n  private readonly lastSnippetIdentifierSetting: Common.Settings.Setting<number>;\n  private readonly snippetsSetting: Common.Settings.Setting<Snippet[]>;\n  constructor() {\n    super('snippet://' as Platform.DevToolsPath.UrlString, 'snippets');\n    this.lastSnippetIdentifierSetting =\n        Common.Settings.Settings.instance().createSetting('scriptSnippets_lastIdentifier', 0);\n    this.snippetsSetting = Common.Settings.Settings.instance().createSetting('scriptSnippets', []);\n  }\n\n  initialFilePaths(): Platform.DevToolsPath.EncodedPathString[] {\n    const savedSnippets: Snippet[] = this.snippetsSetting.get();\n    return savedSnippets.map(snippet => escapeSnippetName(snippet.name));\n  }\n\n  async createFile(_path: Platform.DevToolsPath.EncodedPathString, _name: Platform.DevToolsPath.RawPathString|null):\n      Promise<Platform.DevToolsPath.EncodedPathString|null> {\n    const nextId = this.lastSnippetIdentifierSetting.get() + 1;\n    this.lastSnippetIdentifierSetting.set(nextId);\n\n    const snippetName =\n        i18nString(UIStrings.scriptSnippet, {PH1: nextId}) as string as Platform.DevToolsPath.RawPathString;\n    const snippets = this.snippetsSetting.get();\n    snippets.push({name: snippetName, content: ''});\n    this.snippetsSetting.set(snippets);\n\n    return escapeSnippetName(snippetName);\n  }\n\n  async deleteFile(path: Platform.DevToolsPath.EncodedPathString): Promise<boolean> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const allSnippets: Snippet[] = this.snippetsSetting.get();\n    const snippets = allSnippets.filter(snippet => snippet.name !== name);\n    if (allSnippets.length !== snippets.length) {\n      this.snippetsSetting.set(snippets);\n      return true;\n    }\n    return false;\n  }\n\n  async requestFileContent(path: Platform.DevToolsPath.EncodedPathString):\n      Promise<TextUtils.ContentProvider.DeferredContent> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    if (snippet) {\n      return {content: snippet.content, isEncoded: false};\n    }\n    return {content: null, isEncoded: false, error: `A snippet with name '${name}' was not found`};\n  }\n\n  async setFileContent(path: Platform.DevToolsPath.EncodedPathString, content: string, _isBase64: boolean):\n      Promise<boolean> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    if (snippet) {\n      snippet.content = content;\n      this.snippetsSetting.set(snippets);\n      return true;\n    }\n    return false;\n  }\n\n  renameFile(\n      path: Platform.DevToolsPath.EncodedPathString, newName: Platform.DevToolsPath.RawPathString,\n      callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    newName = Common.ParsedURL.ParsedURL.trim(newName);\n    if (!snippet || newName.length === 0 || snippets.find(snippet => snippet.name === newName)) {\n      callback(false);\n      return;\n    }\n    snippet.name = newName;\n    this.snippetsSetting.set(snippets);\n    callback(true, newName);\n  }\n\n  async searchInPath(query: string, _progress: Common.Progress.Progress): Promise<string[]> {\n    const re = new RegExp(Platform.StringUtilities.escapeForRegExp(query), 'i');\n    const allSnippets: Snippet[] = this.snippetsSetting.get();\n    const matchedSnippets = allSnippets.filter(snippet => snippet.content.match(re));\n    return matchedSnippets.map(snippet => `snippet:///${escapeSnippetName(snippet.name)}`);\n  }\n\n  mimeFromPath(_path: Platform.DevToolsPath.UrlString): string {\n    return 'text/javascript';\n  }\n\n  contentType(_path: string): Common.ResourceType.ResourceType {\n    return Common.ResourceType.resourceTypes.Script;\n  }\n\n  tooltipForURL(url: Platform.DevToolsPath.UrlString): string {\n    return i18nString(\n        UIStrings.linkedTo,\n        {PH1: unescapeSnippetName(Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(url, this.path().length))});\n  }\n\n  supportsAutomapping(): boolean {\n    return true;\n  }\n}\n\nexport async function evaluateScriptSnippet(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n  if (!uiSourceCode.url().startsWith('snippet://')) {\n    return;\n  }\n\n  const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n  if (!executionContext) {\n    return;\n  }\n\n  const runtimeModel = executionContext.runtimeModel;\n  await uiSourceCode.requestContent();\n  uiSourceCode.commitWorkingCopy();\n  const expression = uiSourceCode.workingCopy();\n  Common.Console.Console.instance().show();\n\n  const url = uiSourceCode.url();\n\n  const result = await executionContext.evaluate(\n      {\n        expression: `${expression}\\n//# sourceURL=${url}`,\n        objectGroup: 'console',\n        silent: false,\n        includeCommandLineAPI: true,\n        returnByValue: false,\n        generatePreview: true,\n        replMode: true,\n      } as SDK.RuntimeModel.EvaluationOptions,\n      true, true);\n\n  if ('exceptionDetails' in result && result.exceptionDetails) {\n    SDK.ConsoleModel.ConsoleModel.instance().addMessage(SDK.ConsoleModel.ConsoleMessage.fromException(\n        runtimeModel, result.exceptionDetails, /* messageType */ undefined, /* timestamp */ undefined, url));\n    return;\n  }\n  if (!('object' in result) || !result.object) {\n    return;\n  }\n\n  const scripts = executionContext.debuggerModel.scriptsForSourceURL(url);\n  if (scripts.length < 1) {\n    return;\n  }\n  const scriptId = scripts[scripts.length - 1].scriptId;\n  const details = {\n    type: SDK.ConsoleModel.FrontendMessageType.Result,\n    url,\n    parameters: [result.object],\n    executionContextId: executionContext.id,\n    scriptId,\n  };\n  SDK.ConsoleModel.ConsoleModel.instance().addMessage(new SDK.ConsoleModel.ConsoleMessage(\n      runtimeModel, Protocol.Log.LogEntrySource.Javascript, Protocol.Log.LogEntryLevel.Info, '', details));\n}\n\nexport function isSnippetsUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n  return uiSourceCode.url().startsWith('snippet://');\n}\n\nexport function isSnippetsProject(project: Workspace.Workspace.Project): boolean {\n  return project.type() === Workspace.Workspace.projectTypes.FileSystem &&\n      Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) === 'snippets';\n}\n\nexport function findSnippetsProject(): Workspace.Workspace.Project {\n  const workspaceProject =\n      Workspace.Workspace.WorkspaceImpl.instance()\n          .projectsForType(Workspace.Workspace.projectTypes.FileSystem)\n          .find(\n              project => Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) ===\n                  'snippets');\n\n  if (!workspaceProject) {\n    throw new Error('Unable to find workspace project for the snippets file system');\n  }\n\n  return workspaceProject;\n}\nexport interface Snippet {\n  name: Platform.DevToolsPath.RawPathString;\n  content: string;\n}\n"],
  "mappings": "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",
  "names": []
}
