{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/emulation/emulation-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Emulation from './emulation.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Title of an action in the emulation tool to toggle device mode\n  */\n  toggleDeviceToolbar: 'Toggle device toolbar',\n  /**\n  *@description Title of an action in the emulation tool to capture screenshot\n  */\n  captureScreenshot: 'Capture screenshot',\n  /**\n  * @description Title of an action in the emulation tool to capture full height screenshot. This\n  * action captures a screenshot of the entire website, not just the visible portion.\n  */\n  captureFullSizeScreenshot: 'Capture full size screenshot',\n  /**\n  * @description Title of an action in the emulation tool to capture a screenshot of just this node.\n  * Node refers to a HTML element/node.\n  */\n  captureNodeScreenshot: 'Capture node screenshot',\n  /**\n  * @description Command in the Device Mode Toolbar, to show media query boundaries in the UI.\n  * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n  */\n  showMediaQueries: 'Show media queries',\n  /**\n  * @description A tag of Mobile related settings that can be searched in the command menu if the\n  * user doesn't know the exact name of the tool. Device refers to e.g. phone/tablet.\n  */\n  device: 'device',\n  /**\n  *@description Command in the Device Mode Toolbar, to hide media query boundaries in the UI.\n  * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n  */\n  hideMediaQueries: 'Hide media queries',\n  /**\n  *@description Command that shows measuring rulers next to the emulated device.\n  */\n  showRulers: 'Show rulers in the Device Mode toolbar',\n  /**\n  *@description Command that hides measuring rulers next to the emulated device.\n  */\n  hideRulers: 'Hide rulers in the Device Mode toolbar',\n  /**\n  *@description Command that shows a frame (like a picture frame) around the emulated device.\n  */\n  showDeviceFrame: 'Show device frame',\n  /**\n  *@description Command that hides a frame (like a picture frame) around the emulated device.\n  */\n  hideDeviceFrame: 'Hide device frame',\n\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/emulation-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedEmulationModule: (typeof Emulation|undefined);\n\nasync function loadEmulationModule(): Promise<typeof Emulation> {\n  if (!loadedEmulationModule) {\n    loadedEmulationModule = await import('./emulation.js');\n  }\n  return loadedEmulationModule;\n}\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.MOBILE,\n  actionId: 'emulation.toggle-device-mode',\n  toggleable: true,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.DeviceModeWrapper.ActionDelegate.instance();\n  },\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  title: i18nLazyString(UIStrings.toggleDeviceToolbar),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_PHONE,\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Shift+Ctrl+M',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Shift+Meta+M',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.DeviceModeWrapper.ActionDelegate.instance();\n  },\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  title: i18nLazyString(UIStrings.captureScreenshot),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-full-height-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.DeviceModeWrapper.ActionDelegate.instance();\n  },\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  title: i18nLazyString(UIStrings.captureFullSizeScreenshot),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'emulation.capture-node-screenshot',\n  category: UI.ActionRegistration.ActionCategory.SCREENSHOT,\n  async loadActionDelegate() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.DeviceModeWrapper.ActionDelegate.instance();\n  },\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  title: i18nLazyString(UIStrings.captureNodeScreenshot),\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'showMediaQueryInspector',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showMediaQueries),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideMediaQueries),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'emulation.showRulers',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showRulers),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideRulers),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.MOBILE,\n  settingName: 'emulation.showDeviceOutline',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.showDeviceFrame),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.hideDeviceFrame),\n    },\n  ],\n  tags: [i18nLazyString(UIStrings.device)],\n});\n\nUI.Toolbar.registerToolbarItem({\n  actionId: 'emulation.toggle-device-mode',\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  location: UI.Toolbar.ToolbarItemLocation.MAIN_TOOLBAR_LEFT,\n  order: 1,\n  showLabel: undefined,\n  loadItem: undefined,\n  separator: undefined,\n});\n\nCommon.AppProvider.registerAppProvider({\n  async loadAppProvider() {\n    const Emulation = await loadEmulationModule();\n    return Emulation.AdvancedApp.AdvancedAppProvider.instance();\n  },\n  condition: Root.Runtime.ConditionName.CAN_DOCK,\n  order: 0,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.DEVICE_MODE_MENU_SAVE,\n  order: 12,\n  actionId: 'emulation.capture-screenshot',\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.DEVICE_MODE_MENU_SAVE,\n  order: 13,\n  actionId: 'emulation.capture-full-height-screenshot',\n});\n"],
  "mappings": "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",
  "names": []
}
