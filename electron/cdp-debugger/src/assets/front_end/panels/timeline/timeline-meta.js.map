{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/timeline-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Profiler from '../profiler/profiler.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport type * as Timeline from './timeline.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the performance of something\n  */\n  performance: 'Performance',\n  /**\n  *@description Command for showing the 'Performance' tool\n  */\n  showPerformance: 'Show Performance',\n  /**\n  *@description Title of the 'JavaScript Profiler' tool\n  */\n  javascriptProfiler: 'JavaScript Profiler',\n  /**\n  *@description Command for showing the 'JavaScript Profiler' tool\n  */\n  showJavascriptProfiler: 'Show JavaScript Profiler',\n  /**\n  *@description Text to record a series of actions for analysis\n  */\n  record: 'Record',\n  /**\n  *@description Text of an item that stops the running task\n  */\n  stop: 'Stop',\n  /**\n  *@description Title of an action in the timeline tool to record reload\n  */\n  startProfilingAndReloadPage: 'Start profiling and reload page',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon download button\n  */\n  saveProfile: 'Save profile\u2026',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon load button\n  */\n  loadProfile: 'Load profile\u2026',\n  /**\n  *@description Prev button title in Film Strip View of the Performance panel\n  */\n  previousFrame: 'Previous frame',\n  /**\n  *@description Next button title in Film Strip View of the Performance panel\n  */\n  nextFrame: 'Next frame',\n  /**\n  *@description Title of an action in the timeline tool to show history\n  */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n  *@description Title of an action that opens the previous recording in the performance panel\n  */\n  previousRecording: 'Previous recording',\n  /**\n  *@description Title of an action that opens the next recording in the performance panel\n  */\n  nextRecording: 'Next recording',\n  /**\n  *@description Title of a setting under the Performance category in Settings\n  */\n  hideChromeFrameInLayersView: 'Hide `chrome` frame in Layers view',\n  /**\n  *@description Text in the Shortcuts page to explain a keyboard shortcut (start/stop recording performance)\n  */\n  startStopRecording: 'Start/stop recording',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('./timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\n// The profiler module is imported here because the js profiler tab is implemented\n// in the profiler module. Since the tab doesn't belong to all apps that extend\n// the shell app, it cannot be registered in profiler's meta file, as profiler is\n// part of the shell app, and thus all of the extensions registered in profiler\n// belong to all apps that extend from shell.\n// Instead, we register the extensions for the js profiler tab in panels/timeline/ and\n// js_profiler/ so that the tab is available only in the apps it belongs to.\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    loadedProfilerModule = await import('../profiler/profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nfunction maybeRetrieveProfilerContextTypes<T = unknown>(getClassCallBack: (profilerModule: typeof Profiler) => T[]):\n    T[] {\n  if (loadedProfilerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedProfilerModule);\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]): T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 50,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'js_profiler',\n  title: i18nLazyString(UIStrings.javascriptProfiler),\n  commandPrompt: i18nLazyString(UIStrings.showJavascriptProfiler),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 65,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_REFRESH,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.startProfilingAndReloadPage),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.save-to-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  title: i18nLazyString(UIStrings.saveProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+S',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+S',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  actionId: 'timeline.load-from-file',\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  title: i18nLazyString(UIStrings.loadProfile),\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+O',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+O',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-previous-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.previousFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  bindings: [\n    {\n      shortcut: '[',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.jump-to-next-frame',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.nextFrame),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  bindings: [\n    {\n      shortcut: ']',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.previous-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  title: i18nLazyString(UIStrings.previousRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Alt+Left',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Left',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.next-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.ActionDelegate.instance();\n  },\n  title: i18nLazyString(UIStrings.nextRecording),\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Alt+Right',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Right',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.js-toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.JAVASCRIPT_PROFILER,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveProfilerContextTypes(Profiler => [Profiler.ProfilesPanel.JSProfilerPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  storageType: Common.Settings.SettingStorageType.Synced,\n  title: i18nLazyString(UIStrings.hideChromeFrameInLayersView),\n  settingName: 'frameViewerHideChromeWindow',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n});\n\nCommon.Linkifier.registerLinkifier({\n  contextTypes() {\n    return maybeRetrieveContextTypes(Timeline => [Timeline.CLSLinkifier.CLSRect]);\n  },\n  async loadLinkifier() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.CLSLinkifier.Linkifier.instance();\n  },\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.load-from-file',\n  order: 10,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.TIMELINE_MENU_OPEN,\n  actionId: 'timeline.save-to-file',\n  order: 15,\n});\n"],
  "mappings": "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",
  "names": []
}
