{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/TimelineFlameChartNetworkDataProvider.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nimport timelineFlamechartPopoverStyles from './timelineFlamechartPopover.css.js';\n\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {PerformanceModel} from './PerformanceModel.js';\nimport {FlameChartStyle, Selection} from './TimelineFlameChartView.js';\nimport {TimelineSelection} from './TimelinePanel.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the Network tool\n  */\n  network: 'Network',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineFlameChartNetworkDataProvider.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineFlameChartNetworkDataProvider implements PerfUI.FlameChart.FlameChartDataProvider {\n  private readonly font: string;\n  private readonly style: {\n    padding: number,\n    height: number,\n    collapsible: boolean,\n    color: string,\n    font: string,\n    backgroundColor: string,\n    nestingLevel: number,\n    useFirstLineForOverview: boolean,\n    useDecoratorsForOverview: boolean,\n    shareHeaderLine: boolean,\n  };\n  private group: PerfUI.FlameChart.Group;\n  private minimumBoundaryInternal: number;\n  private maximumBoundary: number;\n  private timeSpan: number;\n  private requests: TimelineModel.TimelineModel.NetworkRequest[];\n  private maxLevel: number;\n  private model?: TimelineModel.TimelineModel.TimelineModelImpl|null;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timelineDataInternal?: any;\n  private startTime?: number;\n  private endTime?: number;\n  private lastSelection?: Selection;\n  private priorityToValue?: Map<string, number>;\n  constructor() {\n    this.font = '11px ' + Host.Platform.fontFamily();\n    this.setModel(null);\n    this.style = {\n      padding: 4,\n      height: 17,\n      collapsible: true,\n      color: ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary'),\n      font: this.font,\n      backgroundColor: ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background'),\n      nestingLevel: 0,\n      useFirstLineForOverview: false,\n      useDecoratorsForOverview: true,\n      shareHeaderLine: false,\n    };\n    this.group =\n        ({startLevel: 0, name: i18nString(UIStrings.network), expanded: false, style: this.style} as\n         PerfUI.FlameChart.Group);\n    this.minimumBoundaryInternal = 0;\n    this.maximumBoundary = 0;\n    this.timeSpan = 0;\n    this.requests = [];\n    this.maxLevel = 0;\n\n    // In the event of a theme change, these colors must be recalculated.\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      this.style.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n      this.style.backgroundColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background');\n    });\n  }\n\n  setModel(performanceModel: PerformanceModel|null): void {\n    this.model = performanceModel && performanceModel.timelineModel();\n    this.timelineDataInternal = null;\n  }\n\n  isEmpty(): boolean {\n    this.timelineData();\n    return !this.requests.length;\n  }\n\n  maxStackDepth(): number {\n    return this.maxLevel;\n  }\n\n  timelineData(): PerfUI.FlameChart.TimelineData {\n    if (this.timelineDataInternal) {\n      return this.timelineDataInternal;\n    }\n    this.requests = [];\n    this.timelineDataInternal = new PerfUI.FlameChart.TimelineData([], [], [], []);\n    if (this.model) {\n      this.appendTimelineData();\n    }\n    return this.timelineDataInternal;\n  }\n\n  minimumBoundary(): number {\n    return this.minimumBoundaryInternal;\n  }\n\n  totalTime(): number {\n    return this.timeSpan;\n  }\n\n  setWindowTimes(startTime: number, endTime: number): void {\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.updateTimelineData();\n  }\n\n  createSelection(index: number): TimelineSelection|null {\n    if (index === -1) {\n      return null;\n    }\n    const request = this.requests[index];\n    this.lastSelection = new Selection(TimelineSelection.fromNetworkRequest(request), index);\n    return this.lastSelection.timelineSelection;\n  }\n\n  entryIndexForSelection(selection: TimelineSelection|null): number {\n    if (!selection) {\n      return -1;\n    }\n\n    if (this.lastSelection && this.lastSelection.timelineSelection.object() === selection.object()) {\n      return this.lastSelection.entryIndex;\n    }\n\n    if (selection.type() !== TimelineSelection.Type.NetworkRequest) {\n      return -1;\n    }\n    const request = (selection.object() as TimelineModel.TimelineModel.NetworkRequest);\n    const index = this.requests.indexOf(request);\n    if (index !== -1) {\n      this.lastSelection = new Selection(TimelineSelection.fromNetworkRequest(request), index);\n    }\n    return index;\n  }\n\n  entryColor(index: number): string {\n    const request = (this.requests[index] as TimelineModel.TimelineModel.NetworkRequest);\n    const category = TimelineUIUtils.networkRequestCategory(request);\n    return TimelineUIUtils.networkCategoryColor(category);\n  }\n\n  textColor(_index: number): string {\n    return FlameChartStyle.textColor;\n  }\n\n  entryTitle(index: number): string|null {\n    const request = (this.requests[index] as TimelineModel.TimelineModel.NetworkRequest);\n    const parsedURL = new Common.ParsedURL.ParsedURL(request.url || '');\n    return parsedURL.isValid ? `${parsedURL.displayName} (${parsedURL.host})` : request.url || null;\n  }\n\n  entryFont(_index: number): string|null {\n    return this.font;\n  }\n\n  decorateEntry(\n      index: number, context: CanvasRenderingContext2D, text: string|null, barX: number, barY: number, barWidth: number,\n      barHeight: number, unclippedBarX: number, timeToPixelRatio: number): boolean {\n    const request = (this.requests[index] as TimelineModel.TimelineModel.NetworkRequest);\n    if (!request.timing) {\n      return false;\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const timing = (request.timing as any);\n\n    const beginTime = request.beginTime();\n    const timeToPixel = (time: number): number => Math.floor(unclippedBarX + (time - beginTime) * timeToPixelRatio);\n    const minBarWidthPx = 2;\n    const startTime = request.getStartTime();\n    const endTime = request.endTime;\n    const {sendStartTime, headersEndTime} = request.getSendReceiveTiming();\n    const sendStart = Math.max(timeToPixel(sendStartTime), unclippedBarX);\n    const headersEnd = Math.max(timeToPixel(headersEndTime), sendStart);\n    const finish = Math.max(timeToPixel(request.finishTime || endTime), headersEnd + minBarWidthPx);\n    const start = timeToPixel(startTime);\n    const end = Math.max(timeToPixel(endTime), finish);\n\n    // Draw waiting time.\n    context.fillStyle = 'hsla(0, 100%, 100%, 0.8)';\n    context.fillRect(sendStart + 0.5, barY + 0.5, headersEnd - sendStart - 0.5, barHeight - 2);\n    // Clear portions of initial rect to prepare for the ticks.\n    context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background');\n    context.fillRect(barX, barY - 0.5, sendStart - barX, barHeight);\n    context.fillRect(finish, barY - 0.5, barX + barWidth - finish, barHeight);\n\n    // If the request is from cache, pushStart refers to the original request, and hence cannot be used.\n    if (!request.cached() && timing.pushStart) {\n      const pushStart = timeToPixel(timing.pushStart * 1000);\n      const pushEnd = timing.pushEnd ? timeToPixel(timing.pushEnd * 1000) : start;\n      const dentSize = Platform.NumberUtilities.clamp(pushEnd - pushStart - 2, 0, 4);\n      const padding = 1;\n      context.save();\n      context.beginPath();\n      context.moveTo(pushStart + dentSize, barY + barHeight / 2);\n      context.lineTo(pushStart, barY + padding);\n      context.lineTo(pushEnd - dentSize, barY + padding);\n      context.lineTo(pushEnd, barY + barHeight / 2);\n      context.lineTo(pushEnd - dentSize, barY + barHeight - padding);\n      context.lineTo(pushStart, barY + barHeight - padding);\n      context.closePath();\n      if (timing.pushEnd) {\n        context.fillStyle = this.entryColor(index);\n      } else {\n        // Use a gradient to indicate that `pushEnd` is not known here to work\n        // around BUG(chromium:998411).\n        const gradient = context.createLinearGradient(pushStart, 0, pushEnd, 0);\n        gradient.addColorStop(0, this.entryColor(index));\n        gradient.addColorStop(1, 'white');\n        context.fillStyle = gradient;\n      }\n      context.globalAlpha = 0.3;\n      context.fill();\n      context.restore();\n    }\n\n    function drawTick(begin: number, end: number, y: number): void {\n      const /** @const */ tickHeightPx = 6;\n      context.moveTo(begin, y - tickHeightPx / 2);\n      context.lineTo(begin, y + tickHeightPx / 2);\n      context.moveTo(begin, y);\n      context.lineTo(end, y);\n    }\n\n    context.beginPath();\n    context.lineWidth = 1;\n    context.strokeStyle = '#ccc';\n    const lineY = Math.floor(barY + barHeight / 2) + 0.5;\n    const leftTick = start + 0.5;\n    const rightTick = end - 0.5;\n    drawTick(leftTick, sendStart, lineY);\n    drawTick(rightTick, finish, lineY);\n    context.stroke();\n\n    if (typeof request.priority === 'string') {\n      const color = this.colorForPriority(request.priority);\n      if (color) {\n        context.fillStyle = color;\n        context.fillRect(sendStart + 0.5, barY + 0.5, 3.5, 3.5);\n      }\n    }\n\n    const textStart = Math.max(sendStart, 0);\n    const textWidth = finish - textStart;\n    const /** @const */ minTextWidthPx = 20;\n    if (textWidth >= minTextWidthPx) {\n      text = this.entryTitle(index) || '';\n      if (request.fromServiceWorker) {\n        text = '\u2699 ' + text;\n      }\n      if (text) {\n        const /** @const */ textPadding = 4;\n        const /** @const */ textBaseline = 5;\n        const textBaseHeight = barHeight - textBaseline;\n        const trimmedText = UI.UIUtils.trimTextEnd(context, text, textWidth - 2 * textPadding);\n        context.fillStyle = '#333';\n        context.fillText(trimmedText, textStart + textPadding, barY + textBaseHeight);\n      }\n    }\n\n    return true;\n  }\n\n  forceDecoration(_index: number): boolean {\n    return true;\n  }\n\n  prepareHighlightedEntryInfo(index: number): Element|null {\n    const /** @const */ maxURLChars = 80;\n    const request = (this.requests[index] as TimelineModel.TimelineModel.NetworkRequest);\n    if (!request.url) {\n      return null;\n    }\n    const element = document.createElement('div');\n    const root = UI.Utils.createShadowRootWithCoreStyles(element, {\n      cssFile: [timelineFlamechartPopoverStyles],\n      delegatesFocus: undefined,\n    });\n    const contents = root.createChild('div', 'timeline-flamechart-popover');\n    const startTime = request.getStartTime();\n    const duration = request.endTime - startTime;\n    if (startTime && isFinite(duration)) {\n      contents.createChild('span', 'timeline-info-network-time').textContent =\n          i18n.TimeUtilities.millisToString(duration, true);\n    }\n    if (typeof request.priority === 'string') {\n      const div = (contents.createChild('span') as HTMLElement);\n      div.textContent =\n          PerfUI.NetworkPriorities.uiLabelForNetworkPriority((request.priority as Protocol.Network.ResourcePriority));\n      div.style.color = this.colorForPriority(request.priority) || 'black';\n    }\n    contents.createChild('span').textContent = Platform.StringUtilities.trimMiddle(request.url, maxURLChars);\n    return element;\n  }\n\n  private colorForPriority(priority: string): string|null {\n    if (!this.priorityToValue) {\n      this.priorityToValue = new Map([\n        [Protocol.Network.ResourcePriority.VeryLow, 1],\n        [Protocol.Network.ResourcePriority.Low, 2],\n        [Protocol.Network.ResourcePriority.Medium, 3],\n        [Protocol.Network.ResourcePriority.High, 4],\n        [Protocol.Network.ResourcePriority.VeryHigh, 5],\n      ]);\n    }\n    const value = this.priorityToValue.get(priority);\n    return value ? `hsla(214, 80%, 50%, ${value / 5})` : null;\n  }\n\n  private appendTimelineData(): void {\n    if (this.model) {\n      this.minimumBoundaryInternal = this.model.minimumRecordTime();\n      this.maximumBoundary = this.model.maximumRecordTime();\n      this.timeSpan = this.model.isEmpty() ? 1000 : this.maximumBoundary - this.minimumBoundaryInternal;\n      this.model.networkRequests().forEach(this.appendEntry.bind(this));\n      this.updateTimelineData();\n    }\n  }\n\n  private updateTimelineData(): void {\n    if (!this.timelineDataInternal) {\n      return;\n    }\n    const lastTimeByLevel = [];\n    let maxLevel = 0;\n    for (let i = 0; i < this.requests.length; ++i) {\n      const r = this.requests[i];\n      const beginTime = r.beginTime();\n      const startTime = (this.startTime as number);\n      const endTime = (this.endTime as number);\n      const visible = beginTime < endTime && r.endTime > startTime;\n      if (!visible) {\n        this.timelineDataInternal.entryLevels[i] = -1;\n        continue;\n      }\n      while (lastTimeByLevel.length && lastTimeByLevel[lastTimeByLevel.length - 1] <= beginTime) {\n        lastTimeByLevel.pop();\n      }\n      this.timelineDataInternal.entryLevels[i] = lastTimeByLevel.length;\n      lastTimeByLevel.push(r.endTime);\n      maxLevel = Math.max(maxLevel, lastTimeByLevel.length);\n    }\n    for (let i = 0; i < this.requests.length; ++i) {\n      if (this.timelineDataInternal.entryLevels[i] === -1) {\n        this.timelineDataInternal.entryLevels[i] = maxLevel;\n      }\n    }\n    this.timelineDataInternal = new PerfUI.FlameChart.TimelineData(\n        this.timelineDataInternal.entryLevels, this.timelineDataInternal.entryTotalTimes,\n        this.timelineDataInternal.entryStartTimes, [this.group]);\n    this.maxLevel = maxLevel;\n  }\n\n  private appendEntry(request: TimelineModel.TimelineModel.NetworkRequest): void {\n    this.requests.push(request);\n    this.timelineDataInternal.entryStartTimes.push(request.beginTime());\n    this.timelineDataInternal.entryTotalTimes.push(request.endTime - request.beginTime());\n    this.timelineDataInternal.entryLevels.push(this.requests.length - 1);\n  }\n\n  preferredHeight(): number {\n    return this.style.height * (this.group.expanded ? Platform.NumberUtilities.clamp(this.maxLevel + 1, 4, 8.5) : 1);\n  }\n\n  isExpanded(): boolean {\n    return this.group && Boolean(this.group.expanded);\n  }\n\n  formatValue(value: number, precision?: number): string {\n    return i18n.TimeUtilities.preciseMillisToString(value, precision);\n  }\n\n  canJumpToEntry(_entryIndex: number): boolean {\n    return false;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  navStartTimes(): Map<any, any> {\n    if (!this.model) {\n      return new Map();\n    }\n\n    return this.model.navStartTimes();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
