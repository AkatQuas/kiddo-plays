{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/TimelineUIUtils.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n * Copyright (C) 2012 Intel Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport invalidationsTreeStyles from './invalidationsTree.css.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport imagePreviewStyles from '../../ui/legacy/components/utils/imagePreview.css.js';\n\nimport {CLSRect} from './CLSLinkifier.js';\nimport {TimelinePanel, TimelineSelection} from './TimelinePanel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {node1} PH1\n  *@example {node2} PH2\n  */\n  sAndS: '{PH1} and {PH2}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {node1} PH1\n  *@example {node2} PH2\n  */\n  sAndSOther: '{PH1}, {PH2}, and 1 other',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  task: 'Task',\n  /**\n  *@description Text for other types of items\n  */\n  other: 'Other',\n  /**\n  *@description Text that refers to the animation of the web page\n  */\n  animation: 'Animation',\n  /**\n  *@description Text that refers to some events\n  */\n  event: 'Event',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  requestMainThreadFrame: 'Request Main Thread Frame',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  frameStart: 'Frame Start',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  frameStartMainThread: 'Frame Start (main thread)',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  drawFrame: 'Draw Frame',\n  /**\n  *@description The process the browser uses to determine a target element for a\n  *pointer event. Typically, this is determined by considering the pointer's\n  *location and also the visual layout of elements on the screen.\n  */\n  hitTest: 'Hit Test',\n  /**\n  *@description Noun for an event in the Performance panel. The browser has decided\n  *that the styles for some elements need to be recalculated and scheduled that\n  *recalculation process at some time in the future.\n  */\n  scheduleStyleRecalculation: 'Schedule Style Recalculation',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  recalculateStyle: 'Recalculate Style',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  invalidateLayout: 'Invalidate Layout',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  layout: 'Layout',\n  /**\n  *@description Noun for an event in the Performance panel. Paint setup is a\n  *step before the 'Paint' event. A paint event is when the browser draws pixels\n  *to the screen. This step is the setup beforehand.\n  */\n  paintSetup: 'Paint Setup',\n  /**\n  *@description Noun for a paint event in the Performance panel, where an image\n  *was being painted. A paint event is when the browser draws pixels to the\n  *screen, in this case specifically for an image in a website.\n  */\n  paintImage: 'Paint Image',\n  /**\n  *@description Noun for an event in the Performance panel. Pre-paint is a\n  *step before the 'Paint' event. A paint event is when the browser records the\n  *instructions for drawing the page. This step is the setup beforehand.\n  */\n  prePaint: 'Pre-Paint',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  updateLayer: 'Update Layer',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  updateLayerTree: 'Update Layer Tree',\n  /**\n  *@description Noun for a paint event in the Performance panel. A paint event is when the browser draws pixels to the screen.\n  */\n  paint: 'Paint',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  rasterizePaint: 'Rasterize Paint',\n  /**\n  *@description The action to scroll\n  */\n  scroll: 'Scroll',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compositeLayers: 'Composite Layers',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  computeIntersections: 'Compute Intersections',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  parseHtml: 'Parse HTML',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  parseStylesheet: 'Parse Stylesheet',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  installTimer: 'Install Timer',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  removeTimer: 'Remove Timer',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  timerFired: 'Timer Fired',\n  /**\n   *@description Text for an event. Shown in the timeline in the Performance panel.\n   * XHR refers to XmlHttpRequest, a Web API. This particular Web API has a property\n   * named 'readyState' (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState). When\n   * the 'readyState' property changes the text is shown.\n   */\n  xhrReadyStateChange: '`XHR` Ready State Change',\n  /**\n   * @description Text for an event. Shown in the timeline in the Perforamnce panel.\n   * XHR refers to XmlHttpRequest, a Web API. (see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)\n   * The text is shown when a XmlHttpRequest load event happens on the inspected page.\n   */\n  xhrLoad: '`XHR` Load',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compileScript: 'Compile Script',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  cacheScript: 'Cache Script Code',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compileCode: 'Compile Code',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  optimizeCode: 'Optimize Code',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  evaluateScript: 'Evaluate Script',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compileModule: 'Compile Module',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  cacheModule: 'Cache Module Code',\n  /**\n   * @description Text for an event. Shown in the timeline in the Perforamnce panel.\n   * \"Module\" refers to JavaScript modules: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n   * JavaScript modules are a way to organize JavaScript code.\n   * \"Evaluate\" is the phase when the JavaScript code of a module is executed.\n   */\n  evaluateModule: 'Evaluate Module',\n  /**\n  *@description Noun indicating that a compile task (type: streaming) happened.\n  */\n  streamingCompileTask: 'Streaming Compile Task',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  waitingForNetwork: 'Waiting for Network',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  parseAndCompile: 'Parse and Compile',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  streamingWasmResponse: 'Streaming Wasm Response',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compiledWasmModule: 'Compiled Wasm Module',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  cachedWasmModule: 'Cached Wasm Module',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  wasmModuleCacheHit: 'Wasm Module Cache Hit',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  wasmModuleCacheInvalid: 'Wasm Module Cache Invalid',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  frameStartedLoading: 'Frame Started Loading',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  onloadEvent: 'Onload Event',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  domcontentloadedEvent: 'DOMContentLoaded Event',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  firstPaint: 'First Paint',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  firstContentfulPaint: 'First Contentful Paint',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  largestContentfulPaint: 'Largest Contentful Paint',\n  /**\n  *@description Text for timestamps of items\n  */\n  timestamp: 'Timestamp',\n  /**\n  *@description Noun for a 'time' event that happens in the Console (a tool in\n  * DevTools). The user can trigger console time events from their code, and\n  * they will show up in the Performance panel. Time events are used to measure\n  * the duration of something, e.g. the user will emit two time events at the\n  * start and end of some interesting task.\n  */\n  consoleTime: 'Console Time',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  userTiming: 'User Timing',\n  /**\n   * @description Name for an event shown in the Performance panel. When a network\n   * request is about to be sent by the browser, the time is recorded and DevTools\n   * is notified that a network request will be sent momentarily.\n   */\n  willSendRequest: 'Will Send Request',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  sendRequest: 'Send Request',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  receiveResponse: 'Receive Response',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  finishLoading: 'Finish Loading',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  receiveData: 'Receive Data',\n  /**\n  *@description Event category in the Performance panel for time spent to execute microtasks in JavaScript\n  */\n  runMicrotasks: 'Run Microtasks',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  functionCall: 'Function Call',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  gcEvent: 'GC Event',\n  /**\n  *@description Event category in the Performance panel for time spent to perform a full Garbage Collection pass\n  */\n  majorGc: 'Major GC',\n  /**\n  *@description Event category in the Performance panel for time spent to perform a quick Garbage Collection pass\n  */\n  minorGc: 'Minor GC',\n  /**\n  *@description Event category in the Performance panel for time spent to execute JavaScript\n  */\n  jsFrame: 'JS Frame',\n  /**\n  *@description Text for the request animation frame event\n  */\n  requestAnimationFrame: 'Request Animation Frame',\n  /**\n  *@description Text to cancel the animation frame\n  */\n  cancelAnimationFrame: 'Cancel Animation Frame',\n  /**\n  *@description Text for the event that an animation frame is fired\n  */\n  animationFrameFired: 'Animation Frame Fired',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  requestIdleCallback: 'Request Idle Callback',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  cancelIdleCallback: 'Cancel Idle Callback',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  fireIdleCallback: 'Fire Idle Callback',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  createWebsocket: 'Create WebSocket',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  sendWebsocketHandshake: 'Send WebSocket Handshake',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  receiveWebsocketHandshake: 'Receive WebSocket Handshake',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  destroyWebsocket: 'Destroy WebSocket',\n  /**\n  *@description Event category in the Performance panel for time spent in the embedder of the WebView\n  */\n  embedderCallback: 'Embedder Callback',\n  /**\n  *@description Event category in the Performance panel for time spent decoding an image\n  */\n  imageDecode: 'Image Decode',\n  /**\n  *@description Event category in the Performance panel for time spent to resize an image\n  */\n  imageResize: 'Image Resize',\n  /**\n  *@description Event category in the Performance panel for time spent in the GPU\n  */\n  gpu: 'GPU',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  inputLatency: 'Input Latency',\n  /**\n  *@description Event category in the Performance panel for time spent to perform Garbage Collection for the Document Object Model\n  */\n  domGc: 'DOM GC',\n  /**\n  *@description Event category in the Performance panel for time spent to perform encryption\n  */\n  encrypt: 'Encrypt',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  encryptReply: 'Encrypt Reply',\n  /**\n  *@description Event category in the Performance panel for time spent to perform decryption\n  */\n  decrypt: 'Decrypt',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  decryptReply: 'Decrypt Reply',\n  /**\n   * @description Noun phrase meaning 'the browser was preparing the digest'.\n   * Digest: https://developer.mozilla.org/en-US/docs/Glossary/Digest\n   */\n  digest: 'Digest',\n  /**\n  *@description Noun phrase meaning 'the browser was preparing the digest\n  *reply'. Digest: https://developer.mozilla.org/en-US/docs/Glossary/Digest\n  */\n  digestReply: 'Digest Reply',\n  /**\n  *@description The 'sign' stage of a web crypto event. Shown when displaying what the website was doing at a particular point in time.\n  */\n  sign: 'Sign',\n  /**\n   * @description Noun phrase for an event of the Web Crypto API. The event is recorded when the signing process is concluded.\n   * Signature: https://developer.mozilla.org/en-US/docs/Glossary/Signature/Security\n   */\n  signReply: 'Sign Reply',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  verify: 'Verify',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  verifyReply: 'Verify Reply',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  asyncTask: 'Async Task',\n  /**\n  *@description Text in Timeline for Layout Shift records\n  */\n  layoutShift: 'Layout Shift',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  keyCharacter: 'Key \u2014 Character',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  keyDown: 'Key Down',\n  /**\n  *@description Noun for the end keyboard key event in the Performance panel. 'Up' refers to the keyboard key bouncing back up after being pushed down.\n  */\n  keyUp: 'Key Up',\n  /**\n  *@description Noun for a mouse click event in the Performance panel.\n  */\n  click: 'Click',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  contextMenu: 'Context Menu',\n  /**\n  *@description Noun for the start of a mouse event in the Performance panel. Down refers to the button on the mouse being pressed down.\n  */\n  mouseDown: 'Mouse Down',\n  /**\n  *@description Noun for a mouse move event in the Performance panel.\n  */\n  mouseMove: 'Mouse Move',\n  /**\n  *@description Noun for the end of a mouse event in the Performance panel. Up refers to the button on the mouse being released.\n  */\n  mouseUp: 'Mouse Up',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  mouseWheel: 'Mouse Wheel',\n  /**\n  *@description Noun for the beginning of a mouse scroll wheel event in the Performance panel.\n  */\n  scrollBegin: 'Scroll Begin',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  scrollEnd: 'Scroll End',\n  /**\n  *@description Noun for an update of a mouse scroll wheel event in the Performance panel.\n  */\n  scrollUpdate: 'Scroll Update',\n  /**\n  *@description Noun for the beginning of a fling gesture event in the Performance panel.\n  */\n  flingStart: 'Fling Start',\n  /**\n  *@description Noun for the end of a fling gesture event in the Performance panel.\n  */\n  flingHalt: 'Fling Halt',\n  /**\n  *@description Noun for a tap event (tap on a touch screen device) in the Performance panel.\n  */\n  tap: 'Tap',\n  /**\n  *@description Noun for the end of a tap event (tap on a touch screen device) in the Performance panel.\n  */\n  tapHalt: 'Tap Halt',\n  /**\n  *@description Noun for the start of a tap event (tap on a touch screen device) in the Performance panel.\n  */\n  tapBegin: 'Tap Begin',\n  /**\n  *@description Noun for the beginning of a tap gesture event in the Performance\n  *panel. 'Down' refers to the start (downward tap direction), as opposed to up\n  *(finger leaving the touch surface).\n  */\n  tapDown: 'Tap Down',\n  /**\n   * @description Noun for the cancelation of an input touch event in the Performance panel.\n   * For example this can happen when the user touches the surface with too many fingers.\n   * This is opposed to a \"Touch End\" event, where the user lifts the finger from the surface.\n   */\n  touchCancel: 'Touch Cancel',\n  /**\n  *@description Noun for the end of an input touch event in the Performance panel.\n  */\n  touchEnd: 'Touch End',\n  /**\n  *@description Noun for an input touch event in the Performance panel.\n  */\n  touchMove: 'Touch Move',\n  /**\n  *@description Noun for the start of an input touch event in the Performance panel.\n  */\n  touchStart: 'Touch Start',\n  /**\n  *@description Noun for the beginning of a pinch gesture event in the Performance panel.\n  */\n  pinchBegin: 'Pinch Begin',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  pinchEnd: 'Pinch End',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  pinchUpdate: 'Pinch Update',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compile: 'Compile',\n  /**\n  *@description Text to parse something\n  */\n  parse: 'Parse',\n  /**\n  *@description Text with two placeholders separated by a colon\n  *@example {Node removed} PH1\n  *@example {div#id1} PH2\n  */\n  sS: '{PH1}: {PH2}',\n  /**\n  *@description Label of a field in a timeline. A Network response refers to the act of acknowledging a\n  network request. Should not be confused with answer.\n  */\n  response: 'Response',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  fling: 'Fling',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  drag: 'Drag',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  uncategorized: 'Uncategorized',\n  /**\n  *@description Details text in Timeline UIUtils of the Performance panel\n  *@example {30 MB} PH1\n  */\n  sCollected: '{PH1} collected',\n  /**\n  *@description Details text in Timeline UIUtils of the Performance panel\n  *@example {https://example.com} PH1\n  *@example {2} PH2\n  *@example {4} PH3\n  */\n  sSs: '{PH1} [{PH2}\u2026{PH3}]',\n  /**\n  *@description Details text in Timeline UIUtils of the Performance panel\n  *@example {https://example.com} PH1\n  *@example {2} PH2\n  */\n  sSSquareBrackets: '{PH1} [{PH2}\u2026]',\n  /**\n  *@description Text that is usually a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compilationCacheStatus: 'Compilation cache status',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  compilationCacheSize: 'Compilation cache size',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  scriptLoadedFromCache: 'script loaded from cache',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  failedToLoadScriptFromCache: 'failed to load script from cache',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  scriptNotEligible: 'script not eligible',\n  /**\n  *@description Text for the total time of something\n  */\n  totalTime: 'Total Time',\n  /**\n  *@description Time of a single activity, as opposed to the total time\n  */\n  selfTime: 'Self Time',\n  /**\n  *@description Label in the summary view in the Performance panel for a number which indicates how much managed memory has been reclaimed by performing Garbage Collection\n  */\n  collected: 'Collected',\n  /**\n  *@description Text for a programming function\n  */\n  function: 'Function',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  timerId: 'Timer ID',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  timeout: 'Timeout',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  repeats: 'Repeats',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  callbackId: 'Callback ID',\n  /**\n  *@description Text that refers to the resources of the web page\n  */\n  resource: 'Resource',\n  /**\n  *@description Text that refers to the network request method\n  */\n  requestMethod: 'Request Method',\n  /**\n  *@description Status code of an event\n  */\n  statusCode: 'Status Code',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  mimeTypeCaps: 'MIME Type',\n  /**\n  *@description Text to show the priority of an item\n  */\n  priority: 'Priority',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  encodedData: 'Encoded Data',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  sBytes: '{n, plural, =1 {# Byte} other {# Bytes}}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  decodedBody: 'Decoded Body',\n  /**\n  *@description Text for a module, the programming concept\n  */\n  module: 'Module',\n  /**\n  *@description Label for a group of JavaScript files\n  */\n  script: 'Script',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  streamed: 'Streamed',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  eagerCompile: 'Compiling all functions eagerly',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  url: 'Url',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  producedCacheSize: 'Produced Cache Size',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  consumedCacheSize: 'Consumed Cache Size',\n  /**\n  *@description Title for a group of cities\n  */\n  location: 'Location',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {2} PH1\n  *@example {2} PH2\n  */\n  sSCurlyBrackets: '({PH1}, {PH2})',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  dimensions: 'Dimensions',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {2} PH1\n  *@example {2} PH2\n  */\n  sSDimensions: '{PH1} \u00D7 {PH2}',\n  /**\n  *@description Related node label in Timeline UIUtils of the Performance panel\n  */\n  layerRoot: 'Layer Root',\n  /**\n  *@description Related node label in Timeline UIUtils of the Performance panel\n  */\n  ownerElement: 'Owner Element',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  imageUrl: 'Image URL',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  stylesheetUrl: 'Stylesheet URL',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  elementsAffected: 'Elements Affected',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  nodesThatNeedLayout: 'Nodes That Need Layout',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {2} PH1\n  *@example {10} PH2\n  */\n  sOfS: '{PH1} of {PH2}',\n  /**\n  *@description Related node label in Timeline UIUtils of the Performance panel\n  */\n  layoutRoot: 'Layout root',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  message: 'Message',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  websocketProtocol: 'WebSocket Protocol',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  callbackFunction: 'Callback Function',\n  /**\n  *@description The current state of an item\n  */\n  state: 'State',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  range: 'Range',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  allottedTime: 'Allotted Time',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  invokedByTimeout: 'Invoked by Timeout',\n  /**\n  *@description Text that refers to some types\n  */\n  type: 'Type',\n  /**\n  *@description Text for the size of something\n  */\n  size: 'Size',\n  /**\n  *@description Text for the details of something\n  */\n  details: 'Details',\n  /**\n  *@description Title in Timeline for Cumulative Layout Shifts\n  */\n  cumulativeLayoutShifts: 'Cumulative Layout Shifts',\n  /**\n  *@description Text for the link to the evolved CLS website\n  */\n  evolvedClsLink: 'evolved',\n  /**\n  *@description Warning in Timeline that CLS can cause a poor user experience. It contains a link to inform developers about the recent changes to how CLS is measured. The new CLS metric is said to have evolved from the previous version.\n  *@example {Link to web.dev/metrics} PH1\n  *@example {Link to web.dev/evolving-cls which will always have the text 'evolved'} PH2\n  */\n  sCLSInformation: '{PH1} can result in poor user experiences. It has recently {PH2}.',\n  /**\n  *@description Text to indicate an item is a warning\n  */\n  warning: 'Warning',\n  /**\n  *@description Title for the Timeline CLS Score\n  */\n  score: 'Score',\n  /**\n  *@description Text in Timeline for the cumulative CLS score\n  */\n  cumulativeScore: 'Cumulative Score',\n  /**\n  *@description Text in Timeline for the current CLS score\n  */\n  currentClusterScore: 'Current Cluster Score',\n  /**\n  *@description Text in Timeline for the current CLS cluster\n  */\n  currentClusterId: 'Current Cluster ID',\n  /**\n  *@description Text in Timeline for whether input happened recently\n  */\n  hadRecentInput: 'Had recent input',\n  /**\n  *@description Text in Timeline indicating that input has happened recently\n  */\n  yes: 'Yes',\n  /**\n  *@description Text in Timeline indicating that input has not happened recently\n  */\n  no: 'No',\n  /**\n  *@description Label for Cumulative Layout records, indicating where they moved from\n  */\n  movedFrom: 'Moved from',\n  /**\n  *@description Label for Cumulative Layout records, indicating where they moved to\n  */\n  movedTo: 'Moved to',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  timeWaitingForMainThread: 'Time Waiting for Main Thread',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  relatedNode: 'Related Node',\n  /**\n  *@description Text for previewing items\n  */\n  preview: 'Preview',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  aggregatedTime: 'Aggregated Time',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  networkRequest: 'Network request',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  loadFromCache: 'load from cache',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  networkTransfer: 'network transfer',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {1ms} PH1\n  *@example {network transfer} PH2\n  *@example {1ms} PH3\n  */\n  SSSResourceLoading: ' ({PH1} {PH2} + {PH3} resource loading)',\n  /**\n  *@description Text for the duration of something\n  */\n  duration: 'Duration',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  mimeType: 'Mime Type',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  FromMemoryCache: ' (from memory cache)',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  FromCache: ' (from cache)',\n  /**\n  *@description Label for a network request indicating that it was a HTTP2 server push instead of a regular network request, in the Performance panel\n  */\n  FromPush: ' (from push)',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  FromServiceWorker: ' (from `service worker`)',\n  /**\n  *@description Text for the initiator of something\n  */\n  initiator: 'Initiator',\n  /**\n  *@description Call site stack label in Timeline UIUtils of the Performance panel\n  */\n  timerInstalled: 'Timer Installed',\n  /**\n  *@description Call site stack label in Timeline UIUtils of the Performance panel\n  */\n  animationFrameRequested: 'Animation Frame Requested',\n  /**\n  *@description Call site stack label in Timeline UIUtils of the Performance panel\n  */\n  idleCallbackRequested: 'Idle Callback Requested',\n  /**\n  *@description Stack label in Timeline UIUtils of the Performance panel\n  */\n  recalculationForced: 'Recalculation Forced',\n  /**\n  *@description Call site stack label in Timeline UIUtils of the Performance panel\n  */\n  firstLayoutInvalidation: 'First Layout Invalidation',\n  /**\n  *@description Stack label in Timeline UIUtils of the Performance panel\n  */\n  layoutForced: 'Layout Forced',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  callStacks: 'Call Stacks',\n  /**\n  *@description Text for the execution stack trace\n  */\n  stackTrace: 'Stack Trace',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  invalidations: 'Invalidations',\n  /**\n   * @description Text in Timeline UIUtils of the Performance panel. Phrase is followed by a number of milliseconds.\n   * Some events or tasks might have been only started, but have not ended yet. Such events or tasks are considered\n   * \"pending\".\n   */\n  pendingFor: 'Pending for',\n  /**\n  *@description Text for revealing an item in its destination\n  */\n  reveal: 'Reveal',\n  /**\n  *@description Noun label for a stack trace which indicates the first time some condition was invalidated.\n  */\n  firstInvalidated: 'First Invalidated',\n  /**\n  *@description Title in Timeline UIUtils of the Performance panel\n  */\n  styleInvalidations: 'Style Invalidations',\n  /**\n  *@description Title in Timeline UIUtils of the Performance panel\n  */\n  layoutInvalidations: 'Layout Invalidations',\n  /**\n  *@description Title in Timeline UIUtils of the Performance panel\n  */\n  otherInvalidations: 'Other Invalidations',\n  /**\n  *@description Title of the paint profiler, old name of the performance pane\n  */\n  paintProfiler: 'Paint Profiler',\n  /**\n  *@description Text in Timeline Flame Chart View of the Performance panel\n  *@example {Frame} PH1\n  *@example {10ms} PH2\n  */\n  sAtS: '{PH1} at {PH2}',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate time spent to load resources\n  */\n  loading: 'Loading',\n  /**\n  *@description Text in Timeline for the Experience title\n  */\n  experience: 'Experience',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate time spent in script execution\n  */\n  scripting: 'Scripting',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate time spent in rendering the web page\n  */\n  rendering: 'Rendering',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate time spent to visually represent the web page\n  */\n  painting: 'Painting',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  async: 'Async',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate time spent in the rest of the system\n  */\n  system: 'System',\n  /**\n  *@description Category in the Summary view of the Performance panel to indicate idle time\n  */\n  idle: 'Idle',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {blink.console} PH1\n  */\n  sSelf: '{PH1} (self)',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {blink.console} PH1\n  */\n  sChildren: '{PH1} (children)',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  timeSpentInRendering: 'Time spent in rendering',\n  /**\n  *@description Text for a rendering frame\n  */\n  frame: 'Frame',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  cpuTime: 'CPU time',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  layerTree: 'Layer tree',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  show: 'Show',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {10ms} PH1\n  *@example {10ms} PH2\n  */\n  sAtSParentheses: '{PH1} (at {PH2})',\n  /**\n  *@description Text that only contain a placeholder\n  *@example {100ms (at 200ms)} PH1\n  */\n  emptyPlaceholder: '{PH1}',  // eslint-disable-line rulesdir/l10n_no_locked_or_placeholder_only_phrase\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  jank: 'jank',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {Took 3ms} PH1\n  *@example {jank} PH2\n  */\n  sLongFrameTimesAreAnIndicationOf: '{PH1}. Long frame times are an indication of {PH2}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  forcedReflow: 'Forced reflow',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {Forced reflow} PH1\n  */\n  sIsALikelyPerformanceBottleneck: '{PH1} is a likely performance bottleneck.',\n  /**\n  *@description Span text content in Timeline UIUtils of the Performance panel\n  *@example {10ms} PH1\n  */\n  idleCallbackExecutionExtended: 'Idle callback execution extended beyond deadline by {PH1}',\n  /**\n  *@description Span text content in Timeline UIUtils of the Performance panel\n  *@example {10ms} PH1\n  */\n  handlerTookS: 'Handler took {PH1}',\n  /**\n  *@description Warning to the user in the Performance panel that an input handler, which was run multiple times, took too long. Placeholder text is time in ms.\n  *@example {20ms} PH1\n  */\n  recurringHandlerTookS: 'Recurring handler took {PH1}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  longTask: 'Long task',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {task} PH1\n  *@example {10ms} PH2\n  */\n  sTookS: '{PH1} took {PH2}.',\n  /**\n  *@description Text that indicates something is not optimized\n  */\n  notOptimized: 'Not optimized',\n  /**\n  *@description Text that starts with a colon and includes a placeholder\n  *@example {3.0} PH1\n  */\n  emptyPlaceholderColon: ': {PH1}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  unknownCause: 'Unknown cause',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {Unkown reason} PH1\n  *@example {node1} PH2\n  */\n  sForS: '{PH1} for {PH2}',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {StyleInvalidator for element} PH1\n  *@example {Stack trace: function  line} PH2\n  */\n  sSDot: '{PH1}. {PH2}',\n  /**\n  *@description Text in Object Properties Section\n  */\n  unknown: 'unknown',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  */\n  stackTraceColon: 'Stack trace:',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  nodes: 'Nodes:',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  node: 'Node:',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  *@example {id2} PH1\n  *@example {a, b} PH2\n  */\n  changedIdToSs: '(changed id to \"{PH1}\"{PH2})',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  *@example {class-name2} PH1\n  *@example {a, b} PH2\n  */\n  changedClassToSs: '(changed class to \"{PH1}\"{PH2})',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  *@example {attribute-name} PH1\n  *@example {a, b} PH2\n  */\n  changedAttributeToSs: '(changed attribute to \"{PH1}\"{PH2})',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  *@example {after} PH1\n  *@example {a, b} PH2\n  */\n  changedPesudoToSs: '(changed pseudo to \"{PH1}\"{PH2})',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  *@example {part} PH1\n  *@example {a, b} PH2\n  */\n  changedSs: '(changed \"{PH1}\"{PH2})',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  *@example {node1} PH1\n  *@example {node2} PH2\n  *@example {2} PH3\n  */\n  sSAndSOthers: '{PH1}, {PH2}, and {PH3} others',\n  /**\n  *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n  */\n  UnknownNode: '[ unknown node ]',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineUIUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet eventStylesMap: EventStylesMap;\n\nlet inputEventToDisplayName: Map<TimelineModel.TimelineIRModel.InputEvents, string>;\n\nlet interactionPhaseStylesMap: Map<TimelineModel.TimelineIRModel.Phases, {\n  color: string,\n  label: string,\n}>;\n\nlet categories: {\n  [x: string]: TimelineCategory,\n};\n\nlet eventCategories: string[];\n\nlet eventDispatchDesciptors: EventDispatchTypeDescriptor[];\n\nlet colorGenerator: Common.Color.Generator;\n\nconst requestPreviewElements = new WeakMap<TimelineModel.TimelineModel.NetworkRequest, HTMLImageElement>();\n\ninterface EventStylesMap {\n  [x: string]: TimelineRecordStyle;\n}\nexport class TimelineUIUtils {\n  private static initEventStyles(): EventStylesMap {\n    if (eventStylesMap) {\n      return eventStylesMap;\n    }\n\n    const type = TimelineModel.TimelineModel.RecordType;\n    const categories = TimelineUIUtils.categories();\n    const rendering = categories['rendering'];\n    const scripting = categories['scripting'];\n    const loading = categories['loading'];\n    const experience = categories['experience'];\n    const painting = categories['painting'];\n    const other = categories['other'];\n    const idle = categories['idle'];\n\n    const eventStyles: EventStylesMap = {};\n    eventStyles[type.Task] = new TimelineRecordStyle(i18nString(UIStrings.task), other);\n    eventStyles[type.Program] = new TimelineRecordStyle(i18nString(UIStrings.other), other);\n    eventStyles[type.Animation] = new TimelineRecordStyle(i18nString(UIStrings.animation), rendering);\n    eventStyles[type.EventDispatch] = new TimelineRecordStyle(i18nString(UIStrings.event), scripting);\n    eventStyles[type.RequestMainThreadFrame] =\n        new TimelineRecordStyle(i18nString(UIStrings.requestMainThreadFrame), rendering, true);\n    eventStyles[type.BeginFrame] = new TimelineRecordStyle(i18nString(UIStrings.frameStart), rendering, true);\n    eventStyles[type.BeginMainThreadFrame] =\n        new TimelineRecordStyle(i18nString(UIStrings.frameStartMainThread), rendering, true);\n    eventStyles[type.DrawFrame] = new TimelineRecordStyle(i18nString(UIStrings.drawFrame), rendering, true);\n    eventStyles[type.HitTest] = new TimelineRecordStyle(i18nString(UIStrings.hitTest), rendering);\n    eventStyles[type.ScheduleStyleRecalculation] =\n        new TimelineRecordStyle(i18nString(UIStrings.scheduleStyleRecalculation), rendering);\n    eventStyles[type.RecalculateStyles] = new TimelineRecordStyle(i18nString(UIStrings.recalculateStyle), rendering);\n    eventStyles[type.UpdateLayoutTree] = new TimelineRecordStyle(i18nString(UIStrings.recalculateStyle), rendering);\n    eventStyles[type.InvalidateLayout] =\n        new TimelineRecordStyle(i18nString(UIStrings.invalidateLayout), rendering, true);\n    eventStyles[type.Layout] = new TimelineRecordStyle(i18nString(UIStrings.layout), rendering);\n    eventStyles[type.PaintSetup] = new TimelineRecordStyle(i18nString(UIStrings.paintSetup), painting);\n    eventStyles[type.PaintImage] = new TimelineRecordStyle(i18nString(UIStrings.paintImage), painting, true);\n    eventStyles[type.UpdateLayer] = new TimelineRecordStyle(i18nString(UIStrings.updateLayer), painting, true);\n    eventStyles[type.UpdateLayerTree] = new TimelineRecordStyle(i18nString(UIStrings.updateLayerTree), rendering);\n    eventStyles[type.Paint] = new TimelineRecordStyle(i18nString(UIStrings.paint), painting);\n    eventStyles[type.PrePaint] = new TimelineRecordStyle(i18nString(UIStrings.prePaint), rendering);\n    eventStyles[type.RasterTask] = new TimelineRecordStyle(i18nString(UIStrings.rasterizePaint), painting);\n    eventStyles[type.ScrollLayer] = new TimelineRecordStyle(i18nString(UIStrings.scroll), rendering);\n    eventStyles[type.CompositeLayers] = new TimelineRecordStyle(i18nString(UIStrings.compositeLayers), painting);\n    eventStyles[type.ComputeIntersections] =\n        new TimelineRecordStyle(i18nString(UIStrings.computeIntersections), rendering);\n    eventStyles[type.ParseHTML] = new TimelineRecordStyle(i18nString(UIStrings.parseHtml), loading);\n    eventStyles[type.ParseAuthorStyleSheet] = new TimelineRecordStyle(i18nString(UIStrings.parseStylesheet), loading);\n    eventStyles[type.TimerInstall] = new TimelineRecordStyle(i18nString(UIStrings.installTimer), scripting);\n    eventStyles[type.TimerRemove] = new TimelineRecordStyle(i18nString(UIStrings.removeTimer), scripting);\n    eventStyles[type.TimerFire] = new TimelineRecordStyle(i18nString(UIStrings.timerFired), scripting);\n    eventStyles[type.XHRReadyStateChange] =\n        new TimelineRecordStyle(i18nString(UIStrings.xhrReadyStateChange), scripting);\n    eventStyles[type.XHRLoad] = new TimelineRecordStyle(i18nString(UIStrings.xhrLoad), scripting);\n    eventStyles[type.CompileScript] = new TimelineRecordStyle(i18nString(UIStrings.compileScript), scripting);\n    eventStyles[type.CacheScript] = new TimelineRecordStyle(i18nString(UIStrings.cacheScript), scripting);\n    eventStyles[type.CompileCode] = new TimelineRecordStyle(i18nString(UIStrings.compileCode), scripting);\n    eventStyles[type.OptimizeCode] = new TimelineRecordStyle(i18nString(UIStrings.optimizeCode), scripting);\n    eventStyles[type.EvaluateScript] = new TimelineRecordStyle(i18nString(UIStrings.evaluateScript), scripting);\n    eventStyles[type.CompileModule] = new TimelineRecordStyle(i18nString(UIStrings.compileModule), scripting);\n    eventStyles[type.CacheModule] = new TimelineRecordStyle(i18nString(UIStrings.cacheModule), scripting);\n    eventStyles[type.EvaluateModule] = new TimelineRecordStyle(i18nString(UIStrings.evaluateModule), scripting);\n    eventStyles[type.StreamingCompileScript] =\n        new TimelineRecordStyle(i18nString(UIStrings.streamingCompileTask), other);\n    eventStyles[type.StreamingCompileScriptWaiting] =\n        new TimelineRecordStyle(i18nString(UIStrings.waitingForNetwork), idle);\n    eventStyles[type.StreamingCompileScriptParsing] =\n        new TimelineRecordStyle(i18nString(UIStrings.parseAndCompile), scripting);\n    eventStyles[type.WasmStreamFromResponseCallback] =\n        new TimelineRecordStyle(i18nString(UIStrings.streamingWasmResponse), scripting);\n    eventStyles[type.WasmCompiledModule] = new TimelineRecordStyle(i18nString(UIStrings.compiledWasmModule), scripting);\n    eventStyles[type.WasmCachedModule] = new TimelineRecordStyle(i18nString(UIStrings.cachedWasmModule), scripting);\n    eventStyles[type.WasmModuleCacheHit] = new TimelineRecordStyle(i18nString(UIStrings.wasmModuleCacheHit), scripting);\n    eventStyles[type.WasmModuleCacheInvalid] =\n        new TimelineRecordStyle(i18nString(UIStrings.wasmModuleCacheInvalid), scripting);\n    eventStyles[type.FrameStartedLoading] =\n        new TimelineRecordStyle(i18nString(UIStrings.frameStartedLoading), loading, true);\n    eventStyles[type.MarkLoad] = new TimelineRecordStyle(i18nString(UIStrings.onloadEvent), scripting, true);\n    eventStyles[type.MarkDOMContent] =\n        new TimelineRecordStyle(i18nString(UIStrings.domcontentloadedEvent), scripting, true);\n    eventStyles[type.MarkFirstPaint] = new TimelineRecordStyle(i18nString(UIStrings.firstPaint), painting, true);\n    eventStyles[type.MarkFCP] = new TimelineRecordStyle(i18nString(UIStrings.firstContentfulPaint), rendering, true);\n    eventStyles[type.MarkLCPCandidate] =\n        new TimelineRecordStyle(i18nString(UIStrings.largestContentfulPaint), rendering, true);\n    eventStyles[type.TimeStamp] = new TimelineRecordStyle(i18nString(UIStrings.timestamp), scripting);\n    eventStyles[type.ConsoleTime] = new TimelineRecordStyle(i18nString(UIStrings.consoleTime), scripting);\n    eventStyles[type.UserTiming] = new TimelineRecordStyle(i18nString(UIStrings.userTiming), scripting);\n    eventStyles[type.ResourceWillSendRequest] = new TimelineRecordStyle(i18nString(UIStrings.willSendRequest), loading);\n    eventStyles[type.ResourceSendRequest] = new TimelineRecordStyle(i18nString(UIStrings.sendRequest), loading);\n    eventStyles[type.ResourceReceiveResponse] = new TimelineRecordStyle(i18nString(UIStrings.receiveResponse), loading);\n    eventStyles[type.ResourceFinish] = new TimelineRecordStyle(i18nString(UIStrings.finishLoading), loading);\n    eventStyles[type.ResourceReceivedData] = new TimelineRecordStyle(i18nString(UIStrings.receiveData), loading);\n    eventStyles[type.RunMicrotasks] = new TimelineRecordStyle(i18nString(UIStrings.runMicrotasks), scripting);\n    eventStyles[type.FunctionCall] = new TimelineRecordStyle(i18nString(UIStrings.functionCall), scripting);\n    eventStyles[type.GCEvent] = new TimelineRecordStyle(i18nString(UIStrings.gcEvent), scripting);\n    eventStyles[type.MajorGC] = new TimelineRecordStyle(i18nString(UIStrings.majorGc), scripting);\n    eventStyles[type.MinorGC] = new TimelineRecordStyle(i18nString(UIStrings.minorGc), scripting);\n    eventStyles[type.JSFrame] = new TimelineRecordStyle(i18nString(UIStrings.jsFrame), scripting);\n    eventStyles[type.RequestAnimationFrame] =\n        new TimelineRecordStyle(i18nString(UIStrings.requestAnimationFrame), scripting);\n    eventStyles[type.CancelAnimationFrame] =\n        new TimelineRecordStyle(i18nString(UIStrings.cancelAnimationFrame), scripting);\n    eventStyles[type.FireAnimationFrame] =\n        new TimelineRecordStyle(i18nString(UIStrings.animationFrameFired), scripting);\n    eventStyles[type.RequestIdleCallback] =\n        new TimelineRecordStyle(i18nString(UIStrings.requestIdleCallback), scripting);\n    eventStyles[type.CancelIdleCallback] = new TimelineRecordStyle(i18nString(UIStrings.cancelIdleCallback), scripting);\n    eventStyles[type.FireIdleCallback] = new TimelineRecordStyle(i18nString(UIStrings.fireIdleCallback), scripting);\n    eventStyles[type.WebSocketCreate] = new TimelineRecordStyle(i18nString(UIStrings.createWebsocket), scripting);\n    eventStyles[type.WebSocketSendHandshakeRequest] =\n        new TimelineRecordStyle(i18nString(UIStrings.sendWebsocketHandshake), scripting);\n    eventStyles[type.WebSocketReceiveHandshakeResponse] =\n        new TimelineRecordStyle(i18nString(UIStrings.receiveWebsocketHandshake), scripting);\n    eventStyles[type.WebSocketDestroy] = new TimelineRecordStyle(i18nString(UIStrings.destroyWebsocket), scripting);\n    eventStyles[type.EmbedderCallback] = new TimelineRecordStyle(i18nString(UIStrings.embedderCallback), scripting);\n    eventStyles[type.DecodeImage] = new TimelineRecordStyle(i18nString(UIStrings.imageDecode), painting);\n    eventStyles[type.ResizeImage] = new TimelineRecordStyle(i18nString(UIStrings.imageResize), painting);\n    eventStyles[type.GPUTask] = new TimelineRecordStyle(i18nString(UIStrings.gpu), categories['gpu']);\n    eventStyles[type.LatencyInfo] = new TimelineRecordStyle(i18nString(UIStrings.inputLatency), scripting);\n\n    eventStyles[type.GCCollectGarbage] = new TimelineRecordStyle(i18nString(UIStrings.domGc), scripting);\n\n    eventStyles[type.CryptoDoEncrypt] = new TimelineRecordStyle(i18nString(UIStrings.encrypt), scripting);\n    eventStyles[type.CryptoDoEncryptReply] = new TimelineRecordStyle(i18nString(UIStrings.encryptReply), scripting);\n    eventStyles[type.CryptoDoDecrypt] = new TimelineRecordStyle(i18nString(UIStrings.decrypt), scripting);\n    eventStyles[type.CryptoDoDecryptReply] = new TimelineRecordStyle(i18nString(UIStrings.decryptReply), scripting);\n    eventStyles[type.CryptoDoDigest] = new TimelineRecordStyle(i18nString(UIStrings.digest), scripting);\n    eventStyles[type.CryptoDoDigestReply] = new TimelineRecordStyle(i18nString(UIStrings.digestReply), scripting);\n    eventStyles[type.CryptoDoSign] = new TimelineRecordStyle(i18nString(UIStrings.sign), scripting);\n    eventStyles[type.CryptoDoSignReply] = new TimelineRecordStyle(i18nString(UIStrings.signReply), scripting);\n    eventStyles[type.CryptoDoVerify] = new TimelineRecordStyle(i18nString(UIStrings.verify), scripting);\n    eventStyles[type.CryptoDoVerifyReply] = new TimelineRecordStyle(i18nString(UIStrings.verifyReply), scripting);\n\n    eventStyles[type.AsyncTask] = new TimelineRecordStyle(i18nString(UIStrings.asyncTask), categories['async']);\n\n    eventStyles[type.LayoutShift] = new TimelineRecordStyle(i18nString(UIStrings.layoutShift), experience);\n\n    eventStylesMap = eventStyles;\n    return eventStyles;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static setEventStylesMap(eventStyles: any): void {\n    eventStylesMap = eventStyles;\n  }\n\n  static inputEventDisplayName(inputEventType: TimelineModel.TimelineIRModel.InputEvents): string|null {\n    if (!inputEventToDisplayName) {\n      const inputEvent = TimelineModel.TimelineIRModel.InputEvents;\n\n      inputEventToDisplayName = new Map([\n        [inputEvent.Char, i18nString(UIStrings.keyCharacter)],\n        [inputEvent.KeyDown, i18nString(UIStrings.keyDown)],\n        [inputEvent.KeyDownRaw, i18nString(UIStrings.keyDown)],\n        [inputEvent.KeyUp, i18nString(UIStrings.keyUp)],\n        [inputEvent.Click, i18nString(UIStrings.click)],\n        [inputEvent.ContextMenu, i18nString(UIStrings.contextMenu)],\n        [inputEvent.MouseDown, i18nString(UIStrings.mouseDown)],\n        [inputEvent.MouseMove, i18nString(UIStrings.mouseMove)],\n        [inputEvent.MouseUp, i18nString(UIStrings.mouseUp)],\n        [inputEvent.MouseWheel, i18nString(UIStrings.mouseWheel)],\n        [inputEvent.ScrollBegin, i18nString(UIStrings.scrollBegin)],\n        [inputEvent.ScrollEnd, i18nString(UIStrings.scrollEnd)],\n        [inputEvent.ScrollUpdate, i18nString(UIStrings.scrollUpdate)],\n        [inputEvent.FlingStart, i18nString(UIStrings.flingStart)],\n        [inputEvent.FlingCancel, i18nString(UIStrings.flingHalt)],\n        [inputEvent.Tap, i18nString(UIStrings.tap)],\n        [inputEvent.TapCancel, i18nString(UIStrings.tapHalt)],\n        [inputEvent.ShowPress, i18nString(UIStrings.tapBegin)],\n        [inputEvent.TapDown, i18nString(UIStrings.tapDown)],\n        [inputEvent.TouchCancel, i18nString(UIStrings.touchCancel)],\n        [inputEvent.TouchEnd, i18nString(UIStrings.touchEnd)],\n        [inputEvent.TouchMove, i18nString(UIStrings.touchMove)],\n        [inputEvent.TouchStart, i18nString(UIStrings.touchStart)],\n        [inputEvent.PinchBegin, i18nString(UIStrings.pinchBegin)],\n        [inputEvent.PinchEnd, i18nString(UIStrings.pinchEnd)],\n        [inputEvent.PinchUpdate, i18nString(UIStrings.pinchUpdate)],\n      ]);\n    }\n    return inputEventToDisplayName.get(inputEventType) || null;\n  }\n\n  static frameDisplayName(frame: Protocol.Runtime.CallFrame): string {\n    if (!TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.isNativeRuntimeFrame(frame)) {\n      return UI.UIUtils.beautifyFunctionName(frame.functionName);\n    }\n    const nativeGroup = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.nativeGroup(frame.functionName);\n    const groups = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.NativeGroups;\n    switch (nativeGroup) {\n      case groups.Compile:\n        return i18nString(UIStrings.compile);\n      case groups.Parse:\n        return i18nString(UIStrings.parse);\n    }\n    return frame.functionName;\n  }\n\n  static testContentMatching(traceEvent: SDK.TracingModel.Event, regExp: RegExp): boolean {\n    const title = TimelineUIUtils.eventStyle(traceEvent).title;\n    const tokens = [title];\n    const url = TimelineModel.TimelineModel.TimelineData.forEvent(traceEvent).url;\n    if (url) {\n      tokens.push(url);\n    }\n    appendObjectProperties(traceEvent.args, 2);\n    return regExp.test(tokens.join('|'));\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function appendObjectProperties(object: any, depth: number): void {\n      if (!depth) {\n        return;\n      }\n      for (const key in object) {\n        const value = object[key];\n        const type = typeof value;\n        if (type === 'string') {\n          tokens.push(value);\n        } else if (type === 'number') {\n          tokens.push(String(value));\n        } else if (type === 'object') {\n          appendObjectProperties(value, depth - 1);\n        }\n      }\n    }\n  }\n\n  static eventURL(event: SDK.TracingModel.Event): Platform.DevToolsPath.UrlString|null {\n    const data = event.args['data'] || event.args['beginData'];\n    const url = data && data.url;\n    if (url) {\n      return url;\n    }\n    const stackTrace = data && data['stackTrace'];\n    const frame = stackTrace && stackTrace.length && stackTrace[0] ||\n        TimelineModel.TimelineModel.TimelineData.forEvent(event).topFrame();\n    return frame && frame.url as Platform.DevToolsPath.UrlString || null;\n  }\n\n  static eventStyle(event: SDK.TracingModel.Event): TimelineRecordStyle {\n    const eventStyles = TimelineUIUtils.initEventStyles();\n    if (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.Console) ||\n        event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.UserTiming)) {\n      return new TimelineRecordStyle(event.name, TimelineUIUtils.categories()['scripting']);\n    }\n\n    if (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.LatencyInfo)) {\n      /** @const */\n      const prefix = 'InputLatency::';\n      const inputEventType = event.name.startsWith(prefix) ? event.name.substr(prefix.length) : event.name;\n      const displayName =\n          TimelineUIUtils.inputEventDisplayName((inputEventType as TimelineModel.TimelineIRModel.InputEvents));\n      return new TimelineRecordStyle(displayName || inputEventType, TimelineUIUtils.categories()['scripting']);\n    }\n    let result: TimelineRecordStyle = eventStyles[event.name];\n    if (!result) {\n      result = new TimelineRecordStyle(event.name, TimelineUIUtils.categories()['other'], true);\n      eventStyles[event.name] = result;\n    }\n    return result;\n  }\n\n  static eventColor(event: SDK.TracingModel.Event): string {\n    if (event.name === TimelineModel.TimelineModel.RecordType.JSFrame) {\n      const frame = event.args['data'];\n      if (TimelineUIUtils.isUserFrame(frame)) {\n        return TimelineUIUtils.colorForId(frame.url);\n      }\n    }\n    const color = TimelineUIUtils.eventStyle(event).category.color;\n\n    // This event is considered idle time but still rendered as a scripting event here\n    // to connect the StreamingCompileScriptParsing events it belongs to.\n    if (event.name === TimelineModel.TimelineModel.RecordType.StreamingCompileScriptWaiting) {\n      const color = Common.Color.Color.parse(TimelineUIUtils.categories().scripting.color);\n      if (!color) {\n        throw new Error('Unable to parse color from TimelineUIUtils.categories().scripting.color');\n      }\n      return color.setAlpha(0.3).asString(null) as string;\n    }\n\n    return color;\n  }\n\n  static eventColorByProduct(\n      model: TimelineModel.TimelineModel.TimelineModelImpl, urlToColorCache: Map<string, string>,\n      event: SDK.TracingModel.Event): string {\n    const url = TimelineUIUtils.eventURL(event) || Platform.DevToolsPath.EmptyUrlString;\n    let color = urlToColorCache.get(url);\n    if (color) {\n      return color;\n    }\n    const defaultColor = '#f2ecdc';\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    if (!parsedURL) {\n      return defaultColor;\n    }\n    const name = parsedURL.host;\n    const rootFrames = model.rootFrames();\n    if (rootFrames.some(pageFrame => new Common.ParsedURL.ParsedURL(pageFrame.url).host === name)) {\n      color = defaultColor;\n    }\n    if (!color) {\n      color = defaultColor;\n    }\n    urlToColorCache.set(url, color);\n    return color;\n  }\n\n  static eventTitle(event: SDK.TracingModel.Event): string {\n    const recordType = TimelineModel.TimelineModel.RecordType;\n    const eventData = event.args['data'];\n    if (event.name === recordType.JSFrame) {\n      return TimelineUIUtils.frameDisplayName(eventData);\n    }\n    const title = TimelineUIUtils.eventStyle(event).title;\n    if (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.Console)) {\n      return title;\n    }\n    if (event.name === recordType.TimeStamp) {\n      return i18nString(UIStrings.sS, {PH1: title, PH2: eventData['message']});\n    }\n    if (event.name === recordType.Animation && eventData && eventData['name']) {\n      return i18nString(UIStrings.sS, {PH1: title, PH2: eventData['name']});\n    }\n    if (event.name === recordType.EventDispatch && eventData && eventData['type']) {\n      return i18nString(UIStrings.sS, {PH1: title, PH2: eventData['type']});\n    }\n    return title;\n  }\n\n  private static interactionPhaseStyles(): Map<TimelineModel.TimelineIRModel.Phases, {\n    color: string,\n    label: string,\n  }> {\n    let map: Map<TimelineModel.TimelineIRModel.Phases, {\n      color: string,\n      label: string,\n    }>|Map<TimelineModel.TimelineIRModel.Phases, {\n      color: string,\n      label: string,\n    }> = interactionPhaseStylesMap;\n    if (!map) {\n      map = new Map([\n        [TimelineModel.TimelineIRModel.Phases.Idle, {color: 'white', label: 'Idle'}],\n        [\n          TimelineModel.TimelineIRModel.Phases.Response,\n          {color: 'hsl(43, 83%, 64%)', label: i18nString(UIStrings.response)},\n        ],\n        [\n          TimelineModel.TimelineIRModel.Phases.Scroll,\n          {color: 'hsl(256, 67%, 70%)', label: i18nString(UIStrings.scroll)},\n        ],\n        [TimelineModel.TimelineIRModel.Phases.Fling, {color: 'hsl(256, 67%, 70%)', label: i18nString(UIStrings.fling)}],\n        [TimelineModel.TimelineIRModel.Phases.Drag, {color: 'hsl(256, 67%, 70%)', label: i18nString(UIStrings.drag)}],\n        [\n          TimelineModel.TimelineIRModel.Phases.Animation,\n          {color: 'hsl(256, 67%, 70%)', label: i18nString(UIStrings.animation)},\n        ],\n        [\n          TimelineModel.TimelineIRModel.Phases.Uncategorized,\n          {color: 'hsl(0, 0%, 87%)', label: i18nString(UIStrings.uncategorized)},\n        ],\n      ]);\n      interactionPhaseStylesMap = map;\n    }\n    return map;\n  }\n\n  static interactionPhaseColor(phase: TimelineModel.TimelineIRModel.Phases): string {\n    const interactionPhase = TimelineUIUtils.interactionPhaseStyles().get(phase);\n    if (!interactionPhase) {\n      throw new Error(`Unknown phase ${phase}`);\n    }\n    return interactionPhase.color;\n  }\n\n  static interactionPhaseLabel(phase: TimelineModel.TimelineIRModel.Phases): string {\n    const interactionPhase = TimelineUIUtils.interactionPhaseStyles().get(phase);\n    if (!interactionPhase) {\n      throw new Error(`Unknown phase ${phase}`);\n    }\n    return interactionPhase.label;\n  }\n\n  static isUserFrame(frame: Protocol.Runtime.CallFrame): boolean {\n    return frame.scriptId !== '0' && !(frame.url && frame.url.startsWith('native '));\n  }\n\n  static networkRequestCategory(request: TimelineModel.TimelineModel.NetworkRequest): NetworkCategory {\n    const categories = NetworkCategory;\n    switch (request.mimeType) {\n      case 'text/html':\n        return categories.HTML;\n      case 'application/javascript':\n      case 'application/x-javascript':\n      case 'text/javascript':\n        return categories.Script;\n      case 'text/css':\n        return categories.Style;\n      case 'audio/ogg':\n      case 'image/gif':\n      case 'image/jpeg':\n      case 'image/png':\n      case 'image/svg+xml':\n      case 'image/webp':\n      case 'image/x-icon':\n      case 'font/opentype':\n      case 'font/woff2':\n      case 'application/font-woff':\n        return categories.Media;\n      default:\n        return categories.Other;\n    }\n  }\n\n  static networkCategoryColor(category: NetworkCategory): string {\n    const categories = NetworkCategory;\n    switch (category) {\n      case categories.HTML:\n        return 'hsl(214, 67%, 66%)';\n      case categories.Script:\n        return 'hsl(43, 83%, 64%)';\n      case categories.Style:\n        return 'hsl(256, 67%, 70%)';\n      case categories.Media:\n        return 'hsl(109, 33%, 55%)';\n      default:\n        return 'hsl(0, 0%, 70%)';\n    }\n  }\n\n  static async buildDetailsTextForTraceEvent(event: SDK.TracingModel.Event): Promise<string|null> {\n    const recordType = TimelineModel.TimelineModel.RecordType;\n    let detailsText;\n    const eventData = event.args['data'];\n    switch (event.name) {\n      case recordType.GCEvent:\n      case recordType.MajorGC:\n      case recordType.MinorGC: {\n        const delta = event.args['usedHeapSizeBefore'] - event.args['usedHeapSizeAfter'];\n        detailsText = i18nString(UIStrings.sCollected, {PH1: Platform.NumberUtilities.bytesToString(delta)});\n        break;\n      }\n      case recordType.FunctionCall:\n        if (eventData && eventData['url'] && eventData['lineNumber'] !== undefined &&\n            eventData['columnNumber'] !== undefined) {\n          detailsText = eventData.url + ':' + (eventData.lineNumber + 1) + ':' + (eventData.columnNumber + 1);\n        }\n        break;\n      case recordType.JSFrame:\n        detailsText = TimelineUIUtils.frameDisplayName(eventData);\n        break;\n      case recordType.EventDispatch:\n        detailsText = eventData ? eventData['type'] : null;\n        break;\n      case recordType.Paint: {\n        const width = TimelineUIUtils.quadWidth(eventData.clip);\n        const height = TimelineUIUtils.quadHeight(eventData.clip);\n        if (width && height) {\n          detailsText = i18nString(UIStrings.sSDimensions, {PH1: width, PH2: height});\n        }\n        break;\n      }\n      case recordType.ParseHTML: {\n        const startLine = event.args['beginData']['startLine'];\n        const endLine = event.args['endData'] && event.args['endData']['endLine'];\n        const url = Bindings.ResourceUtils.displayNameForURL(event.args['beginData']['url']);\n        if (endLine >= 0) {\n          detailsText = i18nString(UIStrings.sSs, {PH1: url, PH2: startLine + 1, PH3: endLine + 1});\n        } else {\n          detailsText = i18nString(UIStrings.sSSquareBrackets, {PH1: url, PH2: startLine + 1});\n        }\n        break;\n      }\n      case recordType.CompileModule:\n      case recordType.CacheModule:\n        detailsText = Bindings.ResourceUtils.displayNameForURL(event.args['fileName']);\n        break;\n      case recordType.CompileScript:\n      case recordType.CacheScript:\n      case recordType.EvaluateScript: {\n        const url = eventData && eventData['url'];\n        if (url) {\n          detailsText = Bindings.ResourceUtils.displayNameForURL(url) + ':' + (eventData['lineNumber'] + 1);\n        }\n        break;\n      }\n      case recordType.WasmCompiledModule:\n      case recordType.WasmModuleCacheHit: {\n        const url = event.args['url'];\n        if (url) {\n          detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n        }\n        break;\n      }\n\n      case recordType.StreamingCompileScript:\n      case recordType.XHRReadyStateChange:\n      case recordType.XHRLoad: {\n        const url = eventData['url'];\n        if (url) {\n          detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n        }\n        break;\n      }\n      case recordType.TimeStamp:\n        detailsText = eventData['message'];\n        break;\n\n      case recordType.WebSocketCreate:\n      case recordType.WebSocketSendHandshakeRequest:\n      case recordType.WebSocketReceiveHandshakeResponse:\n      case recordType.WebSocketDestroy:\n      case recordType.ResourceWillSendRequest:\n      case recordType.ResourceSendRequest:\n      case recordType.ResourceReceivedData:\n      case recordType.ResourceReceiveResponse:\n      case recordType.ResourceFinish:\n      case recordType.PaintImage:\n      case recordType.DecodeImage:\n      case recordType.ResizeImage:\n      case recordType.DecodeLazyPixelRef: {\n        const url = TimelineModel.TimelineModel.TimelineData.forEvent(event).url;\n        if (url) {\n          detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n        }\n        break;\n      }\n\n      case recordType.EmbedderCallback:\n        detailsText = eventData['callbackName'];\n        break;\n\n      case recordType.Animation:\n        detailsText = eventData && eventData['name'];\n        break;\n\n      case recordType.AsyncTask:\n        detailsText = eventData ? eventData['name'] : null;\n        break;\n\n      default:\n        if (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.Console)) {\n          detailsText = null;\n        } else {\n          detailsText = await linkifyTopCallFrameAsText();\n        }\n        break;\n    }\n\n    return detailsText;\n\n    async function linkifyTopCallFrameAsText(): Promise<string|null> {\n      const frame = TimelineModel.TimelineModel.TimelineData.forEvent(event).topFrame();\n      if (!frame) {\n        return null;\n      }\n\n      return frame.url + ':' + (frame.lineNumber + 1) + ':' + (frame.columnNumber + 1);\n    }\n  }\n\n  static async buildDetailsNodeForTraceEvent(\n      event: SDK.TracingModel.Event, target: SDK.Target.Target|null,\n      linkifier: Components.Linkifier.Linkifier): Promise<Node|null> {\n    const recordType = TimelineModel.TimelineModel.RecordType;\n    let details: HTMLElement|HTMLSpanElement|(Element | null)|Text|null = null;\n    let detailsText;\n    const eventData = event.args['data'];\n    switch (event.name) {\n      case recordType.GCEvent:\n      case recordType.MajorGC:\n      case recordType.MinorGC:\n      case recordType.EventDispatch:\n      case recordType.Paint:\n      case recordType.Animation:\n      case recordType.EmbedderCallback:\n      case recordType.ParseHTML:\n      case recordType.WasmStreamFromResponseCallback:\n      case recordType.WasmCompiledModule:\n      case recordType.WasmModuleCacheHit:\n      case recordType.WasmCachedModule:\n      case recordType.WasmModuleCacheInvalid:\n      case recordType.WebSocketCreate:\n      case recordType.WebSocketSendHandshakeRequest:\n      case recordType.WebSocketReceiveHandshakeResponse:\n      case recordType.WebSocketDestroy: {\n        detailsText = await TimelineUIUtils.buildDetailsTextForTraceEvent(event);\n        break;\n      }\n\n      case recordType.PaintImage:\n      case recordType.DecodeImage:\n      case recordType.ResizeImage:\n      case recordType.DecodeLazyPixelRef:\n      case recordType.XHRReadyStateChange:\n      case recordType.XHRLoad:\n      case recordType.ResourceWillSendRequest:\n      case recordType.ResourceSendRequest:\n      case recordType.ResourceReceivedData:\n      case recordType.ResourceReceiveResponse:\n      case recordType.ResourceFinish: {\n        const url = TimelineModel.TimelineModel.TimelineData.forEvent(event).url;\n        if (url) {\n          const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          };\n          details = Components.Linkifier.Linkifier.linkifyURL(url, options);\n        }\n        break;\n      }\n\n      case recordType.FunctionCall:\n      case recordType.JSFrame: {\n        details = document.createElement('span');\n        UI.UIUtils.createTextChild(details, TimelineUIUtils.frameDisplayName(eventData));\n        const location = linkifyLocation(\n            eventData['scriptId'], eventData['url'], eventData['lineNumber'], eventData['columnNumber']);\n        if (location) {\n          UI.UIUtils.createTextChild(details, ' @ ');\n          details.appendChild(location);\n        }\n        break;\n      }\n\n      case recordType.CompileModule:\n      case recordType.CacheModule: {\n        details = linkifyLocation(null, event.args['fileName'], 0, 0);\n        break;\n      }\n\n      case recordType.CompileScript:\n      case recordType.CacheScript:\n      case recordType.EvaluateScript: {\n        const url = eventData['url'];\n        if (url) {\n          details = linkifyLocation(null, url, eventData['lineNumber'], 0);\n        }\n        break;\n      }\n\n      case recordType.StreamingCompileScript: {\n        const url = eventData['url'];\n        if (url) {\n          details = linkifyLocation(null, url, 0, 0);\n        }\n        break;\n      }\n\n      default: {\n        if (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.Console)) {\n          detailsText = null;\n        } else {\n          details = linkifyTopCallFrame();\n        }\n        break;\n      }\n    }\n\n    if (!details && detailsText) {\n      details = document.createTextNode(detailsText);\n    }\n    return details;\n\n    function linkifyLocation(\n        scriptId: Protocol.Runtime.ScriptId|null, url: string, lineNumber: number, columnNumber?: number): Element|\n        null {\n      const options =\n          {columnNumber, showColumnNumber: true, inlineFrameIndex: 0, className: 'timeline-details', tabStop: true};\n      return linkifier.linkifyScriptLocation(\n          target, scriptId, url as Platform.DevToolsPath.UrlString, lineNumber, options);\n    }\n\n    function linkifyTopCallFrame(): Element|null {\n      const frame = TimelineModel.TimelineModel.TimelineData.forEvent(event).topFrame();\n      return frame ? linkifier.maybeLinkifyConsoleCallFrame(\n                         target, frame,\n                         {className: 'timeline-details', tabStop: true, inlineFrameIndex: 0, showColumnNumber: true}) :\n                     null;\n    }\n  }\n\n  static buildDetailsNodeForPerformanceEvent(event: SDK.TracingModel.Event): Element {\n    let link = 'https://web.dev/user-centric-performance-metrics/';\n    let name = 'page performance metrics';\n    const recordType = TimelineModel.TimelineModel.RecordType;\n    switch (event.name) {\n      case recordType.MarkLCPCandidate:\n        link = 'https://web.dev/lcp/';\n        name = 'largest contentful paint';\n        break;\n      case recordType.MarkFCP:\n        link = 'https://web.dev/first-contentful-paint/';\n        name = 'first contentful paint';\n        break;\n      default:\n        break;\n    }\n\n    return UI.Fragment.html`<div>${UI.XLink.XLink.create(link, i18nString(UIStrings.learnMore))} about ${name}.</div>`;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static buildConsumeCacheDetails(eventData: any, contentHelper: TimelineDetailsContentHelper): void {\n    if ('consumedCacheSize' in eventData) {\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.scriptLoadedFromCache));\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.compilationCacheSize),\n          Platform.NumberUtilities.bytesToString(eventData['consumedCacheSize']));\n    } else if (eventData && 'cacheRejected' in eventData && eventData['cacheRejected']) {\n      // Version mismatch or similar.\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.failedToLoadScriptFromCache));\n    } else {\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.scriptNotEligible));\n    }\n  }\n\n  static async buildTraceEventDetails(\n      event: SDK.TracingModel.Event, model: TimelineModel.TimelineModel.TimelineModelImpl,\n      linkifier: Components.Linkifier.Linkifier, detailed: boolean): Promise<DocumentFragment> {\n    const maybeTarget = model.targetByEvent(event);\n    let relatedNodesMap: (Map<number, SDK.DOMModel.DOMNode|null>|null)|null = null;\n    if (maybeTarget) {\n      const target = (maybeTarget as SDK.Target.Target);\n      // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n      if (typeof event[previewElementSymbol] === 'undefined') {\n        let previewElement: (Element|null)|null = null;\n        const url = TimelineModel.TimelineModel.TimelineData.forEvent(event).url;\n        if (url) {\n          previewElement = await Components.ImagePreview.ImagePreview.build(target, url, false, {\n            imageAltText: Components.ImagePreview.ImagePreview.defaultAltTextForImageURL(url),\n            precomputedFeatures: undefined,\n          });\n        } else if (TimelineModel.TimelineModel.TimelineData.forEvent(event).picture) {\n          previewElement = await TimelineUIUtils.buildPicturePreviewContent(event, target);\n        }\n        // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n        event[previewElementSymbol] = previewElement;\n      }\n\n      const nodeIdsToResolve = new Set<Protocol.DOM.BackendNodeId>();\n      const timelineData = TimelineModel.TimelineModel.TimelineData.forEvent(event);\n      if (timelineData.backendNodeIds) {\n        for (let i = 0; i < timelineData.backendNodeIds.length; ++i) {\n          nodeIdsToResolve.add(timelineData.backendNodeIds[i]);\n        }\n      }\n      const invalidationTrackingEvents = TimelineModel.TimelineModel.InvalidationTracker.invalidationEventsFor(event);\n      if (invalidationTrackingEvents) {\n        TimelineUIUtils.collectInvalidationNodeIds(nodeIdsToResolve, invalidationTrackingEvents);\n      }\n      if (nodeIdsToResolve.size) {\n        const domModel = target.model(SDK.DOMModel.DOMModel);\n        if (domModel) {\n          relatedNodesMap = await domModel.pushNodesByBackendIdsToFrontend(nodeIdsToResolve);\n        }\n      }\n    }\n\n    const recordTypes = TimelineModel.TimelineModel.RecordType;\n\n    if (event.name === recordTypes.LayoutShift) {\n      // Ensure that there are no pie charts or extended info for layout shifts.\n      detailed = false;\n    }\n\n    // This message may vary per event.name;\n    let relatedNodeLabel;\n\n    const contentHelper = new TimelineDetailsContentHelper(model.targetByEvent(event), linkifier);\n    const color = model.isMarkerEvent(event) ? TimelineUIUtils.markerStyleForEvent(event).color :\n                                               TimelineUIUtils.eventStyle(event).category.color;\n    contentHelper.addSection(TimelineUIUtils.eventTitle(event), color);\n\n    const eventData = event.args['data'];\n    const timelineData = TimelineModel.TimelineModel.TimelineData.forEvent(event);\n    const initiator = timelineData.initiator();\n    let url: Platform.DevToolsPath.UrlString|null = null;\n\n    if (timelineData.warning) {\n      contentHelper.appendWarningRow(event);\n    }\n    if (event.name === recordTypes.JSFrame && eventData['deoptReason']) {\n      contentHelper.appendWarningRow(event, TimelineModel.TimelineModel.TimelineModelImpl.WarningType.V8Deopt);\n    }\n\n    if (detailed && !Number.isNaN(event.duration || 0)) {\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.totalTime), i18n.TimeUtilities.millisToString(event.duration || 0, true));\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.selfTime), i18n.TimeUtilities.millisToString(event.selfTime, true));\n    }\n\n    if (model.isGenericTrace()) {\n      for (const key in event.args) {\n        try {\n          contentHelper.appendTextRow(key, JSON.stringify(event.args[key]));\n        } catch (e) {\n          contentHelper.appendTextRow(key, `<${typeof event.args[key]}>`);\n        }\n      }\n      return contentHelper.fragment;\n    }\n\n    switch (event.name) {\n      case recordTypes.GCEvent:\n      case recordTypes.MajorGC:\n      case recordTypes.MinorGC: {\n        const delta = event.args['usedHeapSizeBefore'] - event.args['usedHeapSizeAfter'];\n        contentHelper.appendTextRow(i18nString(UIStrings.collected), Platform.NumberUtilities.bytesToString(delta));\n        break;\n      }\n\n      case recordTypes.JSFrame:\n      case recordTypes.FunctionCall: {\n        const detailsNode =\n            await TimelineUIUtils.buildDetailsNodeForTraceEvent(event, model.targetByEvent(event), linkifier);\n        if (detailsNode) {\n          contentHelper.appendElementRow(i18nString(UIStrings.function), detailsNode);\n        }\n        break;\n      }\n\n      case recordTypes.TimerFire:\n      case recordTypes.TimerInstall:\n      case recordTypes.TimerRemove: {\n        contentHelper.appendTextRow(i18nString(UIStrings.timerId), eventData['timerId']);\n        if (event.name === recordTypes.TimerInstall) {\n          contentHelper.appendTextRow(\n              i18nString(UIStrings.timeout), i18n.TimeUtilities.millisToString(eventData['timeout']));\n          contentHelper.appendTextRow(i18nString(UIStrings.repeats), !eventData['singleShot']);\n        }\n        break;\n      }\n\n      case recordTypes.FireAnimationFrame: {\n        contentHelper.appendTextRow(i18nString(UIStrings.callbackId), eventData['id']);\n        break;\n      }\n\n      case recordTypes.ResourceWillSendRequest:\n      case recordTypes.ResourceSendRequest:\n      case recordTypes.ResourceReceiveResponse:\n      case recordTypes.ResourceReceivedData:\n      case recordTypes.ResourceFinish: {\n        url = timelineData.url;\n        if (url) {\n          const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          };\n          contentHelper.appendElementRow(\n              i18nString(UIStrings.resource), Components.Linkifier.Linkifier.linkifyURL(url, options));\n        }\n        if (eventData['requestMethod']) {\n          contentHelper.appendTextRow(i18nString(UIStrings.requestMethod), eventData['requestMethod']);\n        }\n        if (typeof eventData['statusCode'] === 'number') {\n          contentHelper.appendTextRow(i18nString(UIStrings.statusCode), eventData['statusCode']);\n        }\n        if (eventData['mimeType']) {\n          contentHelper.appendTextRow(i18nString(UIStrings.mimeTypeCaps), eventData['mimeType']);\n        }\n        if ('priority' in eventData) {\n          const priority = PerfUI.NetworkPriorities.uiLabelForNetworkPriority(eventData['priority']);\n          contentHelper.appendTextRow(i18nString(UIStrings.priority), priority);\n        }\n        if (eventData['encodedDataLength']) {\n          contentHelper.appendTextRow(\n              i18nString(UIStrings.encodedData), i18nString(UIStrings.sBytes, {n: eventData['encodedDataLength']}));\n        }\n        if (eventData['decodedBodyLength']) {\n          contentHelper.appendTextRow(\n              i18nString(UIStrings.decodedBody), i18nString(UIStrings.sBytes, {n: eventData['decodedBodyLength']}));\n        }\n        break;\n      }\n\n      case recordTypes.CompileModule: {\n        contentHelper.appendLocationRow(i18nString(UIStrings.module), event.args['fileName'], 0);\n        break;\n      }\n\n      case recordTypes.CompileScript: {\n        url = eventData && eventData['url'] as Platform.DevToolsPath.UrlString;\n        if (url) {\n          contentHelper.appendLocationRow(\n              i18nString(UIStrings.script), url, eventData['lineNumber'], eventData['columnNumber']);\n        }\n        const isEager = eventData['eager'] ?? false;\n        if (isEager) {\n          contentHelper.appendTextRow(i18nString(UIStrings.eagerCompile), true);\n        }\n        const isStreamed = eventData['streamed'];\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.streamed), isStreamed + (isStreamed ? '' : `: ${eventData['notStreamedReason']}`));\n        TimelineUIUtils.buildConsumeCacheDetails(eventData, contentHelper);\n        break;\n      }\n\n      case recordTypes.CacheModule: {\n        url = eventData && eventData['url'] as Platform.DevToolsPath.UrlString;\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.compilationCacheSize),\n            Platform.NumberUtilities.bytesToString(eventData['producedCacheSize']));\n        break;\n      }\n\n      case recordTypes.CacheScript: {\n        url = eventData && eventData['url'] as Platform.DevToolsPath.UrlString;\n        if (url) {\n          contentHelper.appendLocationRow(\n              i18nString(UIStrings.script), url, eventData['lineNumber'], eventData['columnNumber']);\n        }\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.compilationCacheSize),\n            Platform.NumberUtilities.bytesToString(eventData['producedCacheSize']));\n        break;\n      }\n\n      case recordTypes.EvaluateScript: {\n        url = eventData && eventData['url'] as Platform.DevToolsPath.UrlString;\n        if (url) {\n          contentHelper.appendLocationRow(\n              i18nString(UIStrings.script), url, eventData['lineNumber'], eventData['columnNumber']);\n        }\n        break;\n      }\n\n      case recordTypes.WasmStreamFromResponseCallback:\n      case recordTypes.WasmCompiledModule:\n      case recordTypes.WasmCachedModule:\n      case recordTypes.WasmModuleCacheHit:\n      case recordTypes.WasmModuleCacheInvalid: {\n        if (eventData) {\n          url = event.args['url'] as Platform.DevToolsPath.UrlString;\n          if (url) {\n            contentHelper.appendTextRow(i18nString(UIStrings.url), url);\n          }\n          const producedCachedSize = event.args['producedCachedSize'];\n          if (producedCachedSize) {\n            contentHelper.appendTextRow(i18nString(UIStrings.producedCacheSize), producedCachedSize);\n          }\n          const consumedCachedSize = event.args['consumedCachedSize'];\n          if (consumedCachedSize) {\n            contentHelper.appendTextRow(i18nString(UIStrings.consumedCacheSize), consumedCachedSize);\n          }\n        }\n        break;\n      }\n\n      // @ts-ignore Fall-through intended.\n      case recordTypes.Paint: {\n        const clip = eventData['clip'];\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.location), i18nString(UIStrings.sSCurlyBrackets, {PH1: clip[0], PH2: clip[1]}));\n        const clipWidth = TimelineUIUtils.quadWidth(clip);\n        const clipHeight = TimelineUIUtils.quadHeight(clip);\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.dimensions), i18nString(UIStrings.sSDimensions, {PH1: clipWidth, PH2: clipHeight}));\n      }\n\n      case recordTypes.PaintSetup:\n      case recordTypes.Rasterize:\n      case recordTypes.ScrollLayer: {\n        relatedNodeLabel = i18nString(UIStrings.layerRoot);\n        break;\n      }\n\n      case recordTypes.PaintImage:\n      case recordTypes.DecodeLazyPixelRef:\n      case recordTypes.DecodeImage:\n      case recordTypes.ResizeImage:\n      case recordTypes.DrawLazyPixelRef: {\n        relatedNodeLabel = i18nString(UIStrings.ownerElement);\n        url = timelineData.url;\n        if (url) {\n          const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          };\n          contentHelper.appendElementRow(\n              i18nString(UIStrings.imageUrl), Components.Linkifier.Linkifier.linkifyURL(url, options));\n        }\n        break;\n      }\n\n      case recordTypes.ParseAuthorStyleSheet: {\n        url = eventData['styleSheetUrl'] as Platform.DevToolsPath.UrlString;\n        if (url) {\n          const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n          };\n          contentHelper.appendElementRow(\n              i18nString(UIStrings.stylesheetUrl), Components.Linkifier.Linkifier.linkifyURL(url, options));\n        }\n        break;\n      }\n\n      case recordTypes.UpdateLayoutTree:  // We don't want to see default details.\n      case recordTypes.RecalculateStyles: {\n        contentHelper.appendTextRow(i18nString(UIStrings.elementsAffected), event.args['elementCount']);\n        break;\n      }\n\n      case recordTypes.Layout: {\n        const beginData = event.args['beginData'];\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.nodesThatNeedLayout),\n            i18nString(UIStrings.sOfS, {PH1: beginData['dirtyObjects'], PH2: beginData['totalObjects']}));\n        relatedNodeLabel = i18nString(UIStrings.layoutRoot);\n        break;\n      }\n\n      case recordTypes.ConsoleTime: {\n        contentHelper.appendTextRow(i18nString(UIStrings.message), event.name);\n        break;\n      }\n\n      case recordTypes.WebSocketCreate:\n      case recordTypes.WebSocketSendHandshakeRequest:\n      case recordTypes.WebSocketReceiveHandshakeResponse:\n      case recordTypes.WebSocketDestroy: {\n        const initiatorData = initiator ? initiator.args['data'] : eventData;\n        if (typeof initiatorData['webSocketURL'] !== 'undefined') {\n          contentHelper.appendTextRow(i18n.i18n.lockedString('URL'), initiatorData['webSocketURL']);\n        }\n        if (typeof initiatorData['webSocketProtocol'] !== 'undefined') {\n          contentHelper.appendTextRow(i18nString(UIStrings.websocketProtocol), initiatorData['webSocketProtocol']);\n        }\n        if (typeof eventData['message'] !== 'undefined') {\n          contentHelper.appendTextRow(i18nString(UIStrings.message), eventData['message']);\n        }\n        break;\n      }\n\n      case recordTypes.EmbedderCallback: {\n        contentHelper.appendTextRow(i18nString(UIStrings.callbackFunction), eventData['callbackName']);\n        break;\n      }\n\n      case recordTypes.Animation: {\n        if (event.phase === SDK.TracingModel.Phase.NestableAsyncInstant) {\n          contentHelper.appendTextRow(i18nString(UIStrings.state), eventData['state']);\n        }\n        break;\n      }\n\n      case recordTypes.ParseHTML: {\n        const beginData = event.args['beginData'];\n        const startLine = beginData['startLine'] - 1;\n        const endLine = event.args['endData'] ? event.args['endData']['endLine'] - 1 : undefined;\n        url = beginData['url'];\n        if (url) {\n          contentHelper.appendLocationRange(i18nString(UIStrings.range), url, startLine, endLine);\n        }\n        break;\n      }\n\n      // @ts-ignore Fall-through intended.\n      case recordTypes.FireIdleCallback: {\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.allottedTime), i18n.TimeUtilities.millisToString(eventData['allottedMilliseconds']));\n        contentHelper.appendTextRow(i18nString(UIStrings.invokedByTimeout), eventData['timedOut']);\n      }\n\n      case recordTypes.RequestIdleCallback:\n      case recordTypes.CancelIdleCallback: {\n        contentHelper.appendTextRow(i18nString(UIStrings.callbackId), eventData['id']);\n        break;\n      }\n\n      case recordTypes.EventDispatch: {\n        contentHelper.appendTextRow(i18nString(UIStrings.type), eventData['type']);\n        break;\n      }\n\n      // @ts-ignore Fall-through intended.\n      case recordTypes.MarkLCPCandidate: {\n        contentHelper.appendTextRow(i18nString(UIStrings.type), String(eventData['type']));\n        contentHelper.appendTextRow(i18nString(UIStrings.size), String(eventData['size']));\n      }\n\n      case recordTypes.MarkFirstPaint:\n      case recordTypes.MarkFCP:\n      case recordTypes.MarkLoad:\n      case recordTypes.MarkDOMContent: {\n        let eventTime: number = event.startTime - model.minimumRecordTime();\n\n        // Find the appropriate navStart based on the navigation ID.\n        const {navigationId} = event.args.data;\n        if (navigationId) {\n          const navStartTime = model.navStartTimes().get(navigationId);\n\n          if (navStartTime) {\n            eventTime = event.startTime - navStartTime.startTime;\n          }\n        }\n\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.timestamp), i18n.TimeUtilities.preciseMillisToString(eventTime, 1));\n        contentHelper.appendElementRow(\n            i18nString(UIStrings.details), TimelineUIUtils.buildDetailsNodeForPerformanceEvent(event));\n        break;\n      }\n\n      case recordTypes.LayoutShift: {\n        const warning = document.createElement('span');\n        const clsLink = UI.XLink.XLink.create('https://web.dev/cls/', i18nString(UIStrings.cumulativeLayoutShifts));\n        const evolvedClsLink =\n            UI.XLink.XLink.create('https://web.dev/evolving-cls/', i18nString(UIStrings.evolvedClsLink));\n\n        warning.appendChild(\n            i18n.i18n.getFormatLocalizedString(str_, UIStrings.sCLSInformation, {PH1: clsLink, PH2: evolvedClsLink}));\n        contentHelper.appendElementRow(i18nString(UIStrings.warning), warning, true);\n\n        contentHelper.appendTextRow(i18nString(UIStrings.score), eventData['score'].toPrecision(4));\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.cumulativeScore), eventData['cumulative_score'].toPrecision(4));\n        if ('_current_cluster_id' in eventData) {\n          contentHelper.appendTextRow(i18nString(UIStrings.currentClusterId), eventData['_current_cluster_id']);\n        }\n        if ('_current_cluster_score' in eventData) {\n          contentHelper.appendTextRow(\n              i18nString(UIStrings.currentClusterScore), eventData['_current_cluster_score'].toPrecision(4));\n        }\n        contentHelper.appendTextRow(\n            i18nString(UIStrings.hadRecentInput),\n            eventData['had_recent_input'] ? i18nString(UIStrings.yes) : i18nString(UIStrings.no));\n\n        for (const impactedNode of eventData['impacted_nodes']) {\n          const oldRect = new CLSRect(impactedNode['old_rect']);\n          const newRect = new CLSRect(impactedNode['new_rect']);\n\n          const linkedOldRect = await Common.Linkifier.Linkifier.linkify(oldRect);\n          const linkedNewRect = await Common.Linkifier.Linkifier.linkify(newRect);\n\n          contentHelper.appendElementRow(i18nString(UIStrings.movedFrom), linkedOldRect);\n          contentHelper.appendElementRow(i18nString(UIStrings.movedTo), linkedNewRect);\n        }\n\n        break;\n      }\n\n      default: {\n        const detailsNode =\n            await TimelineUIUtils.buildDetailsNodeForTraceEvent(event, model.targetByEvent(event), linkifier);\n        if (detailsNode) {\n          contentHelper.appendElementRow(i18nString(UIStrings.details), detailsNode);\n        }\n        break;\n      }\n    }\n\n    if (timelineData.timeWaitingForMainThread) {\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.timeWaitingForMainThread),\n          i18n.TimeUtilities.millisToString(timelineData.timeWaitingForMainThread, true));\n    }\n\n    for (let i = 0; i < timelineData.backendNodeIds.length; ++i) {\n      const relatedNode = relatedNodesMap && relatedNodesMap.get(timelineData.backendNodeIds[i]);\n      if (relatedNode) {\n        const nodeSpan = await Common.Linkifier.Linkifier.linkify(relatedNode);\n        contentHelper.appendElementRow(relatedNodeLabel || i18nString(UIStrings.relatedNode), nodeSpan);\n      }\n    }\n\n    // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n    if (event[previewElementSymbol]) {\n      contentHelper.addSection(i18nString(UIStrings.preview));\n      // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n      contentHelper.appendElementRow('', event[previewElementSymbol]);\n    }\n\n    if (initiator || timelineData.stackTraceForSelfOrInitiator() ||\n        TimelineModel.TimelineModel.InvalidationTracker.invalidationEventsFor(event)) {\n      TimelineUIUtils.generateCauses(event, model.targetByEvent(event), relatedNodesMap, contentHelper);\n    }\n\n    const stats: {\n      [x: string]: number,\n    } = {};\n    const showPieChart = detailed && TimelineUIUtils.aggregatedStatsForTraceEvent(stats, model, event);\n    if (showPieChart) {\n      contentHelper.addSection(i18nString(UIStrings.aggregatedTime));\n      const pieChart =\n          TimelineUIUtils.generatePieChart(stats, TimelineUIUtils.eventStyle(event).category, event.selfTime);\n      contentHelper.appendElementRow('', pieChart);\n    }\n\n    return contentHelper.fragment;\n  }\n\n  static statsForTimeRange(events: SDK.TracingModel.Event[], startTime: number, endTime: number): {\n    [x: string]: number,\n  } {\n    if (!events.length) {\n      return {'idle': endTime - startTime};\n    }\n\n    buildRangeStatsCacheIfNeeded(events);\n    const aggregatedStats = subtractStats(aggregatedStatsAtTime(endTime), aggregatedStatsAtTime(startTime));\n    const aggregatedTotal = Object.values(aggregatedStats).reduce((a, b) => a + b, 0);\n    aggregatedStats['idle'] = Math.max(0, endTime - startTime - aggregatedTotal);\n    return aggregatedStats;\n\n    function aggregatedStatsAtTime(time: number): {\n      [x: string]: number,\n    } {\n      const stats: {\n        [x: string]: number,\n      } = {};\n      // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n      const cache = events[categoryBreakdownCacheSymbol];\n      for (const category in cache) {\n        const categoryCache = cache[category];\n        const index =\n            Platform.ArrayUtilities.upperBound(categoryCache.time, time, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n        let value;\n        if (index === 0) {\n          value = 0;\n        } else if (index === categoryCache.time.length) {\n          value = categoryCache.value[categoryCache.value.length - 1];\n        } else {\n          const t0 = categoryCache.time[index - 1];\n          const t1 = categoryCache.time[index];\n          const v0 = categoryCache.value[index - 1];\n          const v1 = categoryCache.value[index];\n          value = v0 + (v1 - v0) * (time - t0) / (t1 - t0);\n        }\n        stats[category] = value;\n      }\n      return stats;\n    }\n\n    function subtractStats(\n        a: {\n          [x: string]: number,\n        },\n        b: {\n          [x: string]: number,\n        }): {\n      [x: string]: number,\n    } {\n      const result = Object.assign({}, a);\n      for (const key in b) {\n        result[key] -= b[key];\n      }\n      return result;\n    }\n\n    function buildRangeStatsCacheIfNeeded(events: SDK.TracingModel.Event[]): void {\n      // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n      if (events[categoryBreakdownCacheSymbol]) {\n        return;\n      }\n\n      // aggeregatedStats is a map by categories. For each category there's an array\n      // containing sorted time points which records accumulated value of the category.\n      const aggregatedStats: {\n        [x: string]: {\n          time: number[],\n          value: number[],\n        },\n      } = {};\n      const categoryStack: string[] = [];\n      let lastTime = 0;\n      TimelineModel.TimelineModel.TimelineModelImpl.forEachEvent(\n          events, onStartEvent, onEndEvent, undefined, undefined, undefined, filterForStats());\n\n      function filterForStats(): (arg0: SDK.TracingModel.Event) => boolean {\n        const visibleEventsFilter = TimelineUIUtils.visibleEventsFilter();\n        return (event: SDK.TracingModel.Event): boolean =>\n                   visibleEventsFilter.accept(event) || SDK.TracingModel.TracingModel.isTopLevelEvent(event);\n      }\n\n      function updateCategory(category: string, time: number): void {\n        let statsArrays: {\n          time: number[],\n          value: number[],\n        } = aggregatedStats[category];\n        if (!statsArrays) {\n          statsArrays = {time: [], value: []};\n          aggregatedStats[category] = statsArrays;\n        }\n        if (statsArrays.time.length && statsArrays.time[statsArrays.time.length - 1] === time || lastTime > time) {\n          return;\n        }\n        const lastValue = statsArrays.value.length > 0 ? statsArrays.value[statsArrays.value.length - 1] : 0;\n        statsArrays.value.push(lastValue + time - lastTime);\n        statsArrays.time.push(time);\n      }\n\n      function categoryChange(from: string|null, to: string|null, time: number): void {\n        if (from) {\n          updateCategory(from, time);\n        }\n        lastTime = time;\n        if (to) {\n          updateCategory(to, time);\n        }\n      }\n\n      function onStartEvent(e: SDK.TracingModel.Event): void {\n        const category = TimelineUIUtils.eventStyle(e).category.name;\n        const parentCategory = categoryStack.length ? categoryStack[categoryStack.length - 1] : null;\n        if (category !== parentCategory) {\n          categoryChange(parentCategory || null, category, e.startTime);\n        }\n        categoryStack.push(category);\n      }\n\n      function onEndEvent(e: SDK.TracingModel.Event): void {\n        const category = categoryStack.pop();\n        const parentCategory = categoryStack.length ? categoryStack[categoryStack.length - 1] : null;\n        if (category !== parentCategory) {\n          categoryChange(category || null, parentCategory || null, e.endTime || 0);\n        }\n      }\n\n      const obj = (events as Object);\n      // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n      obj[categoryBreakdownCacheSymbol] = aggregatedStats;\n    }\n  }\n\n  static async buildNetworkRequestDetails(\n      request: TimelineModel.TimelineModel.NetworkRequest, model: TimelineModel.TimelineModel.TimelineModelImpl,\n      linkifier: Components.Linkifier.Linkifier): Promise<DocumentFragment> {\n    const target = model.targetByEvent(request.children[0]);\n    const contentHelper = new TimelineDetailsContentHelper(target, linkifier);\n    const category = TimelineUIUtils.networkRequestCategory(request);\n    const color = TimelineUIUtils.networkCategoryColor(category);\n    contentHelper.addSection(i18nString(UIStrings.networkRequest), color);\n\n    if (request.url) {\n      const options = {\n        tabStop: true,\n        showColumnNumber: false,\n        inlineFrameIndex: 0,\n      };\n      contentHelper.appendElementRow(\n          i18n.i18n.lockedString('URL'), Components.Linkifier.Linkifier.linkifyURL(request.url, options));\n    }\n\n    // The time from queueing the request until resource processing is finished.\n    const fullDuration = request.endTime - (request.getStartTime() || -Infinity);\n    if (isFinite(fullDuration)) {\n      let textRow = i18n.TimeUtilities.millisToString(fullDuration, true);\n      // The time from queueing the request until the download is finished. This\n      // corresponds to the total time reported for the request in the network tab.\n      const networkDuration = (request.finishTime || request.getStartTime()) - request.getStartTime();\n      // The time it takes to make the resource available to the renderer process.\n      const processingDuration = request.endTime - (request.finishTime || 0);\n      if (isFinite(networkDuration) && isFinite(processingDuration)) {\n        const networkDurationStr = i18n.TimeUtilities.millisToString(networkDuration, true);\n        const processingDurationStr = i18n.TimeUtilities.millisToString(processingDuration, true);\n        const cacheOrNetworkLabel =\n            request.cached() ? i18nString(UIStrings.loadFromCache) : i18nString(UIStrings.networkTransfer);\n        textRow += i18nString(\n            UIStrings.SSSResourceLoading,\n            {PH1: networkDurationStr, PH2: cacheOrNetworkLabel, PH3: processingDurationStr});\n      }\n      contentHelper.appendTextRow(i18nString(UIStrings.duration), textRow);\n    }\n\n    if (request.requestMethod) {\n      contentHelper.appendTextRow(i18nString(UIStrings.requestMethod), request.requestMethod);\n    }\n    if (typeof request.priority === 'string') {\n      const priority =\n          PerfUI.NetworkPriorities.uiLabelForNetworkPriority((request.priority as Protocol.Network.ResourcePriority));\n      contentHelper.appendTextRow(i18nString(UIStrings.priority), priority);\n    }\n    if (request.mimeType) {\n      contentHelper.appendTextRow(i18nString(UIStrings.mimeType), request.mimeType);\n    }\n    let lengthText = '';\n    if (request.memoryCached()) {\n      lengthText += i18nString(UIStrings.FromMemoryCache);\n    } else if (request.cached()) {\n      lengthText += i18nString(UIStrings.FromCache);\n    } else if (request.timing && request.timing.pushStart) {\n      lengthText += i18nString(UIStrings.FromPush);\n    }\n    if (request.fromServiceWorker) {\n      lengthText += i18nString(UIStrings.FromServiceWorker);\n    }\n    if (request.encodedDataLength || !lengthText) {\n      lengthText = `${Platform.NumberUtilities.bytesToString(request.encodedDataLength)}${lengthText}`;\n    }\n    contentHelper.appendTextRow(i18nString(UIStrings.encodedData), lengthText);\n    if (request.decodedBodyLength) {\n      contentHelper.appendTextRow(\n          i18nString(UIStrings.decodedBody), Platform.NumberUtilities.bytesToString(request.decodedBodyLength));\n    }\n    const title = i18nString(UIStrings.initiator);\n    const sendRequest = request.children[0];\n    const topFrame = TimelineModel.TimelineModel.TimelineData.forEvent(sendRequest).topFrame();\n    if (topFrame) {\n      const link = linkifier.maybeLinkifyConsoleCallFrame(\n          target, topFrame, {tabStop: true, inlineFrameIndex: 0, showColumnNumber: true});\n      if (link) {\n        contentHelper.appendElementRow(title, link);\n      }\n    } else {\n      const initiator = TimelineModel.TimelineModel.TimelineData.forEvent(sendRequest).initiator();\n      if (initiator) {\n        const initiatorURL = TimelineModel.TimelineModel.TimelineData.forEvent(initiator).url;\n        if (initiatorURL) {\n          const link =\n              linkifier.maybeLinkifyScriptLocation(target, null, initiatorURL, 0, {tabStop: true, inlineFrameIndex: 0});\n          if (link) {\n            contentHelper.appendElementRow(title, link);\n          }\n        }\n      }\n    }\n\n    if (!requestPreviewElements.get(request) && request.url && target) {\n      const previewElement = (await Components.ImagePreview.ImagePreview.build(target, request.url, false, {\n        imageAltText: Components.ImagePreview.ImagePreview.defaultAltTextForImageURL(request.url),\n        precomputedFeatures: undefined,\n      }) as HTMLImageElement);\n\n      requestPreviewElements.set(request, previewElement);\n    }\n\n    const requestPreviewElement = requestPreviewElements.get(request);\n    if (requestPreviewElement) {\n      contentHelper.appendElementRow(i18nString(UIStrings.preview), requestPreviewElement);\n    }\n    return contentHelper.fragment;\n  }\n\n  static stackTraceFromCallFrames(callFrames: Protocol.Runtime.CallFrame[]): Protocol.Runtime.StackTrace {\n    return {callFrames: callFrames} as Protocol.Runtime.StackTrace;\n  }\n\n  private static generateCauses(\n      event: SDK.TracingModel.Event, target: SDK.Target.Target|null,\n      relatedNodesMap: Map<number, SDK.DOMModel.DOMNode|null>|null, contentHelper: TimelineDetailsContentHelper): void {\n    const recordTypes = TimelineModel.TimelineModel.RecordType;\n\n    let callSiteStackLabel;\n    let stackLabel;\n\n    switch (event.name) {\n      case recordTypes.TimerFire:\n        callSiteStackLabel = i18nString(UIStrings.timerInstalled);\n        break;\n      case recordTypes.FireAnimationFrame:\n        callSiteStackLabel = i18nString(UIStrings.animationFrameRequested);\n        break;\n      case recordTypes.FireIdleCallback:\n        callSiteStackLabel = i18nString(UIStrings.idleCallbackRequested);\n        break;\n      case recordTypes.UpdateLayoutTree:\n      case recordTypes.RecalculateStyles:\n        stackLabel = i18nString(UIStrings.recalculationForced);\n        break;\n      case recordTypes.Layout:\n        callSiteStackLabel = i18nString(UIStrings.firstLayoutInvalidation);\n        stackLabel = i18nString(UIStrings.layoutForced);\n        break;\n    }\n\n    const timelineData = TimelineModel.TimelineModel.TimelineData.forEvent(event);\n    // Direct cause.\n    if (timelineData.stackTrace && timelineData.stackTrace.length) {\n      contentHelper.addSection(i18nString(UIStrings.callStacks));\n      contentHelper.appendStackTrace(\n          stackLabel || i18nString(UIStrings.stackTrace),\n          TimelineUIUtils.stackTraceFromCallFrames(timelineData.stackTrace));\n    }\n\n    const initiator = TimelineModel.TimelineModel.TimelineData.forEvent(event).initiator();\n    // Indirect causes.\n    if (TimelineModel.TimelineModel.InvalidationTracker.invalidationEventsFor(event) && target) {\n      // Full invalidation tracking (experimental).\n      contentHelper.addSection(i18nString(UIStrings.invalidations));\n      TimelineUIUtils.generateInvalidations(event, target, relatedNodesMap, contentHelper);\n    } else if (initiator) {  // Partial invalidation tracking.\n      const delay = event.startTime - initiator.startTime;\n      contentHelper.appendTextRow(i18nString(UIStrings.pendingFor), i18n.TimeUtilities.preciseMillisToString(delay, 1));\n\n      const link = document.createElement('span');\n      link.classList.add('devtools-link');\n      UI.ARIAUtils.markAsLink(link);\n      link.tabIndex = 0;\n      link.textContent = i18nString(UIStrings.reveal);\n      link.addEventListener('click', () => {\n        TimelinePanel.instance().select(TimelineSelection.fromTraceEvent((initiator as SDK.TracingModel.Event)));\n      });\n      link.addEventListener('keydown', event => {\n        if (event.key === 'Enter') {\n          TimelinePanel.instance().select(TimelineSelection.fromTraceEvent((initiator as SDK.TracingModel.Event)));\n          event.consume(true);\n        }\n      });\n      contentHelper.appendElementRow(i18nString(UIStrings.initiator), link);\n\n      const initiatorStackTrace = TimelineModel.TimelineModel.TimelineData.forEvent(initiator).stackTrace;\n      if (initiatorStackTrace) {\n        contentHelper.appendStackTrace(\n            callSiteStackLabel || i18nString(UIStrings.firstInvalidated),\n            TimelineUIUtils.stackTraceFromCallFrames(initiatorStackTrace));\n      }\n    }\n  }\n\n  private static generateInvalidations(\n      event: SDK.TracingModel.Event, target: SDK.Target.Target,\n      relatedNodesMap: Map<number, SDK.DOMModel.DOMNode|null>|null, contentHelper: TimelineDetailsContentHelper): void {\n    const invalidationTrackingEvents = TimelineModel.TimelineModel.InvalidationTracker.invalidationEventsFor(event);\n    if (!invalidationTrackingEvents) {\n      return;\n    }\n\n    const invalidations: {\n      [x: string]: TimelineModel.TimelineModel.InvalidationTrackingEvent[],\n    } = {};\n    for (const invalidation of invalidationTrackingEvents) {\n      if (!invalidations[invalidation.type]) {\n        invalidations[invalidation.type] = [];\n      }\n      invalidations[invalidation.type].push(invalidation);\n    }\n\n    Object.keys(invalidations).forEach(function(type) {\n      TimelineUIUtils.generateInvalidationsForType(type, target, invalidations[type], relatedNodesMap, contentHelper);\n    });\n  }\n\n  private static generateInvalidationsForType(\n      type: string, target: SDK.Target.Target, invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[],\n      relatedNodesMap: Map<number, SDK.DOMModel.DOMNode|null>|null, contentHelper: TimelineDetailsContentHelper): void {\n    let title;\n    switch (type) {\n      case TimelineModel.TimelineModel.RecordType.StyleRecalcInvalidationTracking:\n        title = i18nString(UIStrings.styleInvalidations);\n        break;\n      case TimelineModel.TimelineModel.RecordType.LayoutInvalidationTracking:\n        title = i18nString(UIStrings.layoutInvalidations);\n        break;\n      default:\n        title = i18nString(UIStrings.otherInvalidations);\n        break;\n    }\n\n    const invalidationsTreeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    invalidationsTreeOutline.registerCSSFiles([invalidationsTreeStyles]);\n    invalidationsTreeOutline.element.classList.add('invalidations-tree');\n\n    const invalidationGroups = groupInvalidationsByCause(invalidations);\n    invalidationGroups.forEach(function(group) {\n      const groupElement = new InvalidationsGroupElement(target, relatedNodesMap, contentHelper, group);\n      invalidationsTreeOutline.appendChild(groupElement);\n    });\n    contentHelper.appendElementRow(title, invalidationsTreeOutline.element, false, true);\n\n    function groupInvalidationsByCause(invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[]):\n        TimelineModel.TimelineModel.InvalidationTrackingEvent[][] {\n      const causeToInvalidationMap = new Map<string, TimelineModel.TimelineModel.InvalidationTrackingEvent[]>();\n      for (let index = 0; index < invalidations.length; index++) {\n        const invalidation = invalidations[index];\n        let causeKey = '';\n        if (invalidation.cause.reason) {\n          causeKey += invalidation.cause.reason + '.';\n        }\n        if (invalidation.cause.stackTrace) {\n          invalidation.cause.stackTrace.forEach(function(stackFrame) {\n            causeKey += stackFrame['functionName'] + '.';\n            causeKey += stackFrame['scriptId'] + '.';\n            causeKey += stackFrame['url'] + '.';\n            causeKey += stackFrame['lineNumber'] + '.';\n            causeKey += stackFrame['columnNumber'] + '.';\n          });\n        }\n\n        const causeToInvalidation = causeToInvalidationMap.get(causeKey);\n        if (causeToInvalidation) {\n          causeToInvalidation.push(invalidation);\n        } else {\n          causeToInvalidationMap.set(causeKey, [invalidation]);\n        }\n      }\n      return [...causeToInvalidationMap.values()];\n    }\n  }\n\n  private static collectInvalidationNodeIds(\n      nodeIds: Set<number>, invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[]): void {\n    Platform.SetUtilities.addAll(nodeIds, invalidations.map(invalidation => invalidation.nodeId).filter(id => id));\n  }\n\n  private static aggregatedStatsForTraceEvent(\n      total: {\n        [x: string]: number,\n      },\n      model: TimelineModel.TimelineModel.TimelineModelImpl, event: SDK.TracingModel.Event): boolean {\n    const events = model.inspectedTargetEvents();\n    function eventComparator(startTime: number, e: SDK.TracingModel.Event): number {\n      return startTime - e.startTime;\n    }\n\n    const index = Platform.ArrayUtilities.binaryIndexOf(events, event.startTime, eventComparator);\n    // Not a main thread event?\n    if (index < 0) {\n      return false;\n    }\n    let hasChildren = false;\n    const endTime = event.endTime;\n    if (endTime) {\n      for (let i = index; i < events.length; i++) {\n        const nextEvent = events[i];\n        if (nextEvent.startTime >= endTime) {\n          break;\n        }\n        if (!nextEvent.selfTime) {\n          continue;\n        }\n        if (nextEvent.thread !== event.thread) {\n          continue;\n        }\n        if (i > index) {\n          hasChildren = true;\n        }\n        const categoryName = TimelineUIUtils.eventStyle(nextEvent).category.name;\n        total[categoryName] = (total[categoryName] || 0) + nextEvent.selfTime;\n      }\n    }\n    if (SDK.TracingModel.TracingModel.isAsyncPhase(event.phase)) {\n      if (event.endTime) {\n        let aggregatedTotal = 0;\n        for (const categoryName in total) {\n          aggregatedTotal += total[categoryName];\n        }\n        total['idle'] = Math.max(0, event.endTime - event.startTime - aggregatedTotal);\n      }\n      return false;\n    }\n    return hasChildren;\n  }\n\n  static async buildPicturePreviewContent(event: SDK.TracingModel.Event, target: SDK.Target.Target):\n      Promise<Element|null> {\n    const snapshotWithRect =\n        await new TimelineModel.TimelineFrameModel.LayerPaintEvent(event, target).snapshotPromise();\n    if (!snapshotWithRect) {\n      return null;\n    }\n    const imageURLPromise = snapshotWithRect.snapshot.replay();\n    snapshotWithRect.snapshot.release();\n    const imageURL = await imageURLPromise as Platform.DevToolsPath.UrlString;\n    if (!imageURL) {\n      return null;\n    }\n    const stylesContainer = document.createElement('div');\n    const shadowRoot = stylesContainer.attachShadow({mode: 'open'});\n    shadowRoot.adoptedStyleSheets = [imagePreviewStyles];\n    const container = shadowRoot.createChild('div') as HTMLDivElement;\n    container.classList.add('image-preview-container', 'vbox', 'link');\n    const img = (container.createChild('img') as HTMLImageElement);\n    img.src = imageURL;\n    img.alt = Components.ImagePreview.ImagePreview.defaultAltTextForImageURL(imageURL);\n    const paintProfilerButton = container.createChild('a');\n    paintProfilerButton.textContent = i18nString(UIStrings.paintProfiler);\n    UI.ARIAUtils.markAsLink(container);\n    container.tabIndex = 0;\n    container.addEventListener(\n        'click', () => TimelinePanel.instance().select(TimelineSelection.fromTraceEvent(event)), false);\n    container.addEventListener('keydown', keyEvent => {\n      if (keyEvent.key === 'Enter') {\n        TimelinePanel.instance().select(TimelineSelection.fromTraceEvent(event));\n        keyEvent.consume(true);\n      }\n    });\n    return stylesContainer;\n  }\n\n  static createEventDivider(event: SDK.TracingModel.Event, zeroTime: number): Element {\n    const eventDivider = document.createElement('div');\n    eventDivider.classList.add('resources-event-divider');\n    const startTime = i18n.TimeUtilities.millisToString(event.startTime - zeroTime);\n    UI.Tooltip.Tooltip.install(\n        eventDivider, i18nString(UIStrings.sAtS, {PH1: TimelineUIUtils.eventTitle(event), PH2: startTime}));\n    const style = TimelineUIUtils.markerStyleForEvent(event);\n    if (style.tall) {\n      eventDivider.style.backgroundColor = style.color;\n    }\n    return eventDivider;\n  }\n\n  private static visibleTypes(): string[] {\n    const eventStyles = TimelineUIUtils.initEventStyles();\n    const result = [];\n    for (const name in eventStyles) {\n      if (!eventStyles[name].hidden) {\n        result.push(name);\n      }\n    }\n    return result;\n  }\n\n  static visibleEventsFilter(): TimelineModel.TimelineModelFilter.TimelineModelFilter {\n    return new TimelineModel.TimelineModelFilter.TimelineVisibleEventsFilter(TimelineUIUtils.visibleTypes());\n  }\n\n  static categories(): {\n    [x: string]: TimelineCategory,\n  } {\n    if (categories) {\n      return categories;\n    }\n    categories = {\n      loading: new TimelineCategory(\n          'loading', i18nString(UIStrings.loading), true, 'hsl(214, 67%, 74%)', 'hsl(214, 67%, 66%)'),\n      experience: new TimelineCategory(\n          'experience', i18nString(UIStrings.experience), false, 'hsl(5, 80%, 74%)', 'hsl(5, 80%, 66%)'),\n      scripting: new TimelineCategory(\n          'scripting', i18nString(UIStrings.scripting), true, 'hsl(43, 83%, 72%)', 'hsl(43, 83%, 64%) '),\n      rendering: new TimelineCategory(\n          'rendering', i18nString(UIStrings.rendering), true, 'hsl(256, 67%, 76%)', 'hsl(256, 67%, 70%)'),\n      painting: new TimelineCategory(\n          'painting', i18nString(UIStrings.painting), true, 'hsl(109, 33%, 64%)', 'hsl(109, 33%, 55%)'),\n      gpu: new TimelineCategory('gpu', i18nString(UIStrings.gpu), false, 'hsl(109, 33%, 64%)', 'hsl(109, 33%, 55%)'),\n      async:\n          new TimelineCategory('async', i18nString(UIStrings.async), false, 'hsl(0, 100%, 50%)', 'hsl(0, 100%, 40%)'),\n      other: new TimelineCategory('other', i18nString(UIStrings.system), false, 'hsl(0, 0%, 87%)', 'hsl(0, 0%, 79%)'),\n      idle: new TimelineCategory('idle', i18nString(UIStrings.idle), false, 'hsl(0, 0%, 98%)', 'hsl(0, 0%, 98%)'),\n    };\n    return categories;\n  }\n\n  static setCategories(cats: {\n    [x: string]: TimelineCategory,\n  }): void {\n    categories = cats;\n  }\n\n  static getTimelineMainEventCategories(): string[] {\n    if (eventCategories) {\n      return eventCategories;\n    }\n    eventCategories = ['idle', 'loading', 'painting', 'rendering', 'scripting', 'other'];\n    return eventCategories;\n  }\n\n  static setTimelineMainEventCategories(categories: string[]): void {\n    eventCategories = categories;\n  }\n\n  static generatePieChart(\n      aggregatedStats: {\n        [x: string]: number,\n      },\n      selfCategory?: TimelineCategory, selfTime?: number): Element {\n    let total = 0;\n    for (const categoryName in aggregatedStats) {\n      total += aggregatedStats[categoryName];\n    }\n\n    const element = document.createElement('div');\n    element.classList.add('timeline-details-view-pie-chart-wrapper');\n    element.classList.add('hbox');\n\n    const pieChart = new PerfUI.PieChart.PieChart();\n    const slices: {\n      value: number,\n      color: string,\n      title: string,\n    }[] = [];\n\n    function appendLegendRow(name: string, title: string, value: number, color: string): void {\n      if (!value) {\n        return;\n      }\n      slices.push({value, color, title});\n    }\n\n    // In case of self time, first add self, then children of the same category.\n    if (selfCategory) {\n      if (selfTime) {\n        appendLegendRow(\n            selfCategory.name, i18nString(UIStrings.sSelf, {PH1: selfCategory.title}), selfTime, selfCategory.color);\n      }\n      // Children of the same category.\n      const categoryTime = aggregatedStats[selfCategory.name];\n      const value = categoryTime - (selfTime || 0);\n      if (value > 0) {\n        appendLegendRow(\n            selfCategory.name, i18nString(UIStrings.sChildren, {PH1: selfCategory.title}), value,\n            selfCategory.childColor);\n      }\n    }\n\n    // Add other categories.\n    for (const categoryName in TimelineUIUtils.categories()) {\n      const category = TimelineUIUtils.categories()[categoryName];\n      if (category === selfCategory) {\n        continue;\n      }\n      appendLegendRow(category.name, category.title, aggregatedStats[category.name], category.childColor);\n    }\n\n    pieChart.data = {\n      chartName: i18nString(UIStrings.timeSpentInRendering),\n      size: 110,\n      formatter: (value: number): string => i18n.TimeUtilities.preciseMillisToString(value),\n      showLegend: true,\n      total,\n      slices,\n    };\n    const pieChartContainer = element.createChild('div', 'vbox');\n    pieChartContainer.appendChild(pieChart);\n\n    return element;\n  }\n\n  static generateDetailsContentForFrame(\n      frame: TimelineModel.TimelineFrameModel.TimelineFrame,\n      filmStripFrame: SDK.FilmStripModel.Frame|null): DocumentFragment {\n    const contentHelper = new TimelineDetailsContentHelper(null, null);\n    contentHelper.addSection(i18nString(UIStrings.frame));\n\n    const duration = TimelineUIUtils.frameDuration(frame);\n    contentHelper.appendElementRow(i18nString(UIStrings.duration), duration, frame.hasWarnings());\n    contentHelper.appendTextRow(i18nString(UIStrings.cpuTime), i18n.TimeUtilities.millisToString(frame.cpuTime, true));\n    if (filmStripFrame) {\n      const filmStripPreview = document.createElement('div');\n      filmStripPreview.classList.add('timeline-filmstrip-preview');\n      void filmStripFrame.imageDataPromise()\n          .then(data => UI.UIUtils.loadImageFromData(data))\n          .then(image => image && filmStripPreview.appendChild(image));\n      contentHelper.appendElementRow('', filmStripPreview);\n      filmStripPreview.addEventListener('click', frameClicked.bind(null, filmStripFrame), false);\n    }\n\n    if (frame.layerTree) {\n      contentHelper.appendElementRow(\n          i18nString(UIStrings.layerTree),\n          Components.Linkifier.Linkifier.linkifyRevealable(frame.layerTree, i18nString(UIStrings.show)));\n    }\n\n    function frameClicked(filmStripFrame: SDK.FilmStripModel.Frame): void {\n      new PerfUI.FilmStripView.Dialog(filmStripFrame, 0);\n    }\n\n    return contentHelper.fragment;\n  }\n\n  static frameDuration(frame: TimelineModel.TimelineFrameModel.TimelineFrame): Element {\n    const durationText = i18nString(UIStrings.sAtSParentheses, {\n      PH1: i18n.TimeUtilities.millisToString(frame.endTime - frame.startTime, true),\n      PH2: i18n.TimeUtilities.millisToString(frame.startTimeOffset, true),\n    });\n    if (!frame.hasWarnings()) {\n      return i18n.i18n.getFormatLocalizedString(str_, UIStrings.emptyPlaceholder, {PH1: durationText});\n    }\n\n    const link = UI.XLink.XLink.create(\n        'https://developers.google.com/web/fundamentals/performance/rendering/', i18nString(UIStrings.jank));\n    return i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.sLongFrameTimesAreAnIndicationOf, {PH1: durationText, PH2: link});\n  }\n\n  static createFillStyle(\n      context: CanvasRenderingContext2D, width: number, height: number, color0: string, color1: string,\n      color2: string): CanvasGradient {\n    const gradient = context.createLinearGradient(0, 0, width, height);\n    gradient.addColorStop(0, color0);\n    gradient.addColorStop(0.25, color1);\n    gradient.addColorStop(0.75, color1);\n    gradient.addColorStop(1, color2);\n    return gradient;\n  }\n\n  static quadWidth(quad: number[]): number {\n    return Math.round(Math.sqrt(Math.pow(quad[0] - quad[2], 2) + Math.pow(quad[1] - quad[3], 2)));\n  }\n\n  static quadHeight(quad: number[]): number {\n    return Math.round(Math.sqrt(Math.pow(quad[0] - quad[6], 2) + Math.pow(quad[1] - quad[7], 2)));\n  }\n\n  static eventDispatchDesciptors(): EventDispatchTypeDescriptor[] {\n    if (eventDispatchDesciptors) {\n      return eventDispatchDesciptors;\n    }\n    const lightOrange = 'hsl(40,100%,80%)';\n    const orange = 'hsl(40,100%,50%)';\n    const green = 'hsl(90,100%,40%)';\n    const purple = 'hsl(256,100%,75%)';\n    eventDispatchDesciptors = [\n      new EventDispatchTypeDescriptor(\n          1, lightOrange, ['mousemove', 'mouseenter', 'mouseleave', 'mouseout', 'mouseover']),\n      new EventDispatchTypeDescriptor(\n          1, lightOrange, ['pointerover', 'pointerout', 'pointerenter', 'pointerleave', 'pointermove']),\n      new EventDispatchTypeDescriptor(2, green, ['wheel']),\n      new EventDispatchTypeDescriptor(3, orange, ['click', 'mousedown', 'mouseup']),\n      new EventDispatchTypeDescriptor(3, orange, ['touchstart', 'touchend', 'touchmove', 'touchcancel']),\n      new EventDispatchTypeDescriptor(\n          3, orange, ['pointerdown', 'pointerup', 'pointercancel', 'gotpointercapture', 'lostpointercapture']),\n      new EventDispatchTypeDescriptor(3, purple, ['keydown', 'keyup', 'keypress']),\n    ];\n    return eventDispatchDesciptors;\n  }\n\n  static markerShortTitle(event: SDK.TracingModel.Event): string|null {\n    const recordTypes = TimelineModel.TimelineModel.RecordType;\n    switch (event.name) {\n      case recordTypes.MarkDOMContent:\n        return i18n.i18n.lockedString('DCL');\n      case recordTypes.MarkLoad:\n        return i18n.i18n.lockedString('L');\n      case recordTypes.MarkFirstPaint:\n        return i18n.i18n.lockedString('FP');\n      case recordTypes.MarkFCP:\n        return i18n.i18n.lockedString('FCP');\n      case recordTypes.MarkLCPCandidate:\n        return i18n.i18n.lockedString('LCP');\n    }\n    return null;\n  }\n\n  static markerStyleForEvent(event: SDK.TracingModel.Event): TimelineMarkerStyle {\n    const tallMarkerDashStyle = [6, 4];\n    const title = TimelineUIUtils.eventTitle(event);\n    const recordTypes = TimelineModel.TimelineModel.RecordType;\n\n    if (event.name !== recordTypes.NavigationStart &&\n        (event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.Console) ||\n         event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.UserTiming))) {\n      return {\n        title: title,\n        dashStyle: tallMarkerDashStyle,\n        lineWidth: 0.5,\n        color: event.hasCategory(TimelineModel.TimelineModel.TimelineModelImpl.Category.UserTiming) ? 'purple' :\n                                                                                                      'orange',\n        tall: false,\n        lowPriority: false,\n      };\n    }\n    let tall = false;\n    let color = 'grey';\n    switch (event.name) {\n      case recordTypes.NavigationStart:\n        color = '#FF9800';\n        tall = true;\n        break;\n      case recordTypes.FrameStartedLoading:\n        color = 'green';\n        tall = true;\n        break;\n      case recordTypes.MarkDOMContent:\n        color = '#0867CB';\n        tall = true;\n        break;\n      case recordTypes.MarkLoad:\n        color = '#B31412';\n        tall = true;\n        break;\n      case recordTypes.MarkFirstPaint:\n        color = '#228847';\n        tall = true;\n        break;\n      case recordTypes.MarkFCP:\n        color = '#1A6937';\n        tall = true;\n        break;\n      case recordTypes.MarkLCPCandidate:\n        color = '#1A3422';\n        tall = true;\n        break;\n      case recordTypes.TimeStamp:\n        color = 'orange';\n        break;\n    }\n    return {\n      title: title,\n      dashStyle: tallMarkerDashStyle,\n      lineWidth: 0.5,\n      color: color,\n      tall: tall,\n      lowPriority: false,\n    };\n  }\n\n  static markerStyleForFrame(): TimelineMarkerStyle {\n    return {\n      title: i18nString(UIStrings.frame),\n      color: 'rgba(100, 100, 100, 0.4)',\n      lineWidth: 3,\n      dashStyle: [3],\n      tall: true,\n      lowPriority: true,\n    };\n  }\n\n  static colorForId(id: string): string {\n    if (!colorGenerator) {\n      colorGenerator =\n          new Common.Color.Generator({min: 30, max: 330, count: undefined}, {min: 50, max: 80, count: 3}, 85);\n      colorGenerator.setColorForID('', '#f2ecdc');\n    }\n    return colorGenerator.colorForID(id);\n  }\n\n  static eventWarning(event: SDK.TracingModel.Event, warningType?: string): Element|null {\n    const timelineData = TimelineModel.TimelineModel.TimelineData.forEvent(event);\n    const warning = warningType || timelineData.warning;\n    if (!warning) {\n      return null;\n    }\n    const warnings = TimelineModel.TimelineModel.TimelineModelImpl.WarningType;\n    const span = document.createElement('span');\n    const eventData = event.args['data'];\n\n    switch (warning) {\n      case warnings.ForcedStyle:\n      case warnings.ForcedLayout: {\n        const forcedReflowLink = UI.XLink.XLink.create(\n            'https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid-forced-synchronous-layouts',\n            i18nString(UIStrings.forcedReflow));\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sIsALikelyPerformanceBottleneck, {PH1: forcedReflowLink}));\n        break;\n      }\n\n      case warnings.IdleDeadlineExceeded: {\n        const exceededMs =\n            i18n.TimeUtilities.millisToString((event.duration || 0) - eventData['allottedMilliseconds'], true);\n        span.textContent = i18nString(UIStrings.idleCallbackExecutionExtended, {PH1: exceededMs});\n        break;\n      }\n\n      case warnings.LongHandler: {\n        span.textContent =\n            i18nString(UIStrings.handlerTookS, {PH1: i18n.TimeUtilities.millisToString((event.duration || 0), true)});\n        break;\n      }\n\n      case warnings.LongRecurringHandler: {\n        span.textContent = i18nString(\n            UIStrings.recurringHandlerTookS, {PH1: i18n.TimeUtilities.millisToString((event.duration || 0), true)});\n        break;\n      }\n\n      case warnings.LongTask: {\n        const longTaskLink =\n            UI.XLink.XLink.create('https://web.dev/rail/#goals-and-guidelines', i18nString(UIStrings.longTask));\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sTookS,\n            {PH1: longTaskLink, PH2: i18n.TimeUtilities.millisToString((event.duration || 0), true)}));\n        break;\n      }\n\n      case warnings.V8Deopt: {\n        span.appendChild(UI.XLink.XLink.create(\n            'https://github.com/GoogleChrome/devtools-docs/issues/53', i18nString(UIStrings.notOptimized)));\n        UI.UIUtils.createTextChild(span, i18nString(UIStrings.emptyPlaceholderColon, {PH1: eventData['deoptReason']}));\n        break;\n      }\n\n      default: {\n        console.assert(false, 'Unhandled TimelineModel.WarningType');\n      }\n    }\n    return span;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static displayNameForFrame(frame: TimelineModel.TimelineModel.PageFrame, trimAt?: number): any {\n    const url = frame.url;\n    if (!trimAt) {\n      trimAt = 30;\n    }\n    return url.startsWith('about:') ? `\"${Platform.StringUtilities.trimMiddle(frame.name, trimAt)}\"` :\n                                      frame.url.trimEnd(trimAt);\n  }\n}\n\nexport class TimelineRecordStyle {\n  title: string;\n  category: TimelineCategory;\n  hidden: boolean;\n\n  constructor(title: string, category: TimelineCategory, hidden: boolean|undefined = false) {\n    this.title = title;\n    this.category = category;\n    this.hidden = hidden;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum NetworkCategory {\n  HTML = 'HTML',\n  Script = 'Script',\n  Style = 'Style',\n  Media = 'Media',\n  Other = 'Other',\n}\n\nexport const aggregatedStatsKey = Symbol('aggregatedStats');\n\nexport class InvalidationsGroupElement extends UI.TreeOutline.TreeElement {\n  toggleOnClick: boolean;\n  private readonly relatedNodesMap: Map<number, SDK.DOMModel.DOMNode|null>|null;\n  private readonly contentHelper: TimelineDetailsContentHelper;\n  private readonly invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[];\n\n  constructor(\n      target: SDK.Target.Target, relatedNodesMap: Map<number, SDK.DOMModel.DOMNode|null>|null,\n      contentHelper: TimelineDetailsContentHelper,\n      invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[]) {\n    super('', true);\n\n    this.listItemElement.classList.add('header');\n    this.selectable = false;\n    this.toggleOnClick = true;\n\n    this.relatedNodesMap = relatedNodesMap;\n    this.contentHelper = contentHelper;\n    this.invalidations = invalidations;\n    this.title = this.createTitle(target);\n  }\n\n  private createTitle(target: SDK.Target.Target): Element {\n    const first = this.invalidations[0];\n    const reason = first.cause.reason || i18nString(UIStrings.unknownCause);\n    const topFrame = first.cause.stackTrace && first.cause.stackTrace[0];\n\n    const truncatedNodesElement = this.getTruncatedNodesElement(this.invalidations);\n    if (truncatedNodesElement === null) {\n      return i18n.i18n.getFormatLocalizedString(str_, UIStrings.emptyPlaceholder, {PH1: reason});\n    }\n\n    const title = i18n.i18n.getFormatLocalizedString(str_, UIStrings.sForS, {PH1: reason, PH2: truncatedNodesElement});\n\n    if (topFrame && this.contentHelper.linkifier()) {\n      const stack = document.createElement('span');\n      stack.classList.add('monospace');\n      const completeTitle = i18n.i18n.getFormatLocalizedString(str_, UIStrings.sSDot, {PH1: title, PH2: stack});\n      stack.createChild('span').textContent = TimelineUIUtils.frameDisplayName(topFrame);\n      const linkifier = this.contentHelper.linkifier();\n      if (linkifier) {\n        const link =\n            linkifier.maybeLinkifyConsoleCallFrame(target, topFrame, {showColumnNumber: true, inlineFrameIndex: 0});\n        if (link) {\n          // Linkifier is using a workaround with the 'zero width space' (\\u200b).\n          // TODO(szuend): Remove once the Linkifier is no longer using the workaround.\n          if (!link.textContent || link.textContent === '\\u200b') {\n            link.textContent = i18nString(UIStrings.unknown);\n          }\n          stack.createChild('span').textContent = ' @ ';\n          stack.createChild('span').appendChild(link);\n        }\n      }\n      return completeTitle;\n    }\n\n    return title;\n  }\n\n  async onpopulate(): Promise<void> {\n    const content = document.createElement('div');\n    content.classList.add('content');\n\n    const first = this.invalidations[0];\n    if (first.cause.stackTrace) {\n      const stack = content.createChild('div');\n      UI.UIUtils.createTextChild(stack, i18nString(UIStrings.stackTraceColon));\n      this.contentHelper.createChildStackTraceElement(\n          stack, TimelineUIUtils.stackTraceFromCallFrames(first.cause.stackTrace));\n    }\n\n    UI.UIUtils.createTextChild(\n        content, this.invalidations.length !== 1 ? i18nString(UIStrings.nodes) : i18nString(UIStrings.node));\n    const nodeList = content.createChild('div', 'node-list');\n    let firstNode = true;\n    for (let i = 0; i < this.invalidations.length; i++) {\n      const invalidation = this.invalidations[i];\n      const invalidationNode = this.createInvalidationNode(invalidation, true);\n      if (invalidationNode) {\n        if (!firstNode) {\n          UI.UIUtils.createTextChild(nodeList, ', ');\n        }\n        firstNode = false;\n\n        nodeList.appendChild(invalidationNode);\n\n        const extraData = invalidation.extraData ? ', ' + invalidation.extraData : '';\n        if (invalidation.changedId) {\n          UI.UIUtils.createTextChild(\n              nodeList, i18nString(UIStrings.changedIdToSs, {PH1: invalidation.changedId, PH2: extraData}));\n        } else if (invalidation.changedClass) {\n          UI.UIUtils.createTextChild(\n              nodeList, i18nString(UIStrings.changedClassToSs, {PH1: invalidation.changedClass, PH2: extraData}));\n        } else if (invalidation.changedAttribute) {\n          UI.UIUtils.createTextChild(\n              nodeList,\n              i18nString(UIStrings.changedAttributeToSs, {PH1: invalidation.changedAttribute, PH2: extraData}));\n        } else if (invalidation.changedPseudo) {\n          UI.UIUtils.createTextChild(\n              nodeList, i18nString(UIStrings.changedPesudoToSs, {PH1: invalidation.changedPseudo, PH2: extraData}));\n        } else if (invalidation.selectorPart) {\n          UI.UIUtils.createTextChild(\n              nodeList, i18nString(UIStrings.changedSs, {PH1: invalidation.selectorPart, extraData}));\n        }\n      }\n    }\n\n    const contentTreeElement = new UI.TreeOutline.TreeElement(content, false);\n    contentTreeElement.selectable = false;\n    this.appendChild(contentTreeElement);\n  }\n\n  private getTruncatedNodesElement(invalidations: TimelineModel.TimelineModel.InvalidationTrackingEvent[]): Element\n      |null {\n    const invalidationNodes = [];\n    const invalidationNodeIdMap: {\n      [x: number]: boolean,\n    } = {};\n    for (let i = 0; i < invalidations.length; i++) {\n      const invalidation = invalidations[i];\n      const invalidationNode = this.createInvalidationNode(invalidation, false);\n      invalidationNode.addEventListener(\n          'click',\n\n          (evt: Event) => evt.consume(), false);\n      if (invalidationNode && invalidation.nodeId && !invalidationNodeIdMap[invalidation.nodeId]) {\n        invalidationNodes.push(invalidationNode);\n        invalidationNodeIdMap[invalidation.nodeId] = true;\n      }\n    }\n\n    if (invalidationNodes.length === 1) {\n      const node = invalidationNodes[0];\n      if (node instanceof HTMLSpanElement) {\n        return node;\n      }\n\n      return null;\n    }\n    if (invalidationNodes.length === 2) {\n      return i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.sAndS, {PH1: invalidationNodes[0], PH2: invalidationNodes[1]});\n    }\n    if (invalidationNodes.length === 3) {\n      return i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.sAndSOther, {PH1: invalidationNodes[0], PH2: invalidationNodes[1]});\n    }\n    if (invalidationNodes.length >= 4) {\n      return i18n.i18n.getFormatLocalizedString(\n          str_, UIStrings.sSAndSOthers,\n          {PH1: invalidationNodes[0], PH2: invalidationNodes[1], PH3: String(invalidationNodes.length - 2)});\n    }\n    return null;\n  }\n\n  private createInvalidationNode(\n      invalidation: TimelineModel.TimelineModel.InvalidationTrackingEvent, showUnknownNodes: boolean): HTMLSpanElement\n      |Text {\n    const node = (invalidation.nodeId && this.relatedNodesMap) ? this.relatedNodesMap.get(invalidation.nodeId) : null;\n    if (node) {\n      const nodeSpan = document.createElement('span');\n      void Common.Linkifier.Linkifier.linkify(node).then(link => nodeSpan.appendChild(link));\n      return nodeSpan;\n    }\n    if (invalidation.nodeName) {\n      const nodeSpan = document.createElement('span');\n      nodeSpan.textContent = invalidation.nodeName;\n      return nodeSpan;\n    }\n    if (showUnknownNodes) {\n      const nodeSpan = document.createElement('span');\n      return UI.UIUtils.createTextChild(nodeSpan, i18nString(UIStrings.UnknownNode));\n    }\n\n    throw new Error('Unable to create invalidation node');\n  }\n}\n\nexport const previewElementSymbol = Symbol('previewElement');\n\nexport class EventDispatchTypeDescriptor {\n  priority: number;\n  color: string;\n  eventTypes: string[];\n\n  constructor(priority: number, color: string, eventTypes: string[]) {\n    this.priority = priority;\n    this.color = color;\n    this.eventTypes = eventTypes;\n  }\n}\n\nexport class TimelineCategory {\n  name: string;\n  title: string;\n  visible: boolean;\n  childColor: string;\n  color: string;\n  private hiddenInternal?: boolean;\n\n  constructor(name: string, title: string, visible: boolean, childColor: string, color: string) {\n    this.name = name;\n    this.title = title;\n    this.visible = visible;\n    this.childColor = childColor;\n    this.color = color;\n    this.hidden = false;\n  }\n\n  get hidden(): boolean {\n    return Boolean(this.hiddenInternal);\n  }\n\n  set hidden(hidden: boolean) {\n    this.hiddenInternal = hidden;\n  }\n}\n\nexport class TimelineDetailsContentHelper {\n  fragment: DocumentFragment;\n  private linkifierInternal: Components.Linkifier.Linkifier|null;\n  private target: SDK.Target.Target|null;\n  element: HTMLDivElement;\n  private tableElement: HTMLElement;\n\n  constructor(target: SDK.Target.Target|null, linkifier: Components.Linkifier.Linkifier|null) {\n    this.fragment = document.createDocumentFragment();\n\n    this.linkifierInternal = linkifier;\n    this.target = target;\n\n    this.element = document.createElement('div');\n    this.element.classList.add('timeline-details-view-block');\n    this.tableElement = this.element.createChild('div', 'vbox timeline-details-chip-body');\n    this.fragment.appendChild(this.element);\n  }\n\n  addSection(title: string, swatchColor?: string): void {\n    if (!this.tableElement.hasChildNodes()) {\n      this.element.removeChildren();\n    } else {\n      this.element = document.createElement('div');\n      this.element.classList.add('timeline-details-view-block');\n      this.fragment.appendChild(this.element);\n    }\n\n    if (title) {\n      const titleElement = this.element.createChild('div', 'timeline-details-chip-title');\n      if (swatchColor) {\n        titleElement.createChild('div').style.backgroundColor = swatchColor;\n      }\n      UI.UIUtils.createTextChild(titleElement, title);\n    }\n\n    this.tableElement = this.element.createChild('div', 'vbox timeline-details-chip-body');\n    this.fragment.appendChild(this.element);\n  }\n\n  linkifier(): Components.Linkifier.Linkifier|null {\n    return this.linkifierInternal;\n  }\n\n  appendTextRow(title: string, value: string|number|boolean): void {\n    const rowElement = this.tableElement.createChild('div', 'timeline-details-view-row');\n    rowElement.createChild('div', 'timeline-details-view-row-title').textContent = title;\n    rowElement.createChild('div', 'timeline-details-view-row-value').textContent = value.toString();\n  }\n\n  appendElementRow(title: string, content: string|Node, isWarning?: boolean, isStacked?: boolean): void {\n    const rowElement = this.tableElement.createChild('div', 'timeline-details-view-row');\n    if (isWarning) {\n      rowElement.classList.add('timeline-details-warning');\n    }\n    if (isStacked) {\n      rowElement.classList.add('timeline-details-stack-values');\n    }\n    const titleElement = rowElement.createChild('div', 'timeline-details-view-row-title');\n    titleElement.textContent = title;\n    const valueElement = rowElement.createChild('div', 'timeline-details-view-row-value');\n    if (content instanceof Node) {\n      valueElement.appendChild(content);\n    } else {\n      UI.UIUtils.createTextChild(valueElement, content || '');\n    }\n  }\n\n  appendLocationRow(title: string, url: string, startLine: number, startColumn?: number): void {\n    if (!this.linkifierInternal || !this.target) {\n      return;\n    }\n\n    const options = {\n      tabStop: true,\n      columnNumber: startColumn,\n      showColumnNumber: true,\n      inlineFrameIndex: 0,\n    };\n    const link = this.linkifierInternal.maybeLinkifyScriptLocation(\n        this.target, null, url as Platform.DevToolsPath.UrlString, startLine, options);\n    if (!link) {\n      return;\n    }\n    this.appendElementRow(title, link);\n  }\n\n  appendLocationRange(title: string, url: Platform.DevToolsPath.UrlString, startLine: number, endLine?: number): void {\n    if (!this.linkifierInternal || !this.target) {\n      return;\n    }\n    const locationContent = document.createElement('span');\n    const link = this.linkifierInternal.maybeLinkifyScriptLocation(\n        this.target, null, url, startLine, {tabStop: true, inlineFrameIndex: 0});\n    if (!link) {\n      return;\n    }\n    locationContent.appendChild(link);\n    UI.UIUtils.createTextChild(\n        locationContent, Platform.StringUtilities.sprintf(' [%s\u2026%s]', startLine + 1, (endLine || 0) + 1 || ''));\n    this.appendElementRow(title, locationContent);\n  }\n\n  appendStackTrace(title: string, stackTrace: Protocol.Runtime.StackTrace): void {\n    if (!this.linkifierInternal || !this.target) {\n      return;\n    }\n\n    const rowElement = this.tableElement.createChild('div', 'timeline-details-view-row');\n    rowElement.createChild('div', 'timeline-details-view-row-title').textContent = title;\n    this.createChildStackTraceElement(rowElement, stackTrace);\n  }\n\n  createChildStackTraceElement(parentElement: Element, stackTrace: Protocol.Runtime.StackTrace): void {\n    if (!this.linkifierInternal || !this.target) {\n      return;\n    }\n    parentElement.classList.add('timeline-details-stack-values');\n    const stackTraceElement =\n        parentElement.createChild('div', 'timeline-details-view-row-value timeline-details-view-row-stack-trace');\n    const callFrameContents = Components.JSPresentationUtils.buildStackTracePreviewContents(\n        this.target, this.linkifierInternal, {stackTrace, tabStops: true});\n    stackTraceElement.appendChild(callFrameContents.element);\n  }\n\n  appendWarningRow(event: SDK.TracingModel.Event, warningType?: string): void {\n    const warning = TimelineUIUtils.eventWarning(event, warningType);\n    if (warning) {\n      this.appendElementRow(i18nString(UIStrings.warning), warning, true);\n    }\n  }\n}\n\nexport const categoryBreakdownCacheSymbol = Symbol('categoryBreakdownCache');\nexport interface TimelineMarkerStyle {\n  title: string;\n  color: string;\n  lineWidth: number;\n  dashStyle: number[];\n  tall: boolean;\n  lowPriority: boolean;\n}\n\nexport function assignLayoutShiftsToClusters(layoutShifts: readonly SDK.TracingModel.Event[]): void {\n  const gapTimeInMs = 1000;\n  const limitTimeInMs = 5000;\n  let firstTimestamp = Number.NEGATIVE_INFINITY;\n  let previousTimestamp = Number.NEGATIVE_INFINITY;\n  let currentClusterId = 0;\n  let currentClusterScore = 0;\n  let currentCluster = new Set<SDK.TracingModel.Event>();\n\n  for (const event of layoutShifts) {\n    if (event.args['data']['had_recent_input'] || event.args['data']['weighted_score_delta'] === undefined) {\n      continue;\n    }\n\n    if (event.startTime - firstTimestamp > limitTimeInMs || event.startTime - previousTimestamp > gapTimeInMs) {\n      // This means the event does not fit into the current session/cluster, so we need to start a new cluster.\n      firstTimestamp = event.startTime;\n\n      // Update all the layout shifts we found in this cluster to associate them with the cluster.\n      for (const layoutShift of currentCluster) {\n        layoutShift.args['data']['_current_cluster_score'] = currentClusterScore;\n        layoutShift.args['data']['_current_cluster_id'] = currentClusterId;\n      }\n\n      // Increment the cluster ID and reset the data.\n      currentClusterId += 1;\n      currentClusterScore = 0;\n      currentCluster = new Set();\n    }\n\n    // Store the timestamp of the previous layout shift.\n    previousTimestamp = event.startTime;\n    // Update the score of the current cluster and store this event in that cluster\n    currentClusterScore += event.args['data']['weighted_score_delta'];\n    currentCluster.add(event);\n  }\n\n  // The last cluster we find may not get closed out - so if not, update all the shifts that we associate with it.\n  for (const layoutShift of currentCluster) {\n    layoutShift.args['data']['_current_cluster_score'] = currentClusterScore;\n    layoutShift.args['data']['_current_cluster_id'] = currentClusterId;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
