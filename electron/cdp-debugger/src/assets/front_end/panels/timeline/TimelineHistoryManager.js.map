{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/TimelineHistoryManager.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport timelineHistoryManagerStyles from './timelineHistoryManager.css.js';\n\nimport type {PerformanceModel} from './PerformanceModel.js';\nimport {\n  TimelineEventOverviewCPUActivity,\n  TimelineEventOverviewNetwork,\n  TimelineEventOverviewResponsiveness,\n} from './TimelineEventOverview.js';\n\nconst UIStrings = {\n  /**\n  *@description Screen reader label for the Timeline History dropdown button\n  *@example {example.com #3} PH1\n  *@example {Show recent timeline sessions} PH2\n  */\n  currentSessionSS: 'Current Session: {PH1}. {PH2}',\n  /**\n  *@description Text that shows there is no recording\n  */\n  noRecordings: '(no recordings)',\n  /**\n  *@description Text in Timeline History Manager of the Performance panel\n  *@example {2s} PH1\n  */\n  sAgo: '({PH1} ago)',\n  /**\n  *@description Text in Timeline History Manager of the Performance panel\n  */\n  moments: 'moments',\n  /**\n   * @description Text in Timeline History Manager of the Performance panel.\n   * Placeholder is a number and the 'm' is the short form for 'minutes'.\n   * @example {2} PH1\n   */\n  sM: '{PH1} m',\n  /**\n   * @description Text in Timeline History Manager of the Performance panel.\n   * Placeholder is a number and the 'h' is the short form for 'hours'.\n   * @example {2} PH1\n   */\n  sH: '{PH1} h',\n  /**\n  *@description Text in Timeline History Manager of the Performance panel\n  *@example {example.com} PH1\n  *@example {2} PH2\n  */\n  sD: '{PH1} #{PH2}',\n  /**\n  *@description Accessible label for the timeline session selection menu\n  */\n  selectTimelineSession: 'Select Timeline Session',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineHistoryManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineHistoryManager {\n  private recordings: PerformanceModel[];\n  private readonly action: UI.ActionRegistration.Action;\n  private readonly nextNumberByDomain: Map<string, number>;\n  private readonly buttonInternal: ToolbarButton;\n  private readonly allOverviews: {\n    constructor: typeof TimelineEventOverviewResponsiveness,\n    height: number,\n  }[];\n  private totalHeight: number;\n  private enabled: boolean;\n  private lastActiveModel: PerformanceModel|null;\n  constructor() {\n    this.recordings = [];\n    this.action =\n        (UI.ActionRegistry.ActionRegistry.instance().action('timeline.show-history') as UI.ActionRegistration.Action);\n    this.nextNumberByDomain = new Map();\n    this.buttonInternal = new ToolbarButton(this.action);\n\n    UI.ARIAUtils.markAsMenuButton(this.buttonInternal.element);\n    this.clear();\n\n    this.allOverviews = [\n      {constructor: TimelineEventOverviewResponsiveness, height: 3},\n      {constructor: TimelineEventOverviewCPUActivity, height: 20},\n      {constructor: TimelineEventOverviewNetwork, height: 8},\n    ];\n    this.totalHeight = this.allOverviews.reduce((acc, entry) => acc + entry.height, 0);\n    this.enabled = true;\n    this.lastActiveModel = null;\n  }\n\n  addRecording(performanceModel: PerformanceModel): void {\n    this.lastActiveModel = performanceModel;\n    this.recordings.unshift(performanceModel);\n    this.buildPreview(performanceModel);\n    const modelTitle = this.title(performanceModel);\n    this.buttonInternal.setText(modelTitle);\n    const buttonTitle = this.action.title();\n    UI.ARIAUtils.setAccessibleName(\n        this.buttonInternal.element, i18nString(UIStrings.currentSessionSS, {PH1: modelTitle, PH2: buttonTitle}));\n    this.updateState();\n    if (this.recordings.length <= maxRecordings) {\n      return;\n    }\n    const lruModel = this.recordings.reduce((a, b) => lastUsedTime(a) < lastUsedTime(b) ? a : b);\n    this.recordings.splice(this.recordings.indexOf(lruModel), 1);\n    lruModel.dispose();\n\n    function lastUsedTime(model: PerformanceModel): number {\n      const data = TimelineHistoryManager.dataForModel(model);\n      if (!data) {\n        throw new Error('Unable to find data for model');\n      }\n      return data.lastUsed;\n    }\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n    this.updateState();\n  }\n\n  button(): ToolbarButton {\n    return this.buttonInternal;\n  }\n\n  clear(): void {\n    this.recordings.forEach(model => model.dispose());\n    this.recordings = [];\n    this.lastActiveModel = null;\n    this.updateState();\n    this.buttonInternal.setText(i18nString(UIStrings.noRecordings));\n    this.nextNumberByDomain.clear();\n  }\n\n  async showHistoryDropDown(): Promise<PerformanceModel|null> {\n    if (this.recordings.length < 2 || !this.enabled) {\n      return null;\n    }\n\n    // DropDown.show() function finishes when the dropdown menu is closed via selection or losing focus\n    const model =\n        await DropDown.show(this.recordings, (this.lastActiveModel as PerformanceModel), this.buttonInternal.element);\n    if (!model) {\n      return null;\n    }\n    const index = this.recordings.indexOf(model);\n    if (index < 0) {\n      console.assert(false, 'selected recording not found');\n      return null;\n    }\n    this.setCurrentModel(model);\n    return model;\n  }\n\n  cancelIfShowing(): void {\n    DropDown.cancelIfShowing();\n  }\n\n  navigate(direction: number): PerformanceModel|null {\n    if (!this.enabled || !this.lastActiveModel) {\n      return null;\n    }\n    const index = this.recordings.indexOf(this.lastActiveModel);\n    if (index < 0) {\n      return null;\n    }\n    const newIndex = Platform.NumberUtilities.clamp(index + direction, 0, this.recordings.length - 1);\n    const model = this.recordings[newIndex];\n    this.setCurrentModel(model);\n    return model;\n  }\n\n  private setCurrentModel(model: PerformanceModel): void {\n    const data = TimelineHistoryManager.dataForModel(model);\n    if (!data) {\n      throw new Error('Unable to find data for model');\n    }\n    data.lastUsed = Date.now();\n    this.lastActiveModel = model;\n    const modelTitle = this.title(model);\n    const buttonTitle = this.action.title();\n    this.buttonInternal.setText(modelTitle);\n    UI.ARIAUtils.setAccessibleName(\n        this.buttonInternal.element, i18nString(UIStrings.currentSessionSS, {PH1: modelTitle, PH2: buttonTitle}));\n  }\n\n  private updateState(): void {\n    this.action.setEnabled(this.recordings.length > 1 && this.enabled);\n  }\n\n  static previewElement(performanceModel: PerformanceModel): Element {\n    const data = TimelineHistoryManager.dataForModel(performanceModel);\n    if (!data) {\n      throw new Error('Unable to find data for model');\n    }\n    const startedAt = performanceModel.recordStartTime();\n    data.time.textContent =\n        startedAt ? i18nString(UIStrings.sAgo, {PH1: TimelineHistoryManager.coarseAge(startedAt)}) : '';\n    return data.preview;\n  }\n\n  private static coarseAge(time: number): string {\n    const seconds = Math.round((Date.now() - time) / 1000);\n    if (seconds < 50) {\n      return i18nString(UIStrings.moments);\n    }\n    const minutes = Math.round(seconds / 60);\n    if (minutes < 50) {\n      return i18nString(UIStrings.sM, {PH1: minutes});\n    }\n    const hours = Math.round(minutes / 60);\n    return i18nString(UIStrings.sH, {PH1: hours});\n  }\n\n  private title(performanceModel: PerformanceModel): string {\n    const data = TimelineHistoryManager.dataForModel(performanceModel);\n    if (!data) {\n      throw new Error('Unable to find data for model');\n    }\n    return data.title;\n  }\n\n  private buildPreview(performanceModel: PerformanceModel): HTMLDivElement {\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(performanceModel.timelineModel().pageURL());\n    const domain = parsedURL ? parsedURL.host : '';\n    const sequenceNumber = this.nextNumberByDomain.get(domain) || 1;\n    const title = i18nString(UIStrings.sD, {PH1: domain, PH2: sequenceNumber});\n    this.nextNumberByDomain.set(domain, sequenceNumber + 1);\n    const timeElement = document.createElement('span');\n\n    const preview = document.createElement('div');\n    preview.classList.add('preview-item');\n    preview.classList.add('vbox');\n    const data = {preview: preview, title: title, time: timeElement, lastUsed: Date.now()};\n    modelToPerformanceData.set(performanceModel, data);\n\n    preview.appendChild(this.buildTextDetails(performanceModel, title, timeElement));\n    const screenshotAndOverview = preview.createChild('div', 'hbox');\n    screenshotAndOverview.appendChild(this.buildScreenshotThumbnail(performanceModel));\n    screenshotAndOverview.appendChild(this.buildOverview(performanceModel));\n    return data.preview;\n  }\n\n  private buildTextDetails(performanceModel: PerformanceModel, title: string, timeElement: Element): Element {\n    const container = document.createElement('div');\n    container.classList.add('text-details');\n    container.classList.add('hbox');\n    const nameSpan = container.createChild('span', 'name');\n    nameSpan.textContent = title;\n    UI.ARIAUtils.setAccessibleName(nameSpan, title);\n    const tracingModel = performanceModel.tracingModel();\n    const duration =\n        i18n.TimeUtilities.millisToString(tracingModel.maximumRecordTime() - tracingModel.minimumRecordTime(), false);\n    const timeContainer = container.createChild('span', 'time');\n    timeContainer.appendChild(document.createTextNode(duration));\n    timeContainer.appendChild(timeElement);\n    return container;\n  }\n\n  private buildScreenshotThumbnail(performanceModel: PerformanceModel): Element {\n    const container = document.createElement('div');\n    container.classList.add('screenshot-thumb');\n    const thumbnailAspectRatio = 3 / 2;\n    container.style.width = this.totalHeight * thumbnailAspectRatio + 'px';\n    container.style.height = this.totalHeight + 'px';\n    const filmStripModel = performanceModel.filmStripModel();\n    const frames = filmStripModel.frames();\n    const lastFrame = frames[frames.length - 1];\n    if (!lastFrame) {\n      return container;\n    }\n    void lastFrame.imageDataPromise()\n        .then(data => UI.UIUtils.loadImageFromData(data))\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .then(image => image && container.appendChild((image as any)));\n    return container;\n  }\n\n  private buildOverview(performanceModel: PerformanceModel): Element {\n    const container = document.createElement('div');\n\n    container.style.width = previewWidth + 'px';\n    container.style.height = this.totalHeight + 'px';\n    const canvas = (container.createChild('canvas') as HTMLCanvasElement);\n    canvas.width = window.devicePixelRatio * previewWidth;\n    canvas.height = window.devicePixelRatio * this.totalHeight;\n\n    const ctx = canvas.getContext('2d');\n    let yOffset = 0;\n    for (const overview of this.allOverviews) {\n      const timelineOverview = new overview.constructor();\n      timelineOverview.setCanvasSize(previewWidth, overview.height);\n      timelineOverview.setModel(performanceModel);\n      timelineOverview.update();\n      const sourceContext = timelineOverview.context();\n      const imageData = sourceContext.getImageData(0, 0, sourceContext.canvas.width, sourceContext.canvas.height);\n      if (ctx) {\n        ctx.putImageData(imageData, 0, yOffset);\n      }\n      yOffset += overview.height * window.devicePixelRatio;\n    }\n    return container;\n  }\n\n  private static dataForModel(model: PerformanceModel): PreviewData|null {\n    return modelToPerformanceData.get(model) || null;\n  }\n}\n\nexport const maxRecordings = 5;\nexport const previewWidth = 450;\nconst modelToPerformanceData = new WeakMap<PerformanceModel, {\n  preview: Element,\n  title: string,\n  time: Element,\n  lastUsed: number,\n}>();\n\nexport class DropDown implements UI.ListControl.ListDelegate<PerformanceModel> {\n  private readonly glassPane: UI.GlassPane.GlassPane;\n  private readonly listControl: UI.ListControl.ListControl<PerformanceModel>;\n  private readonly focusRestorer: UI.UIUtils.ElementFocusRestorer;\n  private selectionDone: ((arg0: PerformanceModel|null) => void)|null;\n\n  constructor(models: PerformanceModel[]) {\n    this.glassPane = new UI.GlassPane.GlassPane();\n    this.glassPane.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n    this.glassPane.setOutsideClickCallback(() => this.close(null));\n    this.glassPane.setPointerEventsBehavior(UI.GlassPane.PointerEventsBehavior.BlockedByGlassPane);\n    this.glassPane.setAnchorBehavior(UI.GlassPane.AnchorBehavior.PreferBottom);\n    this.glassPane.element.addEventListener('blur', () => this.close(null));\n\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(this.glassPane.contentElement, {\n      cssFile: [timelineHistoryManagerStyles],\n      delegatesFocus: undefined,\n    });\n    const contentElement = shadowRoot.createChild('div', 'drop-down');\n\n    const listModel = new UI.ListModel.ListModel<PerformanceModel>();\n    this.listControl =\n        new UI.ListControl.ListControl<PerformanceModel>(listModel, this, UI.ListControl.ListMode.NonViewport);\n    this.listControl.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n    listModel.replaceAll(models);\n\n    UI.ARIAUtils.markAsMenu(this.listControl.element);\n    UI.ARIAUtils.setAccessibleName(this.listControl.element, i18nString(UIStrings.selectTimelineSession));\n    contentElement.appendChild(this.listControl.element);\n    contentElement.addEventListener('keydown', this.onKeyDown.bind(this), false);\n    contentElement.addEventListener('click', this.onClick.bind(this), false);\n\n    this.focusRestorer = new UI.UIUtils.ElementFocusRestorer(this.listControl.element);\n    this.selectionDone = null;\n  }\n\n  static show(models: PerformanceModel[], currentModel: PerformanceModel, anchor: Element):\n      Promise<PerformanceModel|null> {\n    if (DropDown.instance) {\n      return Promise.resolve((null as PerformanceModel | null));\n    }\n    const instance = new DropDown(models);\n    return instance.show(anchor, currentModel);\n  }\n\n  static cancelIfShowing(): void {\n    if (!DropDown.instance) {\n      return;\n    }\n    DropDown.instance.close(null);\n  }\n\n  private show(anchor: Element, currentModel: PerformanceModel): Promise<PerformanceModel|null> {\n    DropDown.instance = this;\n    this.glassPane.setContentAnchorBox(anchor.boxInWindow());\n    this.glassPane.show((this.glassPane.contentElement.ownerDocument as Document));\n    this.listControl.element.focus();\n    this.listControl.selectItem(currentModel);\n\n    return new Promise(fulfill => {\n      this.selectionDone = fulfill;\n    });\n  }\n\n  private onMouseMove(event: Event): void {\n    const node = (event.target as HTMLElement).enclosingNodeOrSelfWithClass('preview-item');\n    const listItem = node && this.listControl.itemForNode(node);\n    if (!listItem) {\n      return;\n    }\n    this.listControl.selectItem(listItem);\n  }\n\n  private onClick(event: Event): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    if (!(event.target).enclosingNodeOrSelfWithClass('preview-item')) {\n      return;\n    }\n    this.close(this.listControl.selectedItem());\n  }\n\n  private onKeyDown(event: Event): void {\n    switch ((event as KeyboardEvent).key) {\n      case 'Tab':\n      case 'Escape':\n        this.close(null);\n        break;\n      case 'Enter':\n        this.close(this.listControl.selectedItem());\n        break;\n      default:\n        return;\n    }\n    event.consume(true);\n  }\n\n  private close(model: PerformanceModel|null): void {\n    if (this.selectionDone) {\n      this.selectionDone(model);\n    }\n    this.focusRestorer.restore();\n    this.glassPane.hide();\n    DropDown.instance = null;\n  }\n\n  createElementForItem(item: PerformanceModel): Element {\n    const element = TimelineHistoryManager.previewElement(item);\n    UI.ARIAUtils.markAsMenuItem(element);\n    element.classList.remove('selected');\n    return element;\n  }\n\n  heightForItem(_item: PerformanceModel): number {\n    console.assert(false, 'Should not be called');\n    return 0;\n  }\n\n  isItemSelectable(_item: PerformanceModel): boolean {\n    return true;\n  }\n\n  selectedItemChanged(\n      from: PerformanceModel|null, to: PerformanceModel|null, fromElement: Element|null,\n      toElement: Element|null): void {\n    if (fromElement) {\n      fromElement.classList.remove('selected');\n    }\n    if (toElement) {\n      toElement.classList.add('selected');\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return false;\n  }\n\n  private static instance: DropDown|null = null;\n}\n\nexport class ToolbarButton extends UI.Toolbar.ToolbarItem {\n  private contentElement: HTMLElement;\n\n  constructor(action: UI.ActionRegistration.Action) {\n    const element = document.createElement('button');\n    element.classList.add('history-dropdown-button');\n    super(element);\n    this.contentElement = this.element.createChild('span', 'content');\n    const dropdownArrowIcon = UI.Icon.Icon.create('smallicon-triangle-down');\n    this.element.appendChild(dropdownArrowIcon);\n    this.element.addEventListener('click', () => void action.execute(), false);\n    this.setEnabled(action.enabled());\n    action.addEventListener(UI.ActionRegistration.Events.Enabled, event => this.setEnabled(event.data));\n    this.setTitle(action.title());\n  }\n\n  setText(text: string): void {\n    this.contentElement.textContent = text;\n  }\n}\n\nexport interface PreviewData {\n  preview: Element;\n  time: Element;\n  lastUsed: number;\n  title: string;\n}\n"],
  "mappings": "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",
  "names": []
}
