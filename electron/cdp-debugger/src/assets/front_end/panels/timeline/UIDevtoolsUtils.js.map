{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/UIDevtoolsUtils.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2019 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\n\nimport {TimelineCategory, TimelineRecordStyle} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  frameStart: 'Frame Start',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  drawFrame: 'Draw Frame',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  layout: 'Layout',\n  /**\n  *@description Text in UIDevtools Utils of the Performance panel\n  */\n  rasterizing: 'Rasterizing',\n  /**\n  *@description Text in UIDevtools Utils of the Performance panel\n  */\n  drawing: 'Drawing',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  painting: 'Painting',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  system: 'System',\n  /**\n  *@description Text in Timeline UIUtils of the Performance panel\n  */\n  idle: 'Idle',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/UIDevtoolsUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _eventStylesMap: {\n  [x: string]: TimelineRecordStyle,\n}|null = null;\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _categories: {\n  [x: string]: TimelineCategory,\n}|null = null;\n\nexport class UIDevtoolsUtils {\n  static isUiDevTools(): boolean {\n    return Root.Runtime.Runtime.queryParam('uiDevTools') === 'true';\n  }\n\n  static categorizeEvents(): {\n    [x: string]: TimelineRecordStyle,\n  } {\n    if (_eventStylesMap) {\n      return _eventStylesMap;\n    }\n\n    const type = RecordType;\n    const categories = UIDevtoolsUtils.categories();\n    const drawing = categories['drawing'];\n    const rasterizing = categories['rasterizing'];\n    const layout = categories['layout'];\n    const painting = categories['painting'];\n    const other = categories['other'];\n\n    const eventStyles: {\n      [x: string]: TimelineRecordStyle,\n    } = {};\n\n    // Paint Categories\n    eventStyles[type.ViewPaint] = new TimelineRecordStyle('View::Paint', painting);\n    eventStyles[type.ViewOnPaint] = new TimelineRecordStyle('View::OnPaint', painting);\n    eventStyles[type.ViewPaintChildren] = new TimelineRecordStyle('View::PaintChildren', painting);\n    eventStyles[type.ViewOnPaintBackground] = new TimelineRecordStyle('View::OnPaintBackground', painting);\n    eventStyles[type.ViewOnPaintBorder] = new TimelineRecordStyle('View::OnPaintBorder', painting);\n    eventStyles[type.LayerPaintContentsToDisplayList] =\n        new TimelineRecordStyle('Layer::PaintContentsToDisplayList', painting);\n\n    // Layout Categories\n    eventStyles[type.ViewLayout] = new TimelineRecordStyle('View::Layout', layout);\n    eventStyles[type.ViewLayoutBoundsChanged] = new TimelineRecordStyle('View::Layout(bounds_changed)', layout);\n\n    // Raster Categories\n    eventStyles[type.RasterTask] = new TimelineRecordStyle('RasterTask', rasterizing);\n    eventStyles[type.RasterizerTaskImplRunOnWorkerThread] =\n        new TimelineRecordStyle('RasterizerTaskImpl::RunOnWorkerThread', rasterizing);\n\n    // Draw Categories\n    eventStyles[type.DirectRendererDrawFrame] = new TimelineRecordStyle('DirectRenderer::DrawFrame', drawing);\n    eventStyles[type.BeginFrame] = new TimelineRecordStyle(i18nString(UIStrings.frameStart), drawing, true);\n    eventStyles[type.DrawFrame] = new TimelineRecordStyle(i18nString(UIStrings.drawFrame), drawing, true);\n    eventStyles[type.NeedsBeginFrameChanged] = new TimelineRecordStyle('NeedsBeginFrameChanged', drawing, true);\n\n    // Other Categories\n    eventStyles[type.ThreadControllerImplRunTask] = new TimelineRecordStyle('ThreadControllerImpl::RunTask', other);\n\n    _eventStylesMap = eventStyles;\n    return eventStyles;\n  }\n\n  static categories(): {\n    [x: string]: TimelineCategory,\n  } {\n    if (_categories) {\n      return _categories;\n    }\n    _categories = {\n      layout: new TimelineCategory(\n          'layout', i18nString(UIStrings.layout), true, 'hsl(214, 67%, 74%)', 'hsl(214, 67%, 66%)'),\n      rasterizing: new TimelineCategory(\n          'rasterizing', i18nString(UIStrings.rasterizing), true, 'hsl(43, 83%, 72%)', 'hsl(43, 83%, 64%) '),\n      drawing: new TimelineCategory(\n          'drawing', i18nString(UIStrings.drawing), true, 'hsl(256, 67%, 76%)', 'hsl(256, 67%, 70%)'),\n      painting: new TimelineCategory(\n          'painting', i18nString(UIStrings.painting), true, 'hsl(109, 33%, 64%)', 'hsl(109, 33%, 55%)'),\n      other: new TimelineCategory('other', i18nString(UIStrings.system), false, 'hsl(0, 0%, 87%)', 'hsl(0, 0%, 79%)'),\n      idle: new TimelineCategory('idle', i18nString(UIStrings.idle), false, 'hsl(0, 0%, 98%)', 'hsl(0, 0%, 98%)'),\n    };\n    return _categories;\n  }\n\n  static getMainCategoriesList(): string[] {\n    return ['idle', 'drawing', 'painting', 'rasterizing', 'layout', 'other'];\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum RecordType {\n  ViewPaint = 'View::Paint',\n  ViewOnPaint = 'View::OnPaint',\n  ViewPaintChildren = 'View::PaintChildren',\n  ViewOnPaintBackground = 'View::OnPaintBackground',\n  ViewOnPaintBorder = 'View::OnPaintBorder',\n  ViewLayout = 'View::Layout',\n  ViewLayoutBoundsChanged = 'View::Layout(bounds_changed)',\n  LayerPaintContentsToDisplayList = 'Layer::PaintContentsToDisplayList',\n  DirectRendererDrawFrame = 'DirectRenderer::DrawFrame',\n  RasterTask = 'RasterTask',\n  RasterizerTaskImplRunOnWorkerThread = 'RasterizerTaskImpl::RunOnWorkerThread',\n  BeginFrame = 'BeginFrame',\n  DrawFrame = 'DrawFrame',\n  NeedsBeginFrameChanged = 'NeedsBeginFrameChanged',\n  ThreadControllerImplRunTask = 'ThreadControllerImpl::RunTask',\n}\n"],
  "mappings": "AA8BA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,YAAY;AAAA,EAIZ,WAAW;AAAA,EAIX,QAAQ;AAAA,EAIR,aAAa;AAAA,EAIb,SAAS;AAAA,EAIT,UAAU;AAAA,EAIV,QAAQ;AAAA,EAIR,MAAM;AAAA;AAER,MAAM,OAAO,KAAK,KAAK,kBAAkB,sCAAsC;AAC/E,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAGhE,IAAI,kBAEK;AAIT,IAAI,cAEK;AAEF,6BAAsB;AAAA,SACpB,eAAwB;AAC7B,WAAO,KAAK,QAAQ,QAAQ,WAAW,kBAAkB;AAAA;AAAA,SAGpD,mBAEL;AACA,QAAI,iBAAiB;AACnB,aAAO;AAAA;AAGT,UAAM,OAAO;AACb,UAAM,aAAa,gBAAgB;AACnC,UAAM,UAAU,WAAW;AAC3B,UAAM,cAAc,WAAW;AAC/B,UAAM,SAAS,WAAW;AAC1B,UAAM,WAAW,WAAW;AAC5B,UAAM,QAAQ,WAAW;AAEzB,UAAM,cAEF;AAGJ,gBAAY,KAAK,aAAa,IAAI,oBAAoB,eAAe;AACrE,gBAAY,KAAK,eAAe,IAAI,oBAAoB,iBAAiB;AACzE,gBAAY,KAAK,qBAAqB,IAAI,oBAAoB,uBAAuB;AACrF,gBAAY,KAAK,yBAAyB,IAAI,oBAAoB,2BAA2B;AAC7F,gBAAY,KAAK,qBAAqB,IAAI,oBAAoB,uBAAuB;AACrF,gBAAY,KAAK,mCACb,IAAI,oBAAoB,qCAAqC;AAGjE,gBAAY,KAAK,cAAc,IAAI,oBAAoB,gBAAgB;AACvE,gBAAY,KAAK,2BAA2B,IAAI,oBAAoB,gCAAgC;AAGpG,gBAAY,KAAK,cAAc,IAAI,oBAAoB,cAAc;AACrE,gBAAY,KAAK,uCACb,IAAI,oBAAoB,yCAAyC;AAGrE,gBAAY,KAAK,2BAA2B,IAAI,oBAAoB,6BAA6B;AACjG,gBAAY,KAAK,cAAc,IAAI,oBAAoB,WAAW,UAAU,aAAa,SAAS;AAClG,gBAAY,KAAK,aAAa,IAAI,oBAAoB,WAAW,UAAU,YAAY,SAAS;AAChG,gBAAY,KAAK,0BAA0B,IAAI,oBAAoB,0BAA0B,SAAS;AAGtG,gBAAY,KAAK,+BAA+B,IAAI,oBAAoB,iCAAiC;AAEzG,sBAAkB;AAClB,WAAO;AAAA;AAAA,SAGF,aAEL;AACA,QAAI,aAAa;AACf,aAAO;AAAA;AAET,kBAAc;AAAA,MACZ,QAAQ,IAAI,iBACR,UAAU,WAAW,UAAU,SAAS,MAAM,sBAAsB;AAAA,MACxE,aAAa,IAAI,iBACb,eAAe,WAAW,UAAU,cAAc,MAAM,qBAAqB;AAAA,MACjF,SAAS,IAAI,iBACT,WAAW,WAAW,UAAU,UAAU,MAAM,sBAAsB;AAAA,MAC1E,UAAU,IAAI,iBACV,YAAY,WAAW,UAAU,WAAW,MAAM,sBAAsB;AAAA,MAC5E,OAAO,IAAI,iBAAiB,SAAS,WAAW,UAAU,SAAS,OAAO,mBAAmB;AAAA,MAC7F,MAAM,IAAI,iBAAiB,QAAQ,WAAW,UAAU,OAAO,OAAO,mBAAmB;AAAA;AAE3F,WAAO;AAAA;AAAA,SAGF,wBAAkC;AACvC,WAAO,CAAC,QAAQ,WAAW,YAAY,eAAe,UAAU;AAAA;AAAA;AAM7D,WAAK,aAAL,kBAAK,gBAAL;AACL,6BAAY;AACZ,+BAAc;AACd,qCAAoB;AACpB,yCAAwB;AACxB,qCAAoB;AACpB,8BAAa;AACb,2CAA0B;AAC1B,mDAAkC;AAClC,2CAA0B;AAC1B,8BAAa;AACb,uDAAsC;AACtC,8BAAa;AACb,6BAAY;AACZ,0CAAyB;AACzB,+CAA8B;AAfpB;AAAA;",
  "names": []
}
