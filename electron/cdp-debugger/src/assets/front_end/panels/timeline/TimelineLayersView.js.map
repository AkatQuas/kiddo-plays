{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/timeline/TimelineLayersView.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\n\nexport class TimelineLayersView extends UI.SplitWidget.SplitWidget {\n  private readonly model: TimelineModel.TimelineModel.TimelineModelImpl;\n  private readonly showPaintProfilerCallback: (arg0: SDK.PaintProfiler.PaintProfilerSnapshot) => void;\n  private readonly rightSplitWidget: UI.SplitWidget.SplitWidget;\n  private readonly layerViewHost: LayerViewer.LayerViewHost.LayerViewHost;\n  private readonly layers3DView: LayerViewer.Layers3DView.Layers3DView;\n  private frameLayerTree?: TimelineModel.TimelineFrameModel.TracingFrameLayerTree;\n  private updateWhenVisible?: boolean;\n  constructor(\n      model: TimelineModel.TimelineModel.TimelineModelImpl,\n      showPaintProfilerCallback: (arg0: SDK.PaintProfiler.PaintProfilerSnapshot) => void) {\n    super(true, false, 'timelineLayersView');\n    this.model = model;\n    this.showPaintProfilerCallback = showPaintProfilerCallback;\n\n    this.element.classList.add('timeline-layers-view');\n    this.rightSplitWidget = new UI.SplitWidget.SplitWidget(true, true, 'timelineLayersViewDetails');\n    this.rightSplitWidget.element.classList.add('timeline-layers-view-properties');\n    this.setMainWidget(this.rightSplitWidget);\n\n    const vbox = new UI.Widget.VBox();\n    this.setSidebarWidget(vbox);\n\n    this.layerViewHost = new LayerViewer.LayerViewHost.LayerViewHost();\n\n    const layerTreeOutline = new LayerViewer.LayerTreeOutline.LayerTreeOutline(this.layerViewHost);\n    vbox.element.appendChild(layerTreeOutline.element);\n\n    this.layers3DView = new LayerViewer.Layers3DView.Layers3DView(this.layerViewHost);\n    this.layers3DView.addEventListener(\n        LayerViewer.Layers3DView.Events.PaintProfilerRequested, this.onPaintProfilerRequested, this);\n    this.rightSplitWidget.setMainWidget(this.layers3DView);\n\n    const layerDetailsView = new LayerViewer.LayerDetailsView.LayerDetailsView(this.layerViewHost);\n    this.rightSplitWidget.setSidebarWidget(layerDetailsView);\n    layerDetailsView.addEventListener(\n        LayerViewer.LayerDetailsView.Events.PaintProfilerRequested, this.onPaintProfilerRequested, this);\n  }\n\n  showLayerTree(frameLayerTree: TimelineModel.TimelineFrameModel.TracingFrameLayerTree): void {\n    this.frameLayerTree = frameLayerTree;\n    if (this.isShowing()) {\n      this.update();\n    } else {\n      this.updateWhenVisible = true;\n    }\n  }\n\n  wasShown(): void {\n    if (this.updateWhenVisible) {\n      this.updateWhenVisible = false;\n      this.update();\n    }\n  }\n\n  private async onPaintProfilerRequested(\n      event: Common.EventTarget.EventTargetEvent<LayerViewer.LayerViewHost.Selection>): Promise<void> {\n    const selection = event.data;\n    const snapshotWithRect = await this.layers3DView.snapshotForSelection(selection);\n    if (snapshotWithRect) {\n      this.showPaintProfilerCallback(snapshotWithRect.snapshot);\n    }\n  }\n\n  private update(): void {\n    if (this.frameLayerTree) {\n      void this.frameLayerTree.layerTreePromise().then(layerTree => this.layerViewHost.setLayerTree(layerTree));\n    }\n  }\n}\n"],
  "mappings": "AAOA;AACA;AAEO,wCAAiC,GAAG,YAAY,YAAY;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACT;AAAA,EACA;AAAA,EACR,YACI,OACA,2BAAoF;AACtF,UAAM,MAAM,OAAO;AACnB,SAAK,QAAQ;AACb,SAAK,4BAA4B;AAEjC,SAAK,QAAQ,UAAU,IAAI;AAC3B,SAAK,mBAAmB,IAAI,GAAG,YAAY,YAAY,MAAM,MAAM;AACnE,SAAK,iBAAiB,QAAQ,UAAU,IAAI;AAC5C,SAAK,cAAc,KAAK;AAExB,UAAM,OAAO,IAAI,GAAG,OAAO;AAC3B,SAAK,iBAAiB;AAEtB,SAAK,gBAAgB,IAAI,YAAY,cAAc;AAEnD,UAAM,mBAAmB,IAAI,YAAY,iBAAiB,iBAAiB,KAAK;AAChF,SAAK,QAAQ,YAAY,iBAAiB;AAE1C,SAAK,eAAe,IAAI,YAAY,aAAa,aAAa,KAAK;AACnE,SAAK,aAAa,iBACd,YAAY,aAAa,OAAO,wBAAwB,KAAK,0BAA0B;AAC3F,SAAK,iBAAiB,cAAc,KAAK;AAEzC,UAAM,mBAAmB,IAAI,YAAY,iBAAiB,iBAAiB,KAAK;AAChF,SAAK,iBAAiB,iBAAiB;AACvC,qBAAiB,iBACb,YAAY,iBAAiB,OAAO,wBAAwB,KAAK,0BAA0B;AAAA;AAAA,EAGjG,cAAc,gBAA8E;AAC1F,SAAK,iBAAiB;AACtB,QAAI,KAAK,aAAa;AACpB,WAAK;AAAA,WACA;AACL,WAAK,oBAAoB;AAAA;AAAA;AAAA,EAI7B,WAAiB;AACf,QAAI,KAAK,mBAAmB;AAC1B,WAAK,oBAAoB;AACzB,WAAK;AAAA;AAAA;AAAA,QAIK,yBACV,OAAgG;AAClG,UAAM,YAAY,MAAM;AACxB,UAAM,mBAAmB,MAAM,KAAK,aAAa,qBAAqB;AACtE,QAAI,kBAAkB;AACpB,WAAK,0BAA0B,iBAAiB;AAAA;AAAA;AAAA,EAI5C,SAAe;AACrB,QAAI,KAAK,gBAAgB;AACvB,WAAK,KAAK,eAAe,mBAAmB,KAAK,eAAa,KAAK,cAAc,aAAa;AAAA;AAAA;AAAA;",
  "names": []
}
