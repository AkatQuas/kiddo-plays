{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/CSSPlugin.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport type * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {assertNotNullOrUndefined} from '../../core/platform/platform.js';\nimport {Plugin} from './Plugin.js';\n\n// Plugin to add CSS completion, shortcuts, and color/curve swatches\n// to editors with CSS content.\n\nconst UIStrings = {\n  /**\n  *@description Swatch icon element title in CSSPlugin of the Sources panel\n  */\n  openColorPicker: 'Open color picker.',\n  /**\n  *@description Text to open the cubic bezier editor\n  */\n  openCubicBezierEditor: 'Open cubic bezier editor.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/CSSPlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst dontCompleteIn = new Set(['ColorLiteral', 'NumberLiteral', 'StringLiteral', 'Comment', 'Important']);\n\nfunction findPropertyAt(node: CodeMirror.SyntaxNode, pos: number): CodeMirror.SyntaxNode|null {\n  if (dontCompleteIn.has(node.name)) {\n    return null;\n  }\n  for (let cur: CodeMirror.SyntaxNode|null = node; cur; cur = cur.parent) {\n    if (cur.name === 'StyleSheet') {\n      break;\n    } else if (cur.name === 'Declaration') {\n      const name = cur.getChild('PropertyName'), colon = cur.getChild(':');\n      return name && colon && colon.to <= pos ? name : null;\n    }\n  }\n  return null;\n}\n\nfunction getCurrentStyleSheet(\n    url: Platform.DevToolsPath.UrlString, cssModel: SDK.CSSModel.CSSModel): Protocol.CSS.StyleSheetId {\n  const currentStyleSheet = cssModel.getStyleSheetIdsForURL(url);\n  if (currentStyleSheet.length === 0) {\n    Platform.DCHECK(() => currentStyleSheet.length !== 0, 'Can\\'t find style sheet ID for current URL');\n  }\n\n  return currentStyleSheet[0];\n}\n\nasync function specificCssCompletion(\n    cx: CodeMirror.CompletionContext, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n    cssModel: SDK.CSSModel.CSSModel|undefined): Promise<CodeMirror.CompletionResult|null> {\n  const node = CodeMirror.syntaxTree(cx.state).resolveInner(cx.pos, -1);\n  if (node.name === 'ClassName') {\n    // Should never happen, but let's code defensively here\n    assertNotNullOrUndefined(cssModel);\n\n    const currentStyleSheet = getCurrentStyleSheet(uiSourceCode.url(), cssModel);\n    const existingClassNames = await cssModel.getClassNames(currentStyleSheet);\n\n    return {\n      from: node.from,\n      options: existingClassNames.map(value => ({type: 'constant', label: value})),\n    };\n  }\n  const property = findPropertyAt(node, cx.pos);\n  if (property) {\n    const propertyValues =\n        SDK.CSSMetadata.cssMetadata().getPropertyValues(cx.state.sliceDoc(property.from, property.to));\n    return {\n      from: node.name === 'ValueName' ? node.from : cx.pos,\n      options: propertyValues.map(value => ({type: 'constant', label: value})),\n      validFor: /^[\\w\\P{ASCII}\\-]+$/u,\n    };\n  }\n  return null;\n}\n\nfunction findColorsAndCurves(\n    state: CodeMirror.EditorState,\n    from: number,\n    to: number,\n    onColor: (pos: number, color: Common.Color.Color, text: string) => void,\n    onCurve: (pos: number, curve: UI.Geometry.CubicBezier, text: string) => void,\n    ): void {\n  let line = state.doc.lineAt(from);\n  function getToken(from: number, to: number): string {\n    if (from >= line.to) {\n      line = state.doc.lineAt(from);\n    }\n    return line.text.slice(from - line.from, to - line.from);\n  }\n\n  const tree = CodeMirror.ensureSyntaxTree(state, to, 100);\n  if (!tree) {\n    return;\n  }\n  tree.iterate({\n    from,\n    to,\n    enter: node => {\n      let content;\n      if (node.name === 'ValueName' || node.name === 'ColorLiteral') {\n        content = getToken(node.from, node.to);\n      } else if (node.name === 'Callee' && /^(?:(?:rgb|hsl)a?|cubic-bezier)$/.test(getToken(node.from, node.to))) {\n        content = state.sliceDoc(node.from, (node.node.parent as CodeMirror.SyntaxNode).to);\n      }\n      if (content) {\n        const parsedColor = Common.Color.Color.parse(content);\n        if (parsedColor) {\n          onColor(from, parsedColor, content);\n        } else {\n          const parsedCurve = UI.Geometry.CubicBezier.parse(content);\n          if (parsedCurve) {\n            onCurve(from, parsedCurve, content);\n          }\n        }\n      }\n    },\n  });\n}\n\nclass ColorSwatchWidget extends CodeMirror.WidgetType {\n  constructor(readonly color: Common.Color.Color, readonly text: string) {\n    super();\n  }\n\n  eq(other: ColorSwatchWidget): boolean {\n    return this.color.equal(other.color) && this.text === other.text;\n  }\n\n  toDOM(view: CodeMirror.EditorView): HTMLElement {\n    const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    swatch.renderColor(this.color, false, i18nString(UIStrings.openColorPicker));\n    const value = swatch.createChild('span');\n    value.textContent = this.text;\n    value.setAttribute('hidden', 'true');\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, event => {\n      event.consume(true);\n      view.dispatch({\n        effects: setTooltip.of({\n          type: TooltipType.Color,\n          pos: view.posAtDOM(swatch),\n          text: this.text,\n          swatch,\n          color: this.color,\n        }),\n      });\n    });\n    return swatch;\n  }\n\n  ignoreEvent(): boolean {\n    return true;\n  }\n}\n\nclass CurveSwatchWidget extends CodeMirror.WidgetType {\n  constructor(readonly curve: UI.Geometry.CubicBezier, readonly text: string) {\n    super();\n  }\n\n  eq(other: CurveSwatchWidget): boolean {\n    return this.curve.asCSSText() === other.curve.asCSSText() && this.text === other.text;\n  }\n\n  toDOM(view: CodeMirror.EditorView): HTMLElement {\n    const swatch = InlineEditor.Swatches.BezierSwatch.create();\n    swatch.setBezierText(this.text);\n    UI.Tooltip.Tooltip.install(swatch.iconElement(), i18nString(UIStrings.openCubicBezierEditor));\n    swatch.iconElement().addEventListener('click', (event: MouseEvent) => {\n      event.consume(true);\n      view.dispatch({\n        effects: setTooltip.of({\n          type: TooltipType.Curve,\n          pos: view.posAtDOM(swatch),\n          text: this.text,\n          swatch,\n          curve: this.curve,\n        }),\n      });\n    }, false);\n    swatch.hideText(true);\n    return swatch;\n  }\n\n  ignoreEvent(): boolean {\n    return true;\n  }\n}\n\nconst enum TooltipType {\n  Color = 0,\n  Curve = 1,\n}\n\ntype ActiveTooltip = {\n  type: TooltipType.Color,\n  pos: number,\n  text: string,\n  color: Common.Color.Color,\n  swatch: InlineEditor.ColorSwatch.ColorSwatch,\n}|{\n  type: TooltipType.Curve,\n  pos: number,\n  text: string,\n  curve: UI.Geometry.CubicBezier,\n  swatch: InlineEditor.Swatches.BezierSwatch,\n};\n\nfunction createCSSTooltip(active: ActiveTooltip): CodeMirror.Tooltip {\n  return {\n    pos: active.pos,\n    arrow: true,\n    create(view): CodeMirror.TooltipView {\n      let text = active.text;\n      let widget: UI.Widget.VBox, addListener: (handler: (event: {data: string}) => void) => void;\n      if (active.type === TooltipType.Color) {\n        const spectrum = new ColorPicker.Spectrum.Spectrum();\n        addListener = (handler): void => {\n          spectrum.addEventListener(ColorPicker.Spectrum.Events.ColorChanged, handler);\n        };\n        spectrum.addEventListener(ColorPicker.Spectrum.Events.SizeChanged, () => view.requestMeasure());\n        spectrum.setColor(active.color, active.color.format());\n        widget = spectrum;\n      } else {\n        const spectrum = new InlineEditor.BezierEditor.BezierEditor(active.curve);\n        widget = spectrum;\n        addListener = (handler): void => {\n          spectrum.addEventListener(InlineEditor.BezierEditor.Events.BezierChanged, handler);\n        };\n      }\n      const dom = document.createElement('div');\n      dom.className = 'cm-tooltip-swatchEdit';\n      widget.markAsRoot();\n      widget.show(dom);\n      widget.showWidget();\n      widget.element.addEventListener('keydown', event => {\n        if (event.key === 'Escape') {\n          event.consume();\n          view.dispatch({\n            effects: setTooltip.of(null),\n            changes: text === active.text ? undefined :\n                                            {from: active.pos, to: active.pos + text.length, insert: active.text},\n          });\n          widget.hideWidget();\n          view.focus();\n        }\n      });\n      widget.element.addEventListener('focusout', event => {\n        if (event.relatedTarget && !widget.element.contains(event.relatedTarget as Node)) {\n          view.dispatch({effects: setTooltip.of(null)});\n          widget.hideWidget();\n        }\n      }, false);\n      widget.element.addEventListener('mousedown', event => event.consume());\n      return {\n        dom,\n        offset: {x: -8, y: 0},\n        mount: (): void => {\n          widget.focus();\n          widget.wasShown();\n          addListener((event: {data: string}): void => {\n            view.dispatch({\n              changes: {from: active.pos, to: active.pos + text.length, insert: event.data},\n              annotations: isSwatchEdit.of(true),\n            });\n            text = event.data;\n          });\n        },\n      };\n    },\n  };\n}\n\nconst setTooltip = CodeMirror.StateEffect.define<ActiveTooltip|null>();\n\nconst isSwatchEdit = CodeMirror.Annotation.define<boolean>();\n\nconst cssTooltipState = CodeMirror.StateField.define<ActiveTooltip|null>({\n  create() {\n    return null;\n  },\n\n  update(value: ActiveTooltip|null, tr: CodeMirror.Transaction): ActiveTooltip |\n      null {\n        if ((tr.docChanged || tr.selection) && !tr.annotation(isSwatchEdit)) {\n          value = null;\n        }\n        for (const effect of tr.effects) {\n          if (effect.is(setTooltip)) {\n            value = effect.value;\n          }\n        }\n        return value;\n      },\n\n  provide: field => CodeMirror.showTooltip.from(field, active => active && createCSSTooltip(active)),\n});\n\nfunction computeSwatchDeco(state: CodeMirror.EditorState, from: number, to: number): CodeMirror.DecorationSet {\n  const builder = new CodeMirror.RangeSetBuilder<CodeMirror.Decoration>();\n  findColorsAndCurves(\n      state, from, to,\n      (pos, color, text) => {\n        builder.add(pos, pos, CodeMirror.Decoration.widget({widget: new ColorSwatchWidget(color, text)}));\n      },\n      (pos, curve, text) => {\n        builder.add(pos, pos, CodeMirror.Decoration.widget({widget: new CurveSwatchWidget(curve, text)}));\n      });\n  return builder.finish();\n}\n\nconst cssSwatchPlugin = CodeMirror.ViewPlugin.fromClass(class {\n  decorations: CodeMirror.DecorationSet;\n\n  constructor(view: CodeMirror.EditorView) {\n    this.decorations = computeSwatchDeco(view.state, view.viewport.from, view.viewport.to);\n  }\n\n  update(update: CodeMirror.ViewUpdate): void {\n    if (update.viewportChanged || update.docChanged) {\n      this.decorations = computeSwatchDeco(update.state, update.view.viewport.from, update.view.viewport.to);\n    }\n  }\n}, {\n  decorations: v => v.decorations,\n});\n\nfunction cssSwatches(): CodeMirror.Extension {\n  return [cssSwatchPlugin, cssTooltipState];\n}\n\nfunction getNumberAt(node: CodeMirror.SyntaxNode): {from: number, to: number}|null {\n  if (node.name === 'Unit') {\n    node = node.parent as CodeMirror.SyntaxNode;\n  }\n  if (node.name === 'NumberLiteral') {\n    const lastChild = node.lastChild;\n    return {from: node.from, to: lastChild && lastChild.name === 'Unit' ? lastChild.from : node.to};\n  }\n  return null;\n}\n\nfunction modifyUnit(view: CodeMirror.EditorView, by: number): boolean {\n  const {head} = view.state.selection.main;\n  const context = CodeMirror.syntaxTree(view.state).resolveInner(head, -1);\n  const numberRange = getNumberAt(context) || getNumberAt(context.resolve(head, 1));\n  if (!numberRange) {\n    return false;\n  }\n\n  const currentNumber = Number(view.state.sliceDoc(numberRange.from, numberRange.to));\n  if (isNaN(currentNumber)) {\n    return false;\n  }\n\n  view.dispatch({\n    changes: {from: numberRange.from, to: numberRange.to, insert: String(currentNumber + by)},\n    scrollIntoView: true,\n    userEvent: 'insert.modifyUnit',\n  });\n  return true;\n}\n\nexport function cssBindings(): CodeMirror.Extension {\n  // This is an awkward way to pass the argument given to the editor\n  // event handler through the ShortcutRegistry calling convention.\n  let currentView: CodeMirror.EditorView = null as unknown as CodeMirror.EditorView;\n  const listener = UI.ShortcutRegistry.ShortcutRegistry.instance().getShortcutListener({\n    'sources.increment-css': () => Promise.resolve(modifyUnit(currentView, 1)),\n    'sources.increment-css-by-ten': () => Promise.resolve(modifyUnit(currentView, 10)),\n    'sources.decrement-css': () => Promise.resolve(modifyUnit(currentView, -1)),\n    'sources.decrement-css-by-ten': () => Promise.resolve(modifyUnit(currentView, -10)),\n  });\n\n  return CodeMirror.EditorView.domEventHandlers({\n    keydown: (event, view): boolean => {\n      const prevView = currentView;\n      currentView = view;\n      listener(event);\n      currentView = prevView;\n      return event.defaultPrevented;\n    },\n  });\n}\n\nexport class CSSPlugin extends Plugin implements SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  #cssModel?: SDK.CSSModel.CSSModel;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode, _transformer?: SourceFrame.SourceFrame.Transformer) {\n    super(uiSourceCode, _transformer);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n  }\n\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.contentType().isStyleSheet();\n  }\n\n  modelAdded(cssModel: SDK.CSSModel.CSSModel): void {\n    if (this.#cssModel) {\n      return;\n    }\n    this.#cssModel = cssModel;\n  }\n  modelRemoved(cssModel: SDK.CSSModel.CSSModel): void {\n    if (this.#cssModel === cssModel) {\n      this.#cssModel = undefined;\n    }\n  }\n\n  editorExtension(): CodeMirror.Extension {\n    return [cssBindings(), this.#cssCompletion(), cssSwatches()];\n  }\n\n  #cssCompletion(): CodeMirror.Extension {\n    const {cssCompletionSource} = CodeMirror.css;\n\n    // CodeMirror binds the function below to the state object.\n    // Therefore, we can't access `this` and retrieve the following properties.\n    // Instead, retrieve them up front to bind them to the correct closure.\n    const uiSourceCode = this.uiSourceCode;\n    const cssModel = this.#cssModel;\n\n    return CodeMirror.autocompletion({\n      override:\n          [async(cx: CodeMirror.CompletionContext):\n               Promise<CodeMirror.CompletionResult|null> => {\n                 return (await specificCssCompletion(cx, uiSourceCode, cssModel)) || cssCompletionSource(cx);\n               }],\n    });\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAKA,MAAM,YAAY;AAAA,EAIhB,iBAAiB;AAAA,EAIjB,uBAAuB;AAAA;AAEzB,MAAM,OAAO,KAAK,KAAK,kBAAkB,+BAA+B;AACxE,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,MAAM,iBAAiB,oBAAI,IAAI,CAAC,gBAAgB,iBAAiB,iBAAiB,WAAW;AAE7F,wBAAwB,MAA6B,KAAyC;AAC5F,MAAI,eAAe,IAAI,KAAK,OAAO;AACjC,WAAO;AAAA;AAET,WAAS,MAAkC,MAAM,KAAK,MAAM,IAAI,QAAQ;AACtE,QAAI,IAAI,SAAS,cAAc;AAC7B;AAAA,eACS,IAAI,SAAS,eAAe;AACrC,YAAM,OAAO,IAAI,SAAS,iBAAiB,QAAQ,IAAI,SAAS;AAChE,aAAO,QAAQ,SAAS,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAGrD,SAAO;AAAA;AAGT,8BACI,KAAsC,UAA4D;AACpG,QAAM,oBAAoB,SAAS,uBAAuB;AAC1D,MAAI,kBAAkB,WAAW,GAAG;AAClC,aAAS,OAAO,MAAM,kBAAkB,WAAW,GAAG;AAAA;AAGxD,SAAO,kBAAkB;AAAA;AAG3B,qCACI,IAAkC,cAClC,UAAsF;AACxF,QAAM,OAAO,WAAW,WAAW,GAAG,OAAO,aAAa,GAAG,KAAK;AAClE,MAAI,KAAK,SAAS,aAAa;AAE7B,6BAAyB;AAEzB,UAAM,oBAAoB,qBAAqB,aAAa,OAAO;AACnE,UAAM,qBAAqB,MAAM,SAAS,cAAc;AAExD,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,mBAAmB,IAAI,WAAU,GAAC,MAAM,YAAY,OAAO;AAAA;AAAA;AAGxE,QAAM,WAAW,eAAe,MAAM,GAAG;AACzC,MAAI,UAAU;AACZ,UAAM,iBACF,IAAI,YAAY,cAAc,kBAAkB,GAAG,MAAM,SAAS,SAAS,MAAM,SAAS;AAC9F,WAAO;AAAA,MACL,MAAM,KAAK,SAAS,cAAc,KAAK,OAAO,GAAG;AAAA,MACjD,SAAS,eAAe,IAAI,WAAU,GAAC,MAAM,YAAY,OAAO;AAAA,MAChE,UAAU;AAAA;AAAA;AAGd,SAAO;AAAA;AAGT,6BACI,OACA,MACA,IACA,SACA,SACQ;AACV,MAAI,OAAO,MAAM,IAAI,OAAO;AAC5B,oBAAkB,OAAc,KAAoB;AAClD,QAAI,SAAQ,KAAK,IAAI;AACnB,aAAO,MAAM,IAAI,OAAO;AAAA;AAE1B,WAAO,KAAK,KAAK,MAAM,QAAO,KAAK,MAAM,MAAK,KAAK;AAAA;AAGrD,QAAM,OAAO,WAAW,iBAAiB,OAAO,IAAI;AACpD,MAAI,CAAC,MAAM;AACT;AAAA;AAEF,OAAK,QAAQ;AAAA,IACX;AAAA,IACA;AAAA,IACA,OAAO,UAAQ;AACb,UAAI;AACJ,UAAI,KAAK,SAAS,eAAe,KAAK,SAAS,gBAAgB;AAC7D,kBAAU,SAAS,KAAK,MAAM,KAAK;AAAA,iBAC1B,KAAK,SAAS,YAAY,mCAAmC,KAAK,SAAS,KAAK,MAAM,KAAK,MAAM;AAC1G,kBAAU,MAAM,SAAS,KAAK,MAAO,KAAK,KAAK,OAAiC;AAAA;AAElF,UAAI,SAAS;AACX,cAAM,cAAc,OAAO,MAAM,MAAM,MAAM;AAC7C,YAAI,aAAa;AACf,kBAAQ,MAAM,aAAa;AAAA,eACtB;AACL,gBAAM,cAAc,GAAG,SAAS,YAAY,MAAM;AAClD,cAAI,aAAa;AACf,oBAAQ,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvC,gCAAgC,WAAW,WAAW;AAAA,EACpD,YAAqB,OAAoC,MAAc;AACrE;AADmB;AAAoC;AAAA;AAAA,EAIzD,GAAG,OAAmC;AACpC,WAAO,KAAK,MAAM,MAAM,MAAM,UAAU,KAAK,SAAS,MAAM;AAAA;AAAA,EAG9D,MAAM,MAA0C;AAC9C,UAAM,SAAS,IAAI,aAAa,YAAY;AAC5C,WAAO,YAAY,KAAK,OAAO,OAAO,WAAW,UAAU;AAC3D,UAAM,QAAQ,OAAO,YAAY;AACjC,UAAM,cAAc,KAAK;AACzB,UAAM,aAAa,UAAU;AAC7B,WAAO,iBAAiB,aAAa,YAAY,WAAW,WAAW,WAAS;AAC9E,YAAM,QAAQ;AACd,WAAK,SAAS;AAAA,QACZ,SAAS,WAAW,GAAG;AAAA,UACrB,MAAM,YAAY;AAAA,UAClB,KAAK,KAAK,SAAS;AAAA,UACnB,MAAM,KAAK;AAAA,UACX;AAAA,UACA,OAAO,KAAK;AAAA;AAAA;AAAA;AAIlB,WAAO;AAAA;AAAA,EAGT,cAAuB;AACrB,WAAO;AAAA;AAAA;AAIX,gCAAgC,WAAW,WAAW;AAAA,EACpD,YAAqB,OAAyC,MAAc;AAC1E;AADmB;AAAyC;AAAA;AAAA,EAI9D,GAAG,OAAmC;AACpC,WAAO,KAAK,MAAM,gBAAgB,MAAM,MAAM,eAAe,KAAK,SAAS,MAAM;AAAA;AAAA,EAGnF,MAAM,MAA0C;AAC9C,UAAM,SAAS,aAAa,SAAS,aAAa;AAClD,WAAO,cAAc,KAAK;AAC1B,OAAG,QAAQ,QAAQ,QAAQ,OAAO,eAAe,WAAW,UAAU;AACtE,WAAO,cAAc,iBAAiB,SAAS,CAAC,UAAsB;AACpE,YAAM,QAAQ;AACd,WAAK,SAAS;AAAA,QACZ,SAAS,WAAW,GAAG;AAAA,UACrB,MAAM,YAAY;AAAA,UAClB,KAAK,KAAK,SAAS;AAAA,UACnB,MAAM,KAAK;AAAA,UACX;AAAA,UACA,OAAO,KAAK;AAAA;AAAA;AAAA,OAGf;AACH,WAAO,SAAS;AAChB,WAAO;AAAA;AAAA,EAGT,cAAuB;AACrB,WAAO;AAAA;AAAA;AAIX,IAAW,cAAX,kBAAW,iBAAX;AACE,uCAAQ,KAAR;AACA,uCAAQ,KAAR;AAFS;AAAA;AAmBX,0BAA0B,QAA2C;AACnE,SAAO;AAAA,IACL,KAAK,OAAO;AAAA,IACZ,OAAO;AAAA,IACP,OAAO,MAA8B;AACnC,UAAI,OAAO,OAAO;AAClB,UAAI,QAAwB;AAC5B,UAAI,OAAO,SAAS,eAAmB;AACrC,cAAM,WAAW,IAAI,YAAY,SAAS;AAC1C,sBAAc,CAAC,YAAkB;AAC/B,mBAAS,iBAAiB,YAAY,SAAS,OAAO,cAAc;AAAA;AAEtE,iBAAS,iBAAiB,YAAY,SAAS,OAAO,aAAa,MAAM,KAAK;AAC9E,iBAAS,SAAS,OAAO,OAAO,OAAO,MAAM;AAC7C,iBAAS;AAAA,aACJ;AACL,cAAM,WAAW,IAAI,aAAa,aAAa,aAAa,OAAO;AACnE,iBAAS;AACT,sBAAc,CAAC,YAAkB;AAC/B,mBAAS,iBAAiB,aAAa,aAAa,OAAO,eAAe;AAAA;AAAA;AAG9E,YAAM,MAAM,SAAS,cAAc;AACnC,UAAI,YAAY;AAChB,aAAO;AACP,aAAO,KAAK;AACZ,aAAO;AACP,aAAO,QAAQ,iBAAiB,WAAW,WAAS;AAClD,YAAI,MAAM,QAAQ,UAAU;AAC1B,gBAAM;AACN,eAAK,SAAS;AAAA,YACZ,SAAS,WAAW,GAAG;AAAA,YACvB,SAAS,SAAS,OAAO,OAAO,SACA,EAAC,MAAM,OAAO,KAAK,IAAI,OAAO,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAAA;AAElG,iBAAO;AACP,eAAK;AAAA;AAAA;AAGT,aAAO,QAAQ,iBAAiB,YAAY,WAAS;AACnD,YAAI,MAAM,iBAAiB,CAAC,OAAO,QAAQ,SAAS,MAAM,gBAAwB;AAChF,eAAK,SAAS,EAAC,SAAS,WAAW,GAAG;AACtC,iBAAO;AAAA;AAAA,SAER;AACH,aAAO,QAAQ,iBAAiB,aAAa,WAAS,MAAM;AAC5D,aAAO;AAAA,QACL;AAAA,QACA,QAAQ,EAAC,GAAG,IAAI,GAAG;AAAA,QACnB,OAAO,MAAY;AACjB,iBAAO;AACP,iBAAO;AACP,sBAAY,CAAC,UAAgC;AAC3C,iBAAK,SAAS;AAAA,cACZ,SAAS,EAAC,MAAM,OAAO,KAAK,IAAI,OAAO,MAAM,KAAK,QAAQ,QAAQ,MAAM;AAAA,cACxE,aAAa,aAAa,GAAG;AAAA;AAE/B,mBAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQzB,MAAM,aAAa,WAAW,YAAY;AAE1C,MAAM,eAAe,WAAW,WAAW;AAE3C,MAAM,kBAAkB,WAAW,WAAW,OAA2B;AAAA,EACvE,SAAS;AACP,WAAO;AAAA;AAAA,EAGT,OAAO,OAA2B,IACzB;AACH,QAAK,IAAG,cAAc,GAAG,cAAc,CAAC,GAAG,WAAW,eAAe;AACnE,cAAQ;AAAA;AAEV,eAAW,UAAU,GAAG,SAAS;AAC/B,UAAI,OAAO,GAAG,aAAa;AACzB,gBAAQ,OAAO;AAAA;AAAA;AAGnB,WAAO;AAAA;AAAA,EAGb,SAAS,WAAS,WAAW,YAAY,KAAK,OAAO,YAAU,UAAU,iBAAiB;AAAA;AAG5F,2BAA2B,OAA+B,MAAc,IAAsC;AAC5G,QAAM,UAAU,IAAI,WAAW;AAC/B,sBACI,OAAO,MAAM,IACb,CAAC,KAAK,OAAO,SAAS;AACpB,YAAQ,IAAI,KAAK,KAAK,WAAW,WAAW,OAAO,EAAC,QAAQ,IAAI,kBAAkB,OAAO;AAAA,KAE3F,CAAC,KAAK,OAAO,SAAS;AACpB,YAAQ,IAAI,KAAK,KAAK,WAAW,WAAW,OAAO,EAAC,QAAQ,IAAI,kBAAkB,OAAO;AAAA;AAE/F,SAAO,QAAQ;AAAA;AAGjB,MAAM,kBAAkB,WAAW,WAAW,UAAU,MAAM;AAAA,EAC5D;AAAA,EAEA,YAAY,MAA6B;AACvC,SAAK,cAAc,kBAAkB,KAAK,OAAO,KAAK,SAAS,MAAM,KAAK,SAAS;AAAA;AAAA,EAGrF,OAAO,QAAqC;AAC1C,QAAI,OAAO,mBAAmB,OAAO,YAAY;AAC/C,WAAK,cAAc,kBAAkB,OAAO,OAAO,OAAO,KAAK,SAAS,MAAM,OAAO,KAAK,SAAS;AAAA;AAAA;AAAA,GAGtG;AAAA,EACD,aAAa,OAAK,EAAE;AAAA;AAGtB,uBAA6C;AAC3C,SAAO,CAAC,iBAAiB;AAAA;AAG3B,qBAAqB,MAA8D;AACjF,MAAI,KAAK,SAAS,QAAQ;AACxB,WAAO,KAAK;AAAA;AAEd,MAAI,KAAK,SAAS,iBAAiB;AACjC,UAAM,YAAY,KAAK;AACvB,WAAO,EAAC,MAAM,KAAK,MAAM,IAAI,aAAa,UAAU,SAAS,SAAS,UAAU,OAAO,KAAK;AAAA;AAE9F,SAAO;AAAA;AAGT,oBAAoB,MAA6B,IAAqB;AACpE,QAAM,EAAC,SAAQ,KAAK,MAAM,UAAU;AACpC,QAAM,UAAU,WAAW,WAAW,KAAK,OAAO,aAAa,MAAM;AACrE,QAAM,cAAc,YAAY,YAAY,YAAY,QAAQ,QAAQ,MAAM;AAC9E,MAAI,CAAC,aAAa;AAChB,WAAO;AAAA;AAGT,QAAM,gBAAgB,OAAO,KAAK,MAAM,SAAS,YAAY,MAAM,YAAY;AAC/E,MAAI,MAAM,gBAAgB;AACxB,WAAO;AAAA;AAGT,OAAK,SAAS;AAAA,IACZ,SAAS,EAAC,MAAM,YAAY,MAAM,IAAI,YAAY,IAAI,QAAQ,OAAO,gBAAgB;AAAA,IACrF,gBAAgB;AAAA,IAChB,WAAW;AAAA;AAEb,SAAO;AAAA;AAGF,8BAA6C;AAGlD,MAAI,cAAqC;AACzC,QAAM,WAAW,GAAG,iBAAiB,iBAAiB,WAAW,oBAAoB;AAAA,IACnF,yBAAyB,MAAM,QAAQ,QAAQ,WAAW,aAAa;AAAA,IACvE,gCAAgC,MAAM,QAAQ,QAAQ,WAAW,aAAa;AAAA,IAC9E,yBAAyB,MAAM,QAAQ,QAAQ,WAAW,aAAa;AAAA,IACvE,gCAAgC,MAAM,QAAQ,QAAQ,WAAW,aAAa;AAAA;AAGhF,SAAO,WAAW,WAAW,iBAAiB;AAAA,IAC5C,SAAS,CAAC,OAAO,SAAkB;AACjC,YAAM,WAAW;AACjB,oBAAc;AACd,eAAS;AACT,oBAAc;AACd,aAAO,MAAM;AAAA;AAAA;AAAA;AAKZ,+BAAwB,OAA4E;AAAA;AAAA,EAGzG,YAAY,cAAmD,cAAoD;AACjH,UAAM,cAAc;AACpB,QAAI,cAAc,cAAc,WAAW,cAAc,IAAI,SAAS,UAAU;AAAA;AAAA,SAG3E,QAAQ,cAA4D;AACzE,WAAO,aAAa,cAAc;AAAA;AAAA,EAGpC,WAAW,UAAuC;AAChD,QAAI,gBAAgB;AAClB;AAAA;AAEF,qBAAiB;AAAA;AAAA,EAEnB,aAAa,UAAuC;AAClD,QAAI,mBAAmB,UAAU;AAC/B,uBAAiB;AAAA;AAAA;AAAA,EAIrB,kBAAwC;AACtC,WAAO,CAAC,eAAe,uBAAuB;AAAA;AAAA,mBAGT;AACrC,UAAM,EAAC,wBAAuB,WAAW;AAKzC,UAAM,eAAe,KAAK;AAC1B,UAAM,WAAW;AAEjB,WAAO,WAAW,eAAe;AAAA,MAC/B,UACI,CAAC,OAAM,OAC2C;AAC3C,eAAQ,MAAM,sBAAsB,IAAI,cAAc,aAAc,oBAAoB;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
