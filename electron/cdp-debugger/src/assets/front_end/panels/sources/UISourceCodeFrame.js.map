{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/UISourceCodeFrame.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {CoveragePlugin} from './CoveragePlugin.js';\nimport {CSSPlugin} from './CSSPlugin.js';\nimport {DebuggerPlugin} from './DebuggerPlugin.js';\nimport {MemoryProfilePlugin, PerformanceProfilePlugin} from './ProfilePlugin.js';\nimport {JavaScriptCompilerPlugin} from './JavaScriptCompilerPlugin.js';\nimport type {Plugin} from './Plugin.js';\nimport {ScriptOriginPlugin} from './ScriptOriginPlugin.js';\nimport {SnippetsPlugin} from './SnippetsPlugin.js';\nimport {SourcesPanel} from './SourcesPanel.js';\n\nfunction sourceFramePlugins(): (typeof Plugin)[] {\n  // The order of these plugins matters for toolbar items and editor\n  // extension precedence\n  return [\n    CSSPlugin,\n    DebuggerPlugin,\n    JavaScriptCompilerPlugin,\n    SnippetsPlugin,\n    ScriptOriginPlugin,\n    CoveragePlugin,\n    MemoryProfilePlugin,\n    PerformanceProfilePlugin,\n  ];\n}\n\nexport class UISourceCodeFrame extends\n    Common.ObjectWrapper.eventMixin<EventTypes, typeof SourceFrame.SourceFrame.SourceFrameImpl>(\n        SourceFrame.SourceFrame.SourceFrameImpl) {\n  private uiSourceCodeInternal: Workspace.UISourceCode.UISourceCode;\n  private muteSourceCodeEvents: boolean;\n  private persistenceBinding: Persistence.Persistence.PersistenceBinding|null;\n  private uiSourceCodeEventListeners: Common.EventTarget.EventDescriptor[];\n  private messageAndDecorationListeners: Common.EventTarget.EventDescriptor[];\n  private readonly boundOnBindingChanged: () => void;\n  // The active plugins. These are created in setContent, and\n  // recreated when the binding changes\n  private plugins: Plugin[] = [];\n  private readonly errorPopoverHelper: UI.PopoverHelper.PopoverHelper;\n\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super(workingCopy);\n    this.uiSourceCodeInternal = uiSourceCode;\n\n    this.muteSourceCodeEvents = false;\n\n    this.persistenceBinding = Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode);\n\n    this.uiSourceCodeEventListeners = [];\n    this.messageAndDecorationListeners = [];\n\n    this.boundOnBindingChanged = this.onBindingChanged.bind(this);\n\n    Common.Settings.Settings.instance()\n        .moduleSetting('persistenceNetworkOverridesEnabled')\n        .addChangeListener(this.onNetworkPersistenceChanged, this);\n\n    this.errorPopoverHelper =\n        new UI.PopoverHelper.PopoverHelper(this.textEditor.editor.contentDOM, this.getErrorPopoverContent.bind(this));\n    this.errorPopoverHelper.setHasPadding(true);\n\n    this.errorPopoverHelper.setTimeout(100, 100);\n\n    this.initializeUISourceCode();\n\n    async function workingCopy(): Promise<TextUtils.ContentProvider.DeferredContent> {\n      if (uiSourceCode.isDirty()) {\n        return {content: uiSourceCode.workingCopy(), isEncoded: false};\n      }\n      return uiSourceCode.requestContent();\n    }\n  }\n\n  protected editorConfiguration(doc: string): CodeMirror.Extension {\n    return [\n      super.editorConfiguration(doc),\n      rowMessages([...this.allMessages()]),\n      // Inject editor extensions from plugins\n      pluginCompartment.of(this.plugins.map(plugin => plugin.editorExtension())),\n    ];\n  }\n\n  protected onFocus(): void {\n    super.onFocus();\n    UI.Context.Context.instance().setFlavor(UISourceCodeFrame, this);\n  }\n\n  protected onBlur(): void {\n    super.onBlur();\n    UI.Context.Context.instance().setFlavor(UISourceCodeFrame, null);\n  }\n\n  private installMessageAndDecorationListeners(): void {\n    if (this.persistenceBinding) {\n      const networkSourceCode = this.persistenceBinding.network;\n      const fileSystemSourceCode = this.persistenceBinding.fileSystem;\n      this.messageAndDecorationListeners = [\n        networkSourceCode.addEventListener(Workspace.UISourceCode.Events.MessageAdded, this.onMessageAdded, this),\n        networkSourceCode.addEventListener(Workspace.UISourceCode.Events.MessageRemoved, this.onMessageRemoved, this),\n        networkSourceCode.addEventListener(\n            Workspace.UISourceCode.Events.DecorationChanged, this.onDecorationChanged, this),\n\n        fileSystemSourceCode.addEventListener(Workspace.UISourceCode.Events.MessageAdded, this.onMessageAdded, this),\n        fileSystemSourceCode.addEventListener(\n            Workspace.UISourceCode.Events.MessageRemoved, this.onMessageRemoved, this),\n      ];\n    } else {\n      this.messageAndDecorationListeners = [\n        this.uiSourceCodeInternal.addEventListener(\n            Workspace.UISourceCode.Events.MessageAdded, this.onMessageAdded, this),\n        this.uiSourceCodeInternal.addEventListener(\n            Workspace.UISourceCode.Events.MessageRemoved, this.onMessageRemoved, this),\n        this.uiSourceCodeInternal.addEventListener(\n            Workspace.UISourceCode.Events.DecorationChanged, this.onDecorationChanged, this),\n      ];\n    }\n  }\n\n  uiSourceCode(): Workspace.UISourceCode.UISourceCode {\n    return this.uiSourceCodeInternal;\n  }\n\n  setUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const loaded = uiSourceCode.contentLoaded() ? Promise.resolve() : uiSourceCode.requestContent();\n    const startUISourceCode = this.uiSourceCodeInternal;\n    loaded.then(() => {\n      if (this.uiSourceCodeInternal !== startUISourceCode) {\n        return;\n      }\n      this.unloadUISourceCode();\n      this.uiSourceCodeInternal = uiSourceCode;\n      if (uiSourceCode.workingCopy() !== this.textEditor.state.doc.toString()) {\n        void this.setContent(uiSourceCode.workingCopy());\n      } else {\n        this.reloadPlugins();\n      }\n      this.initializeUISourceCode();\n    }, console.error);\n  }\n\n  private unloadUISourceCode(): void {\n    Common.EventTarget.removeEventListeners(this.messageAndDecorationListeners);\n    Common.EventTarget.removeEventListeners(this.uiSourceCodeEventListeners);\n    this.uiSourceCodeInternal.removeWorkingCopyGetter();\n    Persistence.Persistence.PersistenceImpl.instance().unsubscribeFromBindingEvent(\n        this.uiSourceCodeInternal, this.boundOnBindingChanged);\n  }\n\n  private initializeUISourceCode(): void {\n    this.uiSourceCodeEventListeners = [\n      this.uiSourceCodeInternal.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyChanged, this.onWorkingCopyChanged, this),\n      this.uiSourceCodeInternal.addEventListener(\n          Workspace.UISourceCode.Events.WorkingCopyCommitted, this.onWorkingCopyCommitted, this),\n      this.uiSourceCodeInternal.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.onTitleChanged, this),\n    ];\n\n    Persistence.Persistence.PersistenceImpl.instance().subscribeForBindingEvent(\n        this.uiSourceCodeInternal, this.boundOnBindingChanged);\n    this.installMessageAndDecorationListeners();\n    this.updateStyle();\n    if (Root.Runtime.experiments.isEnabled('sourcesPrettyPrint')) {\n      const supportedPrettyTypes = new Set<string>(['text/html', 'text/css', 'text/javascript']);\n      this.setCanPrettyPrint(supportedPrettyTypes.has(this.contentType), true);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.setEditable(this.canEditSourceInternal());\n  }\n\n  willHide(): void {\n    for (const plugin of this.plugins) {\n      plugin.willHide();\n    }\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(UISourceCodeFrame, null);\n    this.uiSourceCodeInternal.removeWorkingCopyGetter();\n  }\n\n  protected getContentType(): string {\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(this.uiSourceCodeInternal);\n    return binding ? binding.network.mimeType() : this.uiSourceCodeInternal.mimeType();\n  }\n\n  canEditSourceInternal(): boolean {\n    if (this.hasLoadError()) {\n      return false;\n    }\n    if (this.uiSourceCodeInternal.editDisabled()) {\n      return false;\n    }\n    if (this.uiSourceCodeInternal.mimeType() === 'application/wasm') {\n      return false;\n    }\n    if (Persistence.Persistence.PersistenceImpl.instance().binding(this.uiSourceCodeInternal)) {\n      return true;\n    }\n    if (this.uiSourceCodeInternal.project().canSetFileContent()) {\n      return true;\n    }\n    if (this.uiSourceCodeInternal.project().isServiceProject()) {\n      return false;\n    }\n    if (this.uiSourceCodeInternal.project().type() === Workspace.Workspace.projectTypes.Network &&\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().active()) {\n      return true;\n    }\n    // Because live edit fails on large whitespace changes, pretty printed scripts are not editable.\n    if (this.pretty && this.uiSourceCodeInternal.contentType().hasScripts()) {\n      return false;\n    }\n    return this.uiSourceCodeInternal.contentType() !== Common.ResourceType.resourceTypes.Document;\n  }\n\n  private onNetworkPersistenceChanged(): void {\n    this.setEditable(this.canEditSourceInternal());\n  }\n\n  commitEditing(): void {\n    if (!this.uiSourceCodeInternal.isDirty()) {\n      return;\n    }\n\n    this.muteSourceCodeEvents = true;\n    this.uiSourceCodeInternal.commitWorkingCopy();\n    this.muteSourceCodeEvents = false;\n  }\n\n  async setContent(content: string): Promise<void> {\n    this.disposePlugins();\n    this.loadPlugins();\n    await super.setContent(content);\n    for (const plugin of this.plugins) {\n      plugin.editorInitialized(this.textEditor);\n    }\n    Common.EventTarget.fireEvent('source-file-loaded', this.uiSourceCodeInternal.displayName(true));\n  }\n\n  private allMessages(): Set<Workspace.UISourceCode.Message> {\n    if (this.persistenceBinding) {\n      const combinedSet = this.persistenceBinding.network.messages();\n      Platform.SetUtilities.addAll(combinedSet, this.persistenceBinding.fileSystem.messages());\n      return combinedSet;\n    }\n    return this.uiSourceCodeInternal.messages();\n  }\n\n  onTextChanged(): void {\n    const wasPretty = this.pretty;\n    super.onTextChanged();\n    this.errorPopoverHelper.hidePopover();\n    SourcesPanel.instance().updateLastModificationTime();\n    this.muteSourceCodeEvents = true;\n    if (this.isClean()) {\n      this.uiSourceCodeInternal.resetWorkingCopy();\n    } else {\n      this.uiSourceCodeInternal.setWorkingCopyGetter(() => this.textEditor.state.doc.toString());\n    }\n    this.muteSourceCodeEvents = false;\n    if (wasPretty !== this.pretty) {\n      this.updateStyle();\n      this.reloadPlugins();\n    }\n  }\n\n  onWorkingCopyChanged(): void {\n    if (this.muteSourceCodeEvents) {\n      return;\n    }\n    this.maybeSetContent(this.uiSourceCodeInternal.workingCopy());\n  }\n\n  private onWorkingCopyCommitted(): void {\n    if (!this.muteSourceCodeEvents) {\n      this.maybeSetContent(this.uiSourceCode().workingCopy());\n    }\n    this.contentCommitted();\n    this.updateStyle();\n  }\n\n  private reloadPlugins(): void {\n    this.disposePlugins();\n    this.loadPlugins();\n    const editor = this.textEditor;\n    editor.dispatch({effects: pluginCompartment.reconfigure(this.plugins.map(plugin => plugin.editorExtension()))});\n    for (const plugin of this.plugins) {\n      plugin.editorInitialized(editor);\n    }\n  }\n\n  private onTitleChanged(): void {\n    this.updateLanguageMode('').then(() => this.reloadPlugins(), console.error);\n  }\n\n  private loadPlugins(): void {\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(this.uiSourceCodeInternal);\n    const pluginUISourceCode = binding ? binding.network : this.uiSourceCodeInternal;\n\n    for (const pluginType of sourceFramePlugins()) {\n      if (pluginType.accepts(pluginUISourceCode)) {\n        this.plugins.push(new pluginType(pluginUISourceCode, this));\n      }\n    }\n\n    this.dispatchEventToListeners(Events.ToolbarItemsChanged);\n  }\n\n  private disposePlugins(): void {\n    for (const plugin of this.plugins) {\n      plugin.dispose();\n    }\n    this.plugins = [];\n  }\n\n  private onBindingChanged(): void {\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(this.uiSourceCodeInternal);\n    if (binding === this.persistenceBinding) {\n      return;\n    }\n    this.unloadUISourceCode();\n    this.persistenceBinding = binding;\n    this.initializeUISourceCode();\n    this.reloadMessages();\n    this.reloadPlugins();\n  }\n\n  private reloadMessages(): void {\n    const messages = [...this.allMessages()];\n    const {editor} = this.textEditor;\n    editor.dispatch({effects: setRowMessages.of(RowMessages.create(messages))});\n  }\n\n  private updateStyle(): void {\n    this.setEditable(this.canEditSourceInternal());\n  }\n\n  private maybeSetContent(content: string): void {\n    if (this.textEditor.state.doc.toString() !== content) {\n      void this.setContent(content);\n    }\n  }\n\n  protected populateTextAreaContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu, lineNumber: number, columnNumber: number): void {\n    super.populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber);\n    contextMenu.appendApplicableItems(this.uiSourceCodeInternal);\n    const location = this.editorLocationToUILocation(lineNumber, columnNumber);\n    contextMenu.appendApplicableItems(\n        new Workspace.UISourceCode.UILocation(this.uiSourceCodeInternal, location.lineNumber, location.columnNumber));\n    for (const plugin of this.plugins) {\n      plugin.populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber);\n    }\n  }\n\n  protected populateLineGutterContextMenu(contextMenu: UI.ContextMenu.ContextMenu, lineNumber: number): void {\n    super.populateLineGutterContextMenu(contextMenu, lineNumber);\n    for (const plugin of this.plugins) {\n      plugin.populateLineGutterContextMenu(contextMenu, lineNumber);\n    }\n  }\n\n  dispose(): void {\n    this.errorPopoverHelper.dispose();\n    this.disposePlugins();\n    this.unloadUISourceCode();\n    this.textEditor.editor.destroy();\n    this.detach();\n    Common.Settings.Settings.instance()\n        .moduleSetting('persistenceNetworkOverridesEnabled')\n        .removeChangeListener(this.onNetworkPersistenceChanged, this);\n  }\n\n  private onMessageAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.Message>): void {\n    const {editor} = this.textEditor, shownMessages = editor.state.field(showRowMessages, false);\n    if (shownMessages) {\n      editor.dispatch({effects: setRowMessages.of(shownMessages.messages.add(event.data))});\n    }\n  }\n\n  private onMessageRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.Message>): void {\n    const {editor} = this.textEditor, shownMessages = editor.state.field(showRowMessages, false);\n    if (shownMessages) {\n      editor.dispatch({effects: setRowMessages.of(shownMessages.messages.remove(event.data))});\n    }\n  }\n\n  private onDecorationChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    for (const plugin of this.plugins) {\n      plugin.decorationChanged(event.data as SourceFrame.SourceFrame.DecoratorType, this.textEditor);\n    }\n  }\n\n  async toolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    const leftToolbarItems = await super.toolbarItems();\n    const rightToolbarItems = [];\n    for (const plugin of this.plugins) {\n      leftToolbarItems.push(...plugin.leftToolbarItems());\n      rightToolbarItems.push(...await plugin.rightToolbarItems());\n    }\n\n    if (!rightToolbarItems.length) {\n      return leftToolbarItems;\n    }\n\n    return [...leftToolbarItems, new UI.Toolbar.ToolbarSeparator(true), ...rightToolbarItems];\n  }\n\n  private getErrorPopoverContent(event: Event): UI.PopoverHelper.PopoverRequest|null {\n    const mouseEvent = event as MouseEvent;\n    const eventTarget = event.target as HTMLElement;\n    const anchorElement = eventTarget.enclosingNodeOrSelfWithClass('cm-messageIcon-error') ||\n        eventTarget.enclosingNodeOrSelfWithClass('cm-messageIcon-issue');\n    if (!anchorElement) {\n      return null;\n    }\n\n    const messageField = this.textEditor.state.field(showRowMessages, false);\n    if (!messageField || messageField.messages.rows.length === 0) {\n      return null;\n    }\n    const {editor} = this.textEditor;\n    const position = editor.posAtCoords(mouseEvent);\n    if (position === null) {\n      return null;\n    }\n    const line = editor.state.doc.lineAt(position);\n    if (position !== line.to) {\n      return null;\n    }\n    const row = messageField.messages.rows.find(row => row[0].lineNumber() === line.number - 1);\n    if (!row) {\n      return null;\n    }\n    const issues = anchorElement.classList.contains('cm-messageIcon-issue');\n    const messages = row.filter(msg => (msg.level() === Workspace.UISourceCode.Message.Level.Issue) === issues);\n    if (!messages.length) {\n      return null;\n    }\n    const anchor =\n        anchorElement ? anchorElement.boxInWindow() : new AnchorBox(mouseEvent.clientX, mouseEvent.clientY, 1, 1);\n\n    const counts = countDuplicates(messages);\n    const element = document.createElement('div');\n    element.classList.add('text-editor-messages-description-container');\n    for (let i = 0; i < messages.length; i++) {\n      if (counts[i]) {\n        element.appendChild(renderMessage(messages[i], counts[i]));\n      }\n    }\n    return {\n      box: anchor,\n      hide(): void{},\n      show: async(popover: UI.GlassPane.GlassPane): Promise<true> => {\n        popover.contentElement.append(element);\n        return true;\n      },\n    };\n  }\n}\n\nfunction getIconDataForLevel(level: Workspace.UISourceCode.Message.Level): IconButton.Icon.IconData {\n  if (level === Workspace.UISourceCode.Message.Level.Error) {\n    return {color: '', width: '12px', height: '12px', iconName: 'error_icon'};\n  }\n  if (level === Workspace.UISourceCode.Message.Level.Warning) {\n    return {color: '', width: '12px', height: '12px', iconName: 'warning_icon'};\n  }\n  if (level === Workspace.UISourceCode.Message.Level.Issue) {\n    return {color: 'var(--issue-color-yellow)', width: '12px', height: '12px', iconName: 'issue-exclamation-icon'};\n  }\n  return {color: '', width: '12px', height: '12px', iconName: 'error_icon'};\n}\n\nfunction getBubbleTypePerLevel(level: Workspace.UISourceCode.Message.Level): string {\n  switch (level) {\n    case Workspace.UISourceCode.Message.Level.Error:\n      return 'error';\n    case Workspace.UISourceCode.Message.Level.Warning:\n      return 'warning';\n    case Workspace.UISourceCode.Message.Level.Issue:\n      return 'warning';\n  }\n}\n\nfunction messageLevelComparator(a: Workspace.UISourceCode.Message, b: Workspace.UISourceCode.Message): number {\n  const messageLevelPriority = {\n    [Workspace.UISourceCode.Message.Level.Issue]: 2,\n    [Workspace.UISourceCode.Message.Level.Warning]: 3,\n    [Workspace.UISourceCode.Message.Level.Error]: 4,\n  };\n  return messageLevelPriority[a.level()] - messageLevelPriority[b.level()];\n}\n\nfunction getIconDataForMessage(message: Workspace.UISourceCode.Message): IconButton.Icon.IconData {\n  if (message instanceof IssuesManager.SourceFrameIssuesManager.IssueMessage) {\n    return {\n      ...IssueCounter.IssueCounter.getIssueKindIconData(message.getIssueKind()),\n      width: '12px',\n      height: '12px',\n    };\n  }\n  return getIconDataForLevel(message.level());\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ToolbarItemsChanged = 'ToolbarItemsChanged',\n}\n\nexport type EventTypes = {\n  [Events.ToolbarItemsChanged]: void,\n};\n\nconst pluginCompartment = new CodeMirror.Compartment();\n\n// Row message management and display logic. The frame manages a\n// collection of messages, organized by line (row), as a wavy\n// underline starting at the start of the first message, up to the end\n// of the line, with icons indicating the message severity and content\n// at the end of the line.\n\nfunction addMessage(rows: Workspace.UISourceCode.Message[][], message: Workspace.UISourceCode.Message):\n    Workspace.UISourceCode.Message[][] {\n  const lineNumber = message.lineNumber();\n  let i = 0;\n  for (; i < rows.length; i++) {\n    const diff = rows[i][0].lineNumber() - lineNumber;\n    if (diff === 0) {\n      rows[i] = rows[i].concat(message);\n      return rows;\n    }\n    if (diff > 0) {\n      break;\n    }\n  }\n  rows.splice(i, 0, [message]);\n  return rows;\n}\n\nfunction removeMessage(rows: Workspace.UISourceCode.Message[][], message: Workspace.UISourceCode.Message): void {\n  for (let i = 0; i < rows.length; i++) {\n    if (rows[i][0].lineNumber() === message.lineNumber()) {\n      const remaining = rows[i].filter(m => !m.isEqual(message));\n      if (remaining.length) {\n        rows[i] = remaining;\n      } else {\n        rows.splice(i, 1);\n      }\n      break;\n    }\n  }\n}\n\nclass RowMessages {\n  constructor(readonly rows: Workspace.UISourceCode.Message[][]) {\n  }\n\n  static create(messages: Workspace.UISourceCode.Message[]): RowMessages {\n    const rows: Workspace.UISourceCode.Message[][] = [];\n    for (const message of messages) {\n      addMessage(rows, message);\n    }\n    return new RowMessages(rows);\n  }\n\n  remove(message: Workspace.UISourceCode.Message): RowMessages {\n    const rows = this.rows.slice();\n    removeMessage(rows, message);\n    return new RowMessages(rows);\n  }\n\n  add(message: Workspace.UISourceCode.Message): RowMessages {\n    return new RowMessages(addMessage(this.rows.slice(), message));\n  }\n}\n\nconst setRowMessages = CodeMirror.StateEffect.define<RowMessages>();\n\nconst underlineMark = CodeMirror.Decoration.mark({class: 'cm-waveUnderline'});\n\n// The widget shown at the end of a message annotation.\nclass MessageWidget extends CodeMirror.WidgetType {\n  constructor(readonly messages: Workspace.UISourceCode.Message[]) {\n    super();\n  }\n\n  eq(other: MessageWidget): boolean {\n    return other.messages === this.messages;\n  }\n\n  toDOM(): HTMLElement {\n    const wrap = document.createElement('span');\n    wrap.classList.add('cm-messageIcon');\n    const nonIssues = this.messages.filter(msg => msg.level() !== Workspace.UISourceCode.Message.Level.Issue);\n    if (nonIssues.length) {\n      const maxIssue = nonIssues.sort(messageLevelComparator)[nonIssues.length - 1];\n      const errorIcon = wrap.appendChild(new IconButton.Icon.Icon());\n      errorIcon.data = getIconDataForLevel(maxIssue.level());\n      errorIcon.classList.add('cm-messageIcon-error');\n    }\n    const issue = this.messages.find(m => m.level() === Workspace.UISourceCode.Message.Level.Issue);\n    if (issue) {\n      const issueIcon = wrap.appendChild(new IconButton.Icon.Icon());\n      issueIcon.data = getIconDataForLevel(Workspace.UISourceCode.Message.Level.Issue);\n      issueIcon.classList.add('cm-messageIcon-issue');\n      issueIcon.addEventListener('click', () => (issue.clickHandler() || Math.min)());\n    }\n    return wrap;\n  }\n\n  ignoreEvents(): boolean {\n    return true;\n  }\n}\n\nclass RowMessageDecorations {\n  constructor(readonly messages: RowMessages, readonly decorations: CodeMirror.DecorationSet) {\n  }\n\n  static create(messages: RowMessages, doc: CodeMirror.Text): RowMessageDecorations {\n    const builder = new CodeMirror.RangeSetBuilder<CodeMirror.Decoration>();\n    for (const row of messages.rows) {\n      const line = doc.line(row[0].lineNumber() + 1);\n      const minCol = row.reduce((col, msg) => Math.min(col, msg.columnNumber() || 0), line.length);\n      if (minCol < line.length) {\n        builder.add(line.from + minCol, line.to, underlineMark);\n      }\n      builder.add(line.to, line.to, CodeMirror.Decoration.widget({side: 1, widget: new MessageWidget(row)}));\n    }\n    return new RowMessageDecorations(messages, builder.finish());\n  }\n\n  apply(tr: CodeMirror.Transaction): RowMessageDecorations {\n    let result: RowMessageDecorations = this;\n    if (tr.docChanged) {\n      result = new RowMessageDecorations(this.messages, this.decorations.map(tr.changes));\n    }\n    for (const effect of tr.effects) {\n      if (effect.is(setRowMessages)) {\n        result = RowMessageDecorations.create(effect.value, tr.state.doc);\n      }\n    }\n    return result;\n  }\n}\n\nconst showRowMessages = CodeMirror.StateField.define<RowMessageDecorations>({\n  create(state): RowMessageDecorations {\n    return RowMessageDecorations.create(new RowMessages([]), state.doc);\n  },\n  update(value, tr): RowMessageDecorations {\n    return value.apply(tr);\n  },\n  provide: field => CodeMirror.Prec.lowest(CodeMirror.EditorView.decorations.from(field, value => value.decorations)),\n});\n\nfunction countDuplicates(messages: Workspace.UISourceCode.Message[]): number[] {\n  const counts = [];\n  for (let i = 0; i < messages.length; i++) {\n    counts[i] = 0;\n    for (let j = 0; j <= i; j++) {\n      if (messages[j].isEqual(messages[i])) {\n        counts[j]++;\n        break;\n      }\n    }\n  }\n  return counts;\n}\n\nfunction renderMessage(message: Workspace.UISourceCode.Message, count: number): HTMLElement {\n  const element = document.createElement('div');\n  element.classList.add('text-editor-row-message');\n\n  if (count === 1) {\n    const icon = element.appendChild(new IconButton.Icon.Icon());\n    icon.data = getIconDataForMessage(message);\n    icon.classList.add('text-editor-row-message-icon');\n    icon.addEventListener('click', () => (message.clickHandler() || Math.min)());\n  } else {\n    const repeatCountElement =\n        document.createElement('span', {is: 'dt-small-bubble'}) as UI.UIUtils.DevToolsSmallBubble;\n    repeatCountElement.textContent = String(count);\n    repeatCountElement.classList.add('text-editor-row-message-repeat-count');\n    element.appendChild(repeatCountElement);\n    repeatCountElement.type = getBubbleTypePerLevel(message.level());\n  }\n  const linesContainer = element.createChild('div');\n  for (const line of message.text().split('\\n')) {\n    linesContainer.createChild('div').textContent = line;\n  }\n\n  return element;\n}\n\nconst rowMessageTheme = CodeMirror.EditorView.baseTheme({\n  '.cm-tooltip-message': {\n    padding: '4px',\n  },\n\n  '.cm-waveUnderline': {\n    backgroundImage: 'var(--image-file-errorWave)',\n    backgroundRepeat: 'repeat-x',\n    backgroundPosition: 'bottom',\n    paddingBottom: '1px',\n  },\n\n  '.cm-messageIcon': {\n    cursor: 'pointer',\n    '& > *': {\n      verticalAlign: 'text-bottom',\n      marginLeft: '2px',\n    },\n  },\n});\n\nfunction rowMessages(initialMessages: Workspace.UISourceCode.Message[]): CodeMirror.Extension {\n  return [\n    showRowMessages.init(\n        (state): RowMessageDecorations => RowMessageDecorations.create(RowMessages.create(initialMessages), state.doc)),\n    rowMessageTheme,\n  ];\n}\n"],
  "mappings": "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",
  "names": []
}
