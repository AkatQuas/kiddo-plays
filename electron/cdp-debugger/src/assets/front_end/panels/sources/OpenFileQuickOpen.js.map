{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/OpenFileQuickOpen.ts"],
  "sourcesContent": ["// Copyright 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {imageNameForResourceType} from '../../panels/utils/utils.js';\nimport {FilteredUISourceCodeListProvider} from './FilteredUISourceCodeListProvider.js';\nimport {SourcesView} from './SourcesView.js';\n\nlet openFileQuickOpenInstance: OpenFileQuickOpen;\n\nexport class OpenFileQuickOpen extends FilteredUISourceCodeListProvider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): OpenFileQuickOpen {\n    const {forceNew} = opts;\n    if (!openFileQuickOpenInstance || forceNew) {\n      openFileQuickOpenInstance = new OpenFileQuickOpen();\n    }\n\n    return openFileQuickOpenInstance;\n  }\n\n  attach(): void {\n    this.setDefaultScores(SourcesView.defaultUISourceCodeScores());\n    super.attach();\n  }\n\n  uiSourceCodeSelected(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode|null, lineNumber?: number, columnNumber?: number): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelectFileFromFilePicker);\n\n    if (!uiSourceCode) {\n      return;\n    }\n    if (typeof lineNumber === 'number') {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, columnNumber));\n    } else {\n      void Common.Revealer.reveal(uiSourceCode);\n    }\n  }\n\n  filterProject(project: Workspace.Workspace.Project): boolean {\n    return !project.isServiceProject();\n  }\n\n  renderItem(itemIndex: number, query: string, titleElement: Element, subtitleElement: Element): void {\n    super.renderItem(itemIndex, query, titleElement, subtitleElement);\n\n    const iconElement = new IconButton.Icon.Icon();\n    const iconName = imageNameForResourceType(this.itemContentTypeAt(itemIndex));\n    iconElement.data = {\n      iconName: iconName,\n      color: 'var(--icon-color)',\n      width: '18px',\n      height: '18px',\n    };\n    iconElement.classList.add(iconName);\n    titleElement.parentElement?.parentElement?.insertBefore(iconElement, titleElement.parentElement);\n  }\n\n  renderAsTwoRows(): boolean {\n    return true;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAEA;AAEA;AACA;AACA;AAEA,IAAI;AAEG,uCAAgC,iCAAiC;AAAA,SAC/D,SAAS,OAEZ,EAAC,UAAU,QAA0B;AACvC,UAAM,EAAC,aAAY;AACnB,QAAI,CAAC,6BAA6B,UAAU;AAC1C,kCAA4B,IAAI;AAAA;AAGlC,WAAO;AAAA;AAAA,EAGT,SAAe;AACb,SAAK,iBAAiB,YAAY;AAClC,UAAM;AAAA;AAAA,EAGR,qBACI,cAAwD,YAAqB,cAA6B;AAC5G,SAAK,YAAY,YAAY,KAAK,YAAY,OAAO;AAErD,QAAI,CAAC,cAAc;AACjB;AAAA;AAEF,QAAI,OAAO,eAAe,UAAU;AAClC,WAAK,OAAO,SAAS,OAAO,aAAa,WAAW,YAAY;AAAA,WAC3D;AACL,WAAK,OAAO,SAAS,OAAO;AAAA;AAAA;AAAA,EAIhC,cAAc,SAA+C;AAC3D,WAAO,CAAC,QAAQ;AAAA;AAAA,EAGlB,WAAW,WAAmB,OAAe,cAAuB,iBAAgC;AAClG,UAAM,WAAW,WAAW,OAAO,cAAc;AAEjD,UAAM,cAAc,IAAI,WAAW,KAAK;AACxC,UAAM,WAAW,yBAAyB,KAAK,kBAAkB;AACjE,gBAAY,OAAO;AAAA,MACjB;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA;AAEV,gBAAY,UAAU,IAAI;AAC1B,iBAAa,eAAe,eAAe,aAAa,aAAa,aAAa;AAAA;AAAA,EAGpF,kBAA2B;AACzB,WAAO;AAAA;AAAA;",
  "names": []
}
