{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/CallStackSidebarPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport callStackSidebarPaneStyles from './callStackSidebarPane.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Call Stack Sidebar Pane of the Sources panel\n  */\n  callStack: 'Call Stack',\n  /**\n  *@description Not paused message element text content in Call Stack Sidebar Pane of the Sources panel\n  */\n  notPaused: 'Not paused',\n  /**\n  *@description Text exposed to screen reader when navigating through a ignore-listed call frame in the sources panel\n  */\n  onIgnoreList: 'on ignore list',\n  /**\n  *@description Show all link text content in Call Stack Sidebar Pane of the Sources panel\n  */\n  showIgnorelistedFrames: 'Show ignore-listed frames',\n  /**\n  *@description Text to show more content\n  */\n  showMore: 'Show more',\n  /**\n  *@description A context menu item in the Call Stack Sidebar Pane of the Sources panel\n  */\n  copyStackTrace: 'Copy stack trace',\n  /**\n  *@description Text to stop preventing the debugger from stepping into library code\n  */\n  removeFromIgnoreList: 'Remove from ignore list',\n  /**\n  *@description Text for scripts that should not be stepped into when debugging\n  */\n  addScriptToIgnoreList: 'Add script to ignore list',\n  /**\n  *@description A context menu item in the Call Stack Sidebar Pane of the Sources panel\n  */\n  removeAllContentScriptsFrom: 'Remove all content scripts from ignore list',\n  /**\n  *@description A context menu item in the Call Stack Sidebar Pane of the Sources panel\n  */\n  addAllContentScriptsToIgnoreList: 'Add all content scripts to ignore list',\n  /**\n  *@description Text in Call Stack Sidebar Pane of the Sources panel when some call frames have warnings\n  */\n  callFrameWarnings: 'Some call frames have warnings',\n  /**\n  *@description Error message that is displayed in UI when a file needed for debugging information for a call frame is missing\n  *@example {src/myapp.debug.wasm.dwp} PH1\n  */\n  debugFileNotFound: 'Failed to load debug file \"{PH1}\".',\n  /**\n   * @description A contex menu item in the Call Stack Sidebar Pane. \"Restart\" is a verb and\n   * \"frame\" is a noun. \"Frame\" refers to an individual item in the call stack, i.e. a call frame.\n   * The user opens this context menu by selecting a specific call frame in the call stack sidebar pane.\n   */\n  restartFrame: 'Restart frame',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/CallStackSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet callstackSidebarPaneInstance: CallStackSidebarPane;\n\nexport class CallStackSidebarPane extends UI.View.SimpleView implements UI.ContextFlavorListener.ContextFlavorListener,\n                                                                        UI.ListControl.ListDelegate<Item> {\n  private readonly ignoreListMessageElement: Element;\n  private readonly notPausedMessageElement: HTMLElement;\n  private readonly callFrameWarningsElement: HTMLElement;\n  private readonly items: UI.ListModel.ListModel<Item>;\n  private list: UI.ListControl.ListControl<Item>;\n  private readonly showMoreMessageElement: Element;\n  private showIgnoreListed: boolean;\n  private readonly locationPool: Bindings.LiveLocation.LiveLocationPool;\n  private readonly updateThrottler: Common.Throttler.Throttler;\n  private maxAsyncStackChainDepth: number;\n  private readonly updateItemThrottler: Common.Throttler.Throttler;\n  private readonly scheduledForUpdateItems: Set<Item>;\n  private muteActivateItem?: boolean;\n\n  private constructor() {\n    super(i18nString(UIStrings.callStack), true);\n\n    this.ignoreListMessageElement = this.createIgnoreListMessageElement();\n    this.contentElement.appendChild(this.ignoreListMessageElement);\n\n    this.notPausedMessageElement = this.contentElement.createChild('div', 'gray-info-message');\n    this.notPausedMessageElement.textContent = i18nString(UIStrings.notPaused);\n    this.notPausedMessageElement.tabIndex = -1;\n\n    this.callFrameWarningsElement = this.contentElement.createChild('div', 'ignore-listed-message');\n    const icon = UI.Icon.Icon.create('smallicon-warning', 'call-frame-warning-icon');\n    this.callFrameWarningsElement.appendChild(icon);\n    this.callFrameWarningsElement.appendChild(document.createTextNode(i18nString(UIStrings.callFrameWarnings)));\n    this.callFrameWarningsElement.tabIndex = -1;\n\n    this.items = new UI.ListModel.ListModel();\n    this.list = new UI.ListControl.ListControl(this.items, this, UI.ListControl.ListMode.NonViewport);\n    this.contentElement.appendChild(this.list.element);\n    this.list.element.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n    self.onInvokeElement(this.list.element, event => {\n      const item = this.list.itemForNode((event.target as Node | null));\n      if (item) {\n        this.activateItem(item);\n        event.consume(true);\n      }\n    });\n\n    this.showMoreMessageElement = this.createShowMoreMessageElement();\n    this.showMoreMessageElement.classList.add('hidden');\n    this.contentElement.appendChild(this.showMoreMessageElement);\n\n    this.showIgnoreListed = false;\n    this.locationPool = new Bindings.LiveLocation.LiveLocationPool();\n\n    this.updateThrottler = new Common.Throttler.Throttler(100);\n    this.maxAsyncStackChainDepth = defaultMaxAsyncStackChainDepth;\n    this.update();\n\n    this.updateItemThrottler = new Common.Throttler.Throttler(100);\n    this.scheduledForUpdateItems = new Set();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CallStackSidebarPane {\n    const {forceNew} = opts;\n    if (!callstackSidebarPaneInstance || forceNew) {\n      callstackSidebarPaneInstance = new CallStackSidebarPane();\n    }\n\n    return callstackSidebarPaneInstance;\n  }\n\n  flavorChanged(_object: Object|null): void {\n    this.showIgnoreListed = false;\n    this.maxAsyncStackChainDepth = defaultMaxAsyncStackChainDepth;\n    this.update();\n  }\n\n  private update(): void {\n    void this.updateThrottler.schedule(() => this.doUpdate());\n  }\n\n  private async doUpdate(): Promise<void> {\n    this.locationPool.disposeAll();\n\n    this.callFrameWarningsElement.classList.add('hidden');\n\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (!details) {\n      this.notPausedMessageElement.classList.remove('hidden');\n      this.ignoreListMessageElement.classList.add('hidden');\n      this.showMoreMessageElement.classList.add('hidden');\n      this.items.replaceAll([]);\n      UI.Context.Context.instance().setFlavor(SDK.DebuggerModel.CallFrame, null);\n      return;\n    }\n\n    this.notPausedMessageElement.classList.add('hidden');\n\n    const itemPromises = [];\n    const uniqueWarnings: Set<string> = new Set();\n    for (const frame of details.callFrames) {\n      const itemPromise =\n          Item.createForDebuggerCallFrame(frame, this.locationPool, this.refreshItem.bind(this)).then(item => {\n            itemToCallFrame.set(item, frame);\n            return item;\n          });\n      itemPromises.push(itemPromise);\n      if (frame.missingDebugInfoDetails) {\n        uniqueWarnings.add(frame.missingDebugInfoDetails.details);\n      }\n    }\n    const items = await Promise.all(itemPromises);\n    if (uniqueWarnings.size) {\n      this.callFrameWarningsElement.classList.remove('hidden');\n      UI.Tooltip.Tooltip.install(this.callFrameWarningsElement, Array.from(uniqueWarnings).join('\\n'));\n    }\n\n    let debuggerModel = details.debuggerModel;\n    let asyncStackTraceId = details.asyncStackTraceId;\n    let asyncStackTrace: Protocol.Runtime.StackTrace|undefined|null = details.asyncStackTrace;\n    let previousStackTrace: Protocol.Runtime.CallFrame[]|SDK.DebuggerModel.CallFrame[] = details.callFrames;\n    for (let {maxAsyncStackChainDepth} = this; maxAsyncStackChainDepth > 0; --maxAsyncStackChainDepth) {\n      if (!asyncStackTrace) {\n        if (!asyncStackTraceId) {\n          break;\n        }\n        if (asyncStackTraceId.debuggerId) {\n          const dm = await SDK.DebuggerModel.DebuggerModel.modelForDebuggerId(asyncStackTraceId.debuggerId);\n          if (!dm) {\n            break;\n          }\n          debuggerModel = dm;\n        }\n        asyncStackTrace = await debuggerModel.fetchAsyncStackTrace(asyncStackTraceId);\n        if (!asyncStackTrace) {\n          break;\n        }\n      }\n      const title = UI.UIUtils.asyncStackTraceLabel(asyncStackTrace.description, previousStackTrace);\n      items.push(...await Item.createItemsForAsyncStack(\n          title, debuggerModel, asyncStackTrace.callFrames, this.locationPool, this.refreshItem.bind(this)));\n      previousStackTrace = asyncStackTrace.callFrames;\n      asyncStackTraceId = asyncStackTrace.parentId;\n      asyncStackTrace = asyncStackTrace.parent;\n    }\n    this.showMoreMessageElement.classList.toggle('hidden', !asyncStackTrace);\n    this.items.replaceAll(items);\n    if (this.maxAsyncStackChainDepth === defaultMaxAsyncStackChainDepth) {\n      this.list.selectNextItem(true /* canWrap */, false /* center */);\n      const selectedItem = this.list.selectedItem();\n      if (selectedItem) {\n        this.activateItem(selectedItem);\n      }\n    }\n    this.updatedForTest();\n  }\n\n  private updatedForTest(): void {\n  }\n\n  private refreshItem(item: Item): void {\n    this.scheduledForUpdateItems.add(item);\n    void this.updateItemThrottler.schedule(async () => {\n      const items = Array.from(this.scheduledForUpdateItems);\n      this.scheduledForUpdateItems.clear();\n\n      this.muteActivateItem = true;\n      if (!this.showIgnoreListed && this.items.every(item => item.isIgnoreListed)) {\n        this.showIgnoreListed = true;\n        for (let i = 0; i < this.items.length; ++i) {\n          this.list.refreshItemByIndex(i);\n        }\n        this.ignoreListMessageElement.classList.toggle('hidden', true);\n      } else {\n        const itemsSet = new Set<Item>(items);\n        let hasIgnoreListed = false;\n        for (let i = 0; i < this.items.length; ++i) {\n          const item = this.items.at(i);\n          if (itemsSet.has(item)) {\n            this.list.refreshItemByIndex(i);\n          }\n          hasIgnoreListed = hasIgnoreListed || item.isIgnoreListed;\n        }\n        this.ignoreListMessageElement.classList.toggle('hidden', this.showIgnoreListed || !hasIgnoreListed);\n      }\n      delete this.muteActivateItem;\n    });\n  }\n\n  createElementForItem(item: Item): Element {\n    const element = document.createElement('div');\n    element.classList.add('call-frame-item');\n    const title = element.createChild('div', 'call-frame-item-title');\n    const titleElement = title.createChild('div', 'call-frame-title-text');\n    titleElement.textContent = item.title;\n    if (item.isAsyncHeader) {\n      element.classList.add('async-header');\n    } else {\n      UI.Tooltip.Tooltip.install(titleElement, item.title);\n      const linkElement = element.createChild('div', 'call-frame-location');\n      linkElement.textContent = Platform.StringUtilities.trimMiddle(item.linkText, 30);\n      UI.Tooltip.Tooltip.install(linkElement, item.linkText);\n      element.classList.toggle('ignore-listed-call-frame', item.isIgnoreListed);\n      if (item.isIgnoreListed) {\n        UI.ARIAUtils.setDescription(element, i18nString(UIStrings.onIgnoreList));\n      }\n      if (!itemToCallFrame.has(item)) {\n        UI.ARIAUtils.setDisabled(element, true);\n      }\n    }\n    const callframe = itemToCallFrame.get(item);\n    const isSelected = callframe === UI.Context.Context.instance().flavor(SDK.DebuggerModel.CallFrame);\n\n    element.classList.toggle('selected', isSelected);\n    UI.ARIAUtils.setSelected(element, isSelected);\n    element.classList.toggle('hidden', !this.showIgnoreListed && item.isIgnoreListed);\n    element.appendChild(UI.Icon.Icon.create('smallicon-thick-right-arrow', 'selected-call-frame-icon'));\n    element.tabIndex = item === this.list.selectedItem() ? 0 : -1;\n\n    if (callframe && callframe.missingDebugInfoDetails) {\n      const icon = UI.Icon.Icon.create('smallicon-warning', 'call-frame-warning-icon');\n      const messages =\n          callframe.missingDebugInfoDetails.resources.map(r => i18nString(UIStrings.debugFileNotFound, {PH1: r}));\n      UI.Tooltip.Tooltip.install(icon, [callframe.missingDebugInfoDetails.details, ...messages].join('\\n'));\n      element.appendChild(icon);\n    }\n    return element;\n  }\n\n  heightForItem(_item: Item): number {\n    console.assert(false);  // Should not be called.\n    return 0;\n  }\n\n  isItemSelectable(_item: Item): boolean {\n    return true;\n  }\n\n  selectedItemChanged(_from: Item|null, _to: Item|null, fromElement: HTMLElement|null, toElement: HTMLElement|null):\n      void {\n    if (fromElement) {\n      fromElement.tabIndex = -1;\n    }\n    if (toElement) {\n      this.setDefaultFocusedElement(toElement);\n      toElement.tabIndex = 0;\n      if (this.hasFocus()) {\n        toElement.focus();\n      }\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return true;\n  }\n\n  private createIgnoreListMessageElement(): Element {\n    const element = document.createElement('div');\n    element.classList.add('ignore-listed-message');\n    element.createChild('span');\n    const showAllLink = element.createChild('span', 'link');\n    showAllLink.textContent = i18nString(UIStrings.showIgnorelistedFrames);\n    UI.ARIAUtils.markAsLink(showAllLink);\n    showAllLink.tabIndex = 0;\n    const showAll = (): void => {\n      this.showIgnoreListed = true;\n      for (const item of this.items) {\n        this.refreshItem(item);\n      }\n      this.ignoreListMessageElement.classList.toggle('hidden', true);\n    };\n    showAllLink.addEventListener('click', showAll);\n    showAllLink.addEventListener('keydown', event => event.key === 'Enter' && showAll());\n    return element;\n  }\n\n  private createShowMoreMessageElement(): Element {\n    const element = document.createElement('div');\n    element.classList.add('show-more-message');\n    element.createChild('span');\n    const showAllLink = element.createChild('span', 'link');\n    showAllLink.textContent = i18nString(UIStrings.showMore);\n    showAllLink.addEventListener('click', () => {\n      this.maxAsyncStackChainDepth += defaultMaxAsyncStackChainDepth;\n      this.update();\n    }, false);\n    return element;\n  }\n\n  private onContextMenu(event: Event): void {\n    const item = this.list.itemForNode((event.target as Node | null));\n    if (!item) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const debuggerCallFrame = itemToCallFrame.get(item);\n    if (debuggerCallFrame) {\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.restartFrame), () => {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.StackFrameRestarted);\n        void debuggerCallFrame.restart();\n      }, !debuggerCallFrame.canBeRestarted);\n    }\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.copyStackTrace), this.copyStackTrace.bind(this));\n    if (item.uiLocation) {\n      this.appendIgnoreListURLContextMenuItems(contextMenu, item.uiLocation.uiSourceCode);\n    }\n    void contextMenu.show();\n  }\n\n  private onClick(event: Event): void {\n    const item = this.list.itemForNode((event.target as Node | null));\n    if (item) {\n      this.activateItem(item);\n    }\n  }\n\n  private activateItem(item: Item): void {\n    const uiLocation = item.uiLocation;\n    if (this.muteActivateItem || !uiLocation) {\n      return;\n    }\n    this.list.selectItem(item);\n    const debuggerCallFrame = itemToCallFrame.get(item);\n    const oldItem = this.activeCallFrameItem();\n    if (debuggerCallFrame && oldItem !== item) {\n      debuggerCallFrame.debuggerModel.setSelectedCallFrame(debuggerCallFrame);\n      UI.Context.Context.instance().setFlavor(SDK.DebuggerModel.CallFrame, debuggerCallFrame);\n      if (oldItem) {\n        this.refreshItem(oldItem);\n      }\n      this.refreshItem(item);\n    } else {\n      void Common.Revealer.reveal(uiLocation);\n    }\n  }\n\n  activeCallFrameItem(): Item|null {\n    const callFrame = UI.Context.Context.instance().flavor(SDK.DebuggerModel.CallFrame);\n    if (callFrame) {\n      return this.items.find(callFrameItem => itemToCallFrame.get(callFrameItem) === callFrame) || null;\n    }\n    return null;\n  }\n\n  appendIgnoreListURLContextMenuItems(\n      contextMenu: UI.ContextMenu.ContextMenu, uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const binding = Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode);\n    if (binding) {\n      uiSourceCode = binding.network;\n    }\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.FileSystem) {\n      return;\n    }\n    const canIgnoreList =\n        Bindings.IgnoreListManager.IgnoreListManager.instance().canIgnoreListUISourceCode(uiSourceCode);\n    const isIgnoreListed =\n        Bindings.IgnoreListManager.IgnoreListManager.instance().isIgnoreListedUISourceCode(uiSourceCode);\n    const isContentScript = uiSourceCode.project().type() === Workspace.Workspace.projectTypes.ContentScripts;\n\n    const manager = Bindings.IgnoreListManager.IgnoreListManager.instance();\n    if (canIgnoreList) {\n      if (isIgnoreListed) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.removeFromIgnoreList), manager.unIgnoreListUISourceCode.bind(manager, uiSourceCode));\n      } else {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.addScriptToIgnoreList), manager.ignoreListUISourceCode.bind(manager, uiSourceCode));\n      }\n    }\n    if (isContentScript) {\n      if (isIgnoreListed) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.removeAllContentScriptsFrom), manager.ignoreListContentScripts.bind(manager));\n      } else {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.addAllContentScriptsToIgnoreList), manager.unIgnoreListContentScripts.bind(manager));\n      }\n    }\n  }\n\n  selectNextCallFrameOnStack(): void {\n    const oldItem = this.activeCallFrameItem();\n    const startIndex = oldItem ? this.items.indexOf(oldItem) + 1 : 0;\n    for (let i = startIndex; i < this.items.length; i++) {\n      const newItem = this.items.at(i);\n      if (itemToCallFrame.has(newItem)) {\n        this.activateItem(newItem);\n        break;\n      }\n    }\n  }\n\n  selectPreviousCallFrameOnStack(): void {\n    const oldItem = this.activeCallFrameItem();\n    const startIndex = oldItem ? this.items.indexOf(oldItem) - 1 : this.items.length - 1;\n    for (let i = startIndex; i >= 0; i--) {\n      const newItem = this.items.at(i);\n      if (itemToCallFrame.has(newItem)) {\n        this.activateItem(newItem);\n        break;\n      }\n    }\n  }\n\n  private copyStackTrace(): void {\n    const text = [];\n    for (const item of this.items) {\n      let itemText = item.title;\n      if (item.uiLocation) {\n        itemText += ' (' + item.uiLocation.linkText(true /* skipTrim */) + ')';\n      }\n      text.push(itemText);\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(text.join('\\n'));\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([callStackSidebarPaneStyles]);\n  }\n}\n\nconst itemToCallFrame = new WeakMap<Item, SDK.DebuggerModel.CallFrame>();\n\nexport const elementSymbol = Symbol('element');\nexport const defaultMaxAsyncStackChainDepth = 32;\n\nlet actionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'debugger.next-call-frame':\n        CallStackSidebarPane.instance().selectNextCallFrameOnStack();\n        return true;\n      case 'debugger.previous-call-frame':\n        CallStackSidebarPane.instance().selectPreviousCallFrameOnStack();\n        return true;\n    }\n    return false;\n  }\n}\n\nexport class Item {\n  isIgnoreListed: boolean;\n  title: string;\n  linkText: string;\n  uiLocation: Workspace.UISourceCode.UILocation|null;\n  isAsyncHeader: boolean;\n  updateDelegate: (arg0: Item) => void;\n\n  static async createForDebuggerCallFrame(\n      frame: SDK.DebuggerModel.CallFrame, locationPool: Bindings.LiveLocation.LiveLocationPool,\n      updateDelegate: (arg0: Item) => void): Promise<Item> {\n    const item = new Item(UI.UIUtils.beautifyFunctionName(frame.functionName), updateDelegate);\n    await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().createCallFrameLiveLocation(\n        frame.location(), item.update.bind(item), locationPool);\n    return item;\n  }\n\n  static async createItemsForAsyncStack(\n      title: string, debuggerModel: SDK.DebuggerModel.DebuggerModel, frames: Protocol.Runtime.CallFrame[],\n      locationPool: Bindings.LiveLocation.LiveLocationPool, updateDelegate: (arg0: Item) => void): Promise<Item[]> {\n    const headerItemToItemsSet = new WeakMap<Item, Set<Item>>();\n    const asyncHeaderItem = new Item(title, updateDelegate);\n    headerItemToItemsSet.set(asyncHeaderItem, new Set());\n    asyncHeaderItem.isAsyncHeader = true;\n\n    const asyncFrameItems = [];\n    const liveLocationPromises = [];\n    for (const frame of frames) {\n      const item = new Item(UI.UIUtils.beautifyFunctionName(frame.functionName), update);\n      const rawLocation =\n          debuggerModel.createRawLocationByScriptId(frame.scriptId, frame.lineNumber, frame.columnNumber);\n      liveLocationPromises.push(\n          Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().createCallFrameLiveLocation(\n              rawLocation, item.update.bind(item), locationPool));\n      asyncFrameItems.push(item);\n    }\n\n    await Promise.all(liveLocationPromises);\n    updateDelegate(asyncHeaderItem);\n\n    return [asyncHeaderItem, ...asyncFrameItems];\n\n    function update(item: Item): void {\n      updateDelegate(item);\n      let shouldUpdate = false;\n      const items = headerItemToItemsSet.get(asyncHeaderItem);\n      if (items) {\n        if (item.isIgnoreListed) {\n          items.delete(item);\n          shouldUpdate = items.size === 0;\n        } else {\n          shouldUpdate = items.size === 0;\n          items.add(item);\n        }\n        asyncHeaderItem.isIgnoreListed = items.size === 0;\n      }\n      if (shouldUpdate) {\n        updateDelegate(asyncHeaderItem);\n      }\n    }\n  }\n\n  constructor(title: string, updateDelegate: (arg0: Item) => void) {\n    this.isIgnoreListed = false;\n    this.title = title;\n    this.linkText = '';\n    this.uiLocation = null;\n    this.isAsyncHeader = false;\n    this.updateDelegate = updateDelegate;\n  }\n\n  private async update(liveLocation: Bindings.LiveLocation.LiveLocation): Promise<void> {\n    const uiLocation = await liveLocation.uiLocation();\n    this.isIgnoreListed = await liveLocation.isIgnoreListed();\n    this.linkText = uiLocation ? uiLocation.linkText() : '';\n    this.uiLocation = uiLocation;\n    this.updateDelegate(this);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
