{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/OutlineQuickOpen.ts"],
  "sourcesContent": ["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as QuickOpen from '../../ui/legacy/components/quick_open/quick_open.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {SourcesView} from './SourcesView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Go To Line Quick Open of the Sources panel\n  */\n  noFileSelected: 'No file selected.',\n  /**\n  *@description Text in Outline Quick Open of the Sources panel\n  */\n  openAJavascriptOrCssFileToSee: 'Open a JavaScript or CSS file to see symbols',\n  /**\n  *@description Text to show no results have been found\n  */\n  noResultsFound: 'No results found',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/OutlineQuickOpen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet outlineQuickOpenInstance: OutlineQuickOpen;\n\nexport class OutlineQuickOpen extends QuickOpen.FilteredListWidget.Provider {\n  private items: Formatter.FormatterWorkerPool.OutlineItem[];\n  private active: boolean;\n  private constructor() {\n    super();\n    this.items = [];\n    this.active = false;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): OutlineQuickOpen {\n    const {forceNew} = opts;\n    if (!outlineQuickOpenInstance || forceNew) {\n      outlineQuickOpenInstance = new OutlineQuickOpen();\n    }\n\n    return outlineQuickOpenInstance;\n  }\n\n  attach(): void {\n    this.items = [];\n    this.active = false;\n\n    const uiSourceCode = this.currentUISourceCode();\n    if (uiSourceCode) {\n      this.active = Formatter.FormatterWorkerPool.formatterWorkerPool().outlineForMimetype(\n          uiSourceCode.workingCopy(), uiSourceCode.contentType().canonicalMimeType(),\n          this.didBuildOutlineChunk.bind(this));\n    }\n  }\n\n  private didBuildOutlineChunk(isLastChunk: boolean, items: Formatter.FormatterWorkerPool.OutlineItem[]): void {\n    this.items.push(...items);\n    this.refresh();\n  }\n\n  itemCount(): number {\n    return this.items.length;\n  }\n\n  itemKeyAt(itemIndex: number): string {\n    const item = this.items[itemIndex];\n    return item.title + (item.subtitle ? item.subtitle : '');\n  }\n\n  itemScoreAt(itemIndex: number, query: string): number {\n    const item = this.items[itemIndex];\n    const methodName = query.split('(')[0];\n    if (methodName.toLowerCase() === item.title.toLowerCase()) {\n      return 1 / (1 + item.line);\n    }\n    return -item.line - 1;\n  }\n\n  renderItem(itemIndex: number, query: string, titleElement: Element, _subtitleElement: Element): void {\n    const item = this.items[itemIndex];\n    titleElement.textContent = item.title + (item.subtitle ? item.subtitle : '');\n    QuickOpen.FilteredListWidget.FilteredListWidget.highlightRanges(titleElement, query);\n\n    const tagElement = (titleElement.parentElement?.parentElement?.createChild('span', 'tag') as HTMLElement);\n    if (!tagElement) {\n      return;\n    }\n    tagElement.textContent = ':' + (item.line + 1);\n  }\n\n  selectItem(itemIndex: number|null, _promptValue: string): void {\n    if (itemIndex === null) {\n      return;\n    }\n    const uiSourceCode = this.currentUISourceCode();\n    if (!uiSourceCode) {\n      return;\n    }\n    const lineNumber = this.items[itemIndex].line;\n    if (!isNaN(lineNumber) && lineNumber >= 0) {\n      void Common.Revealer.reveal(uiSourceCode.uiLocation(lineNumber, this.items[itemIndex].column));\n    }\n  }\n\n  private currentUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    const sourcesView = UI.Context.Context.instance().flavor(SourcesView);\n    if (!sourcesView) {\n      return null;\n    }\n    return sourcesView.currentUISourceCode();\n  }\n\n  notFoundText(): string {\n    if (!this.currentUISourceCode()) {\n      return i18nString(UIStrings.noFileSelected);\n    }\n    if (!this.active) {\n      return i18nString(UIStrings.openAJavascriptOrCssFileToSee);\n    }\n    return i18nString(UIStrings.noResultsFound);\n  }\n}\n"],
  "mappings": "AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAIhB,gBAAgB;AAAA,EAIhB,+BAA+B;AAAA,EAI/B,gBAAgB;AAAA;AAElB,MAAM,OAAO,KAAK,KAAK,kBAAkB,sCAAsC;AAC/E,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEhE,IAAI;AAEG,sCAA+B,UAAU,mBAAmB,SAAS;AAAA,EAClE;AAAA,EACA;AAAA,EACA,cAAc;AACpB;AACA,SAAK,QAAQ;AACb,SAAK,SAAS;AAAA;AAAA,SAGT,SAAS,OAEZ,EAAC,UAAU,QAAyB;AACtC,UAAM,EAAC,aAAY;AACnB,QAAI,CAAC,4BAA4B,UAAU;AACzC,iCAA2B,IAAI;AAAA;AAGjC,WAAO;AAAA;AAAA,EAGT,SAAe;AACb,SAAK,QAAQ;AACb,SAAK,SAAS;AAEd,UAAM,eAAe,KAAK;AAC1B,QAAI,cAAc;AAChB,WAAK,SAAS,UAAU,oBAAoB,sBAAsB,mBAC9D,aAAa,eAAe,aAAa,cAAc,qBACvD,KAAK,qBAAqB,KAAK;AAAA;AAAA;AAAA,EAI/B,qBAAqB,aAAsB,OAA0D;AAC3G,SAAK,MAAM,KAAK,GAAG;AACnB,SAAK;AAAA;AAAA,EAGP,YAAoB;AAClB,WAAO,KAAK,MAAM;AAAA;AAAA,EAGpB,UAAU,WAA2B;AACnC,UAAM,OAAO,KAAK,MAAM;AACxB,WAAO,KAAK,QAAS,MAAK,WAAW,KAAK,WAAW;AAAA;AAAA,EAGvD,YAAY,WAAmB,OAAuB;AACpD,UAAM,OAAO,KAAK,MAAM;AACxB,UAAM,aAAa,MAAM,MAAM,KAAK;AACpC,QAAI,WAAW,kBAAkB,KAAK,MAAM,eAAe;AACzD,aAAO,IAAK,KAAI,KAAK;AAAA;AAEvB,WAAO,CAAC,KAAK,OAAO;AAAA;AAAA,EAGtB,WAAW,WAAmB,OAAe,cAAuB,kBAAiC;AACnG,UAAM,OAAO,KAAK,MAAM;AACxB,iBAAa,cAAc,KAAK,QAAS,MAAK,WAAW,KAAK,WAAW;AACzE,cAAU,mBAAmB,mBAAmB,gBAAgB,cAAc;AAE9E,UAAM,aAAc,aAAa,eAAe,eAAe,YAAY,QAAQ;AACnF,QAAI,CAAC,YAAY;AACf;AAAA;AAEF,eAAW,cAAc,MAAO,MAAK,OAAO;AAAA;AAAA,EAG9C,WAAW,WAAwB,cAA4B;AAC7D,QAAI,cAAc,MAAM;AACtB;AAAA;AAEF,UAAM,eAAe,KAAK;AAC1B,QAAI,CAAC,cAAc;AACjB;AAAA;AAEF,UAAM,aAAa,KAAK,MAAM,WAAW;AACzC,QAAI,CAAC,MAAM,eAAe,cAAc,GAAG;AACzC,WAAK,OAAO,SAAS,OAAO,aAAa,WAAW,YAAY,KAAK,MAAM,WAAW;AAAA;AAAA;AAAA,EAIlF,sBAAgE;AACtE,UAAM,cAAc,GAAG,QAAQ,QAAQ,WAAW,OAAO;AACzD,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA;AAET,WAAO,YAAY;AAAA;AAAA,EAGrB,eAAuB;AACrB,QAAI,CAAC,KAAK,uBAAuB;AAC/B,aAAO,WAAW,UAAU;AAAA;AAE9B,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO,WAAW,UAAU;AAAA;AAE9B,WAAO,WAAW,UAAU;AAAA;AAAA;",
  "names": []
}
