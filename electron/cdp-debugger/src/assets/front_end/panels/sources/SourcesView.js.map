{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/SourcesView.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as QuickOpen from '../../ui/legacy/components/quick_open/quick_open.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Components from './components/components.js';\nimport {EditingLocationHistoryManager} from './EditingLocationHistoryManager.js';\nimport sourcesViewStyles from './sourcesView.css.js';\n\nimport type {EditorSelectedEvent, TabbedEditorContainerDelegate} from './TabbedEditorContainer.js';\nimport {Events as TabbedEditorContainerEvents, TabbedEditorContainer} from './TabbedEditorContainer.js';\nimport {Events as UISourceCodeFrameEvents, UISourceCodeFrame} from './UISourceCodeFrame.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to open a file\n  */\n  openFile: 'Open file',\n  /**\n  *@description Text to run commands\n  */\n  runCommand: 'Run command',\n  /**\n  *@description Text in Sources View of the Sources panel\n  */\n  dropInAFolderToAddToWorkspace: 'Drop in a folder to add to workspace',\n  /**\n  *@description Accessible label for Sources placeholder view actions list\n  */\n  sourceViewActions: 'Source View Actions',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/SourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SourcesView extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.Widget.VBox>(UI.Widget.VBox)\n    implements TabbedEditorContainerDelegate, UI.SearchableView.Searchable, UI.SearchableView.Replaceable {\n  private placeholderOptionArray: {\n    element: HTMLElement,\n    handler: Function,\n  }[];\n  private selectedIndex: number;\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n  private readonly sourceViewByUISourceCode: Map<Workspace.UISourceCode.UISourceCode, UI.Widget.Widget>;\n  editorContainer: TabbedEditorContainer;\n  private readonly historyManager: EditingLocationHistoryManager;\n  private readonly toolbarContainerElementInternal: HTMLElement;\n  private readonly scriptViewToolbar: UI.Toolbar.Toolbar;\n  private readonly bottomToolbarInternal: UI.Toolbar.Toolbar;\n  private toolbarChangedListener: Common.EventTarget.EventDescriptor|null;\n  private readonly shortcuts: Map<number, () => boolean>;\n  private readonly focusedPlaceholderElement?: HTMLElement;\n  private searchView?: UISourceCodeFrame;\n  private searchConfig?: UI.SearchableView.SearchConfig;\n\n  constructor() {\n    super();\n\n    this.element.id = 'sources-panel-sources-view';\n    this.setMinimumAndPreferredSizes(250, 52, 250, 100);\n\n    this.placeholderOptionArray = [];\n    this.selectedIndex = 0;\n\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this, this, 'sourcesViewSearchConfig');\n    this.searchableViewInternal.setMinimalSearchQuerySize(0);\n    this.searchableViewInternal.show(this.element);\n\n    this.sourceViewByUISourceCode = new Map();\n\n    this.editorContainer = new TabbedEditorContainer(\n        this, Common.Settings.Settings.instance().createLocalSetting('previouslyViewedFiles', []),\n        this.placeholderElement(), this.focusedPlaceholderElement);\n    this.editorContainer.show(this.searchableViewInternal.element);\n    this.editorContainer.addEventListener(TabbedEditorContainerEvents.EditorSelected, this.editorSelected, this);\n    this.editorContainer.addEventListener(TabbedEditorContainerEvents.EditorClosed, this.editorClosed, this);\n\n    this.historyManager = new EditingLocationHistoryManager(this);\n\n    this.toolbarContainerElementInternal = this.element.createChild('div', 'sources-toolbar');\n    if (!Root.Runtime.experiments.isEnabled('sourcesPrettyPrint')) {\n      const toolbarEditorActions = new UI.Toolbar.Toolbar('', this.toolbarContainerElementInternal);\n      for (const action of getRegisteredEditorActions()) {\n        toolbarEditorActions.appendToolbarItem(action.getOrCreateButton(this));\n      }\n    }\n    this.scriptViewToolbar = new UI.Toolbar.Toolbar('', this.toolbarContainerElementInternal);\n    this.scriptViewToolbar.element.style.flex = 'auto';\n    this.bottomToolbarInternal = new UI.Toolbar.Toolbar('', this.toolbarContainerElementInternal);\n\n    this.toolbarChangedListener = null;\n\n    UI.UIUtils.startBatchUpdate();\n    workspace.uiSourceCodes().forEach(this.addUISourceCode.bind(this));\n    UI.UIUtils.endBatchUpdate();\n\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this.uiSourceCodeAdded, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this.uiSourceCodeRemoved, this);\n    workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this.projectRemoved.bind(this), this);\n\n    function handleBeforeUnload(event: Event): void {\n      if (event.returnValue) {\n        return;\n      }\n\n      const unsavedSourceCodes: Workspace.UISourceCode.UISourceCode[] = [];\n      const projects =\n          Workspace.Workspace.WorkspaceImpl.instance().projectsForType(Workspace.Workspace.projectTypes.FileSystem);\n      for (const project of projects) {\n        unsavedSourceCodes.push(...project.uiSourceCodes().filter(sourceCode => sourceCode.isDirty()));\n      }\n\n      if (!unsavedSourceCodes.length) {\n        return;\n      }\n\n      event.returnValue = true;\n      void UI.ViewManager.ViewManager.instance().showView('sources');\n      for (const sourceCode of unsavedSourceCodes) {\n        void Common.Revealer.reveal(sourceCode);\n      }\n    }\n\n    if (!window.opener) {\n      window.addEventListener('beforeunload', handleBeforeUnload, true);\n    }\n\n    this.shortcuts = new Map();\n    this.element.addEventListener('keydown', this.handleKeyDown.bind(this), false);\n  }\n\n  private placeholderElement(): Element {\n    this.placeholderOptionArray = [];\n\n    const shortcuts = [\n      {actionId: 'quickOpen.show', description: i18nString(UIStrings.openFile)},\n      {actionId: 'commandMenu.show', description: i18nString(UIStrings.runCommand)},\n      {actionId: 'sources.add-folder-to-workspace', description: i18nString(UIStrings.dropInAFolderToAddToWorkspace)},\n    ];\n\n    const element = document.createElement('div');\n    const list = element.createChild('div', 'tabbed-pane-placeholder');\n    list.addEventListener('keydown', this.placeholderOnKeyDown.bind(this), false);\n    UI.ARIAUtils.markAsList(list);\n    UI.ARIAUtils.setAccessibleName(list, i18nString(UIStrings.sourceViewActions));\n\n    for (let i = 0; i < shortcuts.length; i++) {\n      const shortcut = shortcuts[i];\n      const shortcutKeyText = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(shortcut.actionId);\n      const listItemElement = list.createChild('div');\n      UI.ARIAUtils.markAsListitem(listItemElement);\n      const row = (listItemElement.createChild('div', 'tabbed-pane-placeholder-row') as HTMLElement);\n      row.tabIndex = -1;\n      UI.ARIAUtils.markAsButton(row);\n      if (shortcutKeyText) {\n        row.createChild('div', 'tabbed-pane-placeholder-key').textContent = shortcutKeyText;\n        row.createChild('div', 'tabbed-pane-placeholder-value').textContent = shortcut.description;\n      } else {\n        row.createChild('div', 'tabbed-pane-no-shortcut').textContent = shortcut.description;\n      }\n      const action = UI.ActionRegistry.ActionRegistry.instance().action(shortcut.actionId);\n      if (action) {\n        this.placeholderOptionArray.push({\n          element: row,\n          handler(): void {\n            void action.execute();\n          },\n        });\n      }\n    }\n\n    element.appendChild(\n        UI.XLink.XLink.create('https://developer.chrome.com/docs/devtools/workspaces/', 'Learn more about Workspaces'));\n\n    return element;\n  }\n\n  private placeholderOnKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (isEnterOrSpaceKey(keyboardEvent)) {\n      this.placeholderOptionArray[this.selectedIndex].handler();\n      return;\n    }\n\n    let offset = 0;\n    if (keyboardEvent.key === 'ArrowDown') {\n      offset = 1;\n    } else if (keyboardEvent.key === 'ArrowUp') {\n      offset = -1;\n    }\n\n    const newIndex = Math.max(Math.min(this.placeholderOptionArray.length - 1, this.selectedIndex + offset), 0);\n    const newElement = this.placeholderOptionArray[newIndex].element;\n    const oldElement = this.placeholderOptionArray[this.selectedIndex].element;\n    if (newElement !== oldElement) {\n      oldElement.tabIndex = -1;\n      newElement.tabIndex = 0;\n      UI.ARIAUtils.setSelected(oldElement, false);\n      UI.ARIAUtils.setSelected(newElement, true);\n      this.selectedIndex = newIndex;\n      newElement.focus();\n    }\n  }\n\n  static defaultUISourceCodeScores(): Map<Workspace.UISourceCode.UISourceCode, number> {\n    const defaultScores = new Map<Workspace.UISourceCode.UISourceCode, number>();\n    const sourcesView = UI.Context.Context.instance().flavor(SourcesView);\n    if (sourcesView) {\n      const uiSourceCodes = sourcesView.editorContainer.historyUISourceCodes();\n      for (let i = 1; i < uiSourceCodes.length; ++i)  // Skip current element\n      {\n        defaultScores.set(uiSourceCodes[i], uiSourceCodes.length - i);\n      }\n    }\n    return defaultScores;\n  }\n\n  leftToolbar(): UI.Toolbar.Toolbar {\n    return this.editorContainer.leftToolbar();\n  }\n\n  rightToolbar(): UI.Toolbar.Toolbar {\n    return this.editorContainer.rightToolbar();\n  }\n\n  bottomToolbar(): UI.Toolbar.Toolbar {\n    return this.bottomToolbarInternal;\n  }\n\n  private registerShortcuts(keys: UI.KeyboardShortcut.Descriptor[], handler: (arg0?: Event|undefined) => boolean):\n      void {\n    for (let i = 0; i < keys.length; ++i) {\n      this.shortcuts.set(keys[i].key, handler);\n    }\n  }\n\n  private handleKeyDown(event: Event): void {\n    const shortcutKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent((event as KeyboardEvent));\n    const handler = this.shortcuts.get(shortcutKey);\n    if (handler && handler()) {\n      event.consume(true);\n    }\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([sourcesViewStyles]);\n    UI.Context.Context.instance().setFlavor(SourcesView, this);\n  }\n\n  willHide(): void {\n    UI.Context.Context.instance().setFlavor(SourcesView, null);\n    super.willHide();\n  }\n\n  toolbarContainerElement(): Element {\n    return this.toolbarContainerElementInternal;\n  }\n\n  searchableView(): UI.SearchableView.SearchableView {\n    return this.searchableViewInternal;\n  }\n\n  visibleView(): UI.Widget.Widget|null {\n    return this.editorContainer.visibleView;\n  }\n\n  currentSourceFrame(): UISourceCodeFrame|null {\n    const view = this.visibleView();\n    if (!(view instanceof UISourceCodeFrame)) {\n      return null;\n    }\n    return (view as UISourceCodeFrame);\n  }\n\n  currentUISourceCode(): Workspace.UISourceCode.UISourceCode|null {\n    return this.editorContainer.currentFile();\n  }\n\n  onCloseEditorTab(): boolean {\n    const uiSourceCode = this.editorContainer.currentFile();\n    if (!uiSourceCode) {\n      return false;\n    }\n    this.editorContainer.closeFile(uiSourceCode);\n    return true;\n  }\n\n  onJumpToPreviousLocation(): void {\n    this.historyManager.rollback();\n  }\n\n  onJumpToNextLocation(): void {\n    this.historyManager.rollover();\n  }\n\n  private uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.addUISourceCode(uiSourceCode);\n  }\n\n  private addUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (uiSourceCode.project().isServiceProject()) {\n      return;\n    }\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.FileSystem &&\n        Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(uiSourceCode.project()) ===\n            'overrides') {\n      return;\n    }\n    this.editorContainer.addUISourceCode(uiSourceCode);\n  }\n\n  private uiSourceCodeRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.removeUISourceCodes([uiSourceCode]);\n  }\n\n  private removeUISourceCodes(uiSourceCodes: Workspace.UISourceCode.UISourceCode[]): void {\n    this.editorContainer.removeUISourceCodes(uiSourceCodes);\n    for (let i = 0; i < uiSourceCodes.length; ++i) {\n      this.removeSourceFrame(uiSourceCodes[i]);\n      this.historyManager.removeHistoryForSourceCode(uiSourceCodes[i]);\n    }\n  }\n\n  private projectRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.Project>): void {\n    const project = event.data;\n    const uiSourceCodes = project.uiSourceCodes();\n    this.removeUISourceCodes(uiSourceCodes);\n  }\n\n  private updateScriptViewToolbarItems(): void {\n    const view = this.visibleView();\n    if (view instanceof UI.View.SimpleView) {\n      void view.toolbarItems().then(items => {\n        this.scriptViewToolbar.removeToolbarItems();\n        items.map(item => this.scriptViewToolbar.appendToolbarItem(item));\n      });\n    }\n  }\n\n  showSourceLocation(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, location?: {lineNumber: number, columnNumber?: number}|number,\n      omitFocus?: boolean, omitHighlight?: boolean): void {\n    const currentFrame = this.currentSourceFrame();\n    if (currentFrame) {\n      this.historyManager.updateCurrentState(\n          currentFrame.uiSourceCode(), currentFrame.textEditor.state.selection.main.head);\n    }\n    this.editorContainer.showFile(uiSourceCode);\n    const currentSourceFrame = this.currentSourceFrame();\n    if (currentSourceFrame && location) {\n      currentSourceFrame.revealPosition(location, !omitHighlight);\n    }\n    const visibleView = this.visibleView();\n    if (!omitFocus && visibleView) {\n      visibleView.focus();\n    }\n  }\n\n  private createSourceView(uiSourceCode: Workspace.UISourceCode.UISourceCode): UI.Widget.Widget {\n    let sourceFrame;\n    let sourceView;\n    const contentType = uiSourceCode.contentType();\n\n    if (contentType === Common.ResourceType.resourceTypes.Image) {\n      sourceView = new SourceFrame.ImageView.ImageView(uiSourceCode.mimeType(), uiSourceCode);\n    } else if (contentType === Common.ResourceType.resourceTypes.Font) {\n      sourceView = new SourceFrame.FontView.FontView(uiSourceCode.mimeType(), uiSourceCode);\n    } else if (\n        uiSourceCode.name() === HEADER_OVERRIDES_FILENAME &&\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES)) {\n      sourceView = new Components.HeadersView.HeadersView(uiSourceCode);\n    } else {\n      sourceFrame = new UISourceCodeFrame(uiSourceCode);\n    }\n\n    if (sourceFrame) {\n      this.historyManager.trackSourceFrameCursorJumps(sourceFrame);\n    }\n\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.#uiSourceCodeTitleChanged, this);\n\n    const widget = (sourceFrame || sourceView as UI.Widget.Widget);\n    this.sourceViewByUISourceCode.set(uiSourceCode, widget);\n    return widget;\n  }\n\n  #sourceViewTypeForWidget(widget: UI.Widget.Widget): SourceViewType {\n    if (widget instanceof SourceFrame.ImageView.ImageView) {\n      return SourceViewType.ImageView;\n    }\n    if (widget instanceof SourceFrame.FontView.FontView) {\n      return SourceViewType.FontView;\n    }\n    if (widget instanceof Components.HeadersView.HeadersView) {\n      return SourceViewType.HeadersView;\n    }\n    return SourceViewType.SourceView;\n  }\n\n  #sourceViewTypeForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SourceViewType {\n    if (uiSourceCode.name() === HEADER_OVERRIDES_FILENAME &&\n        Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES)) {\n      return SourceViewType.HeadersView;\n    }\n    const contentType = uiSourceCode.contentType();\n    switch (contentType) {\n      case Common.ResourceType.resourceTypes.Image:\n        return SourceViewType.ImageView;\n      case Common.ResourceType.resourceTypes.Font:\n        return SourceViewType.FontView;\n      default:\n        return SourceViewType.SourceView;\n    }\n  }\n\n  #uiSourceCodeTitleChanged(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    const widget = this.sourceViewByUISourceCode.get(uiSourceCode);\n    if (widget) {\n      if (this.#sourceViewTypeForWidget(widget) !== this.#sourceViewTypeForUISourceCode(uiSourceCode)) {\n        // Remove the exisiting editor tab and create a new one of the correct type.\n        this.removeUISourceCodes([uiSourceCode]);\n        this.showSourceLocation(uiSourceCode);\n      }\n    }\n  }\n\n  getSourceView(uiSourceCode: Workspace.UISourceCode.UISourceCode): UI.Widget.Widget|undefined {\n    return this.sourceViewByUISourceCode.get(uiSourceCode);\n  }\n\n  private getOrCreateSourceView(uiSourceCode: Workspace.UISourceCode.UISourceCode): UI.Widget.Widget {\n    return this.sourceViewByUISourceCode.get(uiSourceCode) || this.createSourceView(uiSourceCode);\n  }\n\n  recycleUISourceCodeFrame(sourceFrame: UISourceCodeFrame, uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    sourceFrame.uiSourceCode().removeEventListener(\n        Workspace.UISourceCode.Events.TitleChanged, this.#uiSourceCodeTitleChanged, this);\n    this.sourceViewByUISourceCode.delete(sourceFrame.uiSourceCode());\n    sourceFrame.setUISourceCode(uiSourceCode);\n    this.sourceViewByUISourceCode.set(uiSourceCode, sourceFrame);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.#uiSourceCodeTitleChanged, this);\n  }\n\n  viewForFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): UI.Widget.Widget {\n    return this.getOrCreateSourceView(uiSourceCode);\n  }\n\n  private removeSourceFrame(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const sourceView = this.sourceViewByUISourceCode.get(uiSourceCode);\n    this.sourceViewByUISourceCode.delete(uiSourceCode);\n    if (sourceView && sourceView instanceof UISourceCodeFrame) {\n      (sourceView as UISourceCodeFrame).dispose();\n    }\n    uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.TitleChanged, this.#uiSourceCodeTitleChanged, this);\n  }\n\n  private editorClosed(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.historyManager.removeHistoryForSourceCode(uiSourceCode);\n\n    let wasSelected = false;\n    if (!this.editorContainer.currentFile()) {\n      wasSelected = true;\n    }\n\n    // SourcesNavigator does not need to update on EditorClosed.\n    this.removeToolbarChangedListener();\n    this.updateScriptViewToolbarItems();\n    this.searchableViewInternal.resetSearch();\n\n    const data = {\n      uiSourceCode: uiSourceCode,\n      wasSelected: wasSelected,\n    };\n    this.dispatchEventToListeners(Events.EditorClosed, data);\n  }\n\n  private editorSelected(event: Common.EventTarget.EventTargetEvent<EditorSelectedEvent>): void {\n    const previousSourceFrame = event.data.previousView instanceof UISourceCodeFrame ? event.data.previousView : null;\n    if (previousSourceFrame) {\n      previousSourceFrame.setSearchableView(null);\n    }\n    const currentSourceFrame = event.data.currentView instanceof UISourceCodeFrame ? event.data.currentView : null;\n    if (currentSourceFrame) {\n      currentSourceFrame.setSearchableView(this.searchableViewInternal);\n    }\n\n    this.searchableViewInternal.setReplaceable(Boolean(currentSourceFrame?.canEditSource()));\n    this.searchableViewInternal.refreshSearch();\n    this.updateToolbarChangedListener();\n    this.updateScriptViewToolbarItems();\n\n    const currentFile = this.editorContainer.currentFile();\n    if (currentFile) {\n      this.dispatchEventToListeners(Events.EditorSelected, currentFile);\n    }\n  }\n\n  private removeToolbarChangedListener(): void {\n    if (this.toolbarChangedListener) {\n      Common.EventTarget.removeEventListeners([this.toolbarChangedListener]);\n    }\n    this.toolbarChangedListener = null;\n  }\n\n  private updateToolbarChangedListener(): void {\n    this.removeToolbarChangedListener();\n    const sourceFrame = this.currentSourceFrame();\n    if (!sourceFrame) {\n      return;\n    }\n    this.toolbarChangedListener = sourceFrame.addEventListener(\n        UISourceCodeFrameEvents.ToolbarItemsChanged, this.updateScriptViewToolbarItems, this);\n  }\n\n  searchCanceled(): void {\n    if (this.searchView) {\n      this.searchView.searchCanceled();\n    }\n\n    delete this.searchView;\n    delete this.searchConfig;\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    const sourceFrame = this.currentSourceFrame();\n    if (!sourceFrame) {\n      return;\n    }\n\n    this.searchView = sourceFrame;\n    this.searchConfig = searchConfig;\n\n    this.searchView.performSearch(this.searchConfig, shouldJump, jumpBackwards);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this.searchView) {\n      return;\n    }\n\n    if (this.searchConfig && this.searchView !== this.currentSourceFrame()) {\n      this.performSearch(this.searchConfig, true);\n      return;\n    }\n\n    this.searchView.jumpToNextSearchResult();\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this.searchView) {\n      return;\n    }\n\n    if (this.searchConfig && this.searchView !== this.currentSourceFrame()) {\n      this.performSearch(this.searchConfig, true);\n      if (this.searchView) {\n        this.searchView.jumpToLastSearchResult();\n      }\n      return;\n    }\n\n    this.searchView.jumpToPreviousSearchResult();\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  replaceSelectionWith(searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    const sourceFrame = this.currentSourceFrame();\n    if (!sourceFrame) {\n      console.assert(Boolean(sourceFrame));\n      return;\n    }\n    sourceFrame.replaceSelectionWith(searchConfig, replacement);\n  }\n\n  replaceAllWith(searchConfig: UI.SearchableView.SearchConfig, replacement: string): void {\n    const sourceFrame = this.currentSourceFrame();\n    if (!sourceFrame) {\n      console.assert(Boolean(sourceFrame));\n      return;\n    }\n    sourceFrame.replaceAllWith(searchConfig, replacement);\n  }\n\n  showOutlineQuickOpen(): void {\n    QuickOpen.QuickOpen.QuickOpenImpl.show('@');\n  }\n\n  showGoToLineQuickOpen(): void {\n    if (this.editorContainer.currentFile()) {\n      QuickOpen.QuickOpen.QuickOpenImpl.show(':');\n    }\n  }\n\n  save(): void {\n    this.saveSourceView(this.visibleView());\n  }\n\n  saveAll(): void {\n    const sourceFrames = this.editorContainer.fileViews();\n    sourceFrames.forEach(this.saveSourceView.bind(this));\n  }\n\n  private saveSourceView(sourceView: UI.Widget.Widget|null): void {\n    if (sourceView instanceof UISourceCodeFrame || sourceView instanceof Components.HeadersView.HeadersView) {\n      sourceView.commitEditing();\n    }\n  }\n\n  toggleBreakpointsActiveState(active: boolean): void {\n    this.editorContainer.view.element.classList.toggle('breakpoints-deactivated', !active);\n  }\n}\n\nexport  // TODO(crbug.com/1167717): Make this a const enum again\n    // eslint-disable-next-line rulesdir/const_enum\n    enum Events {\n      EditorClosed = 'EditorClosed',\n      EditorSelected = 'EditorSelected',\n    }\n\nexport interface EditorClosedEvent {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  wasSelected: boolean;\n}\n\nexport type EventTypes = {\n  [Events.EditorClosed]: EditorClosedEvent,\n  [Events.EditorSelected]: Workspace.UISourceCode.UISourceCode,\n};\n\nexport interface EditorAction {\n  getOrCreateButton(sourcesView: SourcesView): UI.Toolbar.ToolbarButton;\n}\n\nconst registeredEditorActions: (() => EditorAction)[] = [];\n\nexport function registerEditorAction(editorAction: () => EditorAction): void {\n  registeredEditorActions.push(editorAction);\n}\n\nexport function getRegisteredEditorActions(): EditorAction[] {\n  return registeredEditorActions.map(editorAction => editorAction());\n}\n\nlet switchFileActionDelegateInstance: SwitchFileActionDelegate;\n\nexport class SwitchFileActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SwitchFileActionDelegate {\n    const {forceNew} = opts;\n    if (!switchFileActionDelegateInstance || forceNew) {\n      switchFileActionDelegateInstance = new SwitchFileActionDelegate();\n    }\n\n    return switchFileActionDelegateInstance;\n  }\n\n  private static nextFile(currentUISourceCode: Workspace.UISourceCode.UISourceCode): Workspace.UISourceCode.UISourceCode\n      |null {\n    function fileNamePrefix(name: string): string {\n      const lastDotIndex = name.lastIndexOf('.');\n      const namePrefix = name.substr(0, lastDotIndex !== -1 ? lastDotIndex : name.length);\n      return namePrefix.toLowerCase();\n    }\n\n    const uiSourceCodes = currentUISourceCode.project().uiSourceCodes();\n    const candidates = [];\n    const url = currentUISourceCode.parentURL();\n    const name = currentUISourceCode.name();\n    const namePrefix = fileNamePrefix(name);\n    for (let i = 0; i < uiSourceCodes.length; ++i) {\n      const uiSourceCode = uiSourceCodes[i];\n      if (url !== uiSourceCode.parentURL()) {\n        continue;\n      }\n      if (fileNamePrefix(uiSourceCode.name()) === namePrefix) {\n        candidates.push(uiSourceCode.name());\n      }\n    }\n    candidates.sort(Platform.StringUtilities.naturalOrderComparator);\n    const index = Platform.NumberUtilities.mod(candidates.indexOf(name) + 1, candidates.length);\n    const fullURL = Common.ParsedURL.ParsedURL.concatenate(\n        (url ? Common.ParsedURL.ParsedURL.concatenate(url, '/') : '' as Platform.DevToolsPath.UrlString),\n        candidates[index]);\n    const nextUISourceCode = currentUISourceCode.project().uiSourceCodeForURL(fullURL);\n    return nextUISourceCode !== currentUISourceCode ? nextUISourceCode : null;\n  }\n\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    const sourcesView = UI.Context.Context.instance().flavor(SourcesView);\n    if (!sourcesView) {\n      return false;\n    }\n    const currentUISourceCode = sourcesView.currentUISourceCode();\n    if (!currentUISourceCode) {\n      return false;\n    }\n    const nextUISourceCode = SwitchFileActionDelegate.nextFile(currentUISourceCode);\n    if (!nextUISourceCode) {\n      return false;\n    }\n    sourcesView.showSourceLocation(nextUISourceCode);\n    return true;\n  }\n}\n\nlet actionDelegateInstance: ActionDelegate;\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const sourcesView = UI.Context.Context.instance().flavor(SourcesView);\n    if (!sourcesView) {\n      return false;\n    }\n\n    switch (actionId) {\n      case 'sources.close-all':\n        sourcesView.editorContainer.closeAllFiles();\n        return true;\n      case 'sources.jump-to-previous-location':\n        sourcesView.onJumpToPreviousLocation();\n        return true;\n      case 'sources.jump-to-next-location':\n        sourcesView.onJumpToNextLocation();\n        return true;\n      case 'sources.close-editor-tab':\n        return sourcesView.onCloseEditorTab();\n      case 'sources.go-to-line':\n        sourcesView.showGoToLineQuickOpen();\n        return true;\n      case 'sources.go-to-member':\n        sourcesView.showOutlineQuickOpen();\n        return true;\n      case 'sources.save':\n        sourcesView.save();\n        return true;\n      case 'sources.save-all':\n        sourcesView.saveAll();\n        return true;\n    }\n\n    return false;\n  }\n}\n\nconst HEADER_OVERRIDES_FILENAME = '.headers';\n\n// eslint-disable-next-line rulesdir/const_enum\nenum SourceViewType {\n  ImageView = 'ImageView',\n  FontView = 'FontView',\n  HeadersView = 'HeadersView',\n  SourceView = 'SourceView',\n}\n"],
  "mappings": "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",
  "names": []
}
