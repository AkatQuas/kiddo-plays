{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/ScopeChainSidebarPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as SourceMapScopes from '../../models/source_map_scopes/source_map_scopes.js';\nimport * as LinearMemoryInspector from '../../ui/components/linear_memory_inspector/linear_memory_inspector.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport scopeChainSidebarPaneStyles from './scopeChainSidebarPane.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Loading indicator in Scope Sidebar Pane of the Sources panel\n  */\n  loading: 'Loading...',\n  /**\n  *@description Not paused message element text content in Call Stack Sidebar Pane of the Sources panel\n  */\n  notPaused: 'Not paused',\n  /**\n  *@description Empty placeholder in Scope Chain Sidebar Pane of the Sources panel\n  */\n  noVariables: 'No variables',\n  /**\n  *@description Text in the Sources panel Scope pane describing a closure scope.\n  *@example {func} PH1\n  */\n  closureS: 'Closure ({PH1})',\n  /**\n  *@description Text that refers to closure as a programming term\n  */\n  closure: 'Closure',\n  /**\n  *@description Text in Scope Chain Sidebar Pane of the Sources panel\n  */\n  exception: 'Exception',\n  /**\n  *@description Text in Scope Chain Sidebar Pane of the Sources panel\n  */\n  returnValue: 'Return value',\n  /**\n  *@description A context menu item in the Scope View of the Sources Panel\n  */\n  revealInMemoryInspectorPanel: 'Reveal in Memory Inspector panel',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/ScopeChainSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet scopeChainSidebarPaneInstance: ScopeChainSidebarPane;\n\nexport class ScopeChainSidebarPane extends UI.Widget.VBox implements UI.ContextFlavorListener.ContextFlavorListener {\n  private readonly treeOutline: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline;\n  private readonly expandController: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private infoElement: HTMLDivElement;\n  #scopesScript: SDK.Script.Script|null = null;\n\n  private constructor() {\n    super(true);\n\n    this.treeOutline = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline();\n\n    this.treeOutline.setShowSelectionOnKeyboardFocus(/* show */ true);\n    this.expandController =\n        new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController(this.treeOutline);\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.infoElement = document.createElement('div');\n    this.infoElement.className = 'gray-info-message';\n    this.infoElement.tabIndex = -1;\n    void this.update();\n  }\n\n  static instance(): ScopeChainSidebarPane {\n    if (!scopeChainSidebarPaneInstance) {\n      scopeChainSidebarPaneInstance = new ScopeChainSidebarPane();\n    }\n    return scopeChainSidebarPaneInstance;\n  }\n\n  flavorChanged(_object: Object|null): void {\n    void this.update();\n  }\n\n  focus(): void {\n    if (this.hasFocus()) {\n      return;\n    }\n\n    if (UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails)) {\n      this.treeOutline.forceSelect();\n    }\n  }\n\n  private sourceMapAttached(\n      event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap}>):\n      void {\n    if (event.data.client === this.#scopesScript) {\n      void this.update();\n    }\n  }\n\n  private setScopeSourceMapSubscription(callFrame: SDK.DebuggerModel.CallFrame|null): void {\n    const oldScript = this.#scopesScript;\n    this.#scopesScript = callFrame?.script ?? null;\n\n    // Shortcut for the case when we are listening to the same model.\n    if (oldScript?.debuggerModel === this.#scopesScript?.debuggerModel) {\n      return;\n    }\n\n    if (oldScript) {\n      oldScript.debuggerModel.sourceMapManager().removeEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this);\n    }\n\n    if (this.#scopesScript) {\n      this.#scopesScript.debuggerModel.sourceMapManager().addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this);\n    }\n  }\n\n  private async update(): Promise<void> {\n    // The `resolveThisObject(callFrame)` and `resolveScopeChain(callFrame)` calls\n    // below may take a while to complete, so indicate to the user that something\n    // is happening (see https://crbug.com/1162416).\n    this.infoElement.textContent = i18nString(UIStrings.loading);\n    this.contentElement.removeChildren();\n    this.contentElement.appendChild(this.infoElement);\n\n    this.linkifier.reset();\n\n    const callFrame = UI.Context.Context.instance().flavor(SDK.DebuggerModel.CallFrame);\n    this.setScopeSourceMapSubscription(callFrame);\n    const [thisObject, scopeChain] = await Promise.all([\n      SourceMapScopes.NamesResolver.resolveThisObject(callFrame),\n      SourceMapScopes.NamesResolver.resolveScopeChain(callFrame),\n    ]);\n    // By now the developer might have moved on, and we don't want to show stale\n    // scope information, so check again that we're still on the same CallFrame.\n    if (callFrame === UI.Context.Context.instance().flavor(SDK.DebuggerModel.CallFrame)) {\n      const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n      this.treeOutline.removeChildren();\n\n      if (!details || !callFrame || !scopeChain) {\n        this.infoElement.textContent = i18nString(UIStrings.notPaused);\n        return;\n      }\n\n      this.contentElement.removeChildren();\n      this.contentElement.appendChild(this.treeOutline.element);\n      let foundLocalScope = false;\n      for (let i = 0; i < scopeChain.length; ++i) {\n        const scope = scopeChain[i];\n        const extraProperties = this.extraPropertiesForScope(scope, details, callFrame, thisObject, i === 0);\n\n        if (scope.type() === Protocol.Debugger.ScopeType.Local) {\n          foundLocalScope = true;\n        }\n\n        const section = this.createScopeSectionTreeElement(scope, extraProperties);\n        if (scope.type() === Protocol.Debugger.ScopeType.Global) {\n          section.collapse();\n        } else if (!foundLocalScope || scope.type() === Protocol.Debugger.ScopeType.Local) {\n          section.expand();\n        }\n\n        this.treeOutline.appendChild(section);\n        if (i === 0) {\n          section.select(/* omitFocus */ true);\n        }\n      }\n      this.sidebarPaneUpdatedForTest();\n    }\n  }\n\n  private createScopeSectionTreeElement(\n      scope: SDK.DebuggerModel.ScopeChainEntry,\n      extraProperties: SDK.RemoteObject.RemoteObjectProperty[]): ObjectUI.ObjectPropertiesSection.RootElement {\n    let emptyPlaceholder: Common.UIString.LocalizedString|null = null;\n    if (scope.type() === Protocol.Debugger.ScopeType.Local || Protocol.Debugger.ScopeType.Closure) {\n      emptyPlaceholder = i18nString(UIStrings.noVariables);\n    }\n\n    let title = scope.typeName();\n    if (scope.type() === Protocol.Debugger.ScopeType.Closure) {\n      const scopeName = scope.name();\n      if (scopeName) {\n        title = i18nString(UIStrings.closureS, {PH1: UI.UIUtils.beautifyFunctionName(scopeName)});\n      } else {\n        title = i18nString(UIStrings.closure);\n      }\n    }\n    let subtitle: string|null = scope.description();\n    if (!title || title === subtitle) {\n      subtitle = null;\n    }\n    const icon = scope.icon();\n\n    const titleElement = document.createElement('div');\n    titleElement.classList.add('scope-chain-sidebar-pane-section-header');\n    titleElement.classList.add('tree-element-title');\n    if (icon) {\n      const iconElement = document.createElement('img');\n      iconElement.classList.add('scope-chain-sidebar-pane-section-icon');\n      iconElement.src = icon;\n      titleElement.appendChild(iconElement);\n    }\n    titleElement.createChild('div', 'scope-chain-sidebar-pane-section-subtitle').textContent = subtitle;\n    titleElement.createChild('div', 'scope-chain-sidebar-pane-section-title').textContent = title;\n\n    const section = new ObjectUI.ObjectPropertiesSection.RootElement(\n        SourceMapScopes.NamesResolver.resolveScopeInObject(scope), this.linkifier, emptyPlaceholder,\n        ObjectUI.ObjectPropertiesSection.ObjectPropertiesMode.All, extraProperties);\n    section.title = titleElement;\n    section.listItemElement.classList.add('scope-chain-sidebar-pane-section');\n    section.listItemElement.setAttribute('aria-label', title);\n    this.expandController.watchSection(title + (subtitle ? ':' + subtitle : ''), section);\n\n    return section;\n  }\n\n  private extraPropertiesForScope(\n      scope: SDK.DebuggerModel.ScopeChainEntry, details: SDK.DebuggerModel.DebuggerPausedDetails,\n      callFrame: SDK.DebuggerModel.CallFrame, thisObject: SDK.RemoteObject.RemoteObject|null,\n      isFirstScope: boolean): SDK.RemoteObject.RemoteObjectProperty[] {\n    if (scope.type() !== Protocol.Debugger.ScopeType.Local || callFrame.script.isWasm()) {\n      return [];\n    }\n\n    const extraProperties = [];\n    if (thisObject) {\n      extraProperties.push(new SDK.RemoteObject.RemoteObjectProperty(\n          'this', thisObject, undefined, undefined, undefined, undefined, undefined, /* synthetic */ true));\n    }\n    if (isFirstScope) {\n      const exception = details.exception();\n      if (exception) {\n        extraProperties.push(new SDK.RemoteObject.RemoteObjectProperty(\n            i18nString(UIStrings.exception), exception, undefined, undefined, undefined, undefined, undefined,\n            /* synthetic */ true));\n      }\n      const returnValue = callFrame.returnValue();\n      if (returnValue) {\n        extraProperties.push(new SDK.RemoteObject.RemoteObjectProperty(\n            i18nString(UIStrings.returnValue), returnValue, undefined, undefined, undefined, undefined, undefined,\n            /* synthetic */ true, callFrame.setReturnValue.bind(callFrame)));\n      }\n    }\n\n    return extraProperties;\n  }\n\n  private sidebarPaneUpdatedForTest(): void {\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.treeOutline.registerCSSFiles([scopeChainSidebarPaneStyles]);\n    this.registerCSSFiles([scopeChainSidebarPaneStyles]);\n  }\n}\n\nlet openLinearMemoryInspectorInstance: OpenLinearMemoryInspector;\n\nexport class OpenLinearMemoryInspector extends UI.Widget.VBox implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): OpenLinearMemoryInspector {\n    const {forceNew} = opts;\n    if (!openLinearMemoryInspectorInstance || forceNew) {\n      openLinearMemoryInspectorInstance = new OpenLinearMemoryInspector();\n    }\n\n    return openLinearMemoryInspectorInstance;\n  }\n\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    if (target instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement) {\n      if (target.property && target.property.value &&\n          LinearMemoryInspector.LinearMemoryInspectorController.isMemoryObjectProperty(target.property.value)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.revealInMemoryInspectorPanel),\n            this.openMemoryInspector.bind(this, target.property.value));\n      }\n    }\n  }\n\n  private async openMemoryInspector(obj: SDK.RemoteObject.RemoteObject): Promise<void> {\n    const controller = LinearMemoryInspector.LinearMemoryInspectorController.LinearMemoryInspectorController.instance();\n    Host.userMetrics.linearMemoryInspectorRevealedFrom(Host.UserMetrics.LinearMemoryInspectorRevealedFrom.ContextMenu);\n    void controller.openInspectorView(obj);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
