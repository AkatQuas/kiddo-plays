{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/WatchExpressionsSidebarPane.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of IBM Corp. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport watchExpressionsSidebarPaneStyles from './watchExpressionsSidebarPane.css.js';\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {UISourceCodeFrame} from './UISourceCodeFrame.js';\n\nconst UIStrings = {\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel\n  */\n  addWatchExpression: 'Add watch expression',\n  /**\n  *@description Tooltip/screen reader label of a button in the Sources panel that refreshes all watch expressions.\n  */\n  refreshWatchExpressions: 'Refresh watch expressions',\n  /**\n  *@description Empty element text content in Watch Expressions Sidebar Pane of the Sources panel\n  */\n  noWatchExpressions: 'No watch expressions',\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel\n  */\n  deleteAllWatchExpressions: 'Delete all watch expressions',\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel\n  */\n  addPropertyPathToWatch: 'Add property path to watch',\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel\n  */\n  deleteWatchExpression: 'Delete watch expression',\n  /**\n  *@description Value element text content in Watch Expressions Sidebar Pane of the Sources panel\n  */\n  notAvailable: '<not available>',\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel and Network pane request.\n  */\n  copyValue: 'Copy value',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/WatchExpressionsSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet watchExpressionsSidebarPaneInstance: WatchExpressionsSidebarPane;\n\nexport class WatchExpressionsSidebarPane extends UI.ThrottledWidget.ThrottledWidget implements\n    UI.ActionRegistration.ActionDelegate, UI.Toolbar.ItemsProvider, UI.ContextMenu.Provider {\n  private watchExpressions: WatchExpression[];\n  private emptyElement!: HTMLElement;\n  private readonly watchExpressionsSetting: Common.Settings.Setting<string[]>;\n  private readonly addButton: UI.Toolbar.ToolbarButton;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly treeOutline: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline;\n  private readonly expandController: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private constructor() {\n    super(true);\n\n    // TODO(szuend): Replace with a Set once the web test\n    // panels/sources/debugger-ui/watch-expressions-preserve-expansion.js is either converted\n    // to an e2e test or no longer accesses this variable directly.\n    this.watchExpressions = [];\n    this.watchExpressionsSetting =\n        Common.Settings.Settings.instance().createLocalSetting<string[]>('watchExpressions', []);\n\n    this.addButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.addWatchExpression), 'largeicon-add');\n    this.addButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.addButtonClicked();\n    });\n    this.refreshButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refreshWatchExpressions), 'largeicon-refresh');\n    this.refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.update, this);\n\n    this.contentElement.classList.add('watch-expressions');\n    this.contentElement.addEventListener('contextmenu', this.contextMenu.bind(this), false);\n    this.treeOutline = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline();\n\n    this.treeOutline.setShowSelectionOnKeyboardFocus(/* show */ true);\n    this.expandController =\n        new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController(this.treeOutline);\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.RuntimeModel.ExecutionContext, this.update, this);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DebuggerModel.CallFrame, this.update, this);\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.update();\n  }\n\n  static instance(): WatchExpressionsSidebarPane {\n    if (!watchExpressionsSidebarPaneInstance) {\n      watchExpressionsSidebarPaneInstance = new WatchExpressionsSidebarPane();\n    }\n    return watchExpressionsSidebarPaneInstance;\n  }\n\n  toolbarItems(): UI.Toolbar.ToolbarItem[] {\n    return [this.addButton, this.refreshButton];\n  }\n\n  focus(): void {\n    if (this.hasFocus()) {\n      return;\n    }\n    if (this.watchExpressions.length > 0) {\n      this.treeOutline.forceSelect();\n    }\n  }\n\n  hasExpressions(): boolean {\n    return Boolean(this.watchExpressionsSetting.get().length);\n  }\n\n  private saveExpressions(): void {\n    const toSave = [];\n    for (let i = 0; i < this.watchExpressions.length; i++) {\n      const expression = this.watchExpressions[i].expression();\n      if (expression) {\n        toSave.push(expression);\n      }\n    }\n\n    this.watchExpressionsSetting.set(toSave);\n  }\n\n  private async addButtonClicked(): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('sources.watch');\n    this.emptyElement.classList.add('hidden');\n    this.createWatchExpression(null).startEditing();\n  }\n\n  async doUpdate(): Promise<void> {\n    this.linkifier.reset();\n    this.contentElement.removeChildren();\n    this.treeOutline.removeChildren();\n    this.watchExpressions = [];\n    this.emptyElement = (this.contentElement.createChild('div', 'gray-info-message') as HTMLElement);\n    this.emptyElement.textContent = i18nString(UIStrings.noWatchExpressions);\n    this.emptyElement.tabIndex = -1;\n    const watchExpressionStrings = this.watchExpressionsSetting.get();\n    if (watchExpressionStrings.length) {\n      this.emptyElement.classList.add('hidden');\n    }\n    for (let i = 0; i < watchExpressionStrings.length; ++i) {\n      const expression = watchExpressionStrings[i];\n      if (!expression) {\n        continue;\n      }\n\n      this.createWatchExpression(expression);\n    }\n  }\n\n  private createWatchExpression(expression: string|null): WatchExpression {\n    this.contentElement.appendChild(this.treeOutline.element);\n    const watchExpression = new WatchExpression(expression, this.expandController, this.linkifier);\n    watchExpression.addEventListener(Events.ExpressionUpdated, this.watchExpressionUpdated, this);\n    this.treeOutline.appendChild(watchExpression.treeElement());\n    this.watchExpressions.push(watchExpression);\n    return watchExpression;\n  }\n\n  private watchExpressionUpdated({data: watchExpression}: Common.EventTarget.EventTargetEvent<WatchExpression>): void {\n    if (!watchExpression.expression()) {\n      Platform.ArrayUtilities.removeElement(this.watchExpressions, watchExpression);\n      this.treeOutline.removeChild(watchExpression.treeElement());\n      this.emptyElement.classList.toggle('hidden', Boolean(this.watchExpressions.length));\n      if (this.watchExpressions.length === 0) {\n        this.treeOutline.element.remove();\n      }\n    }\n\n    this.saveExpressions();\n  }\n\n  private contextMenu(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    this.populateContextMenu(contextMenu, event);\n    void contextMenu.show();\n  }\n\n  private populateContextMenu(contextMenu: UI.ContextMenu.ContextMenu, event: MouseEvent): void {\n    let isEditing = false;\n    for (const watchExpression of this.watchExpressions) {\n      isEditing = isEditing || watchExpression.isEditing();\n    }\n\n    if (!isEditing) {\n      contextMenu.debugSection().appendItem(i18nString(UIStrings.addWatchExpression), this.addButtonClicked.bind(this));\n    }\n\n    if (this.watchExpressions.length > 1) {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.deleteAllWatchExpressions), this.deleteAllButtonClicked.bind(this));\n    }\n\n    const treeElement = this.treeOutline.treeElementFromEvent(event);\n    if (!treeElement) {\n      return;\n    }\n    const currentWatchExpression =\n        this.watchExpressions.find(watchExpression => treeElement.hasAncestorOrSelf(watchExpression.treeElement()));\n    if (currentWatchExpression) {\n      currentWatchExpression.populateContextMenu(contextMenu, event);\n    }\n  }\n\n  private deleteAllButtonClicked(): void {\n    this.watchExpressions = [];\n    this.saveExpressions();\n    this.update();\n  }\n\n  private async focusAndAddExpressionToWatch(expression: string): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('sources.watch');\n    this.createWatchExpression(expression);\n    this.saveExpressions();\n    this.update();\n  }\n\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    const frame = UI.Context.Context.instance().flavor(UISourceCodeFrame);\n    if (!frame) {\n      return false;\n    }\n    const {state} = frame.textEditor;\n    const text = state.sliceDoc(state.selection.main.from, state.selection.main.to);\n    void this.focusAndAddExpressionToWatch(text);\n    return true;\n  }\n\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    if (target instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement && !target.property.synthetic) {\n      contextMenu.debugSection().appendItem(\n          i18nString(UIStrings.addPropertyPathToWatch), () => this.focusAndAddExpressionToWatch(target.path()));\n    }\n\n    const frame = UI.Context.Context.instance().flavor(UISourceCodeFrame);\n    if (!frame || frame.textEditor.state.selection.main.empty) {\n      return;\n    }\n\n    contextMenu.debugSection().appendAction('sources.add-to-watch');\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.treeOutline.registerCSSFiles([watchExpressionsSidebarPaneStyles]);\n    this.registerCSSFiles([watchExpressionsSidebarPaneStyles, objectValueStyles]);\n  }\n}\n\nexport class WatchExpression extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private treeElementInternal!: UI.TreeOutline.TreeElement;\n  private nameElement!: Element;\n  private valueElement!: Element;\n  private expressionInternal: string|null;\n  private readonly expandController: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController;\n  private element: HTMLDivElement;\n  private editing: boolean;\n  private linkifier: Components.Linkifier.Linkifier;\n  private textPrompt?: ObjectUI.ObjectPropertiesSection.ObjectPropertyPrompt;\n  private result?: SDK.RemoteObject.RemoteObject|null;\n  private preventClickTimeout?: number;\n  private resizeObserver?: ResizeObserver;\n  constructor(\n      expression: string|null,\n      expandController: ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController,\n      linkifier: Components.Linkifier.Linkifier) {\n    super();\n\n    this.expressionInternal = expression;\n    this.expandController = expandController;\n    this.element = document.createElement('div');\n    this.element.classList.add('watch-expression');\n    this.element.classList.add('monospace');\n    this.editing = false;\n    this.linkifier = linkifier;\n\n    this.createWatchExpression();\n    this.update();\n  }\n\n  treeElement(): UI.TreeOutline.TreeElement {\n    return this.treeElementInternal;\n  }\n\n  expression(): string|null {\n    return this.expressionInternal;\n  }\n\n  update(): void {\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (currentExecutionContext && this.expressionInternal) {\n      void currentExecutionContext\n          .evaluate(\n              {\n                expression: this.expressionInternal,\n                objectGroup: WatchExpression.watchObjectGroupId,\n                includeCommandLineAPI: false,\n                silent: true,\n                returnByValue: false,\n                generatePreview: false,\n                allowUnsafeEvalBlockedByCSP: undefined,\n                disableBreaks: undefined,\n                replMode: undefined,\n                throwOnSideEffect: undefined,\n                timeout: undefined,\n              },\n              /* userGesture */ false,\n              /* awaitPromise */ false)\n          .then(result => {\n            if ('object' in result) {\n              this.createWatchExpression(result.object, result.exceptionDetails);\n            } else {\n              this.createWatchExpression();\n            }\n          });\n    } else {\n      this.createWatchExpression();\n    }\n  }\n\n  startEditing(): void {\n    this.editing = true;\n    this.treeElementInternal.setDisableSelectFocus(true);\n    this.element.removeChildren();\n    const newDiv = this.element.createChild('div');\n    newDiv.textContent = this.nameElement.textContent;\n    this.textPrompt = new ObjectUI.ObjectPropertiesSection.ObjectPropertyPrompt();\n    this.textPrompt.renderAsBlock();\n    const proxyElement = (this.textPrompt.attachAndStartEditing(newDiv, this.finishEditing.bind(this)) as HTMLElement);\n    this.treeElementInternal.listItemElement.classList.add('watch-expression-editing');\n    this.treeElementInternal.collapse();\n    proxyElement.classList.add('watch-expression-text-prompt-proxy');\n    proxyElement.addEventListener('keydown', this.promptKeyDown.bind(this), false);\n    const selection = this.element.getComponentSelection();\n    if (selection) {\n      selection.selectAllChildren(newDiv);\n    }\n  }\n\n  isEditing(): boolean {\n    return Boolean(this.editing);\n  }\n\n  private finishEditing(event: Event, canceled?: boolean): void {\n    if (event) {\n      event.consume(canceled);\n    }\n\n    this.editing = false;\n    this.treeElementInternal.setDisableSelectFocus(false);\n    this.treeElementInternal.listItemElement.classList.remove('watch-expression-editing');\n    if (this.textPrompt) {\n      this.textPrompt.detach();\n      const newExpression = canceled ? this.expressionInternal : this.textPrompt.text();\n      this.textPrompt = undefined;\n      this.element.removeChildren();\n      this.updateExpression(newExpression);\n    }\n  }\n\n  private dblClickOnWatchExpression(event: Event): void {\n    event.consume();\n    if (!this.isEditing()) {\n      this.startEditing();\n    }\n  }\n\n  private updateExpression(newExpression: string|null): void {\n    if (this.expressionInternal) {\n      this.expandController.stopWatchSectionsWithId(this.expressionInternal);\n    }\n    this.resizeObserver?.disconnect();\n    this.expressionInternal = newExpression;\n    this.update();\n    this.dispatchEventToListeners(Events.ExpressionUpdated, this);\n  }\n\n  private deleteWatchExpression(event: Event): void {\n    event.consume(true);\n    this.updateExpression(null);\n  }\n\n  private createWatchExpression(\n      result?: SDK.RemoteObject.RemoteObject, exceptionDetails?: Protocol.Runtime.ExceptionDetails): void {\n    this.result = result || null;\n\n    this.element.removeChildren();\n    const oldTreeElement = this.treeElementInternal;\n    this.createWatchExpressionTreeElement(result, exceptionDetails);\n    if (oldTreeElement && oldTreeElement.parent) {\n      const root = oldTreeElement.parent;\n      const index = root.indexOfChild(oldTreeElement);\n      root.removeChild(oldTreeElement);\n      root.insertChild(this.treeElementInternal, index);\n    }\n    this.treeElementInternal.select();\n  }\n\n  private createWatchExpressionHeader(\n      expressionValue?: SDK.RemoteObject.RemoteObject, exceptionDetails?: Protocol.Runtime.ExceptionDetails): Element {\n    const headerElement = this.element.createChild('div', 'watch-expression-header');\n    const deleteButton = UI.Icon.Icon.create('smallicon-cross', 'watch-expression-delete-button');\n    this.resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        // 55 serves as a width threshold here (in px)\n        if (entry.contentRect.width < 55) {\n          deleteButton.classList.remove('right-aligned');\n          deleteButton.classList.add('left-aligned');\n        } else {\n          deleteButton.classList.remove('left-aligned');\n          deleteButton.classList.add('right-aligned');\n        }\n      });\n    });\n    this.resizeObserver.observe(headerElement);\n    UI.Tooltip.Tooltip.install(deleteButton, i18nString(UIStrings.deleteWatchExpression));\n    deleteButton.addEventListener('click', this.deleteWatchExpression.bind(this), false);\n\n    const titleElement = headerElement.createChild('div', 'watch-expression-title tree-element-title');\n    titleElement.appendChild(deleteButton);\n    this.nameElement =\n        ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.createNameElement(this.expressionInternal);\n    if (Boolean(exceptionDetails) || !expressionValue) {\n      this.valueElement = document.createElement('span');\n      this.valueElement.classList.add('watch-expression-error');\n      this.valueElement.classList.add('value');\n      titleElement.classList.add('dimmed');\n      this.valueElement.textContent = i18nString(UIStrings.notAvailable);\n      if (exceptionDetails !== undefined && exceptionDetails.exception !== undefined &&\n          exceptionDetails.exception.description !== undefined) {\n        UI.Tooltip.Tooltip.install(this.valueElement as HTMLElement, exceptionDetails.exception.description);\n      }\n    } else {\n      const propertyValue =\n          ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection.createPropertyValueWithCustomSupport(\n              expressionValue, Boolean(exceptionDetails), false /* showPreview */, titleElement, this.linkifier);\n      this.valueElement = propertyValue.element;\n    }\n    const separatorElement = document.createElement('span');\n    separatorElement.classList.add('watch-expressions-separator');\n    separatorElement.textContent = ': ';\n    titleElement.append(this.nameElement, separatorElement, this.valueElement);\n\n    return headerElement;\n  }\n\n  private createWatchExpressionTreeElement(\n      expressionValue?: SDK.RemoteObject.RemoteObject, exceptionDetails?: Protocol.Runtime.ExceptionDetails): void {\n    const headerElement = this.createWatchExpressionHeader(expressionValue, exceptionDetails);\n\n    if (!exceptionDetails && expressionValue && expressionValue.hasChildren && !expressionValue.customPreview()) {\n      headerElement.classList.add('watch-expression-object-header');\n      this.treeElementInternal = new ObjectUI.ObjectPropertiesSection.RootElement(expressionValue, this.linkifier);\n      this.expandController.watchSection(\n          (this.expressionInternal as string),\n          (this.treeElementInternal as ObjectUI.ObjectPropertiesSection.RootElement));\n      this.treeElementInternal.toggleOnClick = false;\n      this.treeElementInternal.listItemElement.addEventListener('click', this.onSectionClick.bind(this), false);\n      this.treeElementInternal.listItemElement.addEventListener('dblclick', this.dblClickOnWatchExpression.bind(this));\n    } else {\n      headerElement.addEventListener('dblclick', this.dblClickOnWatchExpression.bind(this));\n      this.treeElementInternal = new UI.TreeOutline.TreeElement();\n    }\n    this.treeElementInternal.title = this.element;\n    this.treeElementInternal.listItemElement.classList.add('watch-expression-tree-item');\n    this.treeElementInternal.listItemElement.addEventListener('keydown', event => {\n      if (event.key === 'Enter' && !this.isEditing()) {\n        this.startEditing();\n        event.consume(true);\n      }\n    });\n  }\n\n  private onSectionClick(event: Event): void {\n    event.consume(true);\n    const mouseEvent = (event as MouseEvent);\n    if (mouseEvent.detail === 1) {\n      this.preventClickTimeout = window.setTimeout(handleClick.bind(this), 333);\n    } else if (this.preventClickTimeout !== undefined) {\n      window.clearTimeout(this.preventClickTimeout);\n      this.preventClickTimeout = undefined;\n    }\n\n    function handleClick(this: WatchExpression): void {\n      if (!this.treeElementInternal) {\n        return;\n      }\n\n      if (this.treeElementInternal.expanded) {\n        this.treeElementInternal.collapse();\n      } else if (!this.editing) {\n        this.treeElementInternal.expand();\n      }\n    }\n  }\n\n  private promptKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || isEscKey(event)) {\n      this.finishEditing(event, isEscKey(event));\n    }\n  }\n\n  populateContextMenu(contextMenu: UI.ContextMenu.ContextMenu, event: Event): void {\n    if (!this.isEditing()) {\n      contextMenu.editSection().appendItem(\n          i18nString(UIStrings.deleteWatchExpression), this.updateExpression.bind(this, null));\n    }\n\n    if (!this.isEditing() && this.result && (this.result.type === 'number' || this.result.type === 'string')) {\n      contextMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyValue), this.copyValueButtonClicked.bind(this));\n    }\n\n    const target = UI.UIUtils.deepElementFromEvent(event);\n    if (target && this.valueElement.isSelfOrAncestor(target) && this.result) {\n      contextMenu.appendApplicableItems(this.result);\n    }\n  }\n\n  private copyValueButtonClicked(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.valueElement.textContent);\n  }\n\n  private static readonly watchObjectGroupId = 'watch-group';\n}\n\nconst enum Events {\n  ExpressionUpdated = 'ExpressionUpdated',\n}\n\ntype EventTypes = {\n  [Events.ExpressionUpdated]: WatchExpression,\n};\n"],
  "mappings": "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",
  "names": []
}
