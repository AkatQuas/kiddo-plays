{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/sources/DebuggerPausedMessage.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport debuggerPausedMessageStyles from './debuggerPausedMessage.css.js';\n\nimport type * as Bindings from '../../models/bindings/bindings.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in the JavaScript Debugging pane of the Sources pane when a DOM breakpoint is hit\n  *@example {conditional breakpoint} PH1\n  */\n  pausedOnS: 'Paused on {PH1}',\n  /**\n  *@description Text in the JavaScript Debugging pane of the Sources pane when a DOM breakpoint is hit because a child is added to the subtree\n  *@example {node} PH1\n  */\n  childSAdded: 'Child {PH1} added',\n  /**\n  *@description Text in the JavaScript Debugging pane of the Sources pane when a DOM breakpoint is hit because a descendant is added\n  *@example {node} PH1\n  */\n  descendantSAdded: 'Descendant {PH1} added',\n  /**\n  *@description Text in the JavaScript Debugging pane of the Sources pane when a DOM breakpoint is hit because a descendant is removed\n  *@example {node} PH1\n  */\n  descendantSRemoved: 'Descendant {PH1} removed',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnEventListener: 'Paused on event listener',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnXhrOrFetch: 'Paused on XHR or fetch',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnException: 'Paused on exception',\n  /**\n  *@description We pause exactly when the promise rejection is happening, so that the user can see where in the code it comes from.\n  * A Promise is a Web API object (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise),\n  * that will either be 'fulfilled' or 'rejected' at some unknown time in the future.\n  * The subject of the term is omited but it is \"Execution\", that is, \"Execution was paused on <event>\".\n  */\n  pausedOnPromiseRejection: 'Paused on `promise` rejection',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnAssertion: 'Paused on assertion',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnDebuggedFunction: 'Paused on debugged function',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedBeforePotentialOutofmemory: 'Paused before potential out-of-memory crash',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnCspViolation: 'Paused on CSP violation',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel specifying cause of break\n  */\n  trustedTypeSinkViolation: '`Trusted Type` Sink Violation',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel specifying cause of break\n  */\n  trustedTypePolicyViolation: '`Trusted Type` Policy Violation',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  pausedOnBreakpoint: 'Paused on breakpoint',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  debuggerPaused: 'Debugger paused',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  subtreeModifications: 'subtree modifications',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  attributeModifications: 'attribute modifications',\n  /**\n  *@description Text in Debugger Paused Message of the Sources panel\n  */\n  nodeRemoval: 'node removal',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/DebuggerPausedMessage.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class DebuggerPausedMessage {\n  private readonly elementInternal: HTMLDivElement;\n  private contentElement: HTMLElement;\n  constructor() {\n    this.elementInternal = document.createElement('div');\n    this.elementInternal.classList.add('paused-message');\n    this.elementInternal.classList.add('flex-none');\n    const root = UI.Utils.createShadowRootWithCoreStyles(\n        this.elementInternal, {cssFile: [debuggerPausedMessageStyles], delegatesFocus: undefined});\n    this.contentElement = (root.createChild('div') as HTMLElement);\n    UI.ARIAUtils.markAsPoliteLiveRegion(this.elementInternal, false);\n  }\n\n  element(): Element {\n    return this.elementInternal;\n  }\n\n  private static descriptionWithoutStack(description: string): string {\n    const firstCallFrame = /^\\s+at\\s/m.exec(description);\n    return firstCallFrame ? description.substring(0, firstCallFrame.index - 1) :\n                            description.substring(0, description.lastIndexOf('\\n'));\n  }\n\n  private static async createDOMBreakpointHitMessage(details: SDK.DebuggerModel.DebuggerPausedDetails):\n      Promise<Element> {\n    const messageWrapper = document.createElement('span');\n    const domDebuggerModel = details.debuggerModel.target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    if (!details.auxData || !domDebuggerModel) {\n      return messageWrapper;\n    }\n    const data = domDebuggerModel.resolveDOMBreakpointData((details.auxData as {\n      type: Protocol.DOMDebugger.DOMBreakpointType,\n      nodeId: Protocol.DOM.NodeId,\n      targetNodeId: Protocol.DOM.NodeId,\n      insertion: boolean,\n    }));\n    if (!data) {\n      return messageWrapper;\n    }\n\n    const mainElement = messageWrapper.createChild('div', 'status-main');\n    mainElement.appendChild(UI.Icon.Icon.create('smallicon-clear-info', 'status-icon'));\n    const breakpointType = BreakpointTypeNouns.get(data.type);\n    mainElement.appendChild(document.createTextNode(\n        i18nString(UIStrings.pausedOnS, {PH1: breakpointType ? breakpointType() : String(null)})));\n\n    const subElement = messageWrapper.createChild('div', 'status-sub monospace');\n    const linkifiedNode = await Common.Linkifier.Linkifier.linkify(data.node);\n    subElement.appendChild(linkifiedNode);\n\n    if (data.targetNode) {\n      const targetNodeLink = await Common.Linkifier.Linkifier.linkify(data.targetNode);\n      let messageElement;\n      if (data.insertion) {\n        if (data.targetNode === data.node) {\n          messageElement = i18n.i18n.getFormatLocalizedString(str_, UIStrings.childSAdded, {PH1: targetNodeLink});\n        } else {\n          messageElement = i18n.i18n.getFormatLocalizedString(str_, UIStrings.descendantSAdded, {PH1: targetNodeLink});\n        }\n      } else {\n        messageElement = i18n.i18n.getFormatLocalizedString(str_, UIStrings.descendantSRemoved, {PH1: targetNodeLink});\n      }\n      subElement.appendChild(document.createElement('br'));\n      subElement.appendChild(messageElement);\n    }\n    return messageWrapper;\n  }\n\n  async render(\n      details: SDK.DebuggerModel.DebuggerPausedDetails|null,\n      debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding,\n      breakpointManager: Bindings.BreakpointManager.BreakpointManager): Promise<void> {\n    this.contentElement.removeChildren();\n    this.contentElement.hidden = !details;\n    if (!details) {\n      return;\n    }\n\n    const status = this.contentElement.createChild('div', 'paused-status');\n\n    const errorLike = details.reason === Protocol.Debugger.PausedEventReason.Exception ||\n        details.reason === Protocol.Debugger.PausedEventReason.PromiseRejection ||\n        details.reason === Protocol.Debugger.PausedEventReason.Assert ||\n        details.reason === Protocol.Debugger.PausedEventReason.OOM;\n    let messageWrapper;\n    if (details.reason === Protocol.Debugger.PausedEventReason.DOM) {\n      messageWrapper = await DebuggerPausedMessage.createDOMBreakpointHitMessage(details);\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.EventListener) {\n      let eventNameForUI = '';\n      if (details.auxData) {\n        const maybeNonDomEventNameForUI =\n            SDK.EventBreakpointsModel.EventBreakpointsManager.instance().resolveEventListenerBreakpointTitle(\n                (details.auxData as {eventName: string}));\n        if (maybeNonDomEventNameForUI) {\n          eventNameForUI = maybeNonDomEventNameForUI;\n        } else {\n          eventNameForUI = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().resolveEventListenerBreakpointTitle(\n              (details.auxData as {\n                directiveText: string,\n                eventName: string,\n                targetName: string,\n                webglErrorName: string,\n              }));\n        }\n      }\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedOnEventListener), eventNameForUI);\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.XHR) {\n      const auxData = (details.auxData as PausedDetailsAuxData);\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedOnXhrOrFetch), auxData.url || '');\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.Exception) {\n      const auxData = (details.auxData as PausedDetailsAuxData);\n      const description = auxData.description || auxData.value || '';\n      const descriptionWithoutStack = DebuggerPausedMessage.descriptionWithoutStack(description);\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedOnException), descriptionWithoutStack, description);\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.PromiseRejection) {\n      const auxData = (details.auxData as PausedDetailsAuxData);\n      const description = auxData.description || auxData.value || '';\n      const descriptionWithoutStack = DebuggerPausedMessage.descriptionWithoutStack(description);\n      messageWrapper =\n          buildWrapper(i18nString(UIStrings.pausedOnPromiseRejection), descriptionWithoutStack, description);\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.Assert) {\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedOnAssertion));\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.DebugCommand) {\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedOnDebuggedFunction));\n    } else if (details.reason === Protocol.Debugger.PausedEventReason.OOM) {\n      messageWrapper = buildWrapper(i18nString(UIStrings.pausedBeforePotentialOutofmemory));\n    } else if (\n        details.reason === Protocol.Debugger.PausedEventReason.CSPViolation && details.auxData &&\n        details.auxData['violationType']) {\n      const text = (details.auxData['violationType'] as string);\n      if (text === Protocol.DOMDebugger.CSPViolationType.TrustedtypeSinkViolation) {\n        messageWrapper =\n            buildWrapper(i18nString(UIStrings.pausedOnCspViolation), i18nString(UIStrings.trustedTypeSinkViolation));\n      } else if (text === Protocol.DOMDebugger.CSPViolationType.TrustedtypePolicyViolation) {\n        messageWrapper =\n            buildWrapper(i18nString(UIStrings.pausedOnCspViolation), i18nString(UIStrings.trustedTypePolicyViolation));\n      }\n    } else if (details.callFrames.length) {\n      const uiLocation = await debuggerWorkspaceBinding.rawLocationToUILocation(details.callFrames[0].location());\n      const breakpoint = uiLocation ? breakpointManager.findBreakpoint(uiLocation) : null;\n      const defaultText = breakpoint ? i18nString(UIStrings.pausedOnBreakpoint) : i18nString(UIStrings.debuggerPaused);\n      messageWrapper = buildWrapper(defaultText);\n    } else {\n      console.warn(\n          'ScriptsPanel paused, but callFrames.length is zero.');  // TODO remove this once we understand this case better\n    }\n\n    status.classList.toggle('error-reason', errorLike);\n    if (messageWrapper) {\n      status.appendChild(messageWrapper);\n    }\n\n    function buildWrapper(mainText: string, subText?: string, title?: string): Element {\n      const messageWrapper = document.createElement('span');\n      const mainElement = messageWrapper.createChild('div', 'status-main');\n      const icon = UI.Icon.Icon.create(errorLike ? 'smallicon-clear-error' : 'smallicon-clear-info', 'status-icon');\n      mainElement.appendChild(icon);\n      mainElement.appendChild(document.createTextNode(mainText));\n      if (subText) {\n        const subElement = messageWrapper.createChild('div', 'status-sub monospace');\n        subElement.textContent = subText;\n        UI.Tooltip.Tooltip.install(subElement, title || subText);\n      }\n      return messageWrapper;\n    }\n  }\n}\n\nexport const BreakpointTypeNouns = new Map([\n  [Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified, i18nLazyString(UIStrings.subtreeModifications)],\n  [Protocol.DOMDebugger.DOMBreakpointType.AttributeModified, i18nLazyString(UIStrings.attributeModifications)],\n  [Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved, i18nLazyString(UIStrings.nodeRemoval)],\n]);\ninterface PausedDetailsAuxData {\n  description?: string;\n  url?: Platform.DevToolsPath.UrlString;\n  value?: string;\n}\n"],
  "mappings": "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",
  "names": []
}
