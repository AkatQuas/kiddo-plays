{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/settings/components/SyncSection.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport type * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Settings from '../../../ui/components/settings/settings.js';\nimport * as ChromeLink from '../../../ui/components/chrome_link/chrome_link.js';\n\nimport syncSectionStyles from './syncSection.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n  /**\n   * @description Text shown to the user in the Settings UI. 'This setting' refers\n   * to a checkbox that is disabled.\n   */\n  preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n  /**\n   * @description Label for a link that take the user to the \"Sync\" section of the\n   * chrome settings. The link is shown in the DevTools Settings UI.\n   */\n  settings: 'Go to Settings',\n  /**\n   * @description Label for the account email address. Shown in the DevTools Settings UI in\n   * front of the email address currently used for Chrome Sync.\n   */\n  signedIn: 'Signed into Chrome as:',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SyncSectionData {\n  syncInfo: Host.InspectorFrontendHostAPI.SyncInformation;\n  syncSetting: Common.Settings.Setting<boolean>;\n}\n\nexport class SyncSection extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-sync-section`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #syncInfo: Host.InspectorFrontendHostAPI.SyncInformation = {isSyncActive: false};\n  #syncSetting?: Common.Settings.Setting<boolean>;\n\n  #boundRender = this.#render.bind(this);\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [syncSectionStyles];\n  }\n\n  set data(data: SyncSectionData) {\n    this.#syncInfo = data.syncInfo;\n    this.#syncSetting = data.syncSetting;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  #render(): void {\n    if (!this.#syncSetting) {\n      throw new Error('SyncSection not properly initialized');\n    }\n\n    const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    LitHtml.render(LitHtml.html`\n      <fieldset>\n        <legend>${Common.Settings.getLocalizedSettingsCategory(Common.Settings.SettingCategory.SYNC)}</legend>\n        ${renderAccountInfoOrWarning(this.#syncInfo)}\n        <${Settings.SettingCheckbox.SettingCheckbox.litTagName} .data=${\n            {setting: this.#syncSetting, disabled: checkboxDisabled} as Settings.SettingCheckbox.SettingCheckboxData}>\n        </${Settings.SettingCheckbox.SettingCheckbox.litTagName}>\n      </fieldset>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\n/* x-link doesn't work with custom click/keydown handlers */\n/* eslint-disable rulesdir/ban_a_tags_in_lit_html */\n\nfunction renderAccountInfoOrWarning(syncInfo: Host.InspectorFrontendHostAPI.SyncInformation): LitHtml.TemplateResult {\n  if (!syncInfo.isSyncActive) {\n    const link = 'chrome://settings/syncSetup';\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <span class=\"warning\">\n        ${i18nString(UIStrings.syncDisabled)}\n        <${ChromeLink.ChromeLink.ChromeLink.litTagName} .href=${link}>${i18nString(UIStrings.settings)}</${ChromeLink.ChromeLink.ChromeLink.litTagName}>\n      </span>`;\n    // clang-format on\n  }\n  if (!syncInfo.arePreferencesSynced) {\n    const link = 'chrome://settings/syncSetup/advanced';\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <span class=\"warning\">\n        ${i18nString(UIStrings.preferencesSyncDisabled)}\n        <${ChromeLink.ChromeLink.ChromeLink.litTagName} .href=${link}>${i18nString(UIStrings.settings)}</${ChromeLink.ChromeLink.ChromeLink.litTagName}>\n      </span>`;\n    // clang-format on\n  }\n  return LitHtml.html`\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-sync-section', SyncSection);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-sync-section': SyncSection;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,MAAM,YAAY;AAAA,EAKhB,cAAc;AAAA,EAKd,yBAAyB;AAAA,EAKzB,UAAU;AAAA,EAKV,UAAU;AAAA;AAEZ,MAAM,OAAO,KAAK,KAAK,kBAAkB,6CAA6C;AACtF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAOzD,iCAA0B,YAAY;AAAA,SAC3B,aAAa,QAAQ;AAAA,YAClB,KAAK,aAAa,EAAC,MAAM;AAAA,cAEe,EAAC,cAAc;AAAA;AAAA,iBAG3D,aAAa,KAAK;AAAA,EAEjC,oBAA0B;AACxB,iBAAa,qBAAqB,CAAC;AAAA;AAAA,MAGjC,KAAK,MAAuB;AAC9B,qBAAiB,KAAK;AACtB,wBAAoB,KAAK;AACzB,SAAK,iBAAiB,gBAAgB,eAAe,MAAM;AAAA;AAAA,YAG7C;AACd,QAAI,CAAC,mBAAmB;AACtB,YAAM,IAAI,MAAM;AAAA;AAGlB,UAAM,mBAAmB,CAAC,eAAe,gBAAgB,CAAC,eAAe;AAGzE,YAAQ,OAAO,QAAQ;AAAA;AAAA,kBAET,OAAO,SAAS,6BAA6B,OAAO,SAAS,gBAAgB;AAAA,UACrF,2BAA2B;AAAA,WAC1B,SAAS,gBAAgB,gBAAgB,oBACxC,EAAC,SAAS,mBAAmB,UAAU;AAAA,YACvC,SAAS,gBAAgB,gBAAgB;AAAA;AAAA,OAE9C,cAAc,EAAC,MAAM;AAAA;AAAA;AAQ5B,oCAAoC,UAAiF;AACnH,MAAI,CAAC,SAAS,cAAc;AAC1B,UAAM,OAAO;AAGb,WAAO,QAAQ;AAAA;AAAA,UAET,WAAW,UAAU;AAAA,WACpB,WAAW,WAAW,WAAW,oBAAoB,QAAQ,WAAW,UAAU,cAAc,WAAW,WAAW,WAAW;AAAA;AAAA;AAI1I,MAAI,CAAC,SAAS,sBAAsB;AAClC,UAAM,OAAO;AAGb,WAAO,QAAQ;AAAA;AAAA,UAET,WAAW,UAAU;AAAA,WACpB,WAAW,WAAW,WAAW,oBAAoB,QAAQ,WAAW,UAAU,cAAc,WAAW,WAAW,WAAW;AAAA;AAAA;AAI1I,SAAO,QAAQ;AAAA;AAAA,yCAEwB,SAAS;AAAA;AAAA,gBAElC,WAAW,UAAU;AAAA,gBACrB,SAAS;AAAA;AAAA;AAAA;AAKzB,iBAAiB,eAAe,gBAAgB,yBAAyB;",
  "names": []
}
