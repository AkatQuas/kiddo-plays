{
  "version": 3,
  "sources": ["../../../../../../../../front_end/panels/settings/emulation/components/UserAgentClientHintsForm.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport userAgentClientHintsFormStyles from './userAgentClientHintsForm.css.js';\n\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Input from '../../../../ui/components/input/input.js';\nimport * as IconButton from '../../../../ui/components/icon_button/icon_button.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as EmulationUtils from '../utils/utils.js';\n\nconst UIStrings = {\n  /**\n    * @description Title for user agent client hints form\n    */\n  title: 'User agent client hints',\n  /**\n    * @description Heading for brands section.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  brands: 'Brands',\n  /**\n    * @description ARIA label for a form with properties for a single brand in a brand list. The form includes a brand name input field, a version\n    * input field and a delete icon. Brand refer to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  brandProperties: 'Brand properties',\n  /**\n    * @description Input field placeholder for brands browser name.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  brandName: 'Brand',\n  /**\n    * @description Aria label for brands browser name input field.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    * @example {index} PH1\n    */\n  brandNameAriaLabel: 'Brand {PH1}',\n  /**\n    * @description Input field placeholder for brands version.\n    * Brands here relate to different browser brands/vendors like Google Chrome (v89), Microsoft Edge (v92) etc.\n    */\n  version: 'Version',\n  /**\n    * @description Aria label for brands browser version input field.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    * @example {index} PH1\n    */\n  brandVersionAriaLabel: 'Version {PH1}',\n  /**\n    * @description Button title for adding another brand in brands section to client hints.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  addBrand: 'Add Brand',\n  /**\n    * @description Tooltip for delete icon for deleting browser brand in brands section.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  deleteTooltip: 'Delete',\n  /**\n    * @description Aria label for delete icon for deleting browser brand in brands section.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    * @example {index} PH1\n    */\n  brandDeleteAriaLabel: 'Delete {PH1}',\n  /**\n    * @description Label for full browser version input field.\n    */\n  fullBrowserVersion: 'Full browser version',\n  /**\n    * @description Placeholder for full browser version input field.\n    */\n  fullBrowserVersionPlaceholder: 'Full browser version (e.g. 87.0.4280.88)',\n  /**\n    * @description Label for platform heading section, platform relates to OS like Android, Windows etc.\n    */\n  platformLabel: 'Platform',\n  /**\n    * @description Platform row, including platform name and platform version input field.\n    */\n  platformProperties: 'Platform properties',\n  /**\n    * @description Version for platform input field, platform relates to OS like Android, Windows etc.\n    */\n  platformVersion: 'Platform version',\n  /**\n    * @description Placeholder for platform name input field, platform relates to OS like Android, Windows etc.\n    */\n  platformPlaceholder: 'Platform (e.g. Android)',\n  /**\n    * @description Label for architecture (Eg: x86, x64, arm) input field.\n    */\n  architecture: 'Architecture',\n  /**\n    * @description Placeholder for architecture (Eg: x86, x64, arm) input field.\n    */\n  architecturePlaceholder: 'Architecture (e.g. x86)',\n  /**\n    * @description Device model row, including device model input field and mobile checkbox\n    */\n  deviceProperties: 'Device properties',\n  /**\n    * @description Label for Device Model input field.\n    */\n  deviceModel: 'Device model',\n  /**\n    * @description Label for Mobile phone checkbox.\n    */\n  mobileCheckboxLabel: 'Mobile',\n  /**\n    * @description Label for button to submit client hints form in DevTools.\n    */\n  update: 'Update',\n  /**\n    *@description Field Error message in the Device settings pane that shows that the entered value has characters that can't be represented in the corresponding User Agent Client Hints\n    */\n  notRepresentable: 'Not representable as structured headers string.',\n  /**\n    * @description Aria label for information link in user agent client hints form.\n    */\n  userAgentClientHintsInfo:\n      'User agent client hints are an alternative to the user agent string that identify the browser and the device in a more structured way with better privacy accounting. Click the button to learn more.',\n  /**\n    * @description Success message when brand row is successfully added in client hints form.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  addedBrand: 'Added brand row',\n  /**\n    * @description Success message when brand row is successfully deleted in client hints form.\n    * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n    */\n  deletedBrand: 'Deleted brand row',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/emulation/components/UserAgentClientHintsForm.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ClientHintsChangeEvent extends Event {\n  static readonly eventName = 'clienthintschange';\n  constructor() {\n    super(ClientHintsChangeEvent.eventName);\n  }\n}\n\nexport class ClientHintsSubmitEvent extends Event {\n  static readonly eventName = 'clienthintssubmit';\n  detail: {value: Protocol.Emulation.UserAgentMetadata};\n\n  constructor(value: Protocol.Emulation.UserAgentMetadata) {\n    super(ClientHintsSubmitEvent.eventName);\n    this.detail = {value};\n  }\n}\n\nexport interface UserAgentClientHintsFormData {\n  metaData?: Protocol.Emulation.UserAgentMetadata;\n  showMobileCheckbox?: boolean;\n  showSubmitButton?: boolean;\n}\n\nconst DEFAULT_METADATA = {\n  brands: [\n    {\n      brand: '',\n      version: '',\n    },\n  ],\n  fullVersion: '',\n  platform: '',\n  platformVersion: '',\n  architecture: '',\n  model: '',\n  mobile: false,\n};\n\n/**\n * Component for user agent client hints form, it is used in device settings panel\n * and network conditions panel. It is customizable through showMobileCheckbox and showSubmitButton.\n */\n// eslint-disable-next-line rulesdir/custom_element_definitions_location\nexport class UserAgentClientHintsForm extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-user-agent-client-hints-form`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #isFormOpened: boolean = false;\n  #isFormDisabled: boolean = false;\n  #metaData: Protocol.Emulation.UserAgentMetadata = DEFAULT_METADATA;\n  #showMobileCheckbox: boolean = false;\n  #showSubmitButton: boolean = false;\n  #brandsModifiedAriaMessage: string = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, userAgentClientHintsFormStyles];\n  }\n\n  set value(data: UserAgentClientHintsFormData) {\n    const {metaData = DEFAULT_METADATA, showMobileCheckbox = false, showSubmitButton = false} = data;\n    this.#metaData = {\n      ...this.#metaData,\n      ...metaData,\n    };\n    this.#showMobileCheckbox = showMobileCheckbox;\n    this.#showSubmitButton = showSubmitButton;\n    this.#render();\n  }\n\n  get value(): UserAgentClientHintsFormData {\n    return {\n      metaData: this.#metaData,\n    };\n  }\n\n  set disabled(disableForm: boolean) {\n    this.#isFormDisabled = disableForm;\n    this.#isFormOpened = false;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#isFormDisabled;\n  }\n\n  #handleTreeExpand = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter' || event.code === 'ArrowLeft' || event.code === 'ArrowRight') {\n      event.stopPropagation();\n      this.#handleTreeClick(event.code);\n    }\n  };\n\n  #handleTreeClick = (key: string): void => {\n    if (this.#isFormDisabled) {\n      return;\n    }\n    if ((key === 'ArrowLeft' && !this.#isFormOpened) || (key === 'ArrowRight' && this.#isFormOpened)) {\n      return;\n    }\n    this.#isFormOpened = !this.#isFormOpened;\n    this.#render();\n  };\n\n  #handleBrandInputChange = (value: string, index: number, brandInputType: 'brandName'|'brandVersion'): void => {\n    const updatedBrands = this.#metaData.brands?.map((browserBrand, brandIndex) => {\n      if (brandIndex === index) {\n        const {brand, version} = browserBrand;\n        if (brandInputType === 'brandName') {\n          return {\n            brand: value,\n            version,\n          };\n        }\n        return {\n          brand,\n          version: value,\n        };\n      }\n      return browserBrand;\n    });\n    this.#metaData = {\n      ...this.#metaData,\n      brands: updatedBrands,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#render();\n  };\n\n  #handleBrandDelete = (index: number): void => {\n    const {brands = []} = this.#metaData;\n    brands.splice(index, 1);\n    this.#metaData = {\n      ...this.#metaData,\n      brands,\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#brandsModifiedAriaMessage = i18nString(UIStrings.deletedBrand);\n    this.#render();\n\n    // after deleting a brand row, focus on next Brand input if available,\n    // otherwise focus on the \"Add Brand\" button\n    let nextFocusElement = this.shadowRoot?.getElementById(`brand-${index + 1}-input`);\n    if (!nextFocusElement) {\n      nextFocusElement = this.shadowRoot?.getElementById('add-brand-button');\n    }\n    (nextFocusElement as HTMLElement)?.focus();\n  };\n\n  #handleAddBrandClick = (): void => {\n    const {brands} = this.#metaData;\n    this.#metaData = {\n      ...this.#metaData,\n      brands: [\n        ...(Array.isArray(brands) ? brands : []),\n        {\n          brand: '',\n          version: '',\n        },\n      ],\n    };\n    this.dispatchEvent(new ClientHintsChangeEvent());\n    this.#brandsModifiedAriaMessage = i18nString(UIStrings.addedBrand);\n    this.#render();\n    const brandInputElements = this.shadowRoot?.querySelectorAll('.brand-name-input');\n    if (brandInputElements) {\n      const lastBrandInputElement = Array.from(brandInputElements).pop();\n      if (lastBrandInputElement) {\n        (lastBrandInputElement as HTMLInputElement).focus();\n      }\n    }\n  };\n\n  #handleAddBrandKeyPress = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      event.preventDefault();\n      this.#handleAddBrandClick();\n    }\n  };\n\n  #handleInputChange = (stateKey: keyof Protocol.Emulation.UserAgentMetadata, value: string|boolean): void => {\n    if (stateKey in this.#metaData) {\n      this.#metaData = {\n        ...this.#metaData,\n        [stateKey]: value,\n      };\n      this.#render();\n    }\n    this.dispatchEvent(new ClientHintsChangeEvent());\n  };\n\n  #handleLinkPress = (event: KeyboardEvent): void => {\n    if (event.code === 'Space' || event.code === 'Enter') {\n      event.preventDefault();\n      (event.target as HTMLAnchorElement).click();\n    }\n  };\n\n  #handleSubmit = (event: Event): void => {\n    event.preventDefault();\n    if (this.#showSubmitButton) {\n      this.dispatchEvent(new ClientHintsSubmitEvent(this.#metaData));\n      this.#render();\n    }\n  };\n\n  #renderInputWithLabel(\n      label: string, placeholder: string, value: string,\n      stateKey: keyof Protocol.Emulation.UserAgentMetadata): LitHtml.TemplateResult {\n    const handleInputChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange(stateKey, value);\n    };\n    return LitHtml.html`\n      <label class=\"full-row label input-field-label-container\">\n        ${label}\n        <input\n          class=\"input-field\"\n          type=\"text\"\n          @input=${handleInputChange}\n          .value=${value}\n          placeholder=${placeholder}\n        />\n      </label>\n    `;\n  }\n\n  #renderPlatformSection(): LitHtml.TemplateResult {\n    const {platform, platformVersion} = this.#metaData;\n    const handlePlatformNameChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('platform', value);\n    };\n    const handlePlatformVersionChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('platformVersion', value);\n    };\n    return LitHtml.html`\n      <span class=\"full-row label\">${i18nString(UIStrings.platformLabel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.platformProperties)} role=\"group\">\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformNameChange}\n          .value=${platform}\n          placeholder=${i18nString(UIStrings.platformPlaceholder)}\n          aria-label=${i18nString(UIStrings.platformLabel)}\n        />\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformVersionChange}\n          .value=${platformVersion}\n          placeholder=${i18nString(UIStrings.platformVersion)}\n          aria-label=${i18nString(UIStrings.platformVersion)}\n        />\n      </div>\n    `;\n  }\n\n  #renderDeviceModelSection(): LitHtml.TemplateResult {\n    const {model, mobile} = this.#metaData;\n    const handleDeviceModelChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).value;\n      this.#handleInputChange('model', value);\n    };\n    const handleMobileChange = (event: KeyboardEvent): void => {\n      const value = (event.target as HTMLInputElement).checked;\n      this.#handleInputChange('mobile', value);\n    };\n    const mobileCheckboxInput = this.#showMobileCheckbox ? LitHtml.html`\n      <label class=\"mobile-checkbox-container\">\n        <input type=\"checkbox\" @input=${handleMobileChange} .checked=${mobile} />\n        ${i18nString(UIStrings.mobileCheckboxLabel)}\n      </label>\n    ` :\n                                                           LitHtml.html``;\n    return LitHtml.html`\n      <span class=\"full-row label\">${i18nString(UIStrings.deviceModel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.deviceProperties)} role=\"group\">\n        <input\n          class=\"input-field ${this.#showMobileCheckbox ? 'device-model-input' : 'full-row'}\"\n          type=\"text\"\n          @input=${handleDeviceModelChange}\n          .value=${model}\n          placeholder=${i18nString(UIStrings.deviceModel)}\n        />\n        ${mobileCheckboxInput}\n      </div>\n    `;\n  }\n\n  #renderBrands(): LitHtml.TemplateResult {\n    const {\n      brands =\n          [\n            {\n              brand: '',\n              version: '',\n            },\n          ],\n    } = this.#metaData;\n    const brandElements = brands.map((brandRow, index) => {\n      const {brand, version} = brandRow;\n      const handleDeleteClick = (): void => {\n        this.#handleBrandDelete(index);\n      };\n      const handleKeyPress = (event: KeyboardEvent): void => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n          event.preventDefault();\n          handleDeleteClick();\n        }\n      };\n      const handleBrandBrowserChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleBrandInputChange(value, index, 'brandName');\n      };\n      const handleBrandVersionChange = (event: KeyboardEvent): void => {\n        const value = (event.target as HTMLInputElement).value;\n        this.#handleBrandInputChange(value, index, 'brandVersion');\n      };\n      return LitHtml.html`\n        <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.brandProperties)} role=\"group\">\n          <input\n            class=\"input-field brand-name-input\"\n            type=\"text\"\n            @input=${handleBrandBrowserChange}\n            .value=${brand}\n            id=\"brand-${index + 1}-input\"\n            placeholder=${i18nString(UIStrings.brandName)}\n            aria-label=${i18nString(UIStrings.brandNameAriaLabel, {\n        PH1: index + 1,\n      })}\n          />\n          <input\n            class=\"input-field\"\n            type=\"text\"\n            @input=${handleBrandVersionChange}\n            .value=${version}\n            placeholder=${i18nString(UIStrings.version)}\n            aria-label=${i18nString(UIStrings.brandVersionAriaLabel, {\n        PH1: index + 1,\n      })}\n          />\n          <${IconButton.Icon.Icon.litTagName}\n            .data=${\n          {color: 'var(--client-hints-form-icon-color)', iconName: 'trash_bin_icon', width: '10px', height: '14px'} as\n          IconButton.Icon.IconData}\n            title=${i18nString(UIStrings.deleteTooltip)}\n            class=\"delete-icon\"\n            tabindex=\"0\"\n            role=\"button\"\n            @click=${handleDeleteClick}\n            @keypress=${handleKeyPress}\n            aria-label=${i18nString(UIStrings.brandDeleteAriaLabel, {\n        PH1: index + 1,\n      })}\n          >\n          </${IconButton.Icon.Icon.litTagName}>\n        </div>\n      `;\n    });\n    return LitHtml.html`\n      <span class=\"full-row label\">${i18nString(UIStrings.brands)}</span>\n      ${brandElements}\n      <div\n        class=\"add-container full-row\"\n        role=\"button\"\n        tabindex=\"0\"\n        id=\"add-brand-button\"\n        aria-label=${i18nString(UIStrings.addBrand)}\n        @click=${this.#handleAddBrandClick}\n        @keypress=${this.#handleAddBrandKeyPress}\n      >\n        <${IconButton.Icon.Icon.litTagName}\n          aria-hidden=\"true\"\n          .data=${\n        {color: 'var(--client-hints-form-icon-color)', iconName: 'add-icon', width: '10px'} as IconButton.Icon.IconData}\n        >\n        </${IconButton.Icon.Icon.litTagName}>\n        ${i18nString(UIStrings.addBrand)}\n      </div>\n    `;\n  }\n\n  #render(): void {\n    const {fullVersion, architecture} = this.#metaData;\n    const brandSection = this.#renderBrands();\n    const fullBrowserInput = this.#renderInputWithLabel(\n        i18nString(UIStrings.fullBrowserVersion), i18nString(UIStrings.fullBrowserVersionPlaceholder),\n        fullVersion || '', 'fullVersion');\n    const platformSection = this.#renderPlatformSection();\n    const architectureInput = this.#renderInputWithLabel(\n        i18nString(UIStrings.architecture), i18nString(UIStrings.architecturePlaceholder), architecture,\n        'architecture');\n    const deviceModelSection = this.#renderDeviceModelSection();\n    const submitButton = this.#showSubmitButton ? LitHtml.html`\n      <${Buttons.Button.Button.litTagName}\n        .variant=${Buttons.Button.Variant.SECONDARY}\n        .type=${'submit'}\n      >\n        ${i18nString(UIStrings.update)}\n      </${Buttons.Button.Button.litTagName}>\n    ` :\n                                                  LitHtml.html``;\n    const output = LitHtml.html`\n      <section class=\"root\">\n        <div\n          class=\"tree-title\"\n          role=\"button\"\n          @click=${this.#handleTreeClick}\n          tabindex=\"0\"\n          @keydown=${this.#handleTreeExpand}\n          aria-expanded=${this.#isFormOpened}\n          aria-controls=\"form-container\"\n          @disabled=${this.#isFormDisabled}\n          aria-disabled=${this.#isFormDisabled}\n          aria-label=${i18nString(UIStrings.title)}\n        >\n          <${IconButton.Icon.Icon.litTagName}\n            class=${this.#isFormOpened ? '' : 'rotate-icon'}\n            .data=${\n        {color: 'var(--client-hints-form-icon-color)', iconName: 'chromeSelect', width: '20px'} as\n        IconButton.Icon.IconData}\n          >\n          </${IconButton.Icon.Icon.litTagName}>\n          ${i18nString(UIStrings.title)}\n          <x-link\n           tabindex=\"0\"\n           href=\"https://web.dev/user-agent-client-hints/\"\n           target=\"_blank\"\n           class=\"info-link\"\n           @keypress=${this.#handleLinkPress}\n           aria-label=${i18nString(UIStrings.userAgentClientHintsInfo)}\n          >\n            <${IconButton.Icon.Icon.litTagName}\n              .data=${\n        {color: 'var(--client-hints-form-icon-color)', iconName: 'ic_info_black_18dp', width: '14px'} as\n        IconButton.Icon.IconData}\n            >\n            </${IconButton.Icon.Icon.litTagName}>\n          </x-link>\n        </div>\n        <form\n          id=\"form-container\"\n          class=\"form-container ${this.#isFormOpened ? '' : 'hide-container'}\"\n          @submit=${this.#handleSubmit}\n        >\n          ${brandSection}\n          ${fullBrowserInput}\n          ${platformSection}\n          ${architectureInput}\n          ${deviceModelSection}\n          ${submitButton}\n        </form>\n        <div aria-live=\"polite\" aria-label=${this.#brandsModifiedAriaMessage}></div>\n      </section>\n    `;\n    // clang-format off\n    LitHtml.render(output, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  validate = (): UI.ListWidget.ValidatorResult => {\n    for (const [metaDataKey, metaDataValue] of Object.entries(this.#metaData)) {\n      if (metaDataKey === 'brands') {\n        const isBrandValid = this.#metaData.brands?.every(({brand, version}) => {\n          const brandNameResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n              brand, i18nString(UIStrings.notRepresentable));\n          const brandVersionResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n              version, i18nString(UIStrings.notRepresentable));\n          return brandNameResult.valid && brandVersionResult.valid;\n        });\n        if (!isBrandValid) {\n          return {valid: false, errorMessage: i18nString(UIStrings.notRepresentable)};\n        }\n      } else {\n        const metaDataError = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(\n            metaDataValue, i18nString(UIStrings.notRepresentable));\n        if (!metaDataError.valid) {\n          return metaDataError;\n        }\n      }\n    }\n    return {valid: true};\n  };\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-user-agent-client-hints-form', UserAgentClientHintsForm);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-user-agent-client-hints-form': UserAgentClientHintsForm;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
