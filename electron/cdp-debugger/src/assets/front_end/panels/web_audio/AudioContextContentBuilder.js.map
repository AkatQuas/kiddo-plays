{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/web_audio/AudioContextContentBuilder.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description The current state of an item\n  */\n  state: 'State',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  sampleRate: 'Sample Rate',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  callbackBufferSize: 'Callback Buffer Size',\n  /**\n  * @description Label in the Audio Context Content Builder for the maximum number of output channels\n  * that this Audio Context has.\n  */\n  maxOutputChannels: 'Max Output Channels',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  currentTime: 'Current Time',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  callbackInterval: 'Callback Interval',\n  /**\n  *@description Text in Audio Context Content Builder\n  */\n  renderCapacity: 'Render Capacity',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextContentBuilder.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ContextDetailBuilder {\n  private readonly fragment: DocumentFragment;\n  private readonly container: HTMLDivElement;\n  constructor(context: Protocol.WebAudio.BaseAudioContext) {\n    this.fragment = document.createDocumentFragment();\n    this.container = document.createElement('div');\n    this.container.classList.add('context-detail-container');\n    this.fragment.appendChild(this.container);\n    this.build(context);\n  }\n\n  private build(context: Protocol.WebAudio.BaseAudioContext): void {\n    const title = context.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext') :\n                                                       i18n.i18n.lockedString('OfflineAudioContext');\n    this.addTitle(title, context.contextId);\n    this.addEntry(i18nString(UIStrings.state), context.contextState);\n    this.addEntry(i18nString(UIStrings.sampleRate), context.sampleRate, 'Hz');\n    if (context.contextType === 'realtime') {\n      this.addEntry(i18nString(UIStrings.callbackBufferSize), context.callbackBufferSize, 'frames');\n    }\n    this.addEntry(i18nString(UIStrings.maxOutputChannels), context.maxOutputChannelCount, 'ch');\n  }\n\n  private addTitle(title: string, subtitle: string): void {\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-header\">\n  <div class=\"context-detail-title\">${title}</div>\n  <div class=\"context-detail-subtitle\">${subtitle}</div>\n  </div>\n  `);\n  }\n\n  private addEntry(entry: string, value: string|number, unit?: string|undefined): void {\n    const valueWithUnit = value + (unit ? ` ${unit}` : '');\n    this.container.appendChild(UI.Fragment.html`\n  <div class=\"context-detail-row\">\n  <div class=\"context-detail-row-entry\">${entry}</div>\n  <div class=\"context-detail-row-value\">${valueWithUnit}</div>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n\nexport class ContextSummaryBuilder {\n  private readonly fragment: DocumentFragment;\n  constructor(contextId: string, contextRealtimeData: Protocol.WebAudio.ContextRealtimeData) {\n    const time = contextRealtimeData.currentTime.toFixed(3);\n    const mean = (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3);\n    const stddev = (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3);\n    const capacity = (contextRealtimeData.renderCapacity * 100).toFixed(3);\n    this.fragment = document.createDocumentFragment();\n    this.fragment.appendChild(UI.Fragment.html`\n  <div class=\"context-summary-container\">\n  <span>${i18nString(UIStrings.currentTime)}: ${time} s</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.callbackInterval)}: \u03BC = ${mean} ms, \u03C3 = ${stddev} ms</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.renderCapacity)}: ${capacity} %</span>\n  </div>\n  `);\n  }\n\n  getFragment(): DocumentFragment {\n    return this.fragment;\n  }\n}\n"],
  "mappings": "AAIA;AACA;AAGA,MAAM,YAAY;AAAA,EAIhB,OAAO;AAAA,EAIP,YAAY;AAAA,EAIZ,oBAAoB;AAAA,EAKpB,mBAAmB;AAAA,EAInB,aAAa;AAAA,EAIb,kBAAkB;AAAA,EAIlB,gBAAgB;AAAA;AAElB,MAAM,OAAO,KAAK,KAAK,kBAAkB,kDAAkD;AAC3F,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AAEzD,kCAA2B;AAAA,EACf;AAAA,EACA;AAAA,EACjB,YAAY,SAA6C;AACvD,SAAK,WAAW,SAAS;AACzB,SAAK,YAAY,SAAS,cAAc;AACxC,SAAK,UAAU,UAAU,IAAI;AAC7B,SAAK,SAAS,YAAY,KAAK;AAC/B,SAAK,MAAM;AAAA;AAAA,EAGL,MAAM,SAAmD;AAC/D,UAAM,QAAQ,QAAQ,gBAAgB,aAAa,KAAK,KAAK,aAAa,kBACvB,KAAK,KAAK,aAAa;AAC1E,SAAK,SAAS,OAAO,QAAQ;AAC7B,SAAK,SAAS,WAAW,UAAU,QAAQ,QAAQ;AACnD,SAAK,SAAS,WAAW,UAAU,aAAa,QAAQ,YAAY;AACpE,QAAI,QAAQ,gBAAgB,YAAY;AACtC,WAAK,SAAS,WAAW,UAAU,qBAAqB,QAAQ,oBAAoB;AAAA;AAEtF,SAAK,SAAS,WAAW,UAAU,oBAAoB,QAAQ,uBAAuB;AAAA;AAAA,EAGhF,SAAS,OAAe,UAAwB;AACtD,SAAK,UAAU,YAAY,GAAG,SAAS;AAAA;AAAA,sCAEL;AAAA,yCACG;AAAA;AAAA;AAAA;AAAA,EAK/B,SAAS,OAAe,OAAsB,MAA+B;AACnF,UAAM,gBAAgB,QAAS,QAAO,IAAI,SAAS;AACnD,SAAK,UAAU,YAAY,GAAG,SAAS;AAAA;AAAA,0CAED;AAAA,0CACA;AAAA;AAAA;AAAA;AAAA,EAKxC,cAAgC;AAC9B,WAAO,KAAK;AAAA;AAAA;AAIT,mCAA4B;AAAA,EAChB;AAAA,EACjB,YAAY,WAAmB,qBAA4D;AACzF,UAAM,OAAO,oBAAoB,YAAY,QAAQ;AACrD,UAAM,OAAQ,qBAAoB,uBAAuB,KAAM,QAAQ;AACvE,UAAM,SAAU,MAAK,KAAK,oBAAoB,4BAA4B,KAAM,QAAQ;AACxF,UAAM,WAAY,qBAAoB,iBAAiB,KAAK,QAAQ;AACpE,SAAK,WAAW,SAAS;AACzB,SAAK,SAAS,YAAY,GAAG,SAAS;AAAA;AAAA,UAEhC,WAAW,UAAU,iBAAiB;AAAA;AAAA,UAEtC,WAAW,UAAU,0BAA0B,gBAAgB;AAAA;AAAA,UAE/D,WAAW,UAAU,oBAAoB;AAAA;AAAA;AAAA;AAAA,EAKjD,cAAgC;AAC9B,WAAO,KAAK;AAAA;AAAA;",
  "names": []
}
