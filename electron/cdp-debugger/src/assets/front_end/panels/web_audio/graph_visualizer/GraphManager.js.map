{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/web_audio/graph_visualizer/GraphManager.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {GraphView} from './GraphView.js';\n\n// A class that maps each context to its corresponding graph.\n// It controls which graph to render when the context is switched or updated.\nexport class GraphManager {\n  private readonly graphMapByContextId = new Map<string, GraphView>();\n\n  createContext(contextId: string): void {\n    const graph = new GraphView(contextId);\n    this.graphMapByContextId.set(contextId, graph);\n  }\n\n  destroyContext(contextId: string): void {\n    if (!this.graphMapByContextId.has(contextId)) {\n      return;\n    }\n\n    const graph = this.graphMapByContextId.get(contextId);\n    if (!graph) {\n      return;\n    }\n\n    this.graphMapByContextId.delete(contextId);\n  }\n\n  hasContext(contextId: string): boolean {\n    return this.graphMapByContextId.has(contextId);\n  }\n\n  clearGraphs(): void {\n    this.graphMapByContextId.clear();\n  }\n\n  /**\n   * Get graph by contextId.\n   * If the user starts listening for WebAudio events after the page has been running a context for awhile,\n   * the graph might be undefined.\n   */\n  getGraph(contextId: string): GraphView|null {\n    return this.graphMapByContextId.get(contextId) || null;\n  }\n}\n"],
  "mappings": "AAIA;AAIO,0BAAmB;AAAA,EACP,sBAAsB,oBAAI;AAAA,EAE3C,cAAc,WAAyB;AACrC,UAAM,QAAQ,IAAI,UAAU;AAC5B,SAAK,oBAAoB,IAAI,WAAW;AAAA;AAAA,EAG1C,eAAe,WAAyB;AACtC,QAAI,CAAC,KAAK,oBAAoB,IAAI,YAAY;AAC5C;AAAA;AAGF,UAAM,QAAQ,KAAK,oBAAoB,IAAI;AAC3C,QAAI,CAAC,OAAO;AACV;AAAA;AAGF,SAAK,oBAAoB,OAAO;AAAA;AAAA,EAGlC,WAAW,WAA4B;AACrC,WAAO,KAAK,oBAAoB,IAAI;AAAA;AAAA,EAGtC,cAAoB;AAClB,SAAK,oBAAoB;AAAA;AAAA,EAQ3B,SAAS,WAAmC;AAC1C,WAAO,KAAK,oBAAoB,IAAI,cAAc;AAAA;AAAA;",
  "names": []
}
