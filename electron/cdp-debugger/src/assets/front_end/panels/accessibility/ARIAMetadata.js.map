{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/accessibility/ARIAMetadata.ts"],
  "sourcesContent": ["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ARIAProperties from '../../generated/ARIAProperties.js';\nexport interface AttributeConfig {\n  name: string;\n  type: string;\n  enum?: string[];\n}\nexport interface RoleConfig {\n  name: string;\n}\nexport interface Config {\n  attributes: AttributeConfig[];\n  roles: RoleConfig[];\n}\n\nexport class ARIAMetadata {\n  private readonly attributes: Map<string, Attribute>;\n  private roleNames: string[];\n  constructor(config: Config|null) {\n    this.attributes = new Map();\n    this.roleNames = [];\n\n    if (config) {\n      this.initialize(config);\n    }\n  }\n\n  private initialize(config: Config): void {\n    const attributes = config['attributes'];\n\n    const booleanEnum = ['true', 'false'];\n    for (const attributeConfig of attributes) {\n      if (attributeConfig.type === 'boolean') {\n        attributeConfig.enum = booleanEnum;\n      }\n      this.attributes.set(attributeConfig.name, new Attribute(attributeConfig));\n    }\n\n    this.roleNames = config['roles'].map(roleConfig => roleConfig.name);\n  }\n\n  valuesForProperty(property: string): string[] {\n    const attribute = this.attributes.get(property);\n    if (attribute) {\n      return attribute.getEnum();\n    }\n\n    if (property === 'role') {\n      return this.roleNames;\n    }\n\n    return [];\n  }\n}\n\nlet instance: ARIAMetadata|undefined;\n\nexport function ariaMetadata(): ARIAMetadata {\n  if (!instance) {\n    instance = new ARIAMetadata(ARIAProperties.config as Config || null);\n  }\n  return instance;\n}\n\nexport class Attribute {\n  private readonly enum: string[];\n  constructor(config: AttributeConfig) {\n    this.enum = [];\n\n    if (config.enum) {\n      this.enum = config.enum;\n    }\n  }\n\n  getEnum(): string[] {\n    return this.enum;\n  }\n}\n"],
  "mappings": "AAIA;AAcO,0BAAmB;AAAA,EACP;AAAA,EACT;AAAA,EACR,YAAY,QAAqB;AAC/B,SAAK,aAAa,oBAAI;AACtB,SAAK,YAAY;AAEjB,QAAI,QAAQ;AACV,WAAK,WAAW;AAAA;AAAA;AAAA,EAIZ,WAAW,QAAsB;AACvC,UAAM,aAAa,OAAO;AAE1B,UAAM,cAAc,CAAC,QAAQ;AAC7B,eAAW,mBAAmB,YAAY;AACxC,UAAI,gBAAgB,SAAS,WAAW;AACtC,wBAAgB,OAAO;AAAA;AAEzB,WAAK,WAAW,IAAI,gBAAgB,MAAM,IAAI,UAAU;AAAA;AAG1D,SAAK,YAAY,OAAO,SAAS,IAAI,gBAAc,WAAW;AAAA;AAAA,EAGhE,kBAAkB,UAA4B;AAC5C,UAAM,YAAY,KAAK,WAAW,IAAI;AACtC,QAAI,WAAW;AACb,aAAO,UAAU;AAAA;AAGnB,QAAI,aAAa,QAAQ;AACvB,aAAO,KAAK;AAAA;AAGd,WAAO;AAAA;AAAA;AAIX,IAAI;AAEG,+BAAsC;AAC3C,MAAI,CAAC,UAAU;AACb,eAAW,IAAI,aAAa,eAAe,UAAoB;AAAA;AAEjE,SAAO;AAAA;AAGF,uBAAgB;AAAA,EACJ;AAAA,EACjB,YAAY,QAAyB;AACnC,SAAK,OAAO;AAEZ,QAAI,OAAO,MAAM;AACf,WAAK,OAAO,OAAO;AAAA;AAAA;AAAA,EAIvB,UAAoB;AAClB,WAAO,KAAK;AAAA;AAAA;",
  "names": []
}
