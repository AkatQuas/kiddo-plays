{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/accessibility/AccessibilitySidebarView.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {AXNodeSubPane} from './AccessibilityNodeView.js';\nimport {ARIAAttributesPane} from './ARIAAttributesView.js';\nimport {AXBreadcrumbsPane} from './AXBreadcrumbsPane.js';\nimport {SourceOrderPane} from './SourceOrderView.js';\n\nlet accessibilitySidebarViewInstance: AccessibilitySidebarView;\n\nexport class AccessibilitySidebarView extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly sourceOrderViewerExperimentEnabled: boolean;\n  private nodeInternal: SDK.DOMModel.DOMNode|null;\n  private axNodeInternal: SDK.AccessibilityModel.AccessibilityNode|null;\n  private skipNextPullNode: boolean;\n  private readonly sidebarPaneStack: UI.View.ViewLocation;\n  private readonly breadcrumbsSubPane: AXBreadcrumbsPane|null = null;\n  private readonly ariaSubPane: ARIAAttributesPane;\n  private readonly axNodeSubPane: AXNodeSubPane;\n  private readonly sourceOrderSubPane: SourceOrderPane|undefined;\n  private constructor() {\n    super();\n    this.sourceOrderViewerExperimentEnabled = Root.Runtime.experiments.isEnabled('sourceOrderViewer');\n    this.nodeInternal = null;\n    this.axNodeInternal = null;\n    this.skipNextPullNode = false;\n    this.sidebarPaneStack = UI.ViewManager.ViewManager.instance().createStackLocation();\n    this.breadcrumbsSubPane = new AXBreadcrumbsPane(this);\n    void this.sidebarPaneStack.showView(this.breadcrumbsSubPane);\n    this.ariaSubPane = new ARIAAttributesPane();\n    void this.sidebarPaneStack.showView(this.ariaSubPane);\n    this.axNodeSubPane = new AXNodeSubPane();\n    void this.sidebarPaneStack.showView(this.axNodeSubPane);\n    if (this.sourceOrderViewerExperimentEnabled) {\n      this.sourceOrderSubPane = new SourceOrderPane();\n      void this.sidebarPaneStack.showView(this.sourceOrderSubPane);\n    }\n    this.sidebarPaneStack.widget().show(this.element);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.pullNode, this);\n    this.pullNode();\n  }\n\n  static instance(): AccessibilitySidebarView {\n    if (!accessibilitySidebarViewInstance) {\n      accessibilitySidebarViewInstance = new AccessibilitySidebarView();\n    }\n    return accessibilitySidebarViewInstance;\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.nodeInternal;\n  }\n\n  axNode(): SDK.AccessibilityModel.AccessibilityNode|null {\n    return this.axNodeInternal;\n  }\n\n  setNode(node: SDK.DOMModel.DOMNode|null, fromAXTree?: boolean): void {\n    this.skipNextPullNode = Boolean(fromAXTree);\n    this.nodeInternal = node;\n    this.update();\n  }\n\n  accessibilityNodeCallback(axNode: SDK.AccessibilityModel.AccessibilityNode|null): void {\n    if (!axNode) {\n      return;\n    }\n\n    this.axNodeInternal = axNode;\n\n    if (axNode.isDOMNode()) {\n      void this.sidebarPaneStack.showView(this.ariaSubPane, this.axNodeSubPane);\n    } else {\n      this.sidebarPaneStack.removeView(this.ariaSubPane);\n    }\n\n    if (this.axNodeSubPane) {\n      this.axNodeSubPane.setAXNode(axNode);\n    }\n    if (this.breadcrumbsSubPane) {\n      this.breadcrumbsSubPane.setAXNode(axNode);\n    }\n  }\n\n  async doUpdate(): Promise<void> {\n    const node = this.node();\n    this.axNodeSubPane.setNode(node);\n    this.ariaSubPane.setNode(node);\n    if (this.breadcrumbsSubPane) {\n      this.breadcrumbsSubPane.setNode(node);\n    }\n    if (this.sourceOrderViewerExperimentEnabled && this.sourceOrderSubPane) {\n      void this.sourceOrderSubPane.setNodeAsync(node);\n    }\n    if (!node) {\n      return;\n    }\n    const accessibilityModel = node.domModel().target().model(SDK.AccessibilityModel.AccessibilityModel);\n    if (!accessibilityModel) {\n      return;\n    }\n    if (!Root.Runtime.experiments.isEnabled('fullAccessibilityTree')) {\n      accessibilityModel.clear();\n    }\n    await accessibilityModel.requestPartialAXTree(node);\n    this.accessibilityNodeCallback(accessibilityModel.axNodeForDOMNode(node));\n  }\n\n  wasShown(): void {\n    super.wasShown();\n\n    // Pull down the latest date for this node.\n    void this.doUpdate();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrModified, this.onAttrChange, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrRemoved, this.onAttrChange, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.CharacterDataModified, this.onNodeChange, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.ChildNodeCountUpdated, this.onNodeChange, this);\n  }\n\n  willHide(): void {\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrModified, this.onAttrChange, this);\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrRemoved, this.onAttrChange, this);\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.CharacterDataModified, this.onNodeChange, this);\n    SDK.TargetManager.TargetManager.instance().removeModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.ChildNodeCountUpdated, this.onNodeChange, this);\n  }\n\n  private pullNode(): void {\n    if (this.skipNextPullNode) {\n      this.skipNextPullNode = false;\n      return;\n    }\n    this.setNode(UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode));\n  }\n\n  private onAttrChange(event: Common.EventTarget.EventTargetEvent<{node: SDK.DOMModel.DOMNode, name: string}>): void {\n    if (!this.node()) {\n      return;\n    }\n    const node = event.data.node;\n    if (this.node() !== node) {\n      return;\n    }\n    this.update();\n  }\n\n  private onNodeChange(event: Common.EventTarget.EventTargetEvent<SDK.DOMModel.DOMNode>): void {\n    if (!this.node()) {\n      return;\n    }\n    const node = event.data;\n    if (this.node() !== node) {\n      return;\n    }\n    this.update();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
