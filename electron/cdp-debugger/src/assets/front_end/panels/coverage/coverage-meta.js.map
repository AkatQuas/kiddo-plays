{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/coverage/coverage-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Coverage from './coverage.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the 'Coverage' tool in the bottom drawer\n  */\n  coverage: 'Coverage',\n  /**\n  *@description Command for showing the 'Coverage' tool in the bottom drawer\n  */\n  showCoverage: 'Show Coverage',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n  */\n  instrumentCoverage: 'Instrument coverage',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n  */\n  stopInstrumentingCoverageAndShow: 'Stop instrumenting coverage and show results',\n  /**\n   *@description Title of an action in the coverage tool to start with reload\n  */\n  startInstrumentingCoverageAnd: 'Start instrumenting coverage and reload page',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/coverage/coverage-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedCoverageModule: (typeof Coverage|undefined);\n\nasync function loadCoverageModule(): Promise<typeof Coverage> {\n  if (!loadedCoverageModule) {\n    loadedCoverageModule = await import('./coverage.js');\n  }\n  return loadedCoverageModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'coverage',\n  title: i18nLazyString(UIStrings.coverage),\n  commandPrompt: i18nLazyString(UIStrings.showCoverage),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Coverage = await loadCoverageModule();\n    return Coverage.CoverageView.CoverageView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return Coverage.CoverageView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.instrumentCoverage),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopInstrumentingCoverageAndShow),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.start-with-reload',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_REFRESH,\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return Coverage.CoverageView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.startInstrumentingCoverageAnd),\n});\n"],
  "mappings": "AAIA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,UAAU;AAAA,EAIV,cAAc;AAAA,EAId,oBAAoB;AAAA,EAIpB,kCAAkC;AAAA,EAIlC,+BAA+B;AAAA;AAEjC,MAAM,OAAO,KAAK,KAAK,kBAAkB,oCAAoC;AAC7E,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,oCAA8D;AAC5D,MAAI,CAAC,sBAAsB;AACzB,2BAAuB,MAAM,OAAO;AAAA;AAEtC,SAAO;AAAA;AAGT,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,aAAa,GAAG,YAAY,gBAAgB;AAAA,EAC5C,OAAO;AAAA,QACD,WAAW;AACf,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,aAAa,aAAa;AAAA;AAAA;AAI9C,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU;AAAA,EACV,WAAW,GAAG,mBAAmB,UAAU;AAAA,EAC3C,YAAY;AAAA,EACZ,kBAAkB,GAAG,mBAAmB,UAAU;AAAA,EAClD,oBAAoB;AAAA,QACd,qBAAqB;AACzB,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,aAAa,eAAe;AAAA;AAAA,EAE9C,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,SAAS;AAAA,IACP;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA,IAElC;AAAA,MACE,OAAO;AAAA,MACP,OAAO,eAAe,UAAU;AAAA;AAAA;AAAA;AAKtC,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU;AAAA,EACV,WAAW,GAAG,mBAAmB,UAAU;AAAA,QACrC,qBAAqB;AACzB,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,aAAa,eAAe;AAAA;AAAA,EAE9C,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,OAAO,eAAe,UAAU;AAAA;",
  "names": []
}
