{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/NetworkOverview.ts"],
  "sourcesContent": ["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {NetworkLogView} from './NetworkLogView.js';\nimport {NetworkTimeBoundary} from './NetworkTimeCalculator.js';\nimport {RequestTimeRangeNames, RequestTimingView} from './RequestTimingView.js';\n\nexport class NetworkOverview extends PerfUI.TimelineOverviewPane.TimelineOverviewBase {\n  private selectedFilmStripTime: number;\n  private numBands: number;\n  private updateScheduled: boolean;\n  private highlightedRequest: SDK.NetworkRequest.NetworkRequest|null;\n  private loadEvents!: number[];\n  private domContentLoadedEvents!: number[];\n  private nextBand!: number;\n  private bandMap!: Map<string, number>;\n  private requestsList!: SDK.NetworkRequest.NetworkRequest[];\n  private requestsSet!: Set<SDK.NetworkRequest.NetworkRequest>;\n  private span!: number;\n  private filmStripModel?: SDK.FilmStripModel.FilmStripModel|null;\n  private lastBoundary?: NetworkTimeBoundary|null;\n\n  constructor() {\n    super();\n    this.selectedFilmStripTime = -1;\n    this.element.classList.add('network-overview');\n\n    this.numBands = 1;\n    this.updateScheduled = false;\n    this.highlightedRequest = null;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.DOMContentLoaded,\n        this.domContentLoadedEventFired, this);\n\n    this.reset();\n  }\n\n  setHighlightedRequest(request: SDK.NetworkRequest.NetworkRequest|null): void {\n    this.highlightedRequest = request;\n    this.scheduleUpdate();\n  }\n\n  setFilmStripModel(filmStripModel: SDK.FilmStripModel.FilmStripModel|null): void {\n    this.filmStripModel = filmStripModel;\n    this.scheduleUpdate();\n  }\n\n  selectFilmStripFrame(time: number): void {\n    this.selectedFilmStripTime = time;\n    this.scheduleUpdate();\n  }\n\n  clearFilmStripFrame(): void {\n    this.selectedFilmStripTime = -1;\n    this.scheduleUpdate();\n  }\n\n  private loadEventFired(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>): void {\n    const time = event.data.loadTime;\n    if (time) {\n      this.loadEvents.push(time * 1000);\n    }\n    this.scheduleUpdate();\n  }\n\n  private domContentLoadedEventFired(event: Common.EventTarget.EventTargetEvent<number>): void {\n    const {data} = event;\n    if (data) {\n      this.domContentLoadedEvents.push(data * 1000);\n    }\n    this.scheduleUpdate();\n  }\n\n  private bandId(connectionId: string): number {\n    if (!connectionId || connectionId === '0') {\n      return -1;\n    }\n    if (this.bandMap.has(connectionId)) {\n      return this.bandMap.get(connectionId) as number;\n    }\n    const result = this.nextBand++;\n    this.bandMap.set(connectionId, result);\n    return result;\n  }\n\n  updateRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    if (!this.requestsSet.has(request)) {\n      this.requestsSet.add(request);\n      this.requestsList.push(request);\n    }\n    this.scheduleUpdate();\n  }\n\n  wasShown(): void {\n    this.onResize();\n  }\n\n  calculator(): PerfUI.TimelineOverviewPane.TimelineOverviewCalculator {\n    return super.calculator() as PerfUI.TimelineOverviewPane.TimelineOverviewCalculator;\n  }\n\n  onResize(): void {\n    const width = this.element.offsetWidth;\n    const height = this.element.offsetHeight;\n    this.calculator().setDisplayWidth(width);\n    this.resetCanvas();\n    const numBands = (((height - _padding - 1) / _bandHeight) - 1) | 0;\n    this.numBands = (numBands > 0) ? numBands : 1;\n    this.scheduleUpdate();\n  }\n\n  reset(): void {\n    this.filmStripModel = null;\n\n    this.span = 1;\n    this.lastBoundary = null;\n    this.nextBand = 0;\n    this.bandMap = new Map();\n    this.requestsList = [];\n    this.requestsSet = new Set();\n    this.loadEvents = [];\n    this.domContentLoadedEvents = [];\n\n    // Clear screen.\n    this.resetCanvas();\n  }\n\n  scheduleUpdate(): void {\n    if (this.updateScheduled || !this.isShowing()) {\n      return;\n    }\n    this.updateScheduled = true;\n    this.element.window().requestAnimationFrame(this.update.bind(this));\n  }\n\n  update(): void {\n    this.updateScheduled = false;\n\n    const calculator = this.calculator();\n\n    const newBoundary = new NetworkTimeBoundary(calculator.minimumBoundary(), calculator.maximumBoundary());\n    if (!this.lastBoundary || !newBoundary.equals(this.lastBoundary)) {\n      const span = calculator.boundarySpan();\n      while (this.span < span) {\n        this.span *= 1.25;\n      }\n\n      calculator.setBounds(calculator.minimumBoundary(), calculator.minimumBoundary() + this.span);\n      this.lastBoundary = new NetworkTimeBoundary(calculator.minimumBoundary(), calculator.maximumBoundary());\n    }\n\n    const context = this.context();\n    const linesByType = new Map<string, number[]>();\n    const paddingTop = _padding;\n\n    function drawLines(type: string): void {\n      const lines = linesByType.get(type);\n      if (!lines) {\n        return;\n      }\n      const n = lines.length;\n      context.beginPath();\n      context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-background-opacity-80');\n      context.lineWidth = BORDER_WIDTH;\n      context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue(RequestTimeRangeNameToColor[type]);\n      for (let i = 0; i < n;) {\n        const y = lines[i++] * _bandHeight + paddingTop;\n        const startTime = lines[i++];\n        let endTime: number = lines[i++];\n        if (endTime === Number.MAX_VALUE) {\n          endTime = calculator.maximumBoundary();\n        }\n        const startX = calculator.computePosition(startTime);\n        const endX = calculator.computePosition(endTime) + 1;\n        context.fillRect(startX, y, endX - startX, _bandHeight);\n        context.strokeRect(startX, y, endX - startX, _bandHeight);\n      }\n    }\n\n    function addLine(type: string, y: number, start: number, end: number): void {\n      let lines = linesByType.get(type);\n      if (!lines) {\n        lines = [];\n        linesByType.set(type, lines);\n      }\n      lines.push(y, start, end);\n    }\n\n    const requests = this.requestsList;\n    const n = requests.length;\n    for (let i = 0; i < n; ++i) {\n      const request = requests[i];\n      const band = this.bandId(request.connectionId);\n      const y = (band === -1) ? 0 : (band % this.numBands + 1);\n      const timeRanges = RequestTimingView.calculateRequestTimeRanges(request, this.calculator().minimumBoundary());\n      for (let j = 0; j < timeRanges.length; ++j) {\n        const type = timeRanges[j].name;\n        if (band !== -1 || type === RequestTimeRangeNames.Total) {\n          addLine(type, y, timeRanges[j].start * 1000, timeRanges[j].end * 1000);\n        }\n      }\n    }\n\n    context.clearRect(0, 0, this.width(), this.height());\n    context.save();\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n    context.lineWidth = 2;\n    drawLines(RequestTimeRangeNames.Total);\n    drawLines(RequestTimeRangeNames.Blocking);\n    drawLines(RequestTimeRangeNames.Connecting);\n    drawLines(RequestTimeRangeNames.ServiceWorker);\n    drawLines(RequestTimeRangeNames.ServiceWorkerPreparation);\n    drawLines(RequestTimeRangeNames.ServiceWorkerRespondWith);\n    drawLines(RequestTimeRangeNames.Push);\n    drawLines(RequestTimeRangeNames.Proxy);\n    drawLines(RequestTimeRangeNames.DNS);\n    drawLines(RequestTimeRangeNames.SSL);\n    drawLines(RequestTimeRangeNames.Sending);\n    drawLines(RequestTimeRangeNames.Waiting);\n    drawLines(RequestTimeRangeNames.Receiving);\n\n    if (this.highlightedRequest) {\n      const size = 5;\n      const borderSize = 2;\n\n      const request = this.highlightedRequest;\n      const band = this.bandId(request.connectionId);\n      const y = ((band === -1) ? 0 : (band % this.numBands + 1)) * _bandHeight + paddingTop;\n      const timeRanges = RequestTimingView.calculateRequestTimeRanges(request, this.calculator().minimumBoundary());\n\n      context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--legacy-selection-bg-color');\n\n      const start = timeRanges[0].start * 1000;\n      const end = timeRanges[0].end * 1000;\n      context.fillRect(\n          calculator.computePosition(start) - borderSize, y - size / 2 - borderSize,\n          calculator.computePosition(end) - calculator.computePosition(start) + 1 + 2 * borderSize, size * borderSize);\n\n      for (let j = 0; j < timeRanges.length; ++j) {\n        const type = timeRanges[j].name;\n        if (band !== -1 || type === RequestTimeRangeNames.Total) {\n          context.beginPath();\n          context.strokeStyle =\n              ThemeSupport.ThemeSupport.instance().getComputedValue(RequestTimeRangeNameToColor[type]);\n          context.lineWidth = size;\n\n          const start = timeRanges[j].start * 1000;\n          const end = timeRanges[j].end * 1000;\n          context.moveTo(calculator.computePosition(start) - 0, y);\n          context.lineTo(calculator.computePosition(end) + 1, y);\n          context.stroke();\n        }\n      }\n    }\n\n    const height = this.element.offsetHeight;\n    context.lineWidth = 1;\n    context.beginPath();\n    context.strokeStyle = NetworkLogView.getDCLEventColor();\n    for (let i = this.domContentLoadedEvents.length - 1; i >= 0; --i) {\n      const x = Math.round(calculator.computePosition(this.domContentLoadedEvents[i])) + 0.5;\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n    }\n    context.stroke();\n\n    context.beginPath();\n    context.strokeStyle = NetworkLogView.getLoadEventColor();\n    for (let i = this.loadEvents.length - 1; i >= 0; --i) {\n      const x = Math.round(calculator.computePosition(this.loadEvents[i])) + 0.5;\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n    }\n    context.stroke();\n\n    if (this.selectedFilmStripTime !== -1) {\n      context.lineWidth = 2;\n      context.beginPath();\n      context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--network-frame-divider-color');\n      const x = Math.round(calculator.computePosition(this.selectedFilmStripTime));\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n      context.stroke();\n    }\n    context.restore();\n  }\n}\n\nexport const RequestTimeRangeNameToColor = {\n  [RequestTimeRangeNames.Total]: '--override-network-overview-total',\n  [RequestTimeRangeNames.Blocking]: '--override-network-overview-blocking',\n  [RequestTimeRangeNames.Connecting]: '--override-network-overview-connecting',\n  [RequestTimeRangeNames.ServiceWorker]: '--override-network-overview-service-worker',\n  [RequestTimeRangeNames.ServiceWorkerPreparation]: '--override-network-overview-service-worker',\n  [RequestTimeRangeNames.ServiceWorkerRespondWith]: '--override-network-overview-service-worker-respond-with',\n  [RequestTimeRangeNames.Push]: '--override-network-overview-push',\n  [RequestTimeRangeNames.Proxy]: '--override-network-overview-proxy',\n  [RequestTimeRangeNames.DNS]: '--override-network-overview-dns',\n  [RequestTimeRangeNames.SSL]: '--override-network-overview-ssl',\n  [RequestTimeRangeNames.Sending]: '--override-network-overview-sending',\n  [RequestTimeRangeNames.Waiting]: '--override-network-overview-waiting',\n  [RequestTimeRangeNames.Receiving]: '--override-network-overview-receiving',\n  [RequestTimeRangeNames.Queueing]: '--override-network-overview-queueing',\n} as {[key: string]: string};\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _bandHeight: number = 3;\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _padding: number = 5;\n\n// Border between bars in network overview panel for accessibility.\nconst BORDER_WIDTH = 1;\n"],
  "mappings": "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",
  "names": []
}
