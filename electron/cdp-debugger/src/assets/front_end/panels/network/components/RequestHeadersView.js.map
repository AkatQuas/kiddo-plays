{
  "version": 3,
  "sources": ["../../../../../../../front_end/panels/network/components/RequestHeadersView.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport {assertNotNullOrUndefined} from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport requestHeadersViewStyles from './RequestHeadersView.css.js';\n\nconst RAW_HEADER_CUTOFF = 3000;\nconst {render, html} = LitHtml;\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromMemoryCache: '(from memory cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromServiceWorker: '(from `service worker`)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromSignedexchange: '(from signed-exchange)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromPrefetchCache: '(from prefetch cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromDiskCache: '(from disk cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromWebBundle: '(from Web Bundle)',\n  /**\n  *@description Section header for a list of the main aspects of a http request\n  */\n  general: 'General',\n  /**\n  *@description Label for a checkbox to switch between raw and parsed headers\n  */\n  raw: 'Raw',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  requestHeaders: 'Request Headers',\n  /**\n  *@description The URL of a request\n  */\n  requestUrl: 'Request URL',\n  /**\n  *@description The HTTP method of a request\n  */\n  requestMethod: 'Request Method',\n  /**\n  *@description A context menu item in the Network Log View Columns of the Network panel\n  */\n  responseHeaders: 'Response Headers',\n  /**\n  *@description Text to show more content\n  */\n  showMore: 'Show more',\n  /**\n  *@description HTTP response code\n  */\n  statusCode: 'Status Code',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  remoteAddress: 'Remote Address',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  referrerPolicy: 'Referrer Policy',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/components/RequestHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class RequestHeadersView extends UI.Widget.VBox {\n  readonly #headersView = new RequestHeadersComponent();\n  readonly #request: SDK.NetworkRequest.NetworkRequest;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.#request = request;\n    this.contentElement.appendChild(this.#headersView);\n  }\n\n  wasShown(): void {\n    this.#request.addEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);\n    this.#request.addEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);\n    this.#refreshHeadersView();\n  }\n\n  willHide(): void {\n    this.#request.removeEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.#refreshHeadersView, this);\n    this.#request.removeEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.#refreshHeadersView, this);\n  }\n\n  #refreshHeadersView(): void {\n    this.#headersView.data = {\n      request: this.#request,\n    };\n  }\n}\n\nexport interface RequestHeadersComponentData {\n  request: SDK.NetworkRequest.NetworkRequest;\n}\n\nexport class RequestHeadersComponent extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-request-headers`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #request?: Readonly<SDK.NetworkRequest.NetworkRequest>;\n  #showResponseHeadersText = false;\n  #showRequestHeadersText = false;\n  #showResponseHeadersTextFull = false;\n  #showRequestHeadersTextFull = false;\n\n  set data(data: RequestHeadersComponentData) {\n    this.#request = data.request;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestHeadersViewStyles];\n  }\n\n  #render(): void {\n    assertNotNullOrUndefined(this.#request);\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      ${this.#renderGeneralSection()}\n      ${this.#renderResponseHeaders()}\n      ${this.#renderRequestHeaders()}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #renderResponseHeaders(): LitHtml.TemplateResult {\n    assertNotNullOrUndefined(this.#request);\n\n    const toggleShowRaw = (): void => {\n      this.#showResponseHeadersText = !this.#showResponseHeadersText;\n      this.#render();\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        @togglerawevent=${toggleShowRaw}\n        .data=${{\n          name: 'responseHeaders',\n          title: i18nString(UIStrings.responseHeaders),\n          headerCount: this.#request.sortedResponseHeaders.length,\n          checked: this.#request.responseHeadersText ? this.#showResponseHeadersText : undefined,\n        } as CategoryData}\n        aria-label=${i18nString(UIStrings.responseHeaders)}\n      >\n        ${this.#showResponseHeadersText ?\n            this.#renderRawHeaders(this.#request.responseHeadersText, true) : html`\n          ${this.#request.sortedResponseHeaders.map(header => html`\n            <div class=\"row\">\n              <div class=\"header-name\">${header.name}:</div>\n              <div class=\"header-value\">${header.value}</div>\n            </div>\n          `)}\n        `}\n      </${Category.litTagName}>\n    `;\n  }\n\n  #renderRequestHeaders(): LitHtml.TemplateResult {\n    assertNotNullOrUndefined(this.#request);\n\n    const toggleShowRaw = (): void => {\n      this.#showRequestHeadersText = !this.#showRequestHeadersText;\n      this.#render();\n    };\n\n    const requestHeadersText = this.#request.requestHeadersText();\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        @togglerawevent=${toggleShowRaw}\n        .data=${{\n          name: 'requestHeaders',\n          title: i18nString(UIStrings.requestHeaders),\n          headerCount: this.#request.requestHeaders().length,\n          checked: requestHeadersText? this.#showRequestHeadersText : undefined,\n        } as CategoryData}\n        aria-label=${i18nString(UIStrings.requestHeaders)}\n      >\n        ${(this.#showRequestHeadersText && requestHeadersText) ?\n            this.#renderRawHeaders(requestHeadersText, false) : html`\n          ${this.#request.requestHeaders().map(header => html`\n            <div class=\"row\">\n              <div class=\"header-name\">${header.name}:</div>\n              <div class=\"header-value\">${header.value}</div>\n            </div>\n          `)}\n        `}\n      </${Category.litTagName}>\n    `;\n  }\n\n  #renderRawHeaders(rawHeadersText: string, forResponseHeaders: boolean): LitHtml.TemplateResult {\n    const trimmed = rawHeadersText.trim();\n    const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;\n    const isShortened = !showFull && trimmed.length > RAW_HEADER_CUTOFF;\n\n    const showMore = ():void => {\n      if (forResponseHeaders) {\n        this.#showResponseHeadersTextFull = true;\n      } else {\n        this.#showRequestHeadersTextFull = true;\n      }\n      this.#render();\n    };\n\n    const onContextMenuOpen = (event: Event): void => {\n      const showFull = forResponseHeaders ? this.#showResponseHeadersTextFull : this.#showRequestHeadersTextFull;\n      if (!showFull) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const section = contextMenu.newSection();\n        section.appendItem(i18nString(UIStrings.showMore), showMore);\n        void contextMenu.show();\n      }\n    };\n\n    const addContextMenuListener = (el: Element):void => {\n      if (isShortened) {\n        el.addEventListener('contextmenu', onContextMenuOpen);\n      }\n    };\n\n    return html`\n      <div class=\"row raw-headers-row\" on-render=${ComponentHelpers.Directives.nodeRenderedCallback(addContextMenuListener)}>\n        <div class=\"raw-headers\">${isShortened ? trimmed.substring(0, RAW_HEADER_CUTOFF) : trimmed}</div>\n        ${isShortened ? html`\n          <${Buttons.Button.Button.litTagName}\n            .size=${Buttons.Button.Size.SMALL}\n            .variant=${Buttons.Button.Variant.SECONDARY}\n            @click=${showMore}\n          >${i18nString(UIStrings.showMore)}</${Buttons.Button.Button.litTagName}>\n        ` : LitHtml.nothing}\n      </div>\n    `;\n  }\n\n  #renderGeneralSection(): LitHtml.TemplateResult {\n    assertNotNullOrUndefined(this.#request);\n\n    let coloredCircleClassName = 'red-circle';\n    if (this.#request.statusCode < 300 || this.#request.statusCode === 304) {\n      coloredCircleClassName = 'green-circle';\n    } else if (this.#request.statusCode < 400) {\n      coloredCircleClassName = 'yellow-circle';\n    }\n\n    let statusText = this.#request.statusCode + ' ' + this.#request.statusText;\n    let statusTextHasComment = false;\n    if (this.#request.cachedInMemory()) {\n      statusText += ' ' + i18nString(UIStrings.fromMemoryCache);\n      statusTextHasComment = true;\n    } else if (this.#request.fetchedViaServiceWorker) {\n      statusText += ' ' + i18nString(UIStrings.fromServiceWorker);\n      statusTextHasComment = true;\n    } else if (this.#request.redirectSourceSignedExchangeInfoHasNoErrors()) {\n      statusText += ' ' + i18nString(UIStrings.fromSignedexchange);\n      statusTextHasComment = true;\n    } else if (this.#request.webBundleInnerRequestInfo()) {\n      statusText += ' ' + i18nString(UIStrings.fromWebBundle);\n      statusTextHasComment = true;\n    } else if (this.#request.fromPrefetchCache()) {\n      statusText += ' ' + i18nString(UIStrings.fromPrefetchCache);\n      statusTextHasComment = true;\n    } else if (this.#request.cached()) {\n      statusText += ' ' + i18nString(UIStrings.fromDiskCache);\n      statusTextHasComment = true;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n      <${Category.litTagName}\n        .data=${{name: 'general', title: i18nString(UIStrings.general)} as CategoryData}\n        aria-label=${i18nString(UIStrings.general)}\n      >\n        <div class=\"row\">\n          <div class=\"header-name\">${i18nString(UIStrings.requestUrl)}:</div>\n          <div class=\"header-value\">${this.#request.url()}</div>\n        </div>\n        ${this.#request.statusCode? html`\n          <div class=\"row\">\n            <div class=\"header-name\">${i18nString(UIStrings.requestMethod)}:</div>\n            <div class=\"header-value\">${this.#request.requestMethod}</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"header-name\">${i18nString(UIStrings.statusCode)}:</div>\n            <div class=\"header-value ${coloredCircleClassName} ${statusTextHasComment ? 'status-with-comment' : ''}\">${statusText}</div>\n          </div>\n        ` : ''}\n        ${this.#request.remoteAddress()? html`\n          <div class=\"row\">\n            <div class=\"header-name\">${i18nString(UIStrings.remoteAddress)}:</div>\n            <div class=\"header-value\">${this.#request.remoteAddress()}</div>\n          </div>\n        ` : ''}\n        ${this.#request.referrerPolicy()? html`\n          <div class=\"row\">\n            <div class=\"header-name\">${i18nString(UIStrings.referrerPolicy)}:</div>\n            <div class=\"header-value\">${this.#request.referrerPolicy()}</div>\n          </div>\n        ` : ''}\n      </${Category.litTagName}>\n    `;\n    // clang-format on\n  }\n}\n\nexport class ToggleRawHeadersEvent extends Event {\n  static readonly eventName = 'togglerawevent';\n\n  constructor() {\n    super(ToggleRawHeadersEvent.eventName, {});\n  }\n}\n\nexport interface CategoryData {\n  name: string;\n  title: Common.UIString.LocalizedString;\n  headerCount?: number;\n  checked?: boolean;\n}\n\nexport class Category extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-request-headers-category`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #expandedSetting?: Common.Settings.Setting<boolean>;\n  #title: Common.UIString.LocalizedString = Common.UIString.LocalizedEmptyString;\n  #headerCount?: number = undefined;\n  #checked: boolean|undefined = undefined;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [requestHeadersViewStyles];\n  }\n\n  set data(data: CategoryData) {\n    this.#title = data.title;\n    this.#expandedSetting =\n        Common.Settings.Settings.instance().createSetting('request-info-' + data.name + '-category-expanded', true);\n    this.#headerCount = data.headerCount;\n    this.#checked = data.checked;\n    this.#render();\n  }\n\n  #onCheckboxToggle(): void {\n    this.dispatchEvent(new ToggleRawHeadersEvent());\n  }\n\n  #render(): void {\n    const isOpen = this.#expandedSetting ? this.#expandedSetting.get() : true;\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <details ?open=${isOpen} @toggle=${this.#onToggle}>\n        <summary class=\"header\" @keydown=${this.#onSummaryKeyDown}>\n          ${this.#title}${this.#headerCount ?\n            html`<span class=\"header-count\"> (${this.#headerCount})</span>` :\n            LitHtml.nothing\n          }\n          ${this.#checked !== undefined ? html`\n            <span class=\"raw-checkbox-container\">\n              <label>\n                <input type=\"checkbox\" .checked=${this.#checked} @change=${this.#onCheckboxToggle} />\n                ${i18nString(UIStrings.raw)}\n              </label>\n            </span>\n          ` : LitHtml.nothing}\n        </summary>\n        <slot></slot>\n      </details>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #onSummaryKeyDown(event: KeyboardEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const summaryElement = event.target as HTMLElement;\n    const detailsElement = summaryElement.parentElement as HTMLDetailsElement;\n    if (!detailsElement) {\n      throw new Error('<details> element is not found for a <summary> element');\n    }\n    switch (event.key) {\n      case 'ArrowLeft':\n        detailsElement.open = false;\n        break;\n      case 'ArrowRight':\n        detailsElement.open = true;\n        break;\n    }\n  }\n\n  #onToggle(event: Event): void {\n    this.#expandedSetting?.set((event.target as HTMLDetailsElement).open);\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-request-headers', RequestHeadersComponent);\nComponentHelpers.CustomElements.defineComponent('devtools-request-headers-category', Category);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-request-headers': RequestHeadersComponent;\n    'devtools-request-headers-category': Category;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
