{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/NetworkItemView.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkComponents from './components/components.js';\nimport {EventSourceMessagesView} from './EventSourceMessagesView.js';\n\nimport type {NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport {RequestCookiesView} from './RequestCookiesView.js';\nimport {RequestHeadersView} from './RequestHeadersView.js';\nimport {RequestPayloadView} from './RequestPayloadView.js';\nimport {RequestInitiatorView} from './RequestInitiatorView.js';\nimport {RequestPreviewView} from './RequestPreviewView.js';\nimport {RequestResponseView} from './RequestResponseView.js';\nimport {RequestTimingView} from './RequestTimingView.js';\nimport {ResourceWebSocketFrameView} from './ResourceWebSocketFrameView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for network request headers\n  */\n  headers: 'Headers',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  payload: 'Payload',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  messages: 'Messages',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  websocketMessages: 'WebSocket messages',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  eventstream: 'EventStream',\n  /**\n  *@description Text for previewing items\n  */\n  preview: 'Preview',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  responsePreview: 'Response preview',\n  /**\n  *@description Icon title in Network Item View of the Network panel\n  */\n  signedexchangeError: 'SignedExchange error',\n  /**\n  *@description Title of a tab in the Network panel. A Network response refers to the act of acknowledging a\n  network request. Should not be confused with answer.\n  */\n  response: 'Response',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  rawResponseData: 'Raw response data',\n  /**\n  *@description Text for the initiator of something\n  */\n  initiator: 'Initiator',\n  /**\n  * @description Tooltip for initiator view in Network panel. An initiator is a piece of code/entity\n  * in the code that initiated/started the network request, i.e. caused the network request. The 'call\n  * stack' is the location in the code where the initiation happened.\n  */\n  requestInitiatorCallStack: 'Request initiator call stack',\n  /**\n  *@description Title of a tab in Network Item View of the Network panel.\n  *The tab displays the duration breakdown of a network request.\n  */\n  timing: 'Timing',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  requestAndResponseTimeline: 'Request and response timeline',\n  /**\n  *@description Label of a tab in the network panel\n  */\n  trustTokens: 'Trust Tokens',\n  /**\n  *@description Title of the Trust token tab in the Network panel\n  */\n  trustTokenOperationDetails: 'Trust Token operation details',\n  /**\n  *@description Text for web cookies\n  */\n  cookies: 'Cookies',\n  /**\n  *@description Text in Network Item View of the Network panel\n  */\n  requestAndResponseCookies: 'Request and response cookies',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkItemView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkItemView extends UI.TabbedPane.TabbedPane {\n  private requestInternal: SDK.NetworkRequest.NetworkRequest;\n  private readonly resourceViewTabSetting: Common.Settings.Setting<NetworkForward.UIRequestLocation.UIRequestTabs>;\n  private readonly headersView: RequestHeadersView;\n  private readonly headersViewComponent: NetworkComponents.RequestHeadersView.RequestHeadersView;\n  private payloadView: RequestPayloadView|null;\n  private readonly responseView: RequestResponseView|undefined;\n  private cookiesView: RequestCookiesView|null;\n  private initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs;\n\n  constructor(\n      request: SDK.NetworkRequest.NetworkRequest, calculator: NetworkTimeCalculator,\n      initialTab?: NetworkForward.UIRequestLocation.UIRequestTabs) {\n    super();\n    this.requestInternal = request;\n    this.element.classList.add('network-item-view');\n\n    this.resourceViewTabSetting = Common.Settings.Settings.instance().createSetting(\n        'resourceViewTab', NetworkForward.UIRequestLocation.UIRequestTabs.Headers);\n\n    this.headersView = new RequestHeadersView(request);\n    this.appendTab(\n        NetworkForward.UIRequestLocation.UIRequestTabs.Headers, i18nString(UIStrings.headers), this.headersView,\n        i18nString(UIStrings.headers));\n    this.headersViewComponent = new NetworkComponents.RequestHeadersView.RequestHeadersView(request);\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES)) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.HeadersComponent, i18nString(UIStrings.headers),\n          this.headersViewComponent, i18nString(UIStrings.headers));\n    }\n\n    this.payloadView = null;\n    void this.maybeAppendPayloadPanel();\n\n    this.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n\n    if (request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      const frameView = new ResourceWebSocketFrameView(request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.WsFrames, i18nString(UIStrings.messages), frameView,\n          i18nString(UIStrings.websocketMessages));\n    } else if (request.mimeType === SDK.NetworkRequest.MIME_TYPE.EVENTSTREAM) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.EventSource, i18nString(UIStrings.eventstream),\n          new EventSourceMessagesView(request));\n    } else {\n      this.responseView = new RequestResponseView(request);\n      const previewView = new RequestPreviewView(request);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.Preview, i18nString(UIStrings.preview), previewView,\n          i18nString(UIStrings.responsePreview));\n      const signedExchangeInfo = request.signedExchangeInfo();\n      if (signedExchangeInfo && signedExchangeInfo.errors && signedExchangeInfo.errors.length) {\n        const icon = UI.Icon.Icon.create('smallicon-error');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.signedexchangeError));\n        this.setTabIcon(NetworkForward.UIRequestLocation.UIRequestTabs.Preview, icon);\n      }\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.Response, i18nString(UIStrings.response), this.responseView,\n          i18nString(UIStrings.rawResponseData));\n    }\n\n    this.appendTab(\n        NetworkForward.UIRequestLocation.UIRequestTabs.Initiator, i18nString(UIStrings.initiator),\n        new RequestInitiatorView(request), i18nString(UIStrings.requestInitiatorCallStack));\n\n    this.appendTab(\n        NetworkForward.UIRequestLocation.UIRequestTabs.Timing, i18nString(UIStrings.timing),\n        new RequestTimingView(request, calculator), i18nString(UIStrings.requestAndResponseTimeline));\n\n    if (request.trustTokenParams()) {\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.TrustTokens, i18nString(UIStrings.trustTokens),\n          new NetworkComponents.RequestTrustTokensView.RequestTrustTokensView(request),\n          i18nString(UIStrings.trustTokenOperationDetails));\n    }\n\n    this.cookiesView = null;\n\n    this.initialTab = initialTab || this.resourceViewTabSetting.get();\n    // Selecting tabs should not be handled by the super class.\n    this.setAutoSelectFirstItemOnShow(false);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this.requestInternal.addEventListener(\n        SDK.NetworkRequest.Events.RequestHeadersChanged, this.requestHeadersChanged, this);\n    this.requestInternal.addEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this.maybeAppendCookiesPanel, this);\n    this.requestInternal.addEventListener(\n        SDK.NetworkRequest.Events.TrustTokenResultAdded, this.maybeShowErrorIconInTrustTokenTabHeader, this);\n    this.maybeAppendCookiesPanel();\n    this.maybeShowErrorIconInTrustTokenTabHeader();\n\n    // Only select the initial tab the first time the view is shown after construction.\n    // When the view is re-shown (without re-constructing) users or revealers might have changed\n    // the selected tab in the mean time. Show the previously selected tab in that\n    // case instead, by simply doing nohting.\n    if (this.initialTab) {\n      this.selectTabInternal(this.initialTab);\n      this.initialTab = undefined;\n    }\n  }\n\n  willHide(): void {\n    this.requestInternal.removeEventListener(\n        SDK.NetworkRequest.Events.RequestHeadersChanged, this.requestHeadersChanged, this);\n    this.requestInternal.removeEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this.maybeAppendCookiesPanel, this);\n    this.requestInternal.removeEventListener(\n        SDK.NetworkRequest.Events.TrustTokenResultAdded, this.maybeShowErrorIconInTrustTokenTabHeader, this);\n  }\n\n  private async requestHeadersChanged(): Promise<void> {\n    this.maybeAppendCookiesPanel();\n    void this.maybeAppendPayloadPanel();\n  }\n\n  private maybeAppendCookiesPanel(): void {\n    const cookiesPresent = this.requestInternal.hasRequestCookies() || this.requestInternal.responseCookies.length > 0;\n    console.assert(cookiesPresent || !this.cookiesView, 'Cookies were introduced in headers and then removed!');\n    if (cookiesPresent && !this.cookiesView) {\n      this.cookiesView = new RequestCookiesView(this.requestInternal);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.Cookies, i18nString(UIStrings.cookies), this.cookiesView,\n          i18nString(UIStrings.requestAndResponseCookies));\n    }\n  }\n\n  private async maybeAppendPayloadPanel(): Promise<void> {\n    if (this.hasTab('payload')) {\n      return;\n    }\n    if (this.requestInternal.queryParameters || await this.requestInternal.requestFormData()) {\n      this.payloadView = new RequestPayloadView(this.requestInternal);\n      this.appendTab(\n          NetworkForward.UIRequestLocation.UIRequestTabs.Payload, i18nString(UIStrings.payload), this.payloadView,\n          i18nString(UIStrings.payload), /* userGesture=*/ void 0,\n          /* isCloseable=*/ void 0, /* isPreviewFeature=*/ void 0, /* index=*/ 1);\n    }\n  }\n\n  private maybeShowErrorIconInTrustTokenTabHeader(): void {\n    const trustTokenResult = this.requestInternal.trustTokenOperationDoneEvent();\n    if (trustTokenResult &&\n        !NetworkComponents.RequestTrustTokensView.statusConsideredSuccess(trustTokenResult.status)) {\n      this.setTabIcon(\n          NetworkForward.UIRequestLocation.UIRequestTabs.TrustTokens, UI.Icon.Icon.create('smallicon-error'));\n    }\n  }\n\n  private selectTabInternal(tabId: string): void {\n    if (!this.selectTab(tabId)) {\n      // maybeAppendPayloadPanel might cause payload tab to appear asynchronously, so\n      // it makes sense to retry on the next tick\n      window.setTimeout(() => {\n        if (!this.selectTab(tabId)) {\n          this.selectTab('headers');\n        }\n      }, 0);\n    }\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.resourceViewTabSetting.set(event.data.tabId as NetworkForward.UIRequestLocation.UIRequestTabs);\n  }\n\n  request(): SDK.NetworkRequest.NetworkRequest {\n    return this.requestInternal;\n  }\n\n  async revealResponseBody(line?: number): Promise<void> {\n    this.selectTabInternal(NetworkForward.UIRequestLocation.UIRequestTabs.Response);\n    if (this.responseView && typeof line === 'number') {\n      await this.responseView.revealLine((line as number));\n    }\n  }\n\n  revealHeader(section: NetworkForward.UIRequestLocation.UIHeaderSection, header: string|undefined): void {\n    this.selectTabInternal(NetworkForward.UIRequestLocation.UIRequestTabs.Headers);\n    this.headersView.revealHeader(section, header);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
