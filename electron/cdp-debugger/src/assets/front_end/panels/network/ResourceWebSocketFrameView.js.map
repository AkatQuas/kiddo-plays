{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/ResourceWebSocketFrameView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Research In Motion Limited. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {BinaryResourceView} from './BinaryResourceView.js';\nimport webSocketFrameViewStyles from './webSocketFrameView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Event Source Messages View of the Network panel\n  */\n  data: 'Data',\n  /**\n  *@description Text in Resource Web Socket Frame View of the Network panel\n  */\n  length: 'Length',\n  /**\n  *@description Text that refers to the time\n  */\n  time: 'Time',\n  /**\n  *@description Data grid name for Web Socket Frame data grids\n  */\n  webSocketFrame: 'Web Socket Frame',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear All',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text in Resource Web Socket Frame View of the Network panel\n  */\n  selectMessageToBrowseItsContent: 'Select message to browse its content.',\n  /**\n  *@description Text in Resource Web Socket Frame View of the Network panel\n  */\n  copyMessageD: 'Copy message...',\n  /**\n  *@description A context menu item in the Resource Web Socket Frame View of the Network panel\n  */\n  copyMessage: 'Copy message',\n  /**\n  *@description Text to clear everything\n  */\n  clearAllL: 'Clear all',\n  /**\n  * @description Text in Resource Web Socket Frame View of the Network panel. Displays which Opcode\n  * is relevant to a particular operation. 'mask' indicates that the Opcode used a mask, which is a\n  * way of modifying a value by overlaying another value on top of it, partially covering/changing\n  * it, hence 'masking' it.\n  * https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\n  * @example {Localized name of the Opcode} PH1\n  * @example {0} PH2\n  */\n  sOpcodeSMask: '{PH1} (Opcode {PH2}, mask)',\n  /**\n  * @description Text in Resource Web Socket Frame View of the Network panel. Displays which Opcode\n  * is relevant to a particular operation.\n  * @example {Localized name of the Opcode} PH1\n  * @example {0} PH2\n  */\n  sOpcodeS: '{PH1} (Opcode {PH2})',\n  /**\n  *@description Op codes continuation frame of map in Resource Web Socket Frame View of the Network panel\n  */\n  continuationFrame: 'Continuation Frame',\n  /**\n  *@description Op codes text frame of map in Resource Web Socket Frame View of the Network panel\n  */\n  textMessage: 'Text Message',\n  /**\n  *@description Op codes binary frame of map in Resource Web Socket Frame View of the Network panel\n  */\n  binaryMessage: 'Binary Message',\n  /**\n  *@description Op codes continuation frame of map in Resource Web Socket Frame View of the Network panel indicating that the web socket connection has been closed.\n  */\n  connectionCloseMessage: 'Connection Close Message',\n  /**\n  *@description Op codes ping frame of map in Resource Web Socket Frame View of the Network panel\n  */\n  pingMessage: 'Ping Message',\n  /**\n  *@description Op codes pong frame of map in Resource Web Socket Frame View of the Network panel\n  */\n  pongMessage: 'Pong Message',\n  /**\n  *@description Text for everything\n  */\n  all: 'All',\n  /**\n  *@description Text in Resource Web Socket Frame View of the Network panel\n  */\n  send: 'Send',\n  /**\n  *@description Text in Resource Web Socket Frame View of the Network panel\n  */\n  receive: 'Receive',\n  /**\n  *@description Text for something not available\n  */\n  na: 'N/A',\n  /**\n  *@description Example for placeholder text\n  */\n  enterRegex: 'Enter regex, for example: (web)?socket',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/ResourceWebSocketFrameView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class ResourceWebSocketFrameView extends UI.Widget.VBox {\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<unknown>;\n  private readonly timeComparator:\n      (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<ResourceWebSocketFrameNode>,\n       arg1: DataGrid.SortableDataGrid.SortableDataGridNode<ResourceWebSocketFrameNode>) => number;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly clearAllButton: UI.Toolbar.ToolbarButton;\n  private readonly filterTypeCombobox: UI.Toolbar.ToolbarComboBox;\n  private filterType: string|null;\n  private readonly filterTextInput: UI.Toolbar.ToolbarInput;\n  private filterRegex: RegExp|null;\n  private readonly frameEmptyWidget: UI.EmptyWidget.EmptyWidget;\n  private readonly selectedNode: ResourceWebSocketFrameNode|null;\n  private currentSelectedNode?: ResourceWebSocketFrameNode|null;\n\n  private messageFilterSetting: Common.Settings.Setting<string> =\n      Common.Settings.Settings.instance().createSetting('networkWebSocketMessageFilter', '');\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.element.classList.add('websocket-frame-view');\n    this.request = request;\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(false, true, 'resourceWebSocketFrameSplitViewState');\n    this.splitWidget.show(this.element);\n\n    const columns = ([\n      {id: 'data', title: i18nString(UIStrings.data), sortable: false, weight: 88},\n      {\n        id: 'length',\n        title: i18nString(UIStrings.length),\n        sortable: false,\n        align: DataGrid.DataGrid.Align.Right,\n        weight: 5,\n      },\n      {id: 'time', title: i18nString(UIStrings.time), sortable: true, weight: 7},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.webSocketFrame),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this.dataGrid.setRowContextMenuCallback(onRowContextMenu.bind(this));\n    this.dataGrid.setStickToBottom(true);\n    this.dataGrid.setCellClass('websocket-frame-view-td');\n    this.timeComparator =\n        (ResourceWebSocketFrameNodeTimeComparator as\n             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<ResourceWebSocketFrameNode>,\n              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<ResourceWebSocketFrameNode>) => number);\n    this.dataGrid.sortNodes(this.timeComparator, false);\n    this.dataGrid.markColumnAsSortedBy('time', DataGrid.DataGrid.Order.Ascending);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortItems, this);\n\n    this.dataGrid.setName('ResourceWebSocketFrameView');\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      void this.onFrameSelected(event);\n    }, this);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode, this.onFrameDeselected, this);\n\n    this.mainToolbar = new UI.Toolbar.Toolbar('');\n\n    this.clearAllButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    this.clearAllButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clearFrames, this);\n    this.mainToolbar.appendToolbarItem(this.clearAllButton);\n\n    this.filterTypeCombobox =\n        new UI.Toolbar.ToolbarComboBox(this.updateFilterSetting.bind(this), i18nString(UIStrings.filter));\n    for (const filterItem of _filterTypes) {\n      const option = this.filterTypeCombobox.createOption(filterItem.label(), filterItem.name);\n      this.filterTypeCombobox.addOption(option);\n    }\n    this.mainToolbar.appendToolbarItem(this.filterTypeCombobox);\n    this.filterType = null;\n\n    const placeholder = i18nString(UIStrings.enterRegex);\n    this.filterTextInput = new UI.Toolbar.ToolbarInput(placeholder, '', 0.4);\n    this.filterTextInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.updateFilterSetting, this);\n    const filter = this.messageFilterSetting.get();\n    if (filter) {\n      this.filterTextInput.setValue(filter);\n    }\n    this.filterRegex = null;\n    this.mainToolbar.appendToolbarItem(this.filterTextInput);\n\n    const mainContainer = new UI.Widget.VBox();\n    mainContainer.element.appendChild(this.mainToolbar.element);\n    this.dataGrid.asWidget().show(mainContainer.element);\n    mainContainer.setMinimumSize(0, 72);\n    this.splitWidget.setMainWidget(mainContainer);\n\n    this.frameEmptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectMessageToBrowseItsContent));\n    this.splitWidget.setSidebarWidget(this.frameEmptyWidget);\n\n    this.selectedNode = null;\n    if (filter) {\n      this.applyFilter(filter);\n    }\n\n    function onRowContextMenu(\n        this: ResourceWebSocketFrameView, contextMenu: UI.ContextMenu.ContextMenu,\n        genericNode: DataGrid.DataGrid.DataGridNode<unknown>): void {\n      const node = (genericNode as ResourceWebSocketFrameNode);\n      const binaryView = node.binaryView();\n      if (binaryView) {\n        binaryView.addCopyToContextMenu(contextMenu, i18nString(UIStrings.copyMessageD));\n      } else {\n        contextMenu.clipboardSection().appendItem(\n            i18nString(UIStrings.copyMessage),\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance, node.data.data));\n      }\n      contextMenu.footerSection().appendItem(i18nString(UIStrings.clearAllL), this.clearFrames.bind(this));\n    }\n  }\n\n  static opCodeDescription(opCode: number, mask: boolean): string {\n    const localizedDescription = opCodeDescriptions[opCode] || ((): string => '');\n    if (mask) {\n      return i18nString(UIStrings.sOpcodeSMask, {PH1: localizedDescription(), PH2: opCode});\n    }\n    return i18nString(UIStrings.sOpcodeS, {PH1: localizedDescription(), PH2: opCode});\n  }\n\n  wasShown(): void {\n    this.refresh();\n    this.registerCSSFiles([webSocketFrameViewStyles]);\n    this.request.addEventListener(SDK.NetworkRequest.Events.WebsocketFrameAdded, this.frameAdded, this);\n  }\n\n  willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.WebsocketFrameAdded, this.frameAdded, this);\n  }\n\n  private frameAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.WebSocketFrame>): void {\n    const frame = event.data;\n    if (!this.frameFilter(frame)) {\n      return;\n    }\n    this.dataGrid.insertChild(new ResourceWebSocketFrameNode(this.request.url(), frame));\n  }\n\n  private frameFilter(frame: SDK.NetworkRequest.WebSocketFrame): boolean {\n    if (this.filterType && frame.type !== this.filterType) {\n      return false;\n    }\n    return !this.filterRegex || this.filterRegex.test(frame.text);\n  }\n\n  private clearFrames(): void {\n    // TODO(allada): actially remove frames from request.\n    _clearFrameOffsets.set(this.request, this.request.frames().length);\n    this.refresh();\n  }\n\n  private updateFilterSetting(): void {\n    const text = this.filterTextInput.value();\n    this.messageFilterSetting.set(text);\n    this.applyFilter(text);\n  }\n\n  private applyFilter(text: string): void {\n    const type = (this.filterTypeCombobox.selectedOption() as HTMLOptionElement).value;\n    this.filterRegex = text ? new RegExp(text, 'i') : null;\n    this.filterType = type === 'all' ? null : type;\n    this.refresh();\n  }\n\n  private async onFrameSelected(event: Common.EventTarget.EventTargetEvent<DataGrid.DataGrid.DataGridNode<unknown>>):\n      Promise<void> {\n    this.currentSelectedNode = (event.data as ResourceWebSocketFrameNode);\n    const content = this.currentSelectedNode.dataText();\n\n    const binaryView = this.currentSelectedNode.binaryView();\n    if (binaryView) {\n      this.splitWidget.setSidebarWidget(binaryView);\n      return;\n    }\n\n    const jsonView = await SourceFrame.JSONView.JSONView.createView(content);\n    if (jsonView) {\n      this.splitWidget.setSidebarWidget(jsonView);\n      return;\n    }\n\n    this.splitWidget.setSidebarWidget(new SourceFrame.ResourceSourceFrame.ResourceSourceFrame(\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            this.request.url(), Common.ResourceType.resourceTypes.WebSocket, content),\n        ''));\n  }\n\n  private onFrameDeselected(): void {\n    this.currentSelectedNode = null;\n    this.splitWidget.setSidebarWidget(this.frameEmptyWidget);\n  }\n\n  refresh(): void {\n    this.dataGrid.rootNode().removeChildren();\n\n    const url = this.request.url();\n    let frames = this.request.frames();\n    const offset = _clearFrameOffsets.get(this.request) || 0;\n    frames = frames.slice(offset);\n    frames = frames.filter(this.frameFilter.bind(this));\n    frames.forEach(frame => this.dataGrid.insertChild(new ResourceWebSocketFrameNode(url, frame)));\n  }\n\n  private sortItems(): void {\n    this.dataGrid.sortNodes(this.timeComparator, !this.dataGrid.isSortOrderAscending());\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum OpCodes {\n  ContinuationFrame = 0,\n  TextFrame = 1,\n  BinaryFrame = 2,\n  ConnectionCloseFrame = 8,\n  PingFrame = 9,\n  PongFrame = 10,\n}\n\nexport const opCodeDescriptions: (() => string)[] = (function(): (() => Common.UIString.LocalizedString)[] {\n  const opCodes = OpCodes;\n  const map = [];\n  map[opCodes.ContinuationFrame] = i18nLazyString(UIStrings.continuationFrame);\n  map[opCodes.TextFrame] = i18nLazyString(UIStrings.textMessage);\n  map[opCodes.BinaryFrame] = i18nLazyString(UIStrings.binaryMessage);\n  map[opCodes.ConnectionCloseFrame] = i18nLazyString(UIStrings.connectionCloseMessage);\n  map[opCodes.PingFrame] = i18nLazyString(UIStrings.pingMessage);\n  map[opCodes.PongFrame] = i18nLazyString(UIStrings.pongMessage);\n  return map;\n})();\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _filterTypes: UI.FilterBar.Item[] = [\n  {name: 'all', label: i18nLazyString(UIStrings.all), title: undefined},\n  {name: 'send', label: i18nLazyString(UIStrings.send), title: undefined},\n  {name: 'receive', label: i18nLazyString(UIStrings.receive), title: undefined},\n];\n\nexport class ResourceWebSocketFrameNode extends DataGrid.SortableDataGrid.SortableDataGridNode<unknown> {\n  private readonly url: Platform.DevToolsPath.UrlString;\n  readonly frame: SDK.NetworkRequest.WebSocketFrame;\n  private readonly isTextFrame: boolean;\n  private dataTextInternal: string;\n  private binaryViewInternal: BinaryResourceView|null;\n\n  constructor(url: Platform.DevToolsPath.UrlString, frame: SDK.NetworkRequest.WebSocketFrame) {\n    let length = String(frame.text.length);\n    const time = new Date(frame.time * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n\n    let dataText: string = frame.text;\n    let description = ResourceWebSocketFrameView.opCodeDescription(frame.opCode, frame.mask);\n    const isTextFrame = frame.opCode === OpCodes.TextFrame;\n\n    if (frame.type === SDK.NetworkRequest.WebSocketFrameType.Error) {\n      description = dataText;\n      length = i18nString(UIStrings.na);\n\n    } else if (isTextFrame) {\n      description = dataText;\n\n    } else if (frame.opCode === OpCodes.BinaryFrame) {\n      length = Platform.NumberUtilities.bytesToString(Platform.StringUtilities.base64ToSize(frame.text));\n      description = opCodeDescriptions[frame.opCode]();\n\n    } else {\n      dataText = description;\n    }\n\n    super({data: description, length: length, time: timeNode});\n\n    this.url = url;\n    this.frame = frame;\n    this.isTextFrame = isTextFrame;\n    this.dataTextInternal = dataText;\n\n    this.binaryViewInternal = null;\n  }\n\n  createCells(element: Element): void {\n    element.classList.toggle(\n        'websocket-frame-view-row-error', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Error);\n    element.classList.toggle(\n        'websocket-frame-view-row-send', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Send);\n    element.classList.toggle(\n        'websocket-frame-view-row-receive', this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Receive);\n    super.createCells(element);\n  }\n\n  nodeSelfHeight(): number {\n    return 21;\n  }\n\n  dataText(): string {\n    return this.dataTextInternal;\n  }\n\n  opCode(): OpCodes {\n    return this.frame.opCode as OpCodes;\n  }\n\n  binaryView(): BinaryResourceView|null {\n    if (this.isTextFrame || this.frame.type === SDK.NetworkRequest.WebSocketFrameType.Error) {\n      return null;\n    }\n\n    if (!this.binaryViewInternal) {\n      if (this.dataTextInternal.length > 0) {\n        this.binaryViewInternal = new BinaryResourceView(\n            this.dataTextInternal, Platform.DevToolsPath.EmptyUrlString, Common.ResourceType.resourceTypes.WebSocket);\n      }\n    }\n    return this.binaryViewInternal;\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function ResourceWebSocketFrameNodeTimeComparator(\n    a: ResourceWebSocketFrameNode, b: ResourceWebSocketFrameNode): number {\n  return a.frame.time - b.frame.time;\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _clearFrameOffsets = new WeakMap<SDK.NetworkRequest.NetworkRequest, number>();\n"],
  "mappings": "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",
  "names": []
}
