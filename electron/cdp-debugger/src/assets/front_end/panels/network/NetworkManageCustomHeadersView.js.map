{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/NetworkManageCustomHeadersView.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport networkManageCustomHeadersViewStyles from './networkManageCustomHeadersView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Network Manage Custom Headers View of the Network panel\n  */\n  manageHeaderColumns: 'Manage Header Columns',\n  /**\n  *@description Placeholder text content in Network Manage Custom Headers View of the Network panel\n  */\n  noCustomHeaders: 'No custom headers',\n  /**\n  *@description Text of add button in Network Manage Custom Headers View of the Network panel\n  */\n  addCustomHeader: 'Add custom header\u2026',\n  /**\n  *@description Text in Network Manage Custom Headers View of the Network panel\n  */\n  headerName: 'Header Name',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkManageCustomHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface CustomHeader {\n  header: string;\n}\n\nexport class NetworkManageCustomHeadersView extends UI.Widget.VBox implements UI.ListWidget.Delegate<CustomHeader> {\n  private readonly list: UI.ListWidget.ListWidget<CustomHeader>;\n  private readonly columnConfigs: Map<string, {\n    title: string,\n    editable: boolean,\n  }>;\n  private addHeaderColumnCallback: (arg0: string) => boolean;\n  private changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean;\n  private readonly removeHeaderColumnCallback: (arg0: string) => boolean;\n  private editor?: UI.ListWidget.Editor<CustomHeader>;\n\n  constructor(\n      columnData: {\n        title: string,\n        editable: boolean,\n      }[],\n      addHeaderColumnCallback: (arg0: string) => boolean,\n      changeHeaderColumnCallback: (arg0: string, arg1: string) => boolean,\n      removeHeaderColumnCallback: (arg0: string) => boolean) {\n    super(true);\n\n    this.contentElement.classList.add('custom-headers-wrapper');\n    this.contentElement.createChild('div', 'header').textContent = i18nString(UIStrings.manageHeaderColumns);\n\n    this.list = new UI.ListWidget.ListWidget(this);\n    this.list.element.classList.add('custom-headers-list');\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('custom-headers-list-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noCustomHeaders);\n    this.list.setEmptyPlaceholder(placeholder);\n    this.list.show(this.contentElement);\n    this.contentElement.appendChild(UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addCustomHeader), this.addButtonClicked.bind(this), 'add-button'));\n\n    this.columnConfigs = new Map();\n    columnData.forEach(columnData => this.columnConfigs.set(columnData.title.toLowerCase(), columnData));\n\n    this.addHeaderColumnCallback = addHeaderColumnCallback;\n    this.changeHeaderColumnCallback = changeHeaderColumnCallback;\n    this.removeHeaderColumnCallback = removeHeaderColumnCallback;\n\n    this.contentElement.tabIndex = 0;\n  }\n\n  wasShown(): void {\n    this.headersUpdated();\n    this.list.registerCSSFiles([networkManageCustomHeadersViewStyles]);\n    this.registerCSSFiles([networkManageCustomHeadersViewStyles]);\n  }\n\n  private headersUpdated(): void {\n    this.list.clear();\n    this.columnConfigs.forEach(headerData => this.list.appendItem({header: headerData.title}, headerData.editable));\n  }\n\n  private addButtonClicked(): void {\n    this.list.addNewItem(this.columnConfigs.size, {header: ''});\n  }\n\n  renderItem(item: CustomHeader, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('custom-headers-list-item');\n    const header = element.createChild('div', 'custom-header-name');\n    header.textContent = item.header;\n    UI.Tooltip.Tooltip.install(header, item.header);\n    return element;\n  }\n\n  removeItemRequested(item: CustomHeader, _index: number): void {\n    this.removeHeaderColumnCallback(item.header);\n    this.columnConfigs.delete(item.header.toLowerCase());\n    this.headersUpdated();\n  }\n\n  commitEdit(item: CustomHeader, editor: UI.ListWidget.Editor<CustomHeader>, isNew: boolean): void {\n    const headerId = editor.control('header').value.trim();\n    let success;\n    if (isNew) {\n      success = this.addHeaderColumnCallback(headerId);\n    } else {\n      success = this.changeHeaderColumnCallback(item.header, headerId);\n    }\n\n    if (success && !isNew) {\n      this.columnConfigs.delete(item.header.toLowerCase());\n    }\n    if (success) {\n      this.columnConfigs.set(headerId.toLowerCase(), {title: headerId, editable: true});\n    }\n\n    this.headersUpdated();\n  }\n\n  beginEdit(item: CustomHeader): UI.ListWidget.Editor<CustomHeader> {\n    const editor = this.createEditor();\n    editor.control('header').value = item.header;\n    return editor;\n  }\n\n  private createEditor(): UI.ListWidget.Editor<CustomHeader> {\n    if (this.editor) {\n      return this.editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<CustomHeader>();\n    this.editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'custom-headers-edit-row');\n    titles.createChild('div', 'custom-headers-header').textContent = i18nString(UIStrings.headerName);\n\n    const fields = content.createChild('div', 'custom-headers-edit-row');\n    fields.createChild('div', 'custom-headers-header')\n        .appendChild(editor.createInput('header', 'text', 'x-custom-header', validateHeader.bind(this)));\n\n    return editor;\n\n    function validateHeader(\n        this: NetworkManageCustomHeadersView, item: CustomHeader, _index: number,\n        _input: UI.ListWidget.EditorControl): UI.ListWidget.ValidatorResult {\n      let valid = true;\n      const headerId = editor.control('header').value.trim().toLowerCase();\n      if (this.columnConfigs.has(headerId) && item.header !== headerId) {\n        valid = false;\n      }\n      return {valid, errorMessage: undefined};\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
