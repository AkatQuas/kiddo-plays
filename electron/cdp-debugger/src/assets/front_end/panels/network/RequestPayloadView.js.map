{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/RequestPayloadView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectPropertiesSectionStyles from '../../ui/legacy/components/object_ui/objectPropertiesSection.css.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport requestPayloadTreeStyles from './requestPayloadTree.css.js';\nimport requestPayloadViewStyles from './requestPayloadView.css.js';\nconst UIStrings = {\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel and Network pane request.\n  */\n  copyValue: 'Copy value',\n  /**\n  * @description Text in Request Payload View of the Network panel. This is a noun-phrase meaning the\n  * payload of a network request.\n  */\n  requestPayload: 'Request Payload',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  unableToDecodeValue: '(unable to decode value)',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  queryStringParameters: 'Query String Parameters',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  formData: 'Form Data',\n  /**\n  *@description Text to show more content\n  */\n  showMore: 'Show more',\n  /**\n  *@description Text for toggling the view of payload data (e.g. query string parameters) from source to parsed in the payload tab\n  */\n  viewParsed: 'View parsed',\n  /**\n  *@description Text to show an item is empty\n  */\n  empty: '(empty)',\n  /**\n  *@description Text for toggling the view of payload data (e.g. query string parameters) from parsed to source in the payload tab\n  */\n  viewSource: 'View source',\n  /**\n  * @description Text for toggling payload data (e.g. query string parameters) from decoded to\n  * encoded in the payload tab or in the cookies preview. URL-encoded is a different data format for\n  * the same data, which the user sees when they click this command.\n  */\n  viewUrlEncoded: 'View URL-encoded',\n  /**\n  *@description Text for toggling payload data (e.g. query string parameters) from encoded to decoded in the payload tab or in the cookies preview\n  */\n  viewDecoded: 'View decoded',\n  /**\n  *@description Text for toggling payload data (e.g. query string parameters) from decoded to\n  * encoded in the payload tab or in the cookies preview. URL-encoded is a different data format for\n  * the same data, which the user sees when they click this command.\n  */\n  viewUrlEncodedL: 'view URL-encoded',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  viewDecodedL: 'view decoded',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  viewParsedL: 'view parsed',\n  /**\n  *@description Text in Request Payload View of the Network panel\n  */\n  viewSourceL: 'view source',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestPayloadView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestPayloadView extends UI.Widget.VBox {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  private decodeRequestParameters: boolean;\n  private queryStringCategory: Category;\n  private formDataCategory: Category;\n  private requestPayloadCategory: Category;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.element.classList.add('request-payload-view');\n\n    this.request = request;\n    this.decodeRequestParameters = true;\n\n    const contentType = request.requestContentType();\n    if (contentType) {\n      this.decodeRequestParameters = Boolean(contentType.match(/^application\\/x-www-form-urlencoded\\s*(;.*)?$/i));\n    }\n\n    const root = new UI.TreeOutline.TreeOutlineInShadow();\n    root.registerCSSFiles([objectValueStyles, objectPropertiesSectionStyles, requestPayloadTreeStyles]);\n    root.element.classList.add('request-payload-tree');\n    root.makeDense();\n    this.element.appendChild(root.element);\n\n    this.queryStringCategory = new Category(root, 'queryString', '');\n    this.formDataCategory = new Category(root, 'formData', '');\n    this.requestPayloadCategory = new Category(root, 'requestPayload', i18nString(UIStrings.requestPayload));\n  }\n\n  wasShown(): void {\n    this.registerCSSFiles([requestPayloadViewStyles]);\n    this.request.addEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.refreshFormData, this);\n\n    this.refreshQueryString();\n    void this.refreshFormData();\n    // this._root.select(/* omitFocus */ true, /* selectedByUser */ false);\n  }\n\n  willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.refreshFormData, this);\n  }\n\n  private addEntryContextMenuHandler(treeElement: UI.TreeOutline.TreeElement, value: string): void {\n    treeElement.listItemElement.addEventListener('contextmenu', event => {\n      event.consume(true);\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const decodedValue = decodeURIComponent(value);\n      const copyDecodedValueHandler = (): void => {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelCopyValue);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(decodedValue);\n      };\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyValue), copyDecodedValueHandler);\n      void contextMenu.show();\n    });\n  }\n\n  private formatParameter(value: string, className: string, decodeParameters: boolean): Element {\n    let errorDecoding = false;\n\n    if (decodeParameters) {\n      value = value.replace(/\\+/g, ' ');\n      if (value.indexOf('%') >= 0) {\n        try {\n          value = decodeURIComponent(value);\n        } catch (e) {\n          errorDecoding = true;\n        }\n      }\n    }\n    const div = document.createElement('div');\n    if (className) {\n      div.className = className;\n    }\n    if (value === '') {\n      div.classList.add('empty-value');\n    }\n    if (errorDecoding) {\n      div.createChild('span', 'payload-decode-error').textContent = i18nString(UIStrings.unableToDecodeValue);\n    } else {\n      div.textContent = value;\n    }\n    return div;\n  }\n\n  private refreshQueryString(): void {\n    const queryString = this.request.queryString();\n    const queryParameters = this.request.queryParameters;\n    this.queryStringCategory.hidden = !queryParameters;\n    if (queryParameters) {\n      this.refreshParams(\n          i18nString(UIStrings.queryStringParameters), queryParameters, queryString, this.queryStringCategory);\n    }\n  }\n\n  private async refreshFormData(): Promise<void> {\n    const formData = await this.request.requestFormData();\n    if (!formData) {\n      this.formDataCategory.hidden = true;\n      this.requestPayloadCategory.hidden = true;\n      return;\n    }\n\n    const formParameters = await this.request.formParameters();\n    if (formParameters) {\n      this.formDataCategory.hidden = false;\n      this.requestPayloadCategory.hidden = true;\n      this.refreshParams(i18nString(UIStrings.formData), formParameters, formData, this.formDataCategory);\n    } else {\n      this.requestPayloadCategory.hidden = false;\n      this.formDataCategory.hidden = true;\n      try {\n        const json = JSON.parse(formData);\n        this.refreshRequestJSONPayload(json, formData);\n      } catch (e) {\n        this.populateTreeElementWithSourceText(this.requestPayloadCategory, formData);\n      }\n    }\n  }\n\n  private populateTreeElementWithSourceText(treeElement: UI.TreeOutline.TreeElement, sourceText: string|null): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const max_len = 3000;\n    const text = (sourceText || '').trim();\n    const trim = text.length > max_len;\n\n    const sourceTextElement = document.createElement('span');\n    sourceTextElement.classList.add('payload-value');\n    sourceTextElement.classList.add('source-code');\n    sourceTextElement.textContent = trim ? text.substr(0, max_len) : text;\n\n    const sourceTreeElement = new UI.TreeOutline.TreeElement(sourceTextElement);\n    treeElement.removeChildren();\n    treeElement.appendChild(sourceTreeElement);\n    if (!trim) {\n      return;\n    }\n\n    const showMoreButton = document.createElement('button');\n    showMoreButton.classList.add('request-payload-show-more-button');\n    showMoreButton.textContent = i18nString(UIStrings.showMore);\n\n    function showMore(): void {\n      showMoreButton.remove();\n      sourceTextElement.textContent = text;\n      sourceTreeElement.listItemElement.removeEventListener('contextmenu', onContextMenuShowMore);\n    }\n    showMoreButton.addEventListener('click', showMore);\n\n    function onContextMenuShowMore(event: Event): void {\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const section = contextMenu.newSection();\n      section.appendItem(i18nString(UIStrings.showMore), showMore);\n      void contextMenu.show();\n    }\n    sourceTreeElement.listItemElement.addEventListener('contextmenu', onContextMenuShowMore);\n    sourceTextElement.appendChild(showMoreButton);\n  }\n\n  private refreshParams(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    paramsTreeElement.removeChildren();\n\n    paramsTreeElement.listItemElement.removeChildren();\n    paramsTreeElement.listItemElement.createChild('div', 'selection fill');\n    UI.UIUtils.createTextChild(paramsTreeElement.listItemElement, title);\n\n    const payloadCount = document.createElement('span');\n    payloadCount.classList.add('payload-count');\n    const numberOfParams = params ? params.length : 0;\n    payloadCount.textContent = `\\xA0(${numberOfParams})`;\n    paramsTreeElement.listItemElement.appendChild(payloadCount);\n\n    const shouldViewSource = viewSourceForItems.has(paramsTreeElement);\n    if (shouldViewSource) {\n      this.appendParamsSource(title, params, sourceText, paramsTreeElement);\n    } else {\n      this.appendParamsParsed(title, params, sourceText, paramsTreeElement);\n    }\n  }\n\n  private appendParamsSource(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    this.populateTreeElementWithSourceText(paramsTreeElement, sourceText);\n\n    const listItemElement = paramsTreeElement.listItemElement;\n\n    const viewParsed = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewParsedContextMenu);\n\n      viewSourceForItems.delete(paramsTreeElement);\n      this.refreshParams(title, params, sourceText, paramsTreeElement);\n      event.consume();\n    };\n\n    const viewParsedContextMenu = (event: Event): void => {\n      if (!paramsTreeElement.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(i18nString(UIStrings.viewParsed), viewParsed.bind(this, event));\n      void contextMenu.show();\n    };\n\n    const viewParsedButton = this.createViewSourceToggle(/* viewSource */ true, viewParsed.bind(this));\n    listItemElement.appendChild(viewParsedButton);\n\n    listItemElement.addEventListener('contextmenu', viewParsedContextMenu);\n  }\n\n  private appendParamsParsed(\n      title: string, params: SDK.NetworkRequest.NameValue[]|null, sourceText: string|null,\n      paramsTreeElement: UI.TreeOutline.TreeElement): void {\n    for (const param of params || []) {\n      const paramNameValue = document.createDocumentFragment();\n      if (param.name !== '') {\n        const name = this.formatParameter(param.name + ': ', 'payload-name', this.decodeRequestParameters);\n        const value = this.formatParameter(param.value, 'payload-value source-code', this.decodeRequestParameters);\n        paramNameValue.appendChild(name);\n        paramNameValue.createChild('span', 'payload-separator');\n        paramNameValue.appendChild(value);\n      } else {\n        paramNameValue.appendChild(\n            this.formatParameter(i18nString(UIStrings.empty), 'empty-request-payload', this.decodeRequestParameters));\n      }\n\n      const paramTreeElement = new UI.TreeOutline.TreeElement(paramNameValue);\n      this.addEntryContextMenuHandler(paramTreeElement, param.value);\n      paramsTreeElement.appendChild(paramTreeElement);\n    }\n\n    const listItemElement = paramsTreeElement.listItemElement;\n\n    const viewSource = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n\n      viewSourceForItems.add(paramsTreeElement);\n      this.refreshParams(title, params, sourceText, paramsTreeElement);\n      event.consume();\n    };\n\n    const toggleURLDecoding = function(this: RequestPayloadView, event: Event): void {\n      listItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n      this.toggleURLDecoding(event);\n    };\n\n    const viewSourceContextMenu = (event: Event): void => {\n      if (!paramsTreeElement.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const section = contextMenu.newSection();\n      section.appendItem(i18nString(UIStrings.viewSource), viewSource.bind(this, event));\n      const viewURLEncodedText =\n          this.decodeRequestParameters ? i18nString(UIStrings.viewUrlEncoded) : i18nString(UIStrings.viewDecoded);\n      section.appendItem(viewURLEncodedText, toggleURLDecoding.bind(this, event));\n      void contextMenu.show();\n    };\n\n    const viewSourceButton = this.createViewSourceToggle(/* viewSource */ false, viewSource.bind(this));\n    listItemElement.appendChild(viewSourceButton);\n\n    const toggleTitle =\n        this.decodeRequestParameters ? i18nString(UIStrings.viewUrlEncodedL) : i18nString(UIStrings.viewDecodedL);\n    const toggleButton = this.createToggleButton(toggleTitle);\n    toggleButton.addEventListener('click', toggleURLDecoding.bind(this), false);\n    listItemElement.appendChild(toggleButton);\n\n    listItemElement.addEventListener('contextmenu', viewSourceContextMenu);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private refreshRequestJSONPayload(parsedObject: any, sourceText: string): void {\n    const rootListItem = this.requestPayloadCategory;\n    rootListItem.removeChildren();\n\n    const rootListItemElement = rootListItem.listItemElement;\n    rootListItemElement.removeChildren();\n    rootListItemElement.createChild('div', 'selection fill');\n    UI.UIUtils.createTextChild(rootListItemElement, this.requestPayloadCategory.title.toString());\n\n    if (viewSourceForItems.has(rootListItem)) {\n      this.appendJSONPayloadSource(rootListItem, parsedObject, sourceText);\n    } else {\n      this.appendJSONPayloadParsed(rootListItem, parsedObject, sourceText);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private appendJSONPayloadSource(rootListItem: Category, parsedObject: any, sourceText: string): void {\n    const rootListItemElement = rootListItem.listItemElement;\n    this.populateTreeElementWithSourceText(rootListItem, sourceText);\n\n    const viewParsed = function(this: RequestPayloadView, event: Event): void {\n      rootListItemElement.removeEventListener('contextmenu', viewParsedContextMenu);\n      viewSourceForItems.delete(rootListItem);\n      this.refreshRequestJSONPayload(parsedObject, sourceText);\n      event.consume();\n    };\n\n    const viewParsedButton = this.createViewSourceToggle(/* viewSource */ true, viewParsed.bind(this));\n    rootListItemElement.appendChild(viewParsedButton);\n\n    const viewParsedContextMenu = (event: Event): void => {\n      if (!rootListItem.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(i18nString(UIStrings.viewParsed), viewParsed.bind(this, event));\n      void contextMenu.show();\n    };\n\n    rootListItemElement.addEventListener('contextmenu', viewParsedContextMenu);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private appendJSONPayloadParsed(rootListItem: Category, parsedObject: any, sourceText: string): void {\n    const object = (SDK.RemoteObject.RemoteObject.fromLocalObject(parsedObject) as SDK.RemoteObject.LocalJSONObject);\n    const section = new ObjectUI.ObjectPropertiesSection.RootElement(object);\n    section.title = (object.description as string);\n    section.expand();\n    // `editable` is not a valid property for `ObjectUI.ObjectPropertiesSection.RootElement`. Only for\n    // `ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection`. We do not know if this assignment is\n    // safe to delete.\n    // @ts-ignore\n    section.editable = false;\n    rootListItem.childrenListElement.classList.add('source-code', 'object-properties-section');\n\n    rootListItem.appendChild(section);\n    const rootListItemElement = rootListItem.listItemElement;\n\n    const viewSource = function(this: RequestPayloadView, event: Event): void {\n      rootListItemElement.removeEventListener('contextmenu', viewSourceContextMenu);\n\n      viewSourceForItems.add(rootListItem);\n      this.refreshRequestJSONPayload(parsedObject, sourceText);\n      event.consume();\n    };\n\n    const viewSourceContextMenu = (event: Event): void => {\n      if (!rootListItem.expanded) {\n        return;\n      }\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      contextMenu.newSection().appendItem(i18nString(UIStrings.viewSource), viewSource.bind(this, event));\n      void contextMenu.show();\n    };\n\n    const viewSourceButton = this.createViewSourceToggle(/* viewSource */ false, viewSource.bind(this));\n    rootListItemElement.appendChild(viewSourceButton);\n\n    rootListItemElement.addEventListener('contextmenu', viewSourceContextMenu);\n  }\n\n  private createViewSourceToggle(viewSource: boolean, handler: (arg0: Event) => void): Element {\n    const viewSourceToggleTitle = viewSource ? i18nString(UIStrings.viewParsedL) : i18nString(UIStrings.viewSourceL);\n    const viewSourceToggleButton = this.createToggleButton(viewSourceToggleTitle);\n    viewSourceToggleButton.addEventListener('click', handler, false);\n    return viewSourceToggleButton;\n  }\n\n  private toggleURLDecoding(event: Event): void {\n    this.decodeRequestParameters = !this.decodeRequestParameters;\n    this.refreshQueryString();\n    void this.refreshFormData();\n    event.consume();\n  }\n\n  private createToggleButton(title: string): Element {\n    const button = document.createElement('span');\n    button.classList.add('payload-toggle');\n    button.tabIndex = 0;\n    button.setAttribute('role', 'button');\n    button.textContent = title;\n    return button;\n  }\n}\n\nconst viewSourceForItems = new WeakSet<Category|UI.TreeOutline.TreeElement>();\n\nexport class Category extends UI.TreeOutline.TreeElement {\n  toggleOnClick: boolean;\n  private readonly expandedSetting: Common.Settings.Setting<boolean>;\n  expanded: boolean;\n\n  constructor(root: UI.TreeOutline.TreeOutline, name: string, title?: string) {\n    super(title || '', true);\n    this.toggleOnClick = true;\n    this.hidden = true;\n    this.expandedSetting =\n        Common.Settings.Settings.instance().createSetting('request-info-' + name + '-category-expanded', true);\n    this.expanded = this.expandedSetting.get();\n    root.appendChild(this);\n  }\n\n  createLeaf(): UI.TreeOutline.TreeElement {\n    const leaf = new UI.TreeOutline.TreeElement();\n    this.appendChild(leaf);\n    return leaf;\n  }\n\n  onexpand(): void {\n    this.expandedSetting.set(true);\n  }\n\n  oncollapse(): void {\n    this.expandedSetting.set(false);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
