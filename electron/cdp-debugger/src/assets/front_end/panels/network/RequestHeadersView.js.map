{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/RequestHeadersView.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n * Copyright (C) 2010 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as ClientVariations from '../../third_party/chromium/client-variations/client-variations.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectPropertiesSectionStyles from '../../ui/legacy/components/object_ui/objectPropertiesSection.css.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Sources from '../sources/sources.js';\n\nimport requestHeadersTreeStyles from './requestHeadersTree.css.js';\nimport requestHeadersViewStyles from './requestHeadersView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  general: 'General',\n  /**\n  *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel and Network pane request.\n  */\n  copyValue: 'Copy value',\n  /**\n  *@description Text for a link to the issues panel\n  */\n  learnMoreInTheIssuesTab: 'Learn more in the issues tab',\n  /**\n  *@description Text that is usually a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  requestUrl: 'Request URL',\n  /**\n  *@description Text to show more content\n  */\n  showMore: 'Show more',\n  /**\n  *@description Text for toggling the view of header data (e.g. query string parameters) from source to parsed in the headers tab\n  */\n  viewParsed: 'View parsed',\n  /**\n  *@description Text for toggling the view of header data (e.g. query string parameters) from parsed to source in the headers tab\n  */\n  viewSource: 'View source',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  requestHeaders: 'Request Headers',\n  /**\n  *@description A context menu item in the Network Log View Columns of the Network panel\n  */\n  responseHeaders: 'Response Headers',\n  /**\n  *@description Status code of an event\n  */\n  statusCode: 'Status Code',\n  /**\n  *@description Text that refers to the network request method\n  */\n  requestMethod: 'Request Method',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromMemoryCache: '(from memory cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromServiceWorker: '(from `service worker`)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromSignedexchange: '(from signed-exchange)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromPrefetchCache: '(from prefetch cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromDiskCache: '(from disk cache)',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  fromWebBundle: '(from Web Bundle)',\n  /**\n  *@description Message to explain lack of raw headers for a particular network request\n  */\n  provisionalHeadersAreShownS: 'Provisional headers are shown. Disable cache to see full headers.',\n  /**\n  *@description Tooltip to explain lack of raw headers for a particular network request\n  */\n  onlyProvisionalHeadersAre:\n      'Only provisional headers are available because this request was not sent over the network and instead was served from a local cache, which doesn\u2019t store the original request headers. Disable cache to see full request headers.',\n  /**\n  *@description Message to explain lack of raw headers for a particular network request\n  */\n  provisionalHeadersAreShown: 'Provisional headers are shown',\n  /**\n  *@description Comment used in decoded X-Client-Data HTTP header output in Headers View of the Network panel\n  */\n  activeClientExperimentVariation: 'Active `client experiment variation IDs`.',\n  /**\n  *@description Comment used in decoded X-Client-Data HTTP header output in Headers View of the Network panel\n  */\n  activeClientExperimentVariationIds: 'Active `client experiment variation IDs` that trigger server-side behavior.',\n  /**\n  *@description Text in Headers View of the Network panel for X-Client-Data HTTP headers\n  */\n  decoded: 'Decoded:',\n  /**\n  *@description Text in Network Log View Columns of the Network panel\n  */\n  remoteAddress: 'Remote Address',\n  /**\n  *@description Text in Request Headers View of the Network panel\n  */\n  referrerPolicy: 'Referrer Policy',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  toEmbedThisFrameInYourDocument:\n      'To embed this frame in your document, the response needs to enable the cross-origin embedder policy by specifying the following response header:',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  toUseThisResourceFromADifferent:\n      'To use this resource from a different origin, the server needs to specify a cross-origin resource policy in the response headers:',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  chooseThisOptionIfTheResourceAnd:\n      'Choose this option if the resource and the document are served from the same site.',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  onlyChooseThisOptionIfAn:\n      'Only choose this option if an arbitrary website including this resource does not impose a security risk.',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  thisDocumentWasBlockedFrom:\n      'This document was blocked from loading in an `iframe` with a `sandbox` attribute because this document specified a cross-origin opener policy.',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  toUseThisResourceFromADifferentSite:\n      'To use this resource from a different site, the server may relax the cross-origin resource policy response header:',\n  /**\n  *@description Text in Headers View of the Network panel\n  */\n  toUseThisResourceFromADifferentOrigin:\n      'To use this resource from a different origin, the server may relax the cross-origin resource policy response header:',\n  /**\n   * @description Shown in the network panel for network requests that meet special criteria.\n   * 'Attribution' is a term used by the \"Attribution Reporting API\" and refers to an event, e.g.\n   * buying an item in an online store after an ad was clicked.\n   * @example {foo} PH1\n   */\n  recordedAttribution: 'Recorded attribution with `trigger-data`: {PH1}',\n  /**\n  *@description Label for a link from the network panel's headers view to the file in which\n  * header overrides are defined in the sources panel.\n  */\n  headerOverrides: 'Header overrides',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestHeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class RequestHeadersView extends UI.Widget.VBox {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  private showRequestHeadersText: boolean;\n  private showResponseHeadersText: boolean;\n  private highlightedElement: UI.TreeOutline.TreeElement|null;\n  private readonly root: Category;\n  private urlItem: UI.TreeOutline.TreeElement;\n  private readonly requestMethodItem: UI.TreeOutline.TreeElement;\n  private readonly statusCodeItem: UI.TreeOutline.TreeElement;\n  private readonly remoteAddressItem: UI.TreeOutline.TreeElement;\n  private readonly referrerPolicyItem: UI.TreeOutline.TreeElement;\n  readonly responseHeadersCategory: Category;\n  private readonly requestHeadersCategory: Category;\n  readonly #workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.element.classList.add('request-headers-view');\n\n    this.request = request;\n    this.showRequestHeadersText = false;\n    this.showResponseHeadersText = false;\n\n    this.highlightedElement = null;\n\n    const root = new UI.TreeOutline.TreeOutlineInShadow();\n    root.registerCSSFiles([objectValueStyles, objectPropertiesSectionStyles, requestHeadersTreeStyles]);\n\n    root.element.classList.add('request-headers-tree');\n    root.makeDense();\n    root.setUseLightSelectionColor(true);\n    this.element.appendChild(root.element);\n\n    const generalCategory = new Category(root, 'general', i18nString(UIStrings.general));\n    generalCategory.hidden = false;\n    this.root = generalCategory;\n    this.setDefaultFocusedElement(this.root.listItemElement);\n    this.urlItem = generalCategory.createLeaf();\n    this.requestMethodItem = generalCategory.createLeaf();\n    headerNames.set(this.requestMethodItem, 'Request-Method');\n    this.statusCodeItem = generalCategory.createLeaf();\n    headerNames.set(this.statusCodeItem, 'Status-Code');\n    this.remoteAddressItem = generalCategory.createLeaf();\n    this.remoteAddressItem.hidden = true;\n    this.referrerPolicyItem = generalCategory.createLeaf();\n    this.referrerPolicyItem.hidden = true;\n\n    this.responseHeadersCategory = new Category(root, 'responseHeaders', '');\n    this.requestHeadersCategory = new Category(root, 'requestHeaders', '');\n  }\n\n  wasShown(): void {\n    this.clearHighlight();\n    this.registerCSSFiles([requestHeadersViewStyles]);\n    this.request.addEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.refreshRemoteAddress, this);\n    this.request.addEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.refreshRequestHeaders, this);\n    this.request.addEventListener(SDK.NetworkRequest.Events.ResponseHeadersChanged, this.refreshResponseHeaders, this);\n    this.request.addEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.refreshHTTPInformation, this);\n    this.#workspace.addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);\n    this.#workspace.addEventListener(\n        Workspace.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);\n\n    this.refreshURL();\n    this.refreshRequestHeaders();\n    this.refreshResponseHeaders();\n    this.refreshHTTPInformation();\n    this.refreshRemoteAddress();\n    this.refreshReferrerPolicy();\n    this.root.select(/* omitFocus */ true, /* selectedByUser */ false);\n  }\n\n  willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.RemoteAddressChanged, this.refreshRemoteAddress, this);\n    this.request.removeEventListener(SDK.NetworkRequest.Events.RequestHeadersChanged, this.refreshRequestHeaders, this);\n    this.request.removeEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this.refreshResponseHeaders, this);\n    this.request.removeEventListener(SDK.NetworkRequest.Events.FinishedLoading, this.refreshHTTPInformation, this);\n    this.#workspace.removeEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAddedOrRemoved, this);\n    this.#workspace.removeEventListener(\n        Workspace.Workspace.Events.UISourceCodeRemoved, this.#uiSourceCodeAddedOrRemoved, this);\n  }\n\n  private addEntryContextMenuHandler(treeElement: UI.TreeOutline.TreeElement, value: string): void {\n    treeElement.listItemElement.addEventListener('contextmenu', event => {\n      event.consume(true);\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const decodedValue = decodeURIComponent(value);\n      const copyDecodedValueHandler = (): void => {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.NetworkPanelCopyValue);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(decodedValue);\n      };\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyValue), copyDecodedValueHandler);\n      void contextMenu.show();\n    });\n  }\n\n  private formatHeader(name: string, value: string): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    fragment.createChild('div', 'header-name').textContent = name + ': ';\n    fragment.createChild('span', 'header-separator');\n    fragment.createChild('div', 'header-value source-code').textContent = value;\n\n    return fragment;\n  }\n\n  private formatHeaderObject(header: BlockedReasonDetailDescriptor): DocumentFragment {\n    const fragment = document.createDocumentFragment();\n    if (header.headerNotSet) {\n      fragment.createChild('div', 'header-badge header-badge-error header-badge-text').textContent = 'not-set';\n    }\n    // Highlight successful Attribution Reporting API redirects. If the request was\n    // not canceled, then something went wrong.\n    if (header.name.toLowerCase() === 'location' && this.request.canceled) {\n      const url = new URL(header.value?.toString() || '', this.request.parsedURL.securityOrigin());\n      const triggerData = getTriggerDataFromAttributionRedirect(url);\n      if (triggerData) {\n        fragment.createChild('div', 'header-badge header-badge-success header-badge-text').textContent =\n            'Attribution Reporting API';\n        header.details = {\n          explanation: (): string => i18nString(UIStrings.recordedAttribution, {PH1: triggerData}),\n          examples: [],\n          link: null,\n        };\n      }\n    }\n    const colon = header.value ? ': ' : '';\n    fragment.createChild('div', 'header-name').textContent = header.name + colon;\n    fragment.createChild('span', 'header-separator');\n    if (header.value) {\n      if (header.headerValueIncorrect) {\n        fragment.createChild('div', 'header-value source-code header-warning').textContent = header.value.toString();\n      } else {\n        fragment.createChild('div', 'header-value source-code').textContent = header.value.toString();\n      }\n    }\n    if (header.details) {\n      const detailsNode = fragment.createChild('div', 'header-details');\n      const callToAction = detailsNode.createChild('div', 'call-to-action');\n      const callToActionBody = callToAction.createChild('div', 'call-to-action-body');\n      callToActionBody.createChild('div', 'explanation').textContent = header.details.explanation();\n      for (const example of header.details.examples) {\n        const exampleNode = callToActionBody.createChild('div', 'example');\n        exampleNode.createChild('code').textContent = example.codeSnippet;\n        if (example.comment) {\n          exampleNode.createChild('span', 'comment').textContent = example.comment();\n        }\n      }\n\n      if (IssuesManager.RelatedIssue.hasIssueOfCategory(\n              this.request, IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy)) {\n        const link = document.createElement('div');\n        link.classList.add('devtools-link');\n        link.onclick = (): void => {\n          Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.LearnMoreLinkCOEP);\n          void IssuesManager.RelatedIssue.reveal(\n              this.request, IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy);\n        };\n        const text = document.createElement('span');\n        text.classList.add('devtools-link');\n        text.textContent = i18nString(UIStrings.learnMoreInTheIssuesTab);\n        link.appendChild(text);\n        link.prepend(UI.Icon.Icon.create('largeicon-breaking-change', 'icon'));\n        callToActionBody.appendChild(link);\n      } else if (header.details.link) {\n        const link = UI.XLink.XLink.create(header.details.link.url, i18nString(UIStrings.learnMore), 'link');\n        link.prepend(UI.Icon.Icon.create('largeicon-link'));\n        callToActionBody.appendChild(link);\n      }\n    }\n    return fragment;\n  }\n\n  private refreshURL(): void {\n    const requestURL = this.request.url();\n    this.urlItem.title = this.formatHeader(i18nString(UIStrings.requestUrl), requestURL);\n    this.addEntryContextMenuHandler(this.urlItem, requestURL);\n  }\n\n  private populateTreeElementWithSourceText(treeElement: UI.TreeOutline.TreeElement, sourceText: string|null): void {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const max_len = 3000;\n    const text = (sourceText || '').trim();\n    const trim = text.length > max_len;\n\n    const sourceTextElement = document.createElement('span');\n    sourceTextElement.classList.add('header-value');\n    sourceTextElement.classList.add('source-code');\n    sourceTextElement.textContent = trim ? text.substr(0, max_len) : text;\n\n    const sourceTreeElement = new UI.TreeOutline.TreeElement(sourceTextElement);\n    treeElement.removeChildren();\n    treeElement.appendChild(sourceTreeElement);\n    if (!trim) {\n      return;\n    }\n\n    const showMoreButton = document.createElement('button');\n    showMoreButton.classList.add('request-headers-show-more-button');\n    showMoreButton.textContent = i18nString(UIStrings.showMore);\n\n    function showMore(): void {\n      showMoreButton.remove();\n      sourceTextElement.textContent = text;\n      sourceTreeElement.listItemElement.removeEventListener('contextmenu', onContextMenuShowMore);\n    }\n    showMoreButton.addEventListener('click', showMore);\n\n    function onContextMenuShowMore(event: Event): void {\n      const contextMenu = new UI.ContextMenu.ContextMenu(event);\n      const section = contextMenu.newSection();\n      section.appendItem(i18nString(UIStrings.showMore), showMore);\n      void contextMenu.show();\n    }\n    sourceTreeElement.listItemElement.addEventListener('contextmenu', onContextMenuShowMore);\n    sourceTextElement.appendChild(showMoreButton);\n  }\n\n  private refreshRequestHeaders(): void {\n    const treeElement = this.requestHeadersCategory;\n    const headers = this.request.requestHeaders().slice();\n    headers.sort(function(a, b) {\n      return Platform.StringUtilities.compare(a.name.toLowerCase(), b.name.toLowerCase());\n    });\n    const headersText = this.request.requestHeadersText();\n\n    if (this.showRequestHeadersText && headersText) {\n      this.refreshHeadersText(i18nString(UIStrings.requestHeaders), headers.length, headersText, treeElement);\n    } else {\n      this.refreshHeaders(\n          i18nString(UIStrings.requestHeaders), headers, treeElement, /* overrideable */ false,\n          headersText === undefined);\n    }\n\n    if (headersText) {\n      const toggleButton = this.createHeadersToggleButton(this.showRequestHeadersText);\n      toggleButton.addEventListener('click', this.toggleRequestHeadersText.bind(this), false);\n      treeElement.listItemElement.querySelector('.headers-title-left')?.appendChild(toggleButton);\n    }\n  }\n\n  private refreshResponseHeaders(): void {\n    const treeElement = this.responseHeadersCategory;\n    const headers = this.request.sortedResponseHeaders.slice();\n    const headersText = this.request.responseHeadersText;\n\n    if (this.showResponseHeadersText) {\n      this.refreshHeadersText(i18nString(UIStrings.responseHeaders), headers.length, headersText, treeElement);\n    } else {\n      const headersWithIssues = [];\n      if (this.request.wasBlocked()) {\n        const headerWithIssues =\n            BlockedReasonDetails.get((this.request.blockedReason() as Protocol.Network.BlockedReason));\n        if (headerWithIssues) {\n          headersWithIssues.push(headerWithIssues);\n        }\n      }\n      const overrideable = Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.HEADER_OVERRIDES);\n      this.refreshHeaders(\n          i18nString(UIStrings.responseHeaders), mergeHeadersWithIssues(headers, headersWithIssues), treeElement,\n          overrideable,\n          /* provisional */ false, this.request.blockedResponseCookies());\n    }\n\n    if (headersText) {\n      const toggleButton = this.createHeadersToggleButton(this.showResponseHeadersText);\n      toggleButton.addEventListener('click', this.toggleResponseHeadersText.bind(this), false);\n      treeElement.listItemElement.querySelector('.headers-title-left')?.appendChild(toggleButton);\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function mergeHeadersWithIssues(headers: any[], headersWithIssues: any[]): any[] {\n      let i = 0, j = 0;\n      const result = [];\n      while (i < headers.length || j < headersWithIssues.length) {\n        if (i < headers.length && (j >= headersWithIssues.length || headers[i].name < headersWithIssues[j].name)) {\n          result.push({...headers[i++], headerNotSet: false});\n        } else if (\n            j < headersWithIssues.length && (i >= headers.length || headers[i].name > headersWithIssues[j].name)) {\n          result.push({...headersWithIssues[j++], headerNotSet: true});\n        } else if (\n            i < headers.length && j < headersWithIssues.length && headers[i].name === headersWithIssues[j].name) {\n          result.push({...headersWithIssues[j++], ...headers[i++], headerNotSet: false});\n        }\n      }\n      return result;\n    }\n  }\n\n  private refreshHTTPInformation(): void {\n    const requestMethodElement = this.requestMethodItem;\n    requestMethodElement.hidden = !this.request.statusCode;\n    const statusCodeElement = this.statusCodeItem;\n    statusCodeElement.hidden = !this.request.statusCode;\n\n    if (this.request.statusCode) {\n      const statusCodeFragment = document.createDocumentFragment();\n      statusCodeFragment.createChild('div', 'header-name').textContent = i18nString(UIStrings.statusCode) + ': ';\n      statusCodeFragment.createChild('span', 'header-separator');\n\n      const statusCodeImage =\n          (statusCodeFragment.createChild('span', 'resource-status-image', 'dt-icon-label') as\n           UI.UIUtils.DevToolsIconLabel);\n      UI.Tooltip.Tooltip.install(statusCodeImage, this.request.statusCode + ' ' + this.request.statusText);\n\n      if (this.request.statusCode < 300 || this.request.statusCode === 304) {\n        statusCodeImage.type = 'smallicon-green-ball';\n      } else if (this.request.statusCode < 400) {\n        statusCodeImage.type = 'smallicon-orange-ball';\n      } else {\n        statusCodeImage.type = 'smallicon-red-ball';\n      }\n\n      requestMethodElement.title = this.formatHeader(i18nString(UIStrings.requestMethod), this.request.requestMethod);\n\n      const statusTextElement = statusCodeFragment.createChild('div', 'header-value source-code');\n      let statusText = this.request.statusCode + ' ' + this.request.statusText;\n      if (this.request.cachedInMemory()) {\n        statusText += ' ' + i18nString(UIStrings.fromMemoryCache);\n        statusTextElement.classList.add('status-from-cache');\n      } else if (this.request.fetchedViaServiceWorker) {\n        statusText += ' ' + i18nString(UIStrings.fromServiceWorker);\n        statusTextElement.classList.add('status-from-cache');\n      } else if (this.request.redirectSourceSignedExchangeInfoHasNoErrors()) {\n        statusText += ' ' + i18nString(UIStrings.fromSignedexchange);\n        statusTextElement.classList.add('status-from-cache');\n      } else if (this.request.webBundleInnerRequestInfo()) {\n        statusText += ' ' + i18nString(UIStrings.fromWebBundle);\n        statusTextElement.classList.add('status-from-cache');\n      } else if (this.request.fromPrefetchCache()) {\n        statusText += ' ' + i18nString(UIStrings.fromPrefetchCache);\n        statusTextElement.classList.add('status-from-cache');\n      } else if (this.request.cached()) {\n        statusText += ' ' + i18nString(UIStrings.fromDiskCache);\n        statusTextElement.classList.add('status-from-cache');\n      }\n      statusTextElement.textContent = statusText;\n\n      statusCodeElement.title = statusCodeFragment;\n    }\n  }\n\n  private refreshHeadersTitle(\n      title: string, headersTreeElement: UI.TreeOutline.TreeElement, headersLength: number,\n      overrideable: boolean): void {\n    headersTreeElement.listItemElement.removeChildren();\n    headersTreeElement.listItemElement.createChild('div', 'selection fill');\n    const container = headersTreeElement.listItemElement.createChild('div', 'headers-title');\n    const leftElement = container.createChild('div', 'headers-title-left');\n    UI.UIUtils.createTextChild(leftElement, title);\n\n    const headerCount = `\\xA0(${headersLength})`;\n    leftElement.createChild('span', 'header-count').textContent = headerCount;\n\n    if (overrideable && this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl())) {\n      const overridesSetting: Common.Settings.Setting<boolean> =\n          Common.Settings.Settings.instance().moduleSetting('persistenceNetworkOverridesEnabled');\n      const icon = overridesSetting.get() ? UI.Icon.Icon.create('mediumicon-file-sync', 'purple-dot') :\n                                            UI.Icon.Icon.create('mediumicon-file');\n      const button = container.createChild('button', 'link devtools-link headers-link');\n      button.appendChild(icon);\n      button.addEventListener('click', this.#revealHeadersFile.bind(this));\n      const span = document.createElement('span');\n      span.textContent = i18nString(UIStrings.headerOverrides);\n      button.appendChild(span);\n    }\n  }\n\n  #getHeaderOverridesFileUrl(): Platform.DevToolsPath.UrlString {\n    const fileUrl = Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().fileUrlFromNetworkUrl(\n        this.request.url(), /* ignoreInactive */ true);\n    return fileUrl.substring(0, fileUrl.lastIndexOf('/')) + '/' +\n        Persistence.NetworkPersistenceManager.HEADERS_FILENAME as Platform.DevToolsPath.UrlString;\n  }\n\n  #revealHeadersFile(event: Event): void {\n    event.stopPropagation();\n    const uiSourceCode = this.#workspace.uiSourceCodeForURL(this.#getHeaderOverridesFileUrl());\n    if (!uiSourceCode) {\n      return;\n    }\n    Sources.SourcesPanel.SourcesPanel.instance().showUISourceCode(uiSourceCode);\n  }\n\n  #uiSourceCodeAddedOrRemoved(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    if (this.#getHeaderOverridesFileUrl() === event.data.url()) {\n      this.refreshResponseHeaders();\n    }\n  }\n\n  private refreshHeaders(\n      title: string, headers: SDK.NetworkRequest.NameValue[], headersTreeElement: UI.TreeOutline.TreeElement,\n      overrideable: boolean, provisionalHeaders?: boolean,\n      blockedResponseCookies?: SDK.NetworkRequest.BlockedSetCookieWithReason[]): void {\n    headersTreeElement.removeChildren();\n\n    const length = headers.length;\n    this.refreshHeadersTitle(title, headersTreeElement, length, overrideable);\n\n    if (provisionalHeaders) {\n      let cautionText;\n      let cautionTitle = '';\n      if (this.request.cachedInMemory() || this.request.cached()) {\n        cautionText = i18nString(UIStrings.provisionalHeadersAreShownS);\n        cautionTitle = i18nString(UIStrings.onlyProvisionalHeadersAre);\n      } else {\n        cautionText = i18nString(UIStrings.provisionalHeadersAreShown);\n      }\n      const cautionElement = document.createElement('div');\n      cautionElement.classList.add('request-headers-caution');\n      UI.Tooltip.Tooltip.install(cautionElement, cautionTitle);\n      (cautionElement.createChild('span', '', 'dt-icon-label') as UI.UIUtils.DevToolsIconLabel).type =\n          'smallicon-warning';\n      cautionElement.createChild('div', 'caution').textContent = cautionText;\n      const cautionTreeElement = new UI.TreeOutline.TreeElement(cautionElement);\n\n      cautionElement.createChild('div', 'learn-more')\n          .appendChild(UI.XLink.XLink.create(\n              'https://developer.chrome.com/docs/devtools/network/reference/#provisional-headers',\n              i18nString(UIStrings.learnMore)));\n\n      headersTreeElement.appendChild(cautionTreeElement);\n    }\n\n    const blockedCookieLineToReasons = new Map<string, Protocol.Network.SetCookieBlockedReason[]>();\n    if (blockedResponseCookies) {\n      blockedResponseCookies.forEach(blockedCookie => {\n        blockedCookieLineToReasons.set(blockedCookie.cookieLine, blockedCookie.blockedReasons);\n      });\n    }\n\n    headersTreeElement.hidden = !length && !provisionalHeaders;\n    for (const header of headers) {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const headerTreeElement = new UI.TreeOutline.TreeElement(this.formatHeaderObject((header as any)));\n      headerNames.set(headerTreeElement, header.name);\n\n      const headerId = header.name.toLowerCase();\n\n      if (headerId === 'set-cookie') {\n        const matchingBlockedReasons = blockedCookieLineToReasons.get(header.value);\n        if (matchingBlockedReasons) {\n          const icon = UI.Icon.Icon.create('smallicon-warning', '');\n          headerTreeElement.listItemElement.appendChild(icon);\n\n          let titleText = '';\n          for (const blockedReason of matchingBlockedReasons) {\n            if (titleText) {\n              titleText += '\\n';\n            }\n            titleText += SDK.NetworkRequest.setCookieBlockedReasonToUiString(blockedReason);\n          }\n          UI.Tooltip.Tooltip.install(icon, titleText);\n        }\n      }\n\n      this.addEntryContextMenuHandler(headerTreeElement, header.value);\n      headersTreeElement.appendChild(headerTreeElement);\n\n      if (headerId === 'x-client-data') {\n        const data = ClientVariations.parseClientVariations(header.value);\n        const output = ClientVariations.formatClientVariations(\n            data, i18nString(UIStrings.activeClientExperimentVariation),\n            i18nString(UIStrings.activeClientExperimentVariationIds));\n        const wrapper = document.createElement('div');\n        wrapper.classList.add('x-client-data-details');\n        UI.UIUtils.createTextChild(wrapper, i18nString(UIStrings.decoded));\n        const div = wrapper.createChild('div');\n        div.classList.add('source-code');\n        div.textContent = output;\n        headerTreeElement.listItemElement.appendChild(wrapper);\n      }\n    }\n  }\n\n  private refreshHeadersText(\n      title: string, count: number, headersText: string, headersTreeElement: UI.TreeOutline.TreeElement): void {\n    this.populateTreeElementWithSourceText(headersTreeElement, headersText);\n    this.refreshHeadersTitle(title, headersTreeElement, count, /* overrideable */ false);\n  }\n\n  private refreshRemoteAddress(): void {\n    const remoteAddress = this.request.remoteAddress();\n    const treeElement = this.remoteAddressItem;\n    treeElement.hidden = !remoteAddress;\n    if (remoteAddress) {\n      treeElement.title = this.formatHeader(i18nString(UIStrings.remoteAddress), remoteAddress);\n    }\n  }\n\n  private refreshReferrerPolicy(): void {\n    const referrerPolicy = this.request.referrerPolicy();\n    const treeElement = this.referrerPolicyItem;\n    treeElement.hidden = !referrerPolicy;\n    if (referrerPolicy) {\n      treeElement.title = this.formatHeader(i18nString(UIStrings.referrerPolicy), referrerPolicy);\n    }\n  }\n\n  private toggleRequestHeadersText(event: Event): void {\n    this.showRequestHeadersText = !this.showRequestHeadersText;\n    this.refreshRequestHeaders();\n    event.consume();\n  }\n\n  private toggleResponseHeadersText(event: Event): void {\n    this.showResponseHeadersText = !this.showResponseHeadersText;\n    this.refreshResponseHeaders();\n    event.consume();\n  }\n\n  private createToggleButton(title: string): Element {\n    const button = document.createElement('span');\n    button.classList.add('header-toggle');\n    button.textContent = title;\n    return button;\n  }\n\n  private createHeadersToggleButton(isHeadersTextShown: boolean): Element {\n    const toggleTitle = isHeadersTextShown ? i18nString(UIStrings.viewParsed) : i18nString(UIStrings.viewSource);\n    return this.createToggleButton(toggleTitle);\n  }\n\n  private clearHighlight(): void {\n    if (this.highlightedElement) {\n      this.highlightedElement.listItemElement.classList.remove('header-highlight');\n    }\n    this.highlightedElement = null;\n  }\n\n  private revealAndHighlight(category: UI.TreeOutline.TreeElement|null, name?: string): void {\n    this.clearHighlight();\n    if (!category) {\n      return;\n    }\n    if (name) {\n      for (const element of category.children()) {\n        // HTTP headers are case insensitive.\n        if (headerNames.get(element)?.toUpperCase() !== name.toUpperCase()) {\n          continue;\n        }\n        this.highlightedElement = element;\n        element.reveal();\n        element.listItemElement.classList.add('header-highlight');\n        return;\n      }\n    }\n    // If there wasn't a match, reveal the first element of the category (without highlighting it).\n    if (category.childCount() > 0) {\n      category.childAt(0)?.reveal();\n    }\n  }\n\n  private getCategoryForSection(section: NetworkForward.UIRequestLocation.UIHeaderSection): Category {\n    switch (section) {\n      case NetworkForward.UIRequestLocation.UIHeaderSection.General:\n        return this.root;\n      case NetworkForward.UIRequestLocation.UIHeaderSection.Request:\n        return this.requestHeadersCategory;\n      case NetworkForward.UIRequestLocation.UIHeaderSection.Response:\n        return this.responseHeadersCategory;\n    }\n  }\n\n  revealHeader(section: NetworkForward.UIRequestLocation.UIHeaderSection, header?: string): void {\n    this.revealAndHighlight(this.getCategoryForSection(section), header);\n  }\n}\n\nconst headerNames = new WeakMap<UI.TreeOutline.TreeElement, string>();\n\nexport class Category extends UI.TreeOutline.TreeElement {\n  toggleOnClick: boolean;\n  private readonly expandedSetting: Common.Settings.Setting<boolean>;\n  expanded: boolean;\n\n  constructor(root: UI.TreeOutline.TreeOutline, name: string, title?: string) {\n    super(title || '', true);\n    this.toggleOnClick = true;\n    this.hidden = true;\n    this.expandedSetting =\n        Common.Settings.Settings.instance().createSetting('request-info-' + name + '-category-expanded', true);\n    this.expanded = this.expandedSetting.get();\n    root.appendChild(this);\n  }\n\n  createLeaf(): UI.TreeOutline.TreeElement {\n    const leaf = new UI.TreeOutline.TreeElement();\n    this.appendChild(leaf);\n    return leaf;\n  }\n\n  onexpand(): void {\n    this.expandedSetting.set(true);\n  }\n\n  oncollapse(): void {\n    this.expandedSetting.set(false);\n  }\n}\n\n/**\n * Returns the value for the `trigger-data` search parameter iff the provided\n * url is a valid attribution redirect as specified by the Attribution\n * Reporting API.\n */\nfunction getTriggerDataFromAttributionRedirect(url: URL): string|null {\n  if (url.pathname === '/.well-known/attribution-reporting/trigger-attribution' &&\n      url.searchParams.has('trigger-data')) {\n    return url.searchParams.get('trigger-data');\n  }\n  return null;\n}\n\ninterface BlockedReasonDetailDescriptor {\n  name: string;\n  value: Object|null;\n  headerValueIncorrect: boolean|null;\n  details: {\n    explanation: () => string,\n    examples: Array<{\n      codeSnippet: string,\n      comment?: (() => string),\n    }>,\n    link: {\n      url: string,\n    }|null,\n  };\n  headerNotSet: boolean|null;\n}\n\nconst BlockedReasonDetails = new Map<Protocol.Network.BlockedReason, BlockedReasonDetailDescriptor>([\n  [\n    Protocol.Network.BlockedReason.CoepFrameResourceNeedsCoepHeader,\n    {\n      name: 'cross-origin-embedder-policy',\n      value: null,\n      headerValueIncorrect: null,\n      details: {\n        explanation: i18nLazyString(UIStrings.toEmbedThisFrameInYourDocument),\n        examples: [{codeSnippet: 'Cross-Origin-Embedder-Policy: require-corp', comment: undefined}],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n      headerNotSet: null,\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameOriginAfterDefaultedToSameOriginByCoep,\n    {\n      name: 'cross-origin-resource-policy',\n      value: null,\n      headerValueIncorrect: null,\n      details: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferent),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: same-site',\n            comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd),\n          },\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n      headerNotSet: null,\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CoopSandboxedIframeCannotNavigateToCoopPage,\n    {\n      name: 'cross-origin-opener-policy',\n      value: null,\n      headerValueIncorrect: false,\n      details: {\n        explanation: i18nLazyString(UIStrings.thisDocumentWasBlockedFrom),\n        examples: [],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n      headerNotSet: null,\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameSite,\n    {\n      name: 'cross-origin-resource-policy',\n      value: null,\n      headerValueIncorrect: true,\n      details: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentSite),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: null,\n      },\n      headerNotSet: null,\n    },\n  ],\n  [\n    Protocol.Network.BlockedReason.CorpNotSameOrigin,\n    {\n      name: 'cross-origin-resource-policy',\n      value: null,\n      headerValueIncorrect: true,\n      details: {\n        explanation: i18nLazyString(UIStrings.toUseThisResourceFromADifferentOrigin),\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: same-site',\n            comment: i18nLazyString(UIStrings.chooseThisOptionIfTheResourceAnd),\n          },\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: i18nLazyString(UIStrings.onlyChooseThisOptionIfAn),\n          },\n        ],\n        link: null,\n      },\n      headerNotSet: null,\n    },\n  ],\n]);\n"],
  "mappings": "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",
  "names": []
}
