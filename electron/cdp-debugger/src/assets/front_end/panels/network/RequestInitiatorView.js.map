{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/RequestInitiatorView.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport requestInitiatorViewStyles from './requestInitiatorView.css.js';\nimport requestInitiatorViewTreeStyles from './requestInitiatorViewTree.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Initiator View of the Network panel\n  */\n  thisRequestHasNoInitiatorData: 'This request has no initiator data.',\n  /**\n  *@description Title of a section in Request Initiator view of the Network Panel\n  */\n  requestCallStack: 'Request call stack',\n  /**\n  *@description Title of a section in Request Initiator view of the Network Panel\n  */\n  requestInitiatorChain: 'Request initiator chain',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestInitiatorView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestInitiatorView extends UI.Widget.VBox {\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private readonly emptyWidget: UI.EmptyWidget.EmptyWidget;\n  private hasShown: boolean;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.element.classList.add('request-initiator-view');\n    this.linkifier = new Components.Linkifier.Linkifier();\n    this.request = request;\n    this.emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoInitiatorData));\n    this.emptyWidget.show(this.element);\n    this.hasShown = false;\n  }\n\n  static createStackTracePreview(\n      request: SDK.NetworkRequest.NetworkRequest, linkifier: Components.Linkifier.Linkifier, focusableLink?: boolean): {\n    element: Element,\n    links: Array<Element>,\n  }|null {\n    const initiator = request.initiator();\n    if (!initiator || !initiator.stack) {\n      return null;\n    }\n    const networkManager = SDK.NetworkManager.NetworkManager.forRequest(request);\n    const target = networkManager ? networkManager.target() : null;\n    const stackTrace = Components.JSPresentationUtils.buildStackTracePreviewContents(\n        target, linkifier, {stackTrace: initiator.stack, tabStops: focusableLink});\n    return stackTrace;\n  }\n\n  private createTree(): UI.TreeOutline.TreeOutlineInShadow {\n    const treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    treeOutline.registerCSSFiles([requestInitiatorViewTreeStyles]);\n    treeOutline.contentElement.classList.add('request-initiator-view-tree');\n\n    return treeOutline;\n  }\n\n  private buildRequestChainTree(\n      initiatorGraph: Logs.NetworkLog.InitiatorGraph, title: string,\n      tree: UI.TreeOutline.TreeOutlineInShadow): UI.TreeOutline.TreeElement {\n    const root = new UI.TreeOutline.TreeElement(title);\n\n    tree.appendChild(root);\n\n    if (root.titleElement instanceof HTMLElement) {\n      root.titleElement.classList.add('request-initiator-view-section-title');\n    }\n\n    const initiators = initiatorGraph.initiators;\n    let parent: UI.TreeOutline.TreeElement = root;\n    for (const request of Array.from(initiators).reverse()) {\n      const treeElement = new UI.TreeOutline.TreeElement(request.url());\n      parent.appendChild(treeElement);\n      parent.expand();\n      parent = treeElement;\n    }\n\n    root.expand();\n    parent.select();\n    const titleElement = parent.titleElement;\n    if (titleElement instanceof HTMLElement) {\n      titleElement.style.fontWeight = 'bold';\n    }\n\n    const initiated = initiatorGraph.initiated;\n    this.depthFirstSearchTreeBuilder(initiated, (parent as UI.TreeOutline.TreeElement), this.request);\n    return root;\n  }\n\n  private depthFirstSearchTreeBuilder(\n      initiated: Map<SDK.NetworkRequest.NetworkRequest, SDK.NetworkRequest.NetworkRequest>,\n      parentElement: UI.TreeOutline.TreeElement, parentRequest: SDK.NetworkRequest.NetworkRequest): void {\n    const visited = new Set<SDK.NetworkRequest.NetworkRequest>();\n    // this.request should be already in the tree when build initiator part\n    visited.add(this.request);\n    for (const request of initiated.keys()) {\n      if (initiated.get(request) === parentRequest) {\n        const treeElement = new UI.TreeOutline.TreeElement(request.url());\n        parentElement.appendChild(treeElement);\n        parentElement.expand();\n        // only do dfs when we haven't done one\n        if (!visited.has(request)) {\n          visited.add(request);\n          this.depthFirstSearchTreeBuilder(initiated, treeElement, request);\n        }\n      }\n    }\n  }\n\n  private buildStackTraceSection(content: Element, title: string, tree: UI.TreeOutline.TreeOutlineInShadow): void {\n    const root = new UI.TreeOutline.TreeElement(title);\n    tree.appendChild(root);\n\n    if (root.titleElement instanceof HTMLElement) {\n      root.titleElement.classList.add('request-initiator-view-section-title');\n    }\n\n    const contentElement = new UI.TreeOutline.TreeElement(content, false);\n    contentElement.selectable = false;\n\n    root.appendChild(contentElement);\n    root.expand();\n  }\n\n  wasShown(): void {\n    if (this.hasShown) {\n      return;\n    }\n    this.registerCSSFiles([requestInitiatorViewStyles]);\n    let initiatorDataPresent = false;\n    const containerTree = this.createTree();\n\n    const stackTracePreview = RequestInitiatorView.createStackTracePreview(this.request, this.linkifier, true);\n\n    if (stackTracePreview) {\n      initiatorDataPresent = true;\n      this.buildStackTraceSection(stackTracePreview.element, i18nString(UIStrings.requestCallStack), containerTree);\n    }\n\n    const initiatorGraph = Logs.NetworkLog.NetworkLog.instance().initiatorGraphForRequest(this.request);\n\n    if (initiatorGraph.initiators.size > 1 || initiatorGraph.initiated.size > 1) {\n      initiatorDataPresent = true;\n      this.buildRequestChainTree(initiatorGraph, i18nString(UIStrings.requestInitiatorChain), containerTree);\n    }\n\n    const firstChild = containerTree.firstChild();\n\n    if (firstChild) {\n      firstChild.select(true);\n    }\n\n    if (initiatorDataPresent) {\n      this.element.appendChild(containerTree.element);\n      this.emptyWidget.hideWidget();\n    }\n    this.hasShown = true;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
