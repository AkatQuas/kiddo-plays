{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/network/RequestPreviewView.ts"],
  "sourcesContent": ["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {RequestHTMLView} from './RequestHTMLView.js';\nimport {RequestResponseView} from './RequestResponseView.js';\nimport {SignedExchangeInfoView} from './SignedExchangeInfoView.js';\nimport {WebBundleInfoView} from './components/WebBundleInfoView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Preview View of the Network panel\n  */\n  failedToLoadResponseData: 'Failed to load response data',\n  /**\n  *@description Text in Request Preview View of the Network panel\n  */\n  previewNotAvailable: 'Preview not available',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestPreviewView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestPreviewView extends RequestResponseView {\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super(request);\n  }\n\n  async showPreview(): Promise<UI.Widget.Widget> {\n    const view = await super.showPreview();\n    if (!(view instanceof UI.View.SimpleView)) {\n      return view;\n    }\n    const toolbar = new UI.Toolbar.Toolbar('network-item-preview-toolbar', this.element);\n    void view.toolbarItems().then(items => {\n      items.map(item => toolbar.appendToolbarItem(item));\n    });\n    return view;\n  }\n\n  private async htmlPreview(): Promise<UI.Widget.Widget|null> {\n    const contentData = await this.request.contentData();\n    if (contentData.error) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadResponseData) + ': ' + contentData.error);\n    }\n\n    const allowlist = new Set<string>(['text/html', 'text/plain', 'application/xhtml+xml']);\n    if (!allowlist.has(this.request.mimeType)) {\n      return null;\n    }\n\n    const content = contentData.encoded ? window.atob((contentData.content as string)) : contentData.content as string;\n\n    // http://crbug.com/767393 - DevTools should recognize JSON regardless of the content type\n    const jsonView = await SourceFrame.JSONView.JSONView.createView(content);\n    if (jsonView) {\n      return jsonView;\n    }\n\n    const dataURL = TextUtils.ContentProvider.contentAsDataURL(\n        contentData.content, this.request.mimeType, contentData.encoded, this.request.charset());\n    return dataURL ? new RequestHTMLView(dataURL) : null;\n  }\n\n  async createPreview(): Promise<UI.Widget.Widget> {\n    if (this.request.signedExchangeInfo()) {\n      return new SignedExchangeInfoView(this.request);\n    }\n\n    if (this.request.webBundleInfo()) {\n      return new WebBundleInfoView(this.request);\n    }\n\n    const htmlErrorPreview = await this.htmlPreview();\n    if (htmlErrorPreview) {\n      return htmlErrorPreview;\n    }\n\n    const provided = await SourceFrame.PreviewFactory.PreviewFactory.createPreview(this.request, this.request.mimeType);\n    if (provided) {\n      return provided;\n    }\n\n    return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.previewNotAvailable));\n  }\n}\n"],
  "mappings": "AA8BA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAM,YAAY;AAAA,EAIhB,0BAA0B;AAAA,EAI1B,qBAAqB;AAAA;AAEvB,MAAM,OAAO,KAAK,KAAK,kBAAkB,wCAAwC;AACjF,MAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,QAAW;AACzD,wCAAiC,oBAAoB;AAAA,EAC1D,YAAY,SAA4C;AACtD,UAAM;AAAA;AAAA,QAGF,cAAyC;AAC7C,UAAM,OAAO,MAAM,MAAM;AACzB,QAAI,CAAE,iBAAgB,GAAG,KAAK,aAAa;AACzC,aAAO;AAAA;AAET,UAAM,UAAU,IAAI,GAAG,QAAQ,QAAQ,gCAAgC,KAAK;AAC5E,SAAK,KAAK,eAAe,KAAK,WAAS;AACrC,YAAM,IAAI,UAAQ,QAAQ,kBAAkB;AAAA;AAE9C,WAAO;AAAA;AAAA,QAGK,cAA8C;AAC1D,UAAM,cAAc,MAAM,KAAK,QAAQ;AACvC,QAAI,YAAY,OAAO;AACrB,aAAO,IAAI,GAAG,YAAY,YAAY,WAAW,UAAU,4BAA4B,OAAO,YAAY;AAAA;AAG5G,UAAM,YAAY,oBAAI,IAAY,CAAC,aAAa,cAAc;AAC9D,QAAI,CAAC,UAAU,IAAI,KAAK,QAAQ,WAAW;AACzC,aAAO;AAAA;AAGT,UAAM,UAAU,YAAY,UAAU,OAAO,KAAM,YAAY,WAAsB,YAAY;AAGjG,UAAM,WAAW,MAAM,YAAY,SAAS,SAAS,WAAW;AAChE,QAAI,UAAU;AACZ,aAAO;AAAA;AAGT,UAAM,UAAU,UAAU,gBAAgB,iBACtC,YAAY,SAAS,KAAK,QAAQ,UAAU,YAAY,SAAS,KAAK,QAAQ;AAClF,WAAO,UAAU,IAAI,gBAAgB,WAAW;AAAA;AAAA,QAG5C,gBAA2C;AAC/C,QAAI,KAAK,QAAQ,sBAAsB;AACrC,aAAO,IAAI,uBAAuB,KAAK;AAAA;AAGzC,QAAI,KAAK,QAAQ,iBAAiB;AAChC,aAAO,IAAI,kBAAkB,KAAK;AAAA;AAGpC,UAAM,mBAAmB,MAAM,KAAK;AACpC,QAAI,kBAAkB;AACpB,aAAO;AAAA;AAGT,UAAM,WAAW,MAAM,YAAY,eAAe,eAAe,cAAc,KAAK,SAAS,KAAK,QAAQ;AAC1G,QAAI,UAAU;AACZ,aAAO;AAAA;AAGT,WAAO,IAAI,GAAG,YAAY,YAAY,WAAW,UAAU;AAAA;AAAA;",
  "names": []
}
