{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/developer_resources/DeveloperResourcesListView.ts"],
  "sourcesContent": ["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport developerResourcesListViewStyles from './developerResourcesListView.css.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the status of something\n  */\n  status: 'Status',\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n  /**\n  *@description Text for the initiator of something\n  */\n  initiator: 'Initiator',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  totalBytes: 'Total Bytes',\n  /**\n  *@description Text for errors\n  */\n  error: 'Error',\n  /**\n  *@description Title for the developer resources tab\n  */\n  developerResources: 'Developer Resources',\n  /**\n  *@description Text for a context menu entry\n  */\n  copyUrl: 'Copy URL',\n  /**\n  * @description Text for a context menu entry. Command to copy a URL to the clipboard. The initiator\n  * of a request is the entity that caused this request to be sent.\n  */\n  copyInitiatorUrl: 'Copy initiator URL',\n  /**\n  *@description Text for the status column of a list view\n  */\n  pending: 'pending',\n  /**\n  *@description Text for the status column of a list view\n  */\n  success: 'success',\n  /**\n  *@description Text for the status column of a list view\n  */\n  failure: 'failure',\n  /**\n  *@description Accessible text for the value in bytes in memory allocation.\n  */\n  sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DeveloperResourcesListView extends UI.Widget.VBox {\n  private readonly nodeForItem: Map<SDK.PageResourceLoader.PageResource, GridNode>;\n  private readonly isVisibleFilter: (arg0: SDK.PageResourceLoader.PageResource) => boolean;\n  private highlightRegExp: RegExp|null;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n  constructor(isVisibleFilter: (arg0: SDK.PageResourceLoader.PageResource) => boolean) {\n    super(true);\n    this.nodeForItem = new Map();\n    this.isVisibleFilter = isVisibleFilter;\n    this.highlightRegExp = null;\n\n    const columns = [\n      {id: 'status', title: i18nString(UIStrings.status), width: '60px', fixedWidth: true, sortable: true},\n      {id: 'url', title: i18nString(UIStrings.url), width: '250px', fixedWidth: false, sortable: true},\n      {id: 'initiator', title: i18nString(UIStrings.initiator), width: '80px', fixedWidth: false, sortable: true},\n      {\n        id: 'size',\n        title: i18nString(UIStrings.totalBytes),\n        width: '80px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n      },\n      {\n        id: 'errorMessage',\n        title: i18nString(UIStrings.error),\n        width: '200px',\n        fixedWidth: false,\n        sortable: true,\n      },\n    ] as DataGrid.DataGrid.ColumnDescriptor[];\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.developerResources),\n      columns,\n      editCallback: undefined,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this.dataGrid.element.classList.add('flex-auto');\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortingChanged, this);\n    this.dataGrid.setRowContextMenuCallback(this.populateContextMenu.bind(this));\n\n    const dataGridWidget = this.dataGrid.asWidget();\n    dataGridWidget.show(this.contentElement);\n    this.setDefaultFocusedChild(dataGridWidget);\n  }\n\n  private populateContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu,\n      gridNode: DataGrid.DataGrid.DataGridNode<\n          DataGrid.ViewportDataGrid.ViewportDataGridNode<DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>>>):\n      void {\n    const item = (gridNode as GridNode).item;\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyUrl), () => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.url);\n    });\n    if (item.initiator.initiatorUrl) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyInitiatorUrl), () => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.initiator.initiatorUrl);\n      });\n    }\n  }\n\n  update(items: Iterable<SDK.PageResourceLoader.PageResource>): void {\n    let hadUpdates = false;\n    const rootNode = this.dataGrid.rootNode();\n    for (const item of items) {\n      let node = this.nodeForItem.get(item);\n      if (node) {\n        if (this.isVisibleFilter(node.item)) {\n          hadUpdates = node.refreshIfNeeded() || hadUpdates;\n        }\n        continue;\n      }\n      node = new GridNode(item);\n      this.nodeForItem.set(item, node);\n      if (this.isVisibleFilter(node.item)) {\n        rootNode.appendChild(node);\n        hadUpdates = true;\n      }\n    }\n    if (hadUpdates) {\n      this.sortingChanged();\n    }\n  }\n\n  reset(): void {\n    this.nodeForItem.clear();\n    this.dataGrid.rootNode().removeChildren();\n  }\n\n  updateFilterAndHighlight(highlightRegExp: RegExp|null): void {\n    this.highlightRegExp = highlightRegExp;\n    let hadTreeUpdates = false;\n    for (const node of this.nodeForItem.values()) {\n      const shouldBeVisible = this.isVisibleFilter(node.item);\n      const isVisible = Boolean(node.parent);\n      if (shouldBeVisible) {\n        node.setHighlight(this.highlightRegExp);\n      }\n      if (shouldBeVisible === isVisible) {\n        continue;\n      }\n      hadTreeUpdates = true;\n      if (!shouldBeVisible) {\n        node.remove();\n      } else {\n        this.dataGrid.rootNode().appendChild(node);\n      }\n    }\n    if (hadTreeUpdates) {\n      this.sortingChanged();\n    }\n  }\n\n  private sortingChanged(): void {\n    const columnId = this.dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n\n    const sortFunction = GridNode.sortFunctionForColumn(columnId) as (\n                             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n                              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>) => number) |\n        null;\n    if (sortFunction) {\n      this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n    }\n  }\n  wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([developerResourcesListViewStyles]);\n  }\n}\n\nclass GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  item: SDK.PageResourceLoader.PageResource;\n  private highlightRegExp: RegExp|null;\n  constructor(item: SDK.PageResourceLoader.PageResource) {\n    super();\n    this.item = item;\n    this.highlightRegExp = null;\n  }\n\n  setHighlight(highlightRegExp: RegExp|null): void {\n    if (this.highlightRegExp === highlightRegExp) {\n      return;\n    }\n    this.highlightRegExp = highlightRegExp;\n    this.refresh();\n  }\n\n  refreshIfNeeded(): boolean {\n    this.refresh();\n    return true;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId) as HTMLElement;\n    switch (columnId) {\n      case 'url': {\n        UI.Tooltip.Tooltip.install(cell, this.item.url);\n        const outer = cell.createChild('div', 'url-outer');\n        const prefix = outer.createChild('div', 'url-prefix');\n        const suffix = outer.createChild('div', 'url-suffix');\n        const splitURL = /^(.*)(\\/[^/]*)$/.exec(this.item.url);\n        prefix.textContent = splitURL ? splitURL[1] : this.item.url;\n        suffix.textContent = splitURL ? splitURL[2] : '';\n        if (this.highlightRegExp) {\n          this.highlight(outer, this.item.url);\n        }\n        this.setCellAccessibleName(this.item.url, cell, columnId);\n        break;\n      }\n      case 'initiator': {\n        const url = this.item.initiator.initiatorUrl || '';\n        cell.textContent = url;\n        UI.Tooltip.Tooltip.install(cell, url);\n        this.setCellAccessibleName(url, cell, columnId);\n        cell.onmouseenter = (): void => {\n          const frameId = this.item.initiator.frameId;\n          const frame = frameId ? SDK.FrameManager.FrameManager.instance().getFrame(frameId) : null;\n          if (frame) {\n            void frame.highlight();\n          }\n        };\n        cell.onmouseleave = (): void => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        break;\n      }\n      case 'status': {\n        if (this.item.success === null) {\n          cell.textContent = i18nString(UIStrings.pending);\n        } else {\n          cell.textContent = this.item.success ? i18nString(UIStrings.success) : i18nString(UIStrings.failure);\n        }\n        break;\n      }\n      case 'size': {\n        const size = this.item.size;\n        if (size !== null) {\n          const sizeSpan = cell.createChild('span');\n          sizeSpan.textContent = Platform.NumberUtilities.withThousandsSeparator(size);\n          const sizeAccessibleName = i18nString(UIStrings.sBytes, {n: size});\n          this.setCellAccessibleName(sizeAccessibleName, cell, columnId);\n        }\n        break;\n      }\n      case 'errorMessage': {\n        cell.classList.add('error-message');\n        if (this.item.errorMessage) {\n          cell.textContent = this.item.errorMessage;\n          if (this.highlightRegExp) {\n            this.highlight(cell, this.item.errorMessage);\n          }\n        }\n        break;\n      }\n    }\n    return cell;\n  }\n\n  private highlight(element: Element, textContent: string): void {\n    if (!this.highlightRegExp) {\n      return;\n    }\n    const matches = this.highlightRegExp.exec(textContent);\n    if (!matches || !matches.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n  }\n\n  static sortFunctionForColumn(columnId: string): ((arg0: GridNode, arg1: GridNode) => number)|null {\n    const nullToNegative = (x: boolean|number|null): number => x === null ? -1 : Number(x);\n    switch (columnId) {\n      case 'url':\n        return (a: GridNode, b: GridNode): number => a.item.url.localeCompare(b.item.url);\n      case 'status':\n        return (a: GridNode, b: GridNode): number => {\n          return nullToNegative(a.item.success) - nullToNegative(b.item.success);\n        };\n      case 'size':\n        return (a: GridNode, b: GridNode): number => nullToNegative(a.item.size) - nullToNegative(b.item.size);\n      case 'initiator':\n        return (a: GridNode, b: GridNode): number =>\n                   (a.item.initiator.initiatorUrl || '').localeCompare(b.item.initiator.initiatorUrl || '');\n      case 'errorMessage':\n        return (a: GridNode, b: GridNode): number =>\n                   (a.item.errorMessage || '').localeCompare(b.item.errorMessage || '');\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return null;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
