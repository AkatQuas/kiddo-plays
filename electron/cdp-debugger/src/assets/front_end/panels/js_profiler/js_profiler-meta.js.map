{
  "version": 3,
  "sources": ["../../../../../../front_end/panels/js_profiler/js_profiler-meta.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Profiler from '../profiler/profiler.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the Profiler tool\n  */\n  profiler: 'Profiler',\n  /**\n  *@description Command for showing the Profiler tool\n  */\n  showProfiler: 'Show Profiler',\n  /**\n  *@description Text in the Shortcuts page to explain a keyboard shortcut (start/stop recording performance)\n  */\n  startStopRecording: 'Start/stop recording',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/js_profiler/js_profiler-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    loadedProfilerModule = await import('../profiler/profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (profilerModule: typeof Profiler) => T[]): T[] {\n  if (loadedProfilerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedProfilerModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'js_profiler',\n  title: i18nLazyString(UIStrings.profiler),\n  commandPrompt: i18nLazyString(UIStrings.showProfiler),\n  order: 65,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.js-toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.JAVASCRIPT_PROFILER,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfilesPanel.JSProfilerPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n"],
  "mappings": "AAIA;AACA;AAIA,MAAM,YAAY;AAAA,EAIhB,UAAU;AAAA,EAIV,cAAc;AAAA,EAId,oBAAoB;AAAA;AAEtB,MAAM,OAAO,KAAK,KAAK,kBAAkB,0CAA0C;AACnF,MAAM,iBAAiB,KAAK,KAAK,iCAAiC,KAAK,QAAW;AAElF,IAAI;AAEJ,oCAA8D;AAC5D,MAAI,CAAC,sBAAsB;AACzB,2BAAuB,MAAM,OAAO;AAAA;AAEtC,SAAO;AAAA;AAGT,mCAAgD,kBAAiE;AAC/G,MAAI,yBAAyB,QAAW;AACtC,WAAO;AAAA;AAET,SAAO,iBAAiB;AAAA;AAG1B,GAAG,YAAY,sBAAsB;AAAA,EACnC,UAAU,GAAG,YAAY,mBAAmB;AAAA,EAC5C,IAAI;AAAA,EACJ,OAAO,eAAe,UAAU;AAAA,EAChC,eAAe,eAAe,UAAU;AAAA,EACxC,OAAO;AAAA,QACD,WAAW;AACf,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,cAAc,gBAAgB;AAAA;AAAA;AAIlD,GAAG,mBAAmB,wBAAwB;AAAA,EAC5C,UAAU;AAAA,EACV,UAAU,GAAG,mBAAmB,eAAe;AAAA,EAC/C,OAAO,eAAe,UAAU;AAAA,EAChC,WAAW,GAAG,mBAAmB,UAAU;AAAA,EAC3C,YAAY;AAAA,EACZ,kBAAkB,GAAG,mBAAmB,UAAU;AAAA,EAClD,oBAAoB;AAAA,EACpB,eAAe;AACb,WAAO,0BAA0B,cAAY,CAAC,SAAS,cAAc;AAAA;AAAA,QAEjE,qBAAqB;AACzB,UAAM,WAAW,MAAM;AACvB,WAAO,SAAS,cAAc,gBAAgB;AAAA;AAAA,EAEhD,UAAU;AAAA,IACR;AAAA,MACE,UAAU,GAAG,mBAAmB,UAAU;AAAA,MAC1C,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,UAAU,GAAG,mBAAmB,UAAU;AAAA,MAC1C,UAAU;AAAA;AAAA;AAAA;",
  "names": []
}
