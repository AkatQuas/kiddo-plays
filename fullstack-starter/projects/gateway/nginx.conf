daemon off;
# error_log /dev/stdout info;
error_log error.log info;
pid /dev/null;

# worker_processes 1;

events {
  # use epoll;
  worker_connections 128;
}

http {
  # access_log /dev/stdout;
  access_log access.log;

  upstream client {
    server localhost:4200;
  }
  upstream server {
    server localhost:8080;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
  server {

    client_body_temp_path /tmp/nginx_body;
    proxy_temp_path /tmp/nginx_proxy;

    listen 8000;

    # webpack-dev-socket
    # ws://localhost:8000/sockjs-node/**/**/websocket
    location /sockjs-node {
      proxy_pass http://client;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    location /api {
      # server when develop
      proxy_pass http://server;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }

    location / {
      # client when develop
      proxy_pass http://client;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

  }
}
